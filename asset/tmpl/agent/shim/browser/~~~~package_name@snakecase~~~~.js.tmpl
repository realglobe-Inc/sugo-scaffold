/**
 * ~~~~package_description~~~~
 * @class ~~~~package_name@pascalcase~~~~
 */
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = require('sugo-agent-base');

var SugoAgentBase = _require.SugoAgentBase;

var co = require('co');
var debug = require('debug')('~~~~package_name@enumcase~~~~');

/** @lends ~~~~package_name@pascalcase~~~~ */

var ~~~~package_name@pascalcase~~~~ = function (_SugoAgentBase) {
  _inherits(~~~~package_name@pascalcase~~~~, _SugoAgentBase);

  function ~~~~package_name@pascalcase~~~~(url) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, ~~~~package_name@pascalcase~~~~);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(~~~~package_name@pascalcase~~~~).call(this, url, options));
  }

  return ~~~~package_name@pascalcase~~~~;
}(SugoAgentBase);

module.exports = ~~~~package_name@pascalcase~~~~;
//# sourceMappingURL=data:application/json;base64,bnVsbA==