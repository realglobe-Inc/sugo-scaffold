/**
 * List Item Component of a spot.
 */
import React from 'react'
import { connect } from 'react-redux'
import SgButton from 'sg-react-components/lib/sg_button'
import {modalWindow, toggleRequesting} from '../actions'
import co from 'co'
import classnames from 'classnames'

const debug = require('debug')('sg:site:spot_list_item')

let SpotListItem = React.createClass({
  propTypes: {
    spot: React.PropTypes.object
  },

  render () {
    const s = this
    let {props} = s
    let {spot} = props
    let {requesting} = spot
    return (
      <div className={classnames('spot-list-item', requesting ? 'requesting' : '')}>
        <div className='spot-list-item-key'>
          {spot.key}
        </div>
        <div>
          <i className={classnames(
            'spot-list-item-spinning',
            requesting ? 'visible' : 'hidden',
            'fa',
            'fa-spinner',
            'fa-pulse',
            'fa-1x',
            'fa-fw'
          )}></i>
        </div>
        <SgButton className='spot-list-item-button' onTap={s.onPing} disabled={requesting}>
          Ping
        </SgButton>
      </div>
    )
  },

  onPing () {
    const s = this
    const {spot, startPingRequest, openPongWindow} = s.props
    co(function * () {
      debug('ping')
      startPingRequest()
      let res = yield spot.terminal.noop().ping()
      if (res === 'pong') {
        debug(res)
        openPongWindow()
      }
    }).catch(err => {
      console.error(err)
    })
  }
})

const mapDispatchToProps = (dispatch, props) => {
  return {
    openPongWindow () {
      dispatch(modalWindow())
      dispatch(toggleRequesting(props.spot.key))
    },
    startPingRequest () {
      dispatch(toggleRequesting(props.spot.key))
    }
  }
}

SpotListItem = connect(null, mapDispatchToProps)(SpotListItem)

export default SpotListItem
