/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ((function(modules) {
	// Check all modules for deduplicated modules
	for(var i in modules) {
		if(Object.prototype.hasOwnProperty.call(modules, i)) {
			switch(typeof modules[i]) {
			case "function": break;
			case "object":
				// Module can be created from a template
				modules[i] = (function(_m) {
					var args = _m.slice(1), fn = modules[_m[0]];
					return function (a,b,c) {
						fn.apply(this, [a,b,c].concat(args));
					};
				}(modules[i]));
				break;
			default:
				// Module is a copy of another module
				modules[i] = modules[modules[i]];
				break;
			}
		}
	}
	return modules;
}([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(666);
	module.exports = __webpack_require__(1103);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(946);

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames() {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if ("function" === 'function' && _typeof(__webpack_require__(81)) === 'object' && __webpack_require__(81)) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	})();

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    core = __webpack_require__(52),
	    hide = __webpack_require__(31),
	    redefine = __webpack_require__(32),
	    ctx = __webpack_require__(53),
	    PROTOTYPE = 'prototype';

	var $export = function $export(type, name, source) {
	  var IS_FORCED = type & $export.F,
	      IS_GLOBAL = type & $export.G,
	      IS_STATIC = type & $export.S,
	      IS_PROTO = type & $export.P,
	      IS_BIND = type & $export.B,
	      target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE],
	      exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
	      expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {}),
	      key,
	      own,
	      out,
	      exp;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if (target) redefine(target, key, out, type & $export.U);
	    // export
	    if (exports[key] != out) hide(exports, key, exp);
	    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1; // forced
	$export.G = 2; // global
	$export.S = 4; // static
	$export.P = 8; // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	$export.U = 64; // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for style component.
	 * @module apeman-react-style
	 * @version 4.1.6
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApStyle = undefined;

	var _ap_style = __webpack_require__(583);

	var _ap_style2 = _interopRequireDefault(_ap_style);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApStyle = _ap_style2.default;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isObject = __webpack_require__(13);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 7 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Object utiltify
	 * @module asobj
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get clone() {
	    return d(__webpack_require__(661));
	  },
	  get deepEqual() {
	    return d(__webpack_require__(662));
	  },
	  get shallowEqual() {
	    return d(__webpack_require__(663));
	  }
	};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for touchable component.
	 * @module apeman-react-touchable
	 * @version 5.2.0
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApTouchable = exports.ApTouchableStyle = exports.withTouch = exports.withOutside = undefined;

	var _with_outside = __webpack_require__(620);

	var _with_outside2 = _interopRequireDefault(_with_outside);

	var _with_touch = __webpack_require__(254);

	var _with_touch2 = _interopRequireDefault(_with_touch);

	var _ap_touchable_style = __webpack_require__(618);

	var _ap_touchable_style2 = _interopRequireDefault(_ap_touchable_style);

	var _ap_touchable = __webpack_require__(617);

	var _ap_touchable2 = _interopRequireDefault(_ap_touchable);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.withOutside = _with_outside2.default;
	exports.withTouch = _with_touch2.default;
	exports.ApTouchableStyle = _ap_touchable_style2.default;
	exports.ApTouchable = _ap_touchable2.default;

/***/ },
/* 10 */
/***/ function(module, exports) {

	'use strict';

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(43);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;

/***/ },
/* 12 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};

/***/ },
/* 13 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	module.exports = function (it) {
	  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var store = __webpack_require__(125)('wks'),
	    uid = __webpack_require__(78),
	    _Symbol = __webpack_require__(10).Symbol,
	    USE_SYMBOL = typeof _Symbol == 'function';

	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */

	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(950);

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for button component.
	 * @module apeman-react-button
	 * @version 4.0.8
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApPrevButton = exports.ApNextButton = exports.ApIconButton = exports.ApIconButtonRow = exports.ApCellButton = exports.ApCellButtonRow = exports.ApButton = exports.ApButtonStyle = exports.ApButtonGroup = exports.ApBigButton = undefined;

	var _ap_big_button = __webpack_require__(388);

	var _ap_big_button2 = _interopRequireDefault(_ap_big_button);

	var _ap_button_group = __webpack_require__(389);

	var _ap_button_group2 = _interopRequireDefault(_ap_button_group);

	var _ap_button_style = __webpack_require__(390);

	var _ap_button_style2 = _interopRequireDefault(_ap_button_style);

	var _ap_button = __webpack_require__(84);

	var _ap_button2 = _interopRequireDefault(_ap_button);

	var _ap_cell_button_row = __webpack_require__(392);

	var _ap_cell_button_row2 = _interopRequireDefault(_ap_cell_button_row);

	var _ap_cell_button = __webpack_require__(391);

	var _ap_cell_button2 = _interopRequireDefault(_ap_cell_button);

	var _ap_icon_button_row = __webpack_require__(394);

	var _ap_icon_button_row2 = _interopRequireDefault(_ap_icon_button_row);

	var _ap_icon_button = __webpack_require__(393);

	var _ap_icon_button2 = _interopRequireDefault(_ap_icon_button);

	var _ap_next_button = __webpack_require__(395);

	var _ap_next_button2 = _interopRequireDefault(_ap_next_button);

	var _ap_prev_button = __webpack_require__(396);

	var _ap_prev_button2 = _interopRequireDefault(_ap_prev_button);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApBigButton = _ap_big_button2.default;
	exports.ApButtonGroup = _ap_button_group2.default;
	exports.ApButtonStyle = _ap_button_style2.default;
	exports.ApButton = _ap_button2.default;
	exports.ApCellButtonRow = _ap_cell_button_row2.default;
	exports.ApCellButton = _ap_cell_button2.default;
	exports.ApIconButtonRow = _ap_icon_button_row2.default;
	exports.ApIconButton = _ap_icon_button2.default;
	exports.ApNextButton = _ap_next_button2.default;
	exports.ApPrevButton = _ap_prev_button2.default;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(12)(function () {
	  return Object.defineProperty({}, 'a', { get: function get() {
	      return 7;
	    } }).a != 7;
	});

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var anObject = __webpack_require__(6),
	    IE8_DOM_DEFINE = __webpack_require__(270),
	    toPrimitive = __webpack_require__(50),
	    dP = Object.defineProperty;

	exports.f = __webpack_require__(18) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) {/* empty */}
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for icon components.
	 * @module apeman-react-icon
	 * @version 4.0.9
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TypeConstants = exports.CdnConstants = exports.ApIonIcon = exports.ApIcon = exports.ApIconStyle = exports.ApFaIcon = undefined;

	var _ap_fa_icon = __webpack_require__(469);

	var _ap_fa_icon2 = _interopRequireDefault(_ap_fa_icon);

	var _ap_icon_style = __webpack_require__(470);

	var _ap_icon_style2 = _interopRequireDefault(_ap_icon_style);

	var _ap_icon = __webpack_require__(146);

	var _ap_icon2 = _interopRequireDefault(_ap_icon);

	var _ap_ion_icon = __webpack_require__(471);

	var _ap_ion_icon2 = _interopRequireDefault(_ap_ion_icon);

	var _cdn_constants = __webpack_require__(472);

	var _cdn_constants2 = _interopRequireDefault(_cdn_constants);

	var _type_constants = __webpack_require__(473);

	var _type_constants2 = _interopRequireDefault(_type_constants);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApFaIcon = _ap_fa_icon2.default;
	exports.ApIconStyle = _ap_icon_style2.default;
	exports.ApIcon = _ap_icon2.default;
	exports.ApIonIcon = _ap_ion_icon2.default;
	exports.CdnConstants = _cdn_constants2.default;
	exports.TypeConstants = _type_constants2.default;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var DOMProperty = __webpack_require__(95);
	var ReactDOMComponentFlags = __webpack_require__(321);

	var invariant = __webpack_require__(5);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(62),
	    min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(41);
	module.exports = function (it) {
	  return Object(defined(it));
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = __webpack_require__(868);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();

	/**
	 * Colors.
	 */

	exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];

	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */

	function useColors() {
	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  return 'WebkitAppearance' in document.documentElement.style ||
	  // is firebug? http://stackoverflow.com/a/398120/376773
	  window.console && (console.firebug || console.exception && console.table) ||
	  // is firefox >= v31?
	  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	  navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31;
	}

	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */

	exports.formatters.j = function (v) {
	  return JSON.stringify(v);
	};

	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */

	function formatArgs() {
	  var args = arguments;
	  var useColors = this.useColors;

	  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);

	  if (!useColors) return args;

	  var c = 'color: ' + this.color;
	  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));

	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-z%]/g, function (match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });

	  args.splice(lastC, 0, c);
	  return args;
	}

	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */

	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === (typeof console === 'undefined' ? 'undefined' : _typeof(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);
	}

	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */

	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch (e) {}
	}

	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */

	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch (e) {}
	  return r;
	}

	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */

	exports.enable(load());

	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */

	function localstorage() {
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}

/***/ },
/* 25 */
/***/ function(module, exports) {

	"use strict";

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 26 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Color utility
	 * @module acolor
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get alpha() {
	    return d(__webpack_require__(366));
	  },
	  get darken() {
	    return d(__webpack_require__(367));
	  },
	  get isDark() {
	    return d(__webpack_require__(221));
	  },
	  get isLight() {
	    return d(__webpack_require__(368));
	  },
	  get mix() {
	    return d(__webpack_require__(369));
	  },
	  get parse() {
	    return d(__webpack_require__(82));
	  },
	  get rotate() {
	    return d(__webpack_require__(370));
	  }
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for pure mixin
	 * @module apeman-react-mixin-pure
	 * @version 1.0.5
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApPureMixin = exports.ApDeepPureMixin = undefined;

	var _ap_deep_pure_mixin = __webpack_require__(513);

	var _ap_deep_pure_mixin2 = _interopRequireDefault(_ap_deep_pure_mixin);

	var _ap_pure_mixin = __webpack_require__(514);

	var _ap_pure_mixin2 = _interopRequireDefault(_ap_pure_mixin);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApDeepPureMixin = _ap_deep_pure_mixin2.default;
	exports.ApPureMixin = _ap_pure_mixin2.default;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for spinner.
	 * @module apeman-react-spinner
	 * @version 3.0.25
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSpinner = exports.ApSpinnerStyle = exports.withSpin = undefined;

	var _with_spin = __webpack_require__(582);

	var _with_spin2 = _interopRequireDefault(_with_spin);

	var _ap_spinner_style = __webpack_require__(581);

	var _ap_spinner_style2 = _interopRequireDefault(_ap_spinner_style);

	var _ap_spinner = __webpack_require__(243);

	var _ap_spinner2 = _interopRequireDefault(_ap_spinner);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.withSpin = _with_spin2.default;
	exports.ApSpinnerStyle = _ap_spinner_style2.default;
	exports.ApSpinner = _ap_spinner2.default;

/***/ },
/* 30 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var dP = __webpack_require__(19),
	    createDesc = __webpack_require__(61);
	module.exports = __webpack_require__(18) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    hide = __webpack_require__(31),
	    has = __webpack_require__(25),
	    SRC = __webpack_require__(78)('src'),
	    TO_STRING = 'toString',
	    $toString = Function[TO_STRING],
	    TPL = ('' + $toString).split(TO_STRING);

	__webpack_require__(52).inspectSource = function (it) {
	  return $toString.call(it);
	};

	(module.exports = function (O, key, val, safe) {
	  var isFunction = typeof val == 'function';
	  if (isFunction) has(val, 'name') || hide(val, 'name', key);
	  if (O[key] === val) return;
	  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if (O === global) {
	    O[key] = val;
	  } else {
	    if (!safe) {
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if (O[key]) O[key] = val;else hide(O, key, val);
	    }
	  }
	  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString() {
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    fails = __webpack_require__(12),
	    defined = __webpack_require__(41),
	    quot = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function createHTML(string, tag, attribute, value) {
	  var S = String(defined(string)),
	      p1 = '<' + tag;
	  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function (NAME, exec) {
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function () {
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(102),
	    defined = __webpack_require__(41);
	module.exports = function (it) {
	  return IObject(defined(it));
	};

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var pIE = __webpack_require__(103),
	    createDesc = __webpack_require__(61),
	    toIObject = __webpack_require__(34),
	    toPrimitive = __webpack_require__(50),
	    has = __webpack_require__(25),
	    IE8_DOM_DEFINE = __webpack_require__(270),
	    gOPD = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(18) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) {/* empty */}
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(25),
	    toObject = __webpack_require__(23),
	    IE_PROTO = __webpack_require__(168)('IE_PROTO'),
	    ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  }return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	//     uuid.js
	//
	//     Copyright (c) 2010-2012 Robert Kieffer
	//     MIT License - http://opensource.org/licenses/mit-license.php

	// Unique ID creation requires a high quality random # generator.  We feature
	// detect to determine the best RNG source, normalizing to a function that
	// returns 128-bits of randomness, since that's what's usually required
	var _rng = __webpack_require__(1084);

	// Maps for number <-> hex string conversion
	var _byteToHex = [];
	var _hexToByte = {};
	for (var i = 0; i < 256; i++) {
	  _byteToHex[i] = (i + 0x100).toString(16).substr(1);
	  _hexToByte[_byteToHex[i]] = i;
	}

	// **`parse()` - Parse a UUID into it's component bytes**
	function parse(s, buf, offset) {
	  var i = buf && offset || 0,
	      ii = 0;

	  buf = buf || [];
	  s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {
	    if (ii < 16) {
	      // Don't overflow!
	      buf[i + ii++] = _hexToByte[oct];
	    }
	  });

	  // Zero out remaining bytes if string was short
	  while (ii < 16) {
	    buf[i + ii++] = 0;
	  }

	  return buf;
	}

	// **`unparse()` - Convert UUID byte array (ala parse()) into a string**
	function unparse(buf, offset) {
	  var i = offset || 0,
	      bth = _byteToHex;
	  return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
	}

	// **`v1()` - Generate time-based UUID**
	//
	// Inspired by https://github.com/LiosK/UUID.js
	// and http://docs.python.org/library/uuid.html

	// random #'s we need to init node and clockseq
	var _seedBytes = _rng();

	// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
	var _nodeId = [_seedBytes[0] | 0x01, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]];

	// Per 4.2.2, randomize (14 bit) clockseq
	var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

	// Previous uuid creation time
	var _lastMSecs = 0,
	    _lastNSecs = 0;

	// See https://github.com/broofa/node-uuid for API details
	function v1(options, buf, offset) {
	  var i = buf && offset || 0;
	  var b = buf || [];

	  options = options || {};

	  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

	  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
	  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
	  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
	  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
	  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

	  // Per 4.2.1.2, use count of uuid's generated during the current clock
	  // cycle to simulate higher resolution clock
	  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

	  // Time since last uuid creation (in msecs)
	  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;

	  // Per 4.2.1.2, Bump clockseq on clock regression
	  if (dt < 0 && options.clockseq === undefined) {
	    clockseq = clockseq + 1 & 0x3fff;
	  }

	  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
	  // time interval
	  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
	    nsecs = 0;
	  }

	  // Per 4.2.1.2 Throw error if too many uuids are requested
	  if (nsecs >= 10000) {
	    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
	  }

	  _lastMSecs = msecs;
	  _lastNSecs = nsecs;
	  _clockseq = clockseq;

	  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
	  msecs += 12219292800000;

	  // `time_low`
	  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
	  b[i++] = tl >>> 24 & 0xff;
	  b[i++] = tl >>> 16 & 0xff;
	  b[i++] = tl >>> 8 & 0xff;
	  b[i++] = tl & 0xff;

	  // `time_mid`
	  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
	  b[i++] = tmh >>> 8 & 0xff;
	  b[i++] = tmh & 0xff;

	  // `time_high_and_version`
	  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
	  b[i++] = tmh >>> 16 & 0xff;

	  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
	  b[i++] = clockseq >>> 8 | 0x80;

	  // `clock_seq_low`
	  b[i++] = clockseq & 0xff;

	  // `node`
	  var node = options.node || _nodeId;
	  for (var n = 0; n < 6; n++) {
	    b[i + n] = node[n];
	  }

	  return buf ? buf : unparse(b);
	}

	// **`v4()` - Generate random UUID**

	// See https://github.com/broofa/node-uuid for API details
	function v4(options, buf, offset) {
	  // Deprecated - 'format' argument, as supported in v1.2
	  var i = buf && offset || 0;

	  if (typeof options == 'string') {
	    buf = options == 'binary' ? new Array(16) : null;
	    options = null;
	  }
	  options = options || {};

	  var rnds = options.random || (options.rng || _rng)();

	  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	  rnds[6] = rnds[6] & 0x0f | 0x40;
	  rnds[8] = rnds[8] & 0x3f | 0x80;

	  // Copy bytes to buffer, if provided
	  if (buf) {
	    for (var ii = 0; ii < 16; ii++) {
	      buf[i + ii] = rnds[ii];
	    }
	  }

	  return buf || unparse(rnds);
	}

	// Export public API
	var uuid = v4;
	uuid.v1 = v1;
	uuid.v4 = v4;
	uuid.parse = parse;
	uuid.unparse = unparse;

	module.exports = uuid;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for layout mixin
	 * @module apeman-react-mixin-layout
	 * @version 1.1.0
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApLayoutMixin = undefined;

	var _ap_layout_mixin = __webpack_require__(512);

	var _ap_layout_mixin2 = _interopRequireDefault(_ap_layout_mixin);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApLayoutMixin = _ap_layout_mixin2.default;

/***/ },
/* 40 */
/***/ function(module, exports) {

	"use strict";

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 41 */
/***/ function(module, exports) {

	"use strict";

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var fails = __webpack_require__(12);

	module.exports = function (method, arg) {
	  return !!method && fails(function () {
	    arg ? method.call(null, function () {}, 1) : method.call(null);
	  });
	};

/***/ },
/* 43 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _assign = __webpack_require__(15);

	var ReactCurrentOwner = __webpack_require__(66);

	var warning = __webpack_require__(11);
	var canDefineProperty = __webpack_require__(338);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function warnAboutAccessingKey() {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function warnAboutAccessingRef() {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

	module.exports = ReactElement;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var CallbackQueue = __webpack_require__(317);
	var PooledClass = __webpack_require__(65);
	var ReactFeatureFlags = __webpack_require__(327);
	var ReactReconciler = __webpack_require__(80);
	var Transaction = __webpack_require__(109);

	var invariant = __webpack_require__(5);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function initialize() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function close() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function initialize() {
	    this.callbackQueue.reset();
	  },
	  close: function close() {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function destructor() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function perform(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function flushBatchedUpdates() {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for field components.
	 * @module apeman-react-field
	 * @version 2.0.19
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApField = exports.ApFieldValue = exports.ApFieldStyle = exports.ApFieldSet = exports.ApFieldLegend = exports.ApFieldLabel = undefined;

	var _ap_field_label = __webpack_require__(436);

	var _ap_field_label2 = _interopRequireDefault(_ap_field_label);

	var _ap_field_legend = __webpack_require__(437);

	var _ap_field_legend2 = _interopRequireDefault(_ap_field_legend);

	var _ap_field_set = __webpack_require__(438);

	var _ap_field_set2 = _interopRequireDefault(_ap_field_set);

	var _ap_field_style = __webpack_require__(439);

	var _ap_field_style2 = _interopRequireDefault(_ap_field_style);

	var _ap_field_value = __webpack_require__(440);

	var _ap_field_value2 = _interopRequireDefault(_ap_field_value);

	var _ap_field = __webpack_require__(435);

	var _ap_field2 = _interopRequireDefault(_ap_field);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApFieldLabel = _ap_field_label2.default;
	exports.ApFieldLegend = _ap_field_legend2.default;
	exports.ApFieldSet = _ap_field_set2.default;
	exports.ApFieldStyle = _ap_field_style2.default;
	exports.ApFieldValue = _ap_field_value2.default;
	exports.ApField = _ap_field2.default;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for form component.
	 * @module apeman-react-form
	 * @version 6.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApForm = exports.ApFormStyle = undefined;

	var _ap_form_style = __webpack_require__(445);

	var _ap_form_style2 = _interopRequireDefault(_ap_form_style);

	var _ap_form = __webpack_require__(444);

	var _ap_form2 = _interopRequireDefault(_ap_form);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApFormStyle = _ap_form_style2.default;
	exports.ApForm = _ap_form2.default;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx = __webpack_require__(53),
	    IObject = __webpack_require__(102),
	    toObject = __webpack_require__(23),
	    toLength = __webpack_require__(22),
	    asc = __webpack_require__(669);
	module.exports = function (TYPE, $create) {
	  var IS_MAP = TYPE == 1,
	      IS_FILTER = TYPE == 2,
	      IS_SOME = TYPE == 3,
	      IS_EVERY = TYPE == 4,
	      IS_FIND_INDEX = TYPE == 6,
	      NO_HOLES = TYPE == 5 || IS_FIND_INDEX,
	      create = $create || asc;
	  return function ($this, callbackfn, that) {
	    var O = toObject($this),
	        self = IObject(O),
	        f = ctx(callbackfn, that, 3),
	        length = toLength(self.length),
	        index = 0,
	        result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined,
	        val,
	        res;
	    for (; length > index; index++) {
	      if (NO_HOLES || index in self) {
	        val = self[index];
	        res = f(val, index, O);
	        if (TYPE) {
	          if (IS_MAP) result[index] = res; // map
	          else if (res) switch (TYPE) {
	              case 3:
	                return true; // some
	              case 5:
	                return val; // find
	              case 6:
	                return index; // findIndex
	              case 2:
	                result.push(val); // filter
	            } else if (IS_EVERY) return false; // every
	        }
	      }
	    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(3),
	    core = __webpack_require__(52),
	    fails = __webpack_require__(12);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY],
	      exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () {
	    fn(1);
	  }), 'Object', exp);
	};

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(13);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for form mixin.
	 * @module apeman-react-mixin-form
	 * @version 1.0.4
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApFormMixin = undefined;

	var _ap_form_mixin = __webpack_require__(511);

	var _ap_form_mixin2 = _interopRequireDefault(_ap_form_mixin);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApFormMixin = _ap_form_mixin2.default;

/***/ },
/* 52 */
/***/ function(module, exports) {

	'use strict';

	var core = module.exports = { version: '2.4.0' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// optional / simple context binding
	var aFunction = __webpack_require__(30);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1:
	      return function (a) {
	        return fn.call(that, a);
	      };
	    case 2:
	      return function (a, b) {
	        return fn.call(that, a, b);
	      };
	    case 3:
	      return function (a, b, c) {
	        return fn.call(that, a, b, c);
	      };
	  }
	  return function () /* ...args */{
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var Map = __webpack_require__(286),
	    $export = __webpack_require__(3),
	    shared = __webpack_require__(125)('metadata'),
	    store = shared.store || (shared.store = new (__webpack_require__(289))());

	var getOrCreateMetadataMap = function getOrCreateMetadataMap(target, targetKey, create) {
	  var targetMetadata = store.get(target);
	  if (!targetMetadata) {
	    if (!create) return undefined;
	    store.set(target, targetMetadata = new Map());
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if (!keyMetadata) {
	    if (!create) return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map());
	  }return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function ordinaryHasOwnMetadata(MetadataKey, O, P) {
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function ordinaryGetOwnMetadata(MetadataKey, O, P) {
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function ordinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function ordinaryOwnMetadataKeys(target, targetKey) {
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false),
	      keys = [];
	  if (metadataMap) metadataMap.forEach(function (_, key) {
	    keys.push(key);
	  });
	  return keys;
	};
	var toMetaKey = function toMetaKey(it) {
	  return it === undefined || (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : String(it);
	};
	var exp = function exp(O) {
	  $export($export.S, 'Reflect', O);
	};

	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	if (__webpack_require__(18)) {
	  var LIBRARY = __webpack_require__(71),
	      global = __webpack_require__(10),
	      fails = __webpack_require__(12),
	      $export = __webpack_require__(3),
	      $typed = __webpack_require__(126),
	      $buffer = __webpack_require__(175),
	      ctx = __webpack_require__(53),
	      anInstance = __webpack_require__(70),
	      propertyDesc = __webpack_require__(61),
	      hide = __webpack_require__(31),
	      redefineAll = __webpack_require__(75),
	      toInteger = __webpack_require__(62),
	      toLength = __webpack_require__(22),
	      toIndex = __webpack_require__(77),
	      toPrimitive = __webpack_require__(50),
	      has = __webpack_require__(25),
	      same = __webpack_require__(283),
	      classof = __webpack_require__(101),
	      isObject = __webpack_require__(13),
	      toObject = __webpack_require__(23),
	      isArrayIter = __webpack_require__(160),
	      create = __webpack_require__(72),
	      getPrototypeOf = __webpack_require__(36),
	      gOPN = __webpack_require__(73).f,
	      getIterFn = __webpack_require__(177),
	      uid = __webpack_require__(78),
	      wks = __webpack_require__(14),
	      createArrayMethod = __webpack_require__(48),
	      createArrayIncludes = __webpack_require__(116),
	      speciesConstructor = __webpack_require__(169),
	      ArrayIterators = __webpack_require__(178),
	      Iterators = __webpack_require__(87),
	      $iterDetect = __webpack_require__(122),
	      setSpecies = __webpack_require__(76),
	      arrayFill = __webpack_require__(153),
	      arrayCopyWithin = __webpack_require__(263),
	      $DP = __webpack_require__(19),
	      $GOPD = __webpack_require__(35),
	      dP = $DP.f,
	      gOPD = $GOPD.f,
	      RangeError = global.RangeError,
	      TypeError = global.TypeError,
	      Uint8Array = global.Uint8Array,
	      ARRAY_BUFFER = 'ArrayBuffer',
	      SHARED_BUFFER = 'Shared' + ARRAY_BUFFER,
	      BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT',
	      PROTOTYPE = 'prototype',
	      ArrayProto = Array[PROTOTYPE],
	      $ArrayBuffer = $buffer.ArrayBuffer,
	      $DataView = $buffer.DataView,
	      arrayForEach = createArrayMethod(0),
	      arrayFilter = createArrayMethod(2),
	      arraySome = createArrayMethod(3),
	      arrayEvery = createArrayMethod(4),
	      arrayFind = createArrayMethod(5),
	      arrayFindIndex = createArrayMethod(6),
	      arrayIncludes = createArrayIncludes(true),
	      arrayIndexOf = createArrayIncludes(false),
	      arrayValues = ArrayIterators.values,
	      arrayKeys = ArrayIterators.keys,
	      arrayEntries = ArrayIterators.entries,
	      arrayLastIndexOf = ArrayProto.lastIndexOf,
	      arrayReduce = ArrayProto.reduce,
	      arrayReduceRight = ArrayProto.reduceRight,
	      arrayJoin = ArrayProto.join,
	      arraySort = ArrayProto.sort,
	      arraySlice = ArrayProto.slice,
	      arrayToString = ArrayProto.toString,
	      arrayToLocaleString = ArrayProto.toLocaleString,
	      ITERATOR = wks('iterator'),
	      TAG = wks('toStringTag'),
	      TYPED_CONSTRUCTOR = uid('typed_constructor'),
	      DEF_CONSTRUCTOR = uid('def_constructor'),
	      ALL_CONSTRUCTORS = $typed.CONSTR,
	      TYPED_ARRAY = $typed.TYPED,
	      VIEW = $typed.VIEW,
	      WRONG_LENGTH = 'Wrong length!';

	  var $map = createArrayMethod(1, function (O, length) {
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });

	  var LITTLE_ENDIAN = fails(function () {
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });

	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
	    new Uint8Array(1).set({});
	  });

	  var strictToLength = function strictToLength(it, SAME) {
	    if (it === undefined) throw TypeError(WRONG_LENGTH);
	    var number = +it,
	        length = toLength(it);
	    if (SAME && !same(number, length)) throw RangeError(WRONG_LENGTH);
	    return length;
	  };

	  var toOffset = function toOffset(it, BYTES) {
	    var offset = toInteger(it);
	    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
	    return offset;
	  };

	  var validate = function validate(it) {
	    if (isObject(it) && TYPED_ARRAY in it) return it;
	    throw TypeError(it + ' is not a typed array!');
	  };

	  var allocate = function allocate(C, length) {
	    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
	      throw TypeError('It is not a typed array constructor!');
	    }return new C(length);
	  };

	  var speciesFromList = function speciesFromList(O, list) {
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };

	  var fromList = function fromList(C, list) {
	    var index = 0,
	        length = list.length,
	        result = allocate(C, length);
	    while (length > index) {
	      result[index] = list[index++];
	    }return result;
	  };

	  var addGetter = function addGetter(it, key, internal) {
	    dP(it, key, { get: function get() {
	        return this._d[internal];
	      } });
	  };

	  var $from = function from(source /*, mapfn, thisArg */) {
	    var O = toObject(source),
	        aLen = arguments.length,
	        mapfn = aLen > 1 ? arguments[1] : undefined,
	        mapping = mapfn !== undefined,
	        iterFn = getIterFn(O),
	        i,
	        length,
	        values,
	        result,
	        step,
	        iterator;
	    if (iterFn != undefined && !isArrayIter(iterFn)) {
	      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
	        values.push(step.value);
	      }O = values;
	    }
	    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
	    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };

	  var $of = function of() /*...items*/{
	    var index = 0,
	        length = arguments.length,
	        result = allocate(this, length);
	    while (length > index) {
	      result[index] = arguments[index++];
	    }return result;
	  };

	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {
	    arrayToLocaleString.call(new Uint8Array(1));
	  });

	  var $toLocaleString = function toLocaleString() {
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };

	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */) {
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */) {
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */) {
	      // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */) {
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */) {
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */) {
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */) {
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */) {
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */) {
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator) {
	      // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */) {
	      // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */) {
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */) {
	      // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */) {
	      // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse() {
	      var that = this,
	          length = validate(that).length,
	          middle = Math.floor(length / 2),
	          index = 0,
	          value;
	      while (index < middle) {
	        value = that[index];
	        that[index++] = that[--length];
	        that[length] = value;
	      }return that;
	    },
	    some: function some(callbackfn /*, thisArg */) {
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn) {
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end) {
	      var O = validate(this),
	          length = O.length,
	          $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toIndex(end, length)) - $begin));
	    }
	  };

	  var $slice = function slice(start, end) {
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };

	  var $set = function set(arrayLike /*, offset */) {
	    validate(this);
	    var offset = toOffset(arguments[1], 1),
	        length = this.length,
	        src = toObject(arrayLike),
	        len = toLength(src.length),
	        index = 0;
	    if (len + offset > length) throw RangeError(WRONG_LENGTH);
	    while (index < len) {
	      this[offset + index] = src[index++];
	    }
	  };

	  var $iterators = {
	    entries: function entries() {
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys() {
	      return arrayKeys.call(validate(this));
	    },
	    values: function values() {
	      return arrayValues.call(validate(this));
	    }
	  };

	  var isTAIndex = function isTAIndex(target, key) {
	    return isObject(target) && target[TYPED_ARRAY] && (typeof key === 'undefined' ? 'undefined' : _typeof(key)) != 'symbol' && key in target && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key) {
	    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc) {
	    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set')
	    // TODO: add validation descriptor w/o calling accessors
	    && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };

	  if (!ALL_CONSTRUCTORS) {
	    $GOPD.f = $getDesc;
	    $DP.f = $setDesc;
	  }

	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty: $setDesc
	  });

	  if (fails(function () {
	    arrayToString.call({});
	  })) {
	    arrayToString = arrayToLocaleString = function toString() {
	      return arrayJoin.call(this);
	    };
	  }

	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice: $slice,
	    set: $set,
	    constructor: function constructor() {/* noop */},
	    toString: arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function get() {
	      return this[TYPED_ARRAY];
	    }
	  });

	  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
	    CLAMPED = !!CLAMPED;
	    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array',
	        ISNT_UINT8 = NAME != 'Uint8Array',
	        GETTER = 'get' + KEY,
	        SETTER = 'set' + KEY,
	        TypedArray = global[NAME],
	        Base = TypedArray || {},
	        TAC = TypedArray && getPrototypeOf(TypedArray),
	        FORCED = !TypedArray || !$typed.ABV,
	        O = {},
	        TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function getter(that, index) {
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function setter(that, index, value) {
	      var data = that._d;
	      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function addElement(that, index) {
	      dP(that, index, {
	        get: function get() {
	          return getter(this, index);
	        },
	        set: function set(value) {
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if (FORCED) {
	      TypedArray = wrapper(function (that, data, $offset, $length) {
	        anInstance(that, TypedArray, NAME, '_d');
	        var index = 0,
	            offset = 0,
	            buffer,
	            byteLength,
	            length,
	            klass;
	        if (!isObject(data)) {
	          length = strictToLength(data, true);
	          byteLength = length * BYTES;
	          buffer = new $ArrayBuffer(byteLength);
	        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if ($length === undefined) {
	            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if (TYPED_ARRAY in data) {
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while (index < length) {
	          addElement(that, index++);
	        }
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if (!$iterDetect(function (iter) {
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)) {
	      TypedArray = wrapper(function (that, data, $offset, $length) {
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if (!isObject(data)) return new Base(strictToLength(data, ISNT_UINT8));
	        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
	          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);
	        }
	        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
	        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator = TypedArrayPrototype[ITERATOR],
	        CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined),
	        $iterator = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

	    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
	      dP(TypedArrayPrototype, TAG, {
	        get: function get() {
	          return NAME;
	        }
	      });
	    }

	    O[NAME] = TypedArray;

	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });

	    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

	    $export($export.P, NAME, proto);

	    setSpecies(NAME);

	    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, { toString: arrayToString });

	    $export($export.P + $export.F * fails(function () {
	      new TypedArray(1).slice();
	    }), NAME, { slice: $slice });

	    $export($export.P + $export.F * (fails(function () {
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
	    }) || !fails(function () {
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, { toLocaleString: $toLocaleString });

	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function () {/* empty */};

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Basic numeric calculation functions.
	 * @module numcal
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get ave() {
	    return d(__webpack_require__(912));
	  },
	  get max() {
	    return d(__webpack_require__(913));
	  },
	  get min() {
	    return d(__webpack_require__(914));
	  },
	  get sum() {
	    return d(__webpack_require__(308));
	  }
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(131);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var PooledClass = __webpack_require__(65);

	var emptyFunction = __webpack_require__(43);
	var warning = __webpack_require__(11);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function timeStamp(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function preventDefault() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function stopPropagation() {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function persist() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function destructor() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function construct(target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function apply(constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function set(target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function E() {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
	// original notice:

	/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	function compare(a, b) {
	  if (a === b) {
	    return 0;
	  }

	  var x = a.length;
	  var y = b.length;

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i];
	      y = b[i];
	      break;
	    }
	  }

	  if (x < y) {
	    return -1;
	  }
	  if (y < x) {
	    return 1;
	  }
	  return 0;
	}
	function isBuffer(b) {
	  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
	    return global.Buffer.isBuffer(b);
	  }
	  return !!(b != null && b._isBuffer);
	}

	// based on node assert, original notice:

	// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
	//
	// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
	//
	// Originally from narwhal.js (http://narwhaljs.org)
	// Copyright (c) 2009 Thomas Robinson <280north.com>
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the 'Software'), to
	// deal in the Software without restriction, including without limitation the
	// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
	// sell copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
	// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

	var util = __webpack_require__(1083);
	var hasOwn = Object.prototype.hasOwnProperty;
	var pSlice = Array.prototype.slice;
	var functionsHaveNames = function () {
	  return function foo() {}.name === 'foo';
	}();
	function pToString(obj) {
	  return Object.prototype.toString.call(obj);
	}
	function isView(arrbuf) {
	  if (isBuffer(arrbuf)) {
	    return false;
	  }
	  if (typeof global.ArrayBuffer !== 'function') {
	    return false;
	  }
	  if (typeof ArrayBuffer.isView === 'function') {
	    return ArrayBuffer.isView(arrbuf);
	  }
	  if (!arrbuf) {
	    return false;
	  }
	  if (arrbuf instanceof DataView) {
	    return true;
	  }
	  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
	    return true;
	  }
	  return false;
	}
	// 1. The assert module provides functions that throw
	// AssertionError's when particular conditions are not met. The
	// assert module must conform to the following interface.

	var assert = module.exports = ok;

	// 2. The AssertionError is defined in assert.
	// new assert.AssertionError({ message: message,
	//                             actual: actual,
	//                             expected: expected })

	var regex = /\s*function\s+([^\(\s]*)\s*/;
	// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
	function getName(func) {
	  if (!util.isFunction(func)) {
	    return;
	  }
	  if (functionsHaveNames) {
	    return func.name;
	  }
	  var str = func.toString();
	  var match = str.match(regex);
	  return match && match[1];
	}
	assert.AssertionError = function AssertionError(options) {
	  this.name = 'AssertionError';
	  this.actual = options.actual;
	  this.expected = options.expected;
	  this.operator = options.operator;
	  if (options.message) {
	    this.message = options.message;
	    this.generatedMessage = false;
	  } else {
	    this.message = getMessage(this);
	    this.generatedMessage = true;
	  }
	  var stackStartFunction = options.stackStartFunction || fail;
	  if (Error.captureStackTrace) {
	    Error.captureStackTrace(this, stackStartFunction);
	  } else {
	    // non v8 browsers so we can have a stacktrace
	    var err = new Error();
	    if (err.stack) {
	      var out = err.stack;

	      // try to strip useless frames
	      var fn_name = getName(stackStartFunction);
	      var idx = out.indexOf('\n' + fn_name);
	      if (idx >= 0) {
	        // once we have located the function frame
	        // we need to strip out everything before it (and its line)
	        var next_line = out.indexOf('\n', idx + 1);
	        out = out.substring(next_line + 1);
	      }

	      this.stack = out;
	    }
	  }
	};

	// assert.AssertionError instanceof Error
	util.inherits(assert.AssertionError, Error);

	function truncate(s, n) {
	  if (typeof s === 'string') {
	    return s.length < n ? s : s.slice(0, n);
	  } else {
	    return s;
	  }
	}
	function inspect(something) {
	  if (functionsHaveNames || !util.isFunction(something)) {
	    return util.inspect(something);
	  }
	  var rawname = getName(something);
	  var name = rawname ? ': ' + rawname : '';
	  return '[Function' + name + ']';
	}
	function getMessage(self) {
	  return truncate(inspect(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect(self.expected), 128);
	}

	// At present only the three keys mentioned above are used and
	// understood by the spec. Implementations or sub modules can pass
	// other keys to the AssertionError's constructor - they will be
	// ignored.

	// 3. All of the following functions must throw an AssertionError
	// when a corresponding condition is not met, with a message that
	// may be undefined if not provided.  All assertion methods provide
	// both the actual and expected values to the assertion error for
	// display purposes.

	function fail(actual, expected, message, operator, stackStartFunction) {
	  throw new assert.AssertionError({
	    message: message,
	    actual: actual,
	    expected: expected,
	    operator: operator,
	    stackStartFunction: stackStartFunction
	  });
	}

	// EXTENSION! allows for well behaved errors defined elsewhere.
	assert.fail = fail;

	// 4. Pure assertion tests whether a value is truthy, as determined
	// by !!guard.
	// assert.ok(guard, message_opt);
	// This statement is equivalent to assert.equal(true, !!guard,
	// message_opt);. To test strictly for the value true, use
	// assert.strictEqual(true, guard, message_opt);.

	function ok(value, message) {
	  if (!value) fail(value, true, message, '==', assert.ok);
	}
	assert.ok = ok;

	// 5. The equality assertion tests shallow, coercive equality with
	// ==.
	// assert.equal(actual, expected, message_opt);

	assert.equal = function equal(actual, expected, message) {
	  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
	};

	// 6. The non-equality assertion tests for whether two objects are not equal
	// with != assert.notEqual(actual, expected, message_opt);

	assert.notEqual = function notEqual(actual, expected, message) {
	  if (actual == expected) {
	    fail(actual, expected, message, '!=', assert.notEqual);
	  }
	};

	// 7. The equivalence assertion tests a deep equality relation.
	// assert.deepEqual(actual, expected, message_opt);

	assert.deepEqual = function deepEqual(actual, expected, message) {
	  if (!_deepEqual(actual, expected, false)) {
	    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
	  }
	};

	assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
	  if (!_deepEqual(actual, expected, true)) {
	    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
	  }
	};

	function _deepEqual(actual, expected, strict, memos) {
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	  } else if (isBuffer(actual) && isBuffer(expected)) {
	    return compare(actual, expected) === 0;

	    // 7.2. If the expected value is a Date object, the actual value is
	    // equivalent if it is also a Date object that refers to the same time.
	  } else if (util.isDate(actual) && util.isDate(expected)) {
	    return actual.getTime() === expected.getTime();

	    // 7.3 If the expected value is a RegExp object, the actual value is
	    // equivalent if it is also a RegExp object with the same source and
	    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
	  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
	    return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase;

	    // 7.4. Other pairs that do not both pass typeof value == 'object',
	    // equivalence is determined by ==.
	  } else if ((actual === null || (typeof actual === 'undefined' ? 'undefined' : _typeof(actual)) !== 'object') && (expected === null || (typeof expected === 'undefined' ? 'undefined' : _typeof(expected)) !== 'object')) {
	    return strict ? actual === expected : actual == expected;

	    // If both values are instances of typed arrays, wrap their underlying
	    // ArrayBuffers in a Buffer each to increase performance
	    // This optimization requires the arrays to have the same type as checked by
	    // Object.prototype.toString (aka pToString). Never perform binary
	    // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
	    // bit patterns are not identical.
	  } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {
	    return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0;

	    // 7.5 For all other Object pairs, including Array objects, equivalence is
	    // determined by having the same number of owned properties (as verified
	    // with Object.prototype.hasOwnProperty.call), the same set of keys
	    // (although not necessarily the same order), equivalent values for every
	    // corresponding key, and an identical 'prototype' property. Note: this
	    // accounts for both named and indexed properties on Arrays.
	  } else if (isBuffer(actual) !== isBuffer(expected)) {
	    return false;
	  } else {
	    memos = memos || { actual: [], expected: [] };

	    var actualIndex = memos.actual.indexOf(actual);
	    if (actualIndex !== -1) {
	      if (actualIndex === memos.expected.indexOf(expected)) {
	        return true;
	      }
	    }

	    memos.actual.push(actual);
	    memos.expected.push(expected);

	    return objEquiv(actual, expected, strict, memos);
	  }
	}

	function isArguments(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	}

	function objEquiv(a, b, strict, actualVisitedObjects) {
	  if (a === null || a === undefined || b === null || b === undefined) return false;
	  // if one is a primitive, the other must be same
	  if (util.isPrimitive(a) || util.isPrimitive(b)) return a === b;
	  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;
	  var aIsArgs = isArguments(a);
	  var bIsArgs = isArguments(b);
	  if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;
	  if (aIsArgs) {
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return _deepEqual(a, b, strict);
	  }
	  var ka = objectKeys(a);
	  var kb = objectKeys(b);
	  var key, i;
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length !== kb.length) return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] !== kb[i]) return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;
	  }
	  return true;
	}

	// 8. The non-equivalence assertion tests for any deep inequality.
	// assert.notDeepEqual(actual, expected, message_opt);

	assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
	  if (_deepEqual(actual, expected, false)) {
	    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
	  }
	};

	assert.notDeepStrictEqual = notDeepStrictEqual;
	function notDeepStrictEqual(actual, expected, message) {
	  if (_deepEqual(actual, expected, true)) {
	    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
	  }
	}

	// 9. The strict equality assertion tests strict equality, as determined by ===.
	// assert.strictEqual(actual, expected, message_opt);

	assert.strictEqual = function strictEqual(actual, expected, message) {
	  if (actual !== expected) {
	    fail(actual, expected, message, '===', assert.strictEqual);
	  }
	};

	// 10. The strict non-equality assertion tests for strict inequality, as
	// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

	assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
	  if (actual === expected) {
	    fail(actual, expected, message, '!==', assert.notStrictEqual);
	  }
	};

	function expectedException(actual, expected) {
	  if (!actual || !expected) {
	    return false;
	  }

	  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
	    return expected.test(actual);
	  }

	  try {
	    if (actual instanceof expected) {
	      return true;
	    }
	  } catch (e) {
	    // Ignore.  The instanceof check doesn't work for arrow functions.
	  }

	  if (Error.isPrototypeOf(expected)) {
	    return false;
	  }

	  return expected.call({}, actual) === true;
	}

	function _tryBlock(block) {
	  var error;
	  try {
	    block();
	  } catch (e) {
	    error = e;
	  }
	  return error;
	}

	function _throws(shouldThrow, block, expected, message) {
	  var actual;

	  if (typeof block !== 'function') {
	    throw new TypeError('"block" argument must be a function');
	  }

	  if (typeof expected === 'string') {
	    message = expected;
	    expected = null;
	  }

	  actual = _tryBlock(block);

	  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');

	  if (shouldThrow && !actual) {
	    fail(actual, expected, 'Missing expected exception' + message);
	  }

	  var userProvidedMessage = typeof message === 'string';
	  var isUnwantedException = !shouldThrow && util.isError(actual);
	  var isUnexpectedException = !shouldThrow && actual && !expected;

	  if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {
	    fail(actual, expected, 'Got unwanted exception' + message);
	  }

	  if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {
	    throw actual;
	  }
	}

	// 11. Expected to throw an error:
	// assert.throws(block, Error_opt, message_opt);

	assert.throws = function (block, /*optional*/error, /*optional*/message) {
	  _throws(true, block, error, message);
	};

	// EXTENSION! This is annoying to write outside this module.
	assert.doesNotThrow = function (block, /*optional*/error, /*optional*/message) {
	  _throws(false, block, error, message);
	};

	assert.ifError = function (err) {
	  if (err) throw err;
	};

	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) {
	    if (hasOwn.call(obj, key)) keys.push(key);
	  }
	  return keys;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var META = __webpack_require__(78)('meta'),
	    isObject = __webpack_require__(13),
	    has = __webpack_require__(25),
	    setDesc = __webpack_require__(19).f,
	    id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(12)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function setMeta(it) {
	  setDesc(it, META, { value: {
	      i: 'O' + ++id, // object ID
	      w: {} // weak collections IDs
	    } });
	};
	var fastKey = function fastKey(it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	    // return object ID
	  }return it[META].i;
	};
	var getWeak = function getWeak(it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	    // return hash weak collections IDs
	  }return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function onFreeze(it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 61 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};

/***/ },
/* 62 */
/***/ function(module, exports) {

	"use strict";

	// 7.1.4 ToInteger
	var ceil = Math.ceil,
	    floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 63 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */

	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 64 */
/***/ function(module, exports) {

	'use strict';

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout() {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	})();
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while (len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () {
	    return '/';
	};
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function () {
	    return 0;
	};

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function fiveArgumentPooler(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function standardReleaser(instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 66 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into snake case.
	 * Join punctuation with underscore.
	 * @memberof module:stringcase/lib
	 * @function snakecase
	 * @param {string} str - String to convert.
	 * @returns {string} Snake cased string.
	 */

	'use strict';

	var lowercase = __webpack_require__(98);
	var uppercase = __webpack_require__(110);

	var JOINER = '_';

	var replacing = {
	  from: /([A-Z])/g,
	  to: function to($1) {
	    return JOINER + lowercase($1);
	  }
	};

	/** @lends snakecase */
	function snakecase(str) {
	  if (snakecase.isSnakecase(str)) {
	    return str;
	  }
	  str = String(str).replace(/[\-\.\s]/g, JOINER);
	  if (!str) {
	    return str;
	  }
	  if (uppercase.isUppercase(str)) {
	    str = lowercase(str);
	  }
	  return lowercase(str[0]) + str.slice(1).replace(replacing.from, replacing.to).replace(/_+/g, '_');
	}

	/**
	 * Checks whether the string are snakecase.
	 * @memberof module:stringcase/lib
	 * @function snakecase.isSnakecase
	 * @param {string} str - String to check.
	 * @returns {boolean} - True if the string are snakecase.
	 */
	snakecase.isSnakecase = function (str) {
	  return str && /^[a-z_]+$/.test(str);
	};

	module.exports = snakecase;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for image component.
	 * @module apeman-react-image
	 * @version 4.0.4
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApImage = exports.ApImageStyle = undefined;

	var _ap_image_style = __webpack_require__(475);

	var _ap_image_style2 = _interopRequireDefault(_ap_image_style);

	var _ap_image = __webpack_require__(474);

	var _ap_image2 = _interopRequireDefault(_ap_image);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApImageStyle = _ap_image_style2.default;
	exports.ApImage = _ap_image2.default;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for text component.
	 * @module apeman-react-text
	 * @version 4.0.4
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApText = exports.ApTextStyle = undefined;

	var _ap_text_style = __webpack_require__(606);

	var _ap_text_style2 = _interopRequireDefault(_ap_text_style);

	var _ap_text = __webpack_require__(605);

	var _ap_text2 = _interopRequireDefault(_ap_text);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApTextStyle = _ap_text_style2.default;
	exports.ApText = _ap_text2.default;

/***/ },
/* 70 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function (it, Constructor, name, forbiddenField) {
	  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
	    throw TypeError(name + ': incorrect invocation!');
	  }return it;
	};

/***/ },
/* 71 */
/***/ function(module, exports) {

	"use strict";

	module.exports = false;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(6),
	    dPs = __webpack_require__(276),
	    enumBugKeys = __webpack_require__(156),
	    IE_PROTO = __webpack_require__(168)('IE_PROTO'),
	    Empty = function Empty() {/* empty */},
	    PROTOTYPE = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var _createDict = function createDict() {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(155)('iframe'),
	      i = enumBugKeys.length,
	      lt = '<',
	      gt = '>',
	      iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(158).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  _createDict = iframeDocument.F;
	  while (i--) {
	    delete _createDict[PROTOTYPE][enumBugKeys[i]];
	  }return _createDict();
	};

	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = _createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(278),
	    hiddenKeys = __webpack_require__(156).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(278),
	    enumBugKeys = __webpack_require__(156);

	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var redefine = __webpack_require__(32);
	module.exports = function (target, src, safe) {
	  for (var key in src) {
	    redefine(target, key, src[key], safe);
	  }return target;
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    dP = __webpack_require__(19),
	    DESCRIPTORS = __webpack_require__(18),
	    SPECIES = __webpack_require__(14)('species');

	module.exports = function (KEY) {
	  var C = global[KEY];
	  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
	    configurable: true,
	    get: function get() {
	      return this;
	    }
	  });
	};

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toInteger = __webpack_require__(62),
	    max = Math.max,
	    min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 78 */
/***/ function(module, exports) {

	'use strict';

	var id = 0,
	    px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 79 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * slice() reference.
	 */

	var slice = Array.prototype.slice;

	/**
	 * Expose `co`.
	 */

	module.exports = co['default'] = co.co = co;

	/**
	 * Wrap the given generator `fn` into a
	 * function that returns a promise.
	 * This is a separate function so that
	 * every `co()` call doesn't create a new,
	 * unnecessary closure.
	 *
	 * @param {GeneratorFunction} fn
	 * @return {Function}
	 * @api public
	 */

	co.wrap = function (fn) {
	  createPromise.__generatorFunction__ = fn;
	  return createPromise;
	  function createPromise() {
	    return co.call(this, fn.apply(this, arguments));
	  }
	};

	/**
	 * Execute the generator function or a generator
	 * and return a promise.
	 *
	 * @param {Function} fn
	 * @return {Promise}
	 * @api public
	 */

	function co(gen) {
	  var ctx = this;
	  var args = slice.call(arguments, 1);

	  // we wrap everything in a promise to avoid promise chaining,
	  // which leads to memory leak errors.
	  // see https://github.com/tj/co/issues/180
	  return new Promise(function (resolve, reject) {
	    if (typeof gen === 'function') gen = gen.apply(ctx, args);
	    if (!gen || typeof gen.next !== 'function') return resolve(gen);

	    onFulfilled();

	    /**
	     * @param {Mixed} res
	     * @return {Promise}
	     * @api private
	     */

	    function onFulfilled(res) {
	      var ret;
	      try {
	        ret = gen.next(res);
	      } catch (e) {
	        return reject(e);
	      }
	      next(ret);
	    }

	    /**
	     * @param {Error} err
	     * @return {Promise}
	     * @api private
	     */

	    function onRejected(err) {
	      var ret;
	      try {
	        ret = gen.throw(err);
	      } catch (e) {
	        return reject(e);
	      }
	      next(ret);
	    }

	    /**
	     * Get the next value in the generator,
	     * return a promise.
	     *
	     * @param {Object} ret
	     * @return {Promise}
	     * @api private
	     */

	    function next(ret) {
	      if (ret.done) return resolve(ret.value);
	      var value = toPromise.call(ctx, ret.value);
	      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);
	      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, ' + 'but the following object was passed: "' + String(ret.value) + '"'));
	    }
	  });
	}

	/**
	 * Convert a `yield`ed value into a promise.
	 *
	 * @param {Mixed} obj
	 * @return {Promise}
	 * @api private
	 */

	function toPromise(obj) {
	  if (!obj) return obj;
	  if (isPromise(obj)) return obj;
	  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);
	  if ('function' == typeof obj) return thunkToPromise.call(this, obj);
	  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);
	  if (isObject(obj)) return objectToPromise.call(this, obj);
	  return obj;
	}

	/**
	 * Convert a thunk to a promise.
	 *
	 * @param {Function}
	 * @return {Promise}
	 * @api private
	 */

	function thunkToPromise(fn) {
	  var ctx = this;
	  return new Promise(function (resolve, reject) {
	    fn.call(ctx, function (err, res) {
	      if (err) return reject(err);
	      if (arguments.length > 2) res = slice.call(arguments, 1);
	      resolve(res);
	    });
	  });
	}

	/**
	 * Convert an array of "yieldables" to a promise.
	 * Uses `Promise.all()` internally.
	 *
	 * @param {Array} obj
	 * @return {Promise}
	 * @api private
	 */

	function arrayToPromise(obj) {
	  return Promise.all(obj.map(toPromise, this));
	}

	/**
	 * Convert an object of "yieldables" to a promise.
	 * Uses `Promise.all()` internally.
	 *
	 * @param {Object} obj
	 * @return {Promise}
	 * @api private
	 */

	function objectToPromise(obj) {
	  var results = new obj.constructor();
	  var keys = Object.keys(obj);
	  var promises = [];
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var promise = toPromise.call(this, obj[key]);
	    if (promise && isPromise(promise)) defer(promise, key);else results[key] = obj[key];
	  }
	  return Promise.all(promises).then(function () {
	    return results;
	  });

	  function defer(promise, key) {
	    // predefine the key in the result
	    results[key] = undefined;
	    promises.push(promise.then(function (res) {
	      results[key] = res;
	    }));
	  }
	}

	/**
	 * Check if `obj` is a promise.
	 *
	 * @param {Object} obj
	 * @return {Boolean}
	 * @api private
	 */

	function isPromise(obj) {
	  return 'function' == typeof obj.then;
	}

	/**
	 * Check if `obj` is a generator.
	 *
	 * @param {Mixed} obj
	 * @return {Boolean}
	 * @api private
	 */

	function isGenerator(obj) {
	  return 'function' == typeof obj.next && 'function' == typeof obj.throw;
	}

	/**
	 * Check if `obj` is a generator function.
	 *
	 * @param {Mixed} obj
	 * @return {Boolean}
	 * @api private
	 */
	function isGeneratorFunction(obj) {
	  var constructor = obj.constructor;
	  if (!constructor) return false;
	  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;
	  return isGenerator(constructor.prototype);
	}

	/**
	 * Check for plain object.
	 *
	 * @param {Mixed} val
	 * @return {Boolean}
	 * @api private
	 */

	function isObject(val) {
	  return Object == val.constructor;
	}

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(971);
	var ReactInstrumentation = __webpack_require__(37);

	var warning = __webpack_require__(11);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function getHostNode(internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 81 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Parse a color
	 * @function parse
	 * @param {value} - Color value
	 * @returns {Object} - Parsed color instance.
	 */
	'use strict';

	var color = __webpack_require__(297);

	/** @lends parse */
	function parse(value) {
	  if (!value) {
	    throw new Error('[apemancolor] Value is required.');
	  }
	  var parsed = color(value);
	  if (!parsed) {
	    throw new Error('Invalid color: ' + value);
	  }
	  return parsed;
	}

	module.exports = parse;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * Basic react components of apeman.
	 * @namespace apemanReactBasic
	 * @property {function} ApAccordion - ApAccordion component from "apeman-react-accordion" module.
	 * @property {function} ApAccordionHeader - ApAccordionHeader component from "apeman-react-accordion" module.
	 * @property {function} ApAccordionBody - ApAccordionBody component from "apeman-react-accordion" module.
	 * @property {function} ApAccordionArrow - ApAccordionArrow component from "apeman-react-accordion" module.
	 * @property {function} ApAccordionStyle - ApAccordionStyle component from "apeman-react-accordion" module.
	 * @property {function} ApArticle - ApArticle component from "apeman-react-article" module.
	 * @property {function} ApSelectableArticle - ApSelectableArticle component from "apeman-react-article" module.
	 * @property {function} ApArticleStyle - ApArticleStyle component from "apeman-react-article" module.
	 * @property {function} ApAsideStyle - ApAsideStyle component from "apeman-react-aside" module.
	 * @property {function} ApAside - ApAside component from "apeman-react-aside" module.
	 * @property {function} ApBody - ApBody component from "apeman-react-body" module.
	 * @property {function} ApBodyStyle - ApBodyStyle component from "apeman-react-body" module.
	 * @property {function} ApButton - ApButton component from "apeman-react-button" module.
	 * @property {function} ApButtonGroup - ApButtonGroup component from "apeman-react-button" module.
	 * @property {function} ApBigButton - ApBigButton component from "apeman-react-button" module.
	 * @property {function} ApButtonStyle - ApButtonStyle component from "apeman-react-button" module.
	 * @property {function} ApCellButtonRow - ApCellButtonRow component from "apeman-react-button" module.
	 * @property {function} ApCellButton - ApCellButton component from "apeman-react-button" module.
	 * @property {function} ApIconButtonRow - ApIconButtonRow component from "apeman-react-button" module.
	 * @property {function} ApIconButton - ApIconButton component from "apeman-react-button" module.
	 * @property {function} ApNextButton - ApNextButton component from "apeman-react-button" module.
	 * @property {function} ApNextButton - ApNextButton component from "apeman-react-button" module.
	 * @property {function} ApCaptcha - ApCaptcha component from "apeman-react-captcha" module.
	 * @property {function} ApCaptchaSvg - ApCaptchaSvg component from "apeman-react-captcha" module.
	 * @property {function} ApCaptchaStyle - ApCaptchaStyle component from "apeman-react-captcha" module.
	 * @property {function} ApCard - ApCard component from "apeman-react-card" module.
	 * @property {function} ApCardGroup - ApCardGroup component from "apeman-react-card" module.
	 * @property {function} ApCardStyle - ApCardStyle component from "apeman-react-card" module.
	 * @property {function} ApCatalogItemDetail - ApCatalogItemDetail component from "apeman-react-catalog" module.
	 * @property {function} ApCatalogItemSummary - ApCatalogItemSummary component from "apeman-react-catalog" module.
	 * @property {function} ApCatalogItem - ApCatalogItem component from "apeman-react-catalog" module.
	 * @property {function} ApCatalogStyle - ApCatalogStyle component from "apeman-react-catalog" module.
	 * @property {function} ApCatalog - ApCatalog component from "apeman-react-catalog" module.
	 * @property {function} ApChat - ApChat component from "apeman-react-chat" module.
	 * @property {function} ApChatItem - ApChatItem component from "apeman-react-chat" module.
	 * @property {function} ApChatStyle - ApChatStyle component from "apeman-react-chat" module.
	 * @property {function} ApCheckbox - ApCheckbox component from "apeman-react-checkbox" module.
	 * @property {function} ApCheckboxGroup - ApCheckboxGroup component from "apeman-react-checkbox" module.
	 * @property {function} ApCheckboxStyle - ApCheckboxStyle component from "apeman-react-checkbox" module.
	 * @property {function} ApContainer - ApContainer component from "apeman-react-container" module.
	 * @property {function} ApContainerStyle - ApContainerStyle component from "apeman-react-container" module.
	 * @property {function} ApDevtool - ApDevtool component from "apeman-react-devtool" module.
	 * @property {function} ApDevtoolStyle - ApDevtoolStyle component from "apeman-react-devtool" module.
	 * @property {function} ApDialogBody - ApDialogBody component from "apeman-react-dialog" module.
	 * @property {function} ApDialogHeader - ApDialogHeader component from "apeman-react-dialog" module.
	 * @property {function} ApDialogStyle - ApDialogStyle component from "apeman-react-dialog" module.
	 * @property {function} ApDialog - ApDialog component from "apeman-react-dialog" module.
	 * @property {function} ApYesnoDialogStyle - ApYesnoDialogStyle component from "apeman-react-dialog" module.
	 * @property {function} ApYesnoDialog - ApYesnoDialog component from "apeman-react-dialog" module.
	 * @property {function} ApConfirmDialogStyle - ApConfirmDialogStyle component from "apeman-react-dialog" module.
	 * @property {function} ApConfirmDialog - ApConfirmDialog component from "apeman-react-dialog" module.
	 * @property {function} ApDone - ApDone component from "apeman-react-done" module.
	 * @property {function} ApDoneStyle - ApDoneStyle component from "apeman-react-done" module.
	 * @property {function} ApDraggable - ApDraggable component from "apeman-react-draggable" module.
	 * @property {function} ApDraggableStyle - ApDraggableStyle component from "apeman-react-draggable" module.
	 * @property {function} ApDropdown - ApDropdown component from "apeman-react-dropdown" module.
	 * @property {function} ApDropdownItem - ApDropdownItem component from "apeman-react-dropdown" module.
	 * @property {function} ApDropdownStyle - ApDropdownStyle component from "apeman-react-dropdown" module.
	 * @property {function} ApFieldLabel - ApFieldLabel component from "apeman-react-field" module.
	 * @property {function} ApFieldLegend - ApFieldLegend component from "apeman-react-field" module.
	 * @property {function} ApFieldSet - ApFieldSet component from "apeman-react-field" module.
	 * @property {function} ApFieldStyle - ApFieldStyle component from "apeman-react-field" module.
	 * @property {function} ApFieldValue - ApFieldValue component from "apeman-react-field" module.
	 * @property {function} ApField - ApField component from "apeman-react-field" module.
	 * @property {function} ApFooter - ApFooter component from "apeman-react-footer" module.
	 * @property {function} ApFooterStyle - ApFooterStyle component from "apeman-react-footer" module.
	 * @property {function} ApFormStyle - ApFormStyle component from "apeman-react-form" module.
	 * @property {function} ApForm - ApForm component from "apeman-react-form" module.
	 * @property {function} ApFrame - ApFrame component from "apeman-react-frame" module.
	 * @property {function} ApFrameStyle - ApFrameStyle component from "apeman-react-frame" module.
	 * @property {function} ApGrid - ApGrid component from "apeman-react-grid" module.
	 * @property {function} ApGridItem - ApGridItem component from "apeman-react-grid" module.
	 * @property {function} ApGridStyle - ApGridStyle component from "apeman-react-grid" module.
	 * @property {function} ApHead - ApHead component from "apeman-react-head" module.
	 * @property {function} ApHeader - ApHeader component from "apeman-react-header" module.
	 * @property {function} ApHeaderLogo - ApHeaderLogo component from "apeman-react-header" module.
	 * @property {function} ApHeaderDropdown - ApHeaderDropdown component from "apeman-react-header" module.
	 * @property {function} ApHeaderDropdownItem - ApHeaderDropdownItem component from "apeman-react-header" module.
	 * @property {function} ApHeaderStyle - ApHeaderStyle component from "apeman-react-header" module.
	 * @property {function} ApHeaderTab - ApHeaderTab component from "apeman-react-header" module.
	 * @property {function} ApHeaderTabItem - ApHeaderTabItem component from "apeman-react-header" module.
	 * @property {function} ApHeaderMenu - ApHeaderMenu component from "apeman-react-header" module.
	 * @property {function} ApHeaderMenuItem - ApHeaderMenuItem component from "apeman-react-header" module.
	 * @property {function} ApHtml - ApHtml component from "apeman-react-html" module.
	 * @property {function} ApIcon - ApIcon component from "apeman-react-icon" module.
	 * @property {function} ApIconStyle - ApIconStyle component from "apeman-react-icon" module.
	 * @property {function} ApFaIcon - ApFaIcon component from "apeman-react-icon" module.
	 * @property {function} ApIonIcon - ApIonIcon component from "apeman-react-icon" module.
	 * @property {function} ApImage - ApImage component from "apeman-react-image" module.
	 * @property {function} ApImageStyle - ApImageStyle component from "apeman-react-image" module.
	 * @property {function} ApInfoBody - ApInfoBody component from "apeman-react-info" module.
	 * @property {function} ApInfoCollapsibleItem - ApInfoCollapsibleItem component from "apeman-react-info" module.
	 * @property {function} ApInfoDisclosableItem - ApInfoDisclosableItem component from "apeman-react-info" module.
	 * @property {function} ApInfoHeader - ApInfoHeader component from "apeman-react-info" module.
	 * @property {function} ApInfoItem - ApInfoItem component from "apeman-react-info" module.
	 * @property {function} ApInfoStyle - ApInfoStyle component from "apeman-react-info" module.
	 * @property {function} ApInfo - ApInfo component from "apeman-react-info" module.
	 * @property {function} ApJumbotron - ApJumbotron component from "apeman-react-jumbotron" module.
	 * @property {function} ApJumbotronText - ApJumbotronText component from "apeman-react-jumbotron" module.
	 * @property {function} ApJumbotronTitle - ApJumbotronTitle component from "apeman-react-jumbotron" module.
	 * @property {function} ApJumbotronStyle - ApJumbotronStyle component from "apeman-react-jumbotron" module.
	 * @property {function} ApLabel - ApLabel component from "apeman-react-label" module.
	 * @property {function} ApLabelStyle - ApLabelStyle component from "apeman-react-label" module.
	 * @property {function} ApLinks - ApLinks component from "apeman-react-links" module.
	 * @property {function} ApLinksStyle - ApLinksStyle component from "apeman-react-links" module.
	 * @property {function} ApList - ApList component from "apeman-react-list" module.
	 * @property {function} ApListHeader - ApListHeader component from "apeman-react-list" module.
	 * @property {function} ApListBody - ApListBody component from "apeman-react-list" module.
	 * @property {function} ApListBar - ApListBar component from "apeman-react-list" module.
	 * @property {function} ApListBarMessage - ApListBarMessage component from "apeman-react-list" module.
	 * @property {function} ApListFooter - ApListFooter component from "apeman-react-list" module.
	 * @property {function} ApListMoreButton - ApListMoreButton component from "apeman-react-list" module.
	 * @property {function} ApListItem - ApListItem component from "apeman-react-list" module.
	 * @property {function} ApListItemIcon - ApListItemIcon component from "apeman-react-list" module.
	 * @property {function} ApListItemArrowIcon - ApListItemArrowIcon component from "apeman-react-list" module.
	 * @property {function} ApListItemText - ApListItemText component from "apeman-react-list" module.
	 * @property {function} ApListStyle - ApListStyle component from "apeman-react-list" module.
	 * @property {function} ApMain - ApMain component from "apeman-react-main" module.
	 * @property {function} ApMainStyle - ApMainStyle component from "apeman-react-main" module.
	 * @property {function} ApMenuItem - ApMenuItem component from "apeman-react-menu" module.
	 * @property {function} ApMenuStyle - ApMenuStyle component from "apeman-react-menu" module.
	 * @property {function} ApMenu - ApMenu component from "apeman-react-menu" module.
	 * @property {function} ApModal - ApModal component from "apeman-react-modal" module.
	 * @property {function} ApModalStyle - ApModalStyle component from "apeman-react-modal" module.
	 * @property {function} ApNote - ApNote component from "apeman-react-note" module.
	 * @property {function} ApNoteStyle - ApNoteStyle component from "apeman-react-note" module.
	 * @property {function} ApNotice - ApNotice component from "apeman-react-notice" module.
	 * @property {function} ApNoticeItem - ApNoticeItem component from "apeman-react-notice" module.
	 * @property {function} ApNoticeStyle - ApNoticeStyle component from "apeman-react-notice" module.
	 * @property {function} ApPageContainer - ApPageContainer component from "apeman-react-page" module.
	 * @property {function} ApPageStyle - ApPageStyle component from "apeman-react-page" module.
	 * @property {function} ApPage - ApPage component from "apeman-react-page" module.
	 * @property {function} ApPager - ApPager component from "apeman-react-pager" module.
	 * @property {function} ApPagerStyle - ApPagerStyle component from "apeman-react-pager" module.
	 * @property {function} ApPagerItem - ApPagerItem component from "apeman-react-pager" module.
	 * @property {function} ApPassword - ApPassword component from "apeman-react-password" module.
	 * @property {function} ApPasswordStyle - ApPasswordStyle component from "apeman-react-password" module.
	 * @property {function} ApRadio - ApRadio component from "apeman-react-radio" module.
	 * @property {function} ApRadioGroup - ApRadioGroup component from "apeman-react-radio" module.
	 * @property {function} ApRadioStyle - ApRadioStyle component from "apeman-react-radio" module.
	 * @property {function} ApRange - ApRange component from "apeman-react-range" module.
	 * @property {function} ApRangeStyle - ApRangeStyle component from "apeman-react-range" module.
	 * @property {function} ApScroll - ApScroll component from "apeman-react-scroll" module.
	 * @property {function} ApScrollStyle - ApScrollStyle component from "apeman-react-scroll" module.
	 * @property {function} ApSearch - ApSearch component from "apeman-react-search" module.
	 * @property {function} ApSearchStyle - ApSearchStyle component from "apeman-react-search" module.
	 * @property {function} ApSection - ApSection component from "apeman-react-section" module.
	 * @property {function} ApSectionHeader - ApSectionHeader component from "apeman-react-section" module.
	 * @property {function} ApSectionHeaderButton - ApSectionHeaderButton component from "apeman-react-section" module.
	 * @property {function} ApSectionBody - ApSectionBody component from "apeman-react-section" module.
	 * @property {function} ApSectionStyle - ApSectionStyle component from "apeman-react-section" module.
	 * @property {function} ApSelect - ApSelect component from "apeman-react-select" module.
	 * @property {function} ApSelectStyle - ApSelectStyle component from "apeman-react-select" module.
	 * @property {function} ApSlider - ApSlider component from "apeman-react-slider" module.
	 * @property {function} ApSliderStyle - ApSliderStyle component from "apeman-react-slider" module.
	 * @property {function} ApSpinner - ApSpinner component from "apeman-react-spinner" module.
	 * @property {function} ApSpinnerStyle - ApSpinnerStyle component from "apeman-react-spinner" module.
	 * @property {function} ApStyle - ApStyle component from "apeman-react-style" module.
	 * @property {function} ApSwitch - ApSwitch component from "apeman-react-switch" module.
	 * @property {function} ApSwitchStyle - ApSwitchStyle component from "apeman-react-switch" module.
	 * @property {function} ApTab - ApTab component from "apeman-react-tab" module.
	 * @property {function} ApTabContent - ApTabContent component from "apeman-react-tab" module.
	 * @property {function} ApTabGroup - ApTabGroup component from "apeman-react-tab" module.
	 * @property {function} ApTabItem - ApTabItem component from "apeman-react-tab" module.
	 * @property {function} ApTabStyle - ApTabStyle component from "apeman-react-tab" module.
	 * @property {function} ApTableBody - ApTableBody component from "apeman-react-table" module.
	 * @property {function} ApTableData - ApTableData component from "apeman-react-table" module.
	 * @property {function} ApTableFoot - ApTableFoot component from "apeman-react-table" module.
	 * @property {function} ApTableHead - ApTableHead component from "apeman-react-table" module.
	 * @property {function} ApTableHeader - ApTableHeader component from "apeman-react-table" module.
	 * @property {function} ApTableRow - ApTableRow component from "apeman-react-table" module.
	 * @property {function} ApTableStyle - ApTableStyle component from "apeman-react-table" module.
	 * @property {function} ApTable - ApTable component from "apeman-react-table" module.
	 * @property {function} ApTag - ApTag component from "apeman-react-tag" module.
	 * @property {function} ApTagStyle - ApTagStyle component from "apeman-react-tag" module.
	 * @property {function} ApText - ApText component from "apeman-react-text" module.
	 * @property {function} ApTextStyle - ApTextStyle component from "apeman-react-text" module.
	 * @property {function} ApErrorToast - ApErrorToast component from "apeman-react-toast" module.
	 * @property {function} ApInfoToast - ApInfoToast component from "apeman-react-toast" module.
	 * @property {function} ApToastGroup - ApToastGroup component from "apeman-react-toast" module.
	 * @property {function} ApToastStyle - ApToastStyle component from "apeman-react-toast" module.
	 * @property {function} ApToast - ApToast component from "apeman-react-toast" module.
	 * @property {function} ApWarnToast - ApWarnToast component from "apeman-react-toast" module.
	 * @property {function} ApToggle - ApToggle component from "apeman-react-toggle" module.
	 * @property {function} ApToggleStyle - ApToggleStyle component from "apeman-react-toggle" module.
	 * @property {function} ApTouchable - ApTouchable component from "apeman-react-touchable" module.
	 * @property {function} ApTouchableStyle - ApTouchableStyle component from "apeman-react-touchable" module.
	 * @property {function} ApUpload - ApUpload component from "apeman-react-upload" module.
	 * @property {function} ApUploadStyle - ApUploadStyle component from "apeman-react-upload" module.
	 * @property {function} ApView - ApView component from "apeman-react-view" module.
	 * @property {function} ApViewHeader - ApViewHeader component from "apeman-react-view" module.
	 * @property {function} ApViewHeaderButton - ApViewHeaderButton component from "apeman-react-view" module.
	 * @property {function} ApViewHeaderTitle - ApViewHeaderTitle component from "apeman-react-view" module.
	 * @property {function} ApViewBody - ApViewBody component from "apeman-react-view" module.
	 * @property {function} ApViewFooter - ApViewFooter component from "apeman-react-view" module.
	 * @property {function} ApViewStack - ApViewStack component from "apeman-react-view" module.
	 * @property {function} ApViewStackStyle - ApViewStackStyle component from "apeman-react-view" module.
	 * @property {function} ApViewStyle - ApViewStyle component from "apeman-react-view" module.
	*/

	'use strict';

	var apemanReactAccordion = __webpack_require__(377);
	var apemanReactArticle = __webpack_require__(381);
	var apemanReactAside = __webpack_require__(384);
	var apemanReactBody = __webpack_require__(387);
	var apemanReactButton = __webpack_require__(17);
	var apemanReactCaptcha = __webpack_require__(222);
	var apemanReactCard = __webpack_require__(403);
	var apemanReactCatalog = __webpack_require__(409);
	var apemanReactChat = __webpack_require__(413);
	var apemanReactCheckbox = __webpack_require__(224);
	var apemanReactContainer = __webpack_require__(112);
	var apemanReactDevtool = __webpack_require__(420);
	var apemanReactDialog = __webpack_require__(425);
	var apemanReactDone = __webpack_require__(429);
	var apemanReactDraggable = __webpack_require__(113);
	var apemanReactDropdown = __webpack_require__(145);
	var apemanReactField = __webpack_require__(46);
	var apemanReactFooter = __webpack_require__(443);
	var apemanReactForm = __webpack_require__(47);
	var apemanReactFrame = __webpack_require__(448);
	var apemanReactGrid = __webpack_require__(452);
	var apemanReactHead = __webpack_require__(455);
	var apemanReactHeader = __webpack_require__(465);
	var apemanReactHtml = __webpack_require__(468);
	var apemanReactIcon = __webpack_require__(20);
	var apemanReactImage = __webpack_require__(68);
	var apemanReactInfo = __webpack_require__(483);
	var apemanReactJumbotron = __webpack_require__(488);
	var apemanReactLabel = __webpack_require__(148);
	var apemanReactLinks = __webpack_require__(493);
	var apemanReactList = __webpack_require__(503);
	var apemanReactMain = __webpack_require__(506);
	var apemanReactMenu = __webpack_require__(510);
	var apemanReactModal = __webpack_require__(522);
	var apemanReactNote = __webpack_require__(525);
	var apemanReactNotice = __webpack_require__(530);
	var apemanReactPage = __webpack_require__(534);
	var apemanReactPager = __webpack_require__(537);
	var apemanReactPassword = __webpack_require__(99);
	var apemanReactRadio = __webpack_require__(547);
	var apemanReactRange = __webpack_require__(550);
	var apemanReactScroll = __webpack_require__(237);
	var apemanReactSearch = __webpack_require__(564);
	var apemanReactSection = __webpack_require__(570);
	var apemanReactSelect = __webpack_require__(240);
	var apemanReactSlider = __webpack_require__(580);
	var apemanReactSpinner = __webpack_require__(29);
	var apemanReactStyle = __webpack_require__(4);
	var apemanReactSwitch = __webpack_require__(244);
	var apemanReactTab = __webpack_require__(150);
	var apemanReactTable = __webpack_require__(601);
	var apemanReactTag = __webpack_require__(604);
	var apemanReactText = __webpack_require__(69);
	var apemanReactToast = __webpack_require__(612);
	var apemanReactToggle = __webpack_require__(616);
	var apemanReactTouchable = __webpack_require__(9);
	var apemanReactUpload = __webpack_require__(255);
	var apemanReactView = __webpack_require__(258);
	// --------------------------
	// apeman-react-accordion
	// --------------------------

	exports.ApAccordion = apemanReactAccordion.ApAccordion;
	exports.ApAccordionHeader = apemanReactAccordion.ApAccordionHeader;
	exports.ApAccordionBody = apemanReactAccordion.ApAccordionBody;
	exports.ApAccordionArrow = apemanReactAccordion.ApAccordionArrow;
	exports.ApAccordionStyle = apemanReactAccordion.ApAccordionStyle;

	// --------------------------
	// apeman-react-article
	// --------------------------

	exports.ApArticle = apemanReactArticle.ApArticle;
	exports.ApSelectableArticle = apemanReactArticle.ApSelectableArticle;
	exports.ApArticleStyle = apemanReactArticle.ApArticleStyle;

	// --------------------------
	// apeman-react-aside
	// --------------------------

	exports.ApAsideStyle = apemanReactAside.ApAsideStyle;
	exports.ApAside = apemanReactAside.ApAside;

	// --------------------------
	// apeman-react-body
	// --------------------------

	exports.ApBody = apemanReactBody.ApBody;
	exports.ApBodyStyle = apemanReactBody.ApBodyStyle;

	// --------------------------
	// apeman-react-button
	// --------------------------

	exports.ApButton = apemanReactButton.ApButton;
	exports.ApButtonGroup = apemanReactButton.ApButtonGroup;
	exports.ApBigButton = apemanReactButton.ApBigButton;
	exports.ApButtonStyle = apemanReactButton.ApButtonStyle;
	exports.ApCellButtonRow = apemanReactButton.ApCellButtonRow;
	exports.ApCellButton = apemanReactButton.ApCellButton;
	exports.ApIconButtonRow = apemanReactButton.ApIconButtonRow;
	exports.ApIconButton = apemanReactButton.ApIconButton;
	exports.ApNextButton = apemanReactButton.ApNextButton;
	exports.ApNextButton = apemanReactButton.ApNextButton;

	// --------------------------
	// apeman-react-captcha
	// --------------------------

	exports.ApCaptcha = apemanReactCaptcha.ApCaptcha;
	exports.ApCaptchaSvg = apemanReactCaptcha.ApCaptchaSvg;
	exports.ApCaptchaStyle = apemanReactCaptcha.ApCaptchaStyle;

	// --------------------------
	// apeman-react-card
	// --------------------------

	exports.ApCard = apemanReactCard.ApCard;
	exports.ApCardGroup = apemanReactCard.ApCardGroup;
	exports.ApCardStyle = apemanReactCard.ApCardStyle;

	// --------------------------
	// apeman-react-catalog
	// --------------------------

	exports.ApCatalogItemDetail = apemanReactCatalog.ApCatalogItemDetail;
	exports.ApCatalogItemSummary = apemanReactCatalog.ApCatalogItemSummary;
	exports.ApCatalogItem = apemanReactCatalog.ApCatalogItem;
	exports.ApCatalogStyle = apemanReactCatalog.ApCatalogStyle;
	exports.ApCatalog = apemanReactCatalog.ApCatalog;

	// --------------------------
	// apeman-react-chat
	// --------------------------

	exports.ApChat = apemanReactChat.ApChat;
	exports.ApChatItem = apemanReactChat.ApChatItem;
	exports.ApChatStyle = apemanReactChat.ApChatStyle;

	// --------------------------
	// apeman-react-checkbox
	// --------------------------

	exports.ApCheckbox = apemanReactCheckbox.ApCheckbox;
	exports.ApCheckboxGroup = apemanReactCheckbox.ApCheckboxGroup;
	exports.ApCheckboxStyle = apemanReactCheckbox.ApCheckboxStyle;

	// --------------------------
	// apeman-react-container
	// --------------------------

	exports.ApContainer = apemanReactContainer.ApContainer;
	exports.ApContainerStyle = apemanReactContainer.ApContainerStyle;

	// --------------------------
	// apeman-react-devtool
	// --------------------------

	exports.ApDevtool = apemanReactDevtool.ApDevtool;
	exports.ApDevtoolStyle = apemanReactDevtool.ApDevtoolStyle;

	// --------------------------
	// apeman-react-dialog
	// --------------------------

	exports.ApDialogBody = apemanReactDialog.ApDialogBody;
	exports.ApDialogHeader = apemanReactDialog.ApDialogHeader;
	exports.ApDialogStyle = apemanReactDialog.ApDialogStyle;
	exports.ApDialog = apemanReactDialog.ApDialog;
	exports.ApYesnoDialogStyle = apemanReactDialog.ApYesnoDialogStyle;
	exports.ApYesnoDialog = apemanReactDialog.ApYesnoDialog;
	exports.ApConfirmDialogStyle = apemanReactDialog.ApConfirmDialogStyle;
	exports.ApConfirmDialog = apemanReactDialog.ApConfirmDialog;

	// --------------------------
	// apeman-react-done
	// --------------------------

	exports.ApDone = apemanReactDone.ApDone;
	exports.ApDoneStyle = apemanReactDone.ApDoneStyle;

	// --------------------------
	// apeman-react-draggable
	// --------------------------

	exports.ApDraggable = apemanReactDraggable.ApDraggable;
	exports.ApDraggableStyle = apemanReactDraggable.ApDraggableStyle;

	// --------------------------
	// apeman-react-dropdown
	// --------------------------

	exports.ApDropdown = apemanReactDropdown.ApDropdown;
	exports.ApDropdownItem = apemanReactDropdown.ApDropdownItem;
	exports.ApDropdownStyle = apemanReactDropdown.ApDropdownStyle;

	// --------------------------
	// apeman-react-field
	// --------------------------

	exports.ApFieldLabel = apemanReactField.ApFieldLabel;
	exports.ApFieldLegend = apemanReactField.ApFieldLegend;
	exports.ApFieldSet = apemanReactField.ApFieldSet;
	exports.ApFieldStyle = apemanReactField.ApFieldStyle;
	exports.ApFieldValue = apemanReactField.ApFieldValue;
	exports.ApField = apemanReactField.ApField;

	// --------------------------
	// apeman-react-footer
	// --------------------------

	exports.ApFooter = apemanReactFooter.ApFooter;
	exports.ApFooterStyle = apemanReactFooter.ApFooterStyle;

	// --------------------------
	// apeman-react-form
	// --------------------------

	exports.ApFormStyle = apemanReactForm.ApFormStyle;
	exports.ApForm = apemanReactForm.ApForm;

	// --------------------------
	// apeman-react-frame
	// --------------------------

	exports.ApFrame = apemanReactFrame.ApFrame;
	exports.ApFrameStyle = apemanReactFrame.ApFrameStyle;

	// --------------------------
	// apeman-react-grid
	// --------------------------

	exports.ApGrid = apemanReactGrid.ApGrid;
	exports.ApGridItem = apemanReactGrid.ApGridItem;
	exports.ApGridStyle = apemanReactGrid.ApGridStyle;

	// --------------------------
	// apeman-react-head
	// --------------------------

	exports.ApHead = apemanReactHead.ApHead;

	// --------------------------
	// apeman-react-header
	// --------------------------

	exports.ApHeader = apemanReactHeader.ApHeader;
	exports.ApHeaderLogo = apemanReactHeader.ApHeaderLogo;
	exports.ApHeaderDropdown = apemanReactHeader.ApHeaderDropdown;
	exports.ApHeaderDropdownItem = apemanReactHeader.ApHeaderDropdownItem;
	exports.ApHeaderStyle = apemanReactHeader.ApHeaderStyle;
	exports.ApHeaderTab = apemanReactHeader.ApHeaderTab;
	exports.ApHeaderTabItem = apemanReactHeader.ApHeaderTabItem;
	exports.ApHeaderMenu = apemanReactHeader.ApHeaderMenu;
	exports.ApHeaderMenuItem = apemanReactHeader.ApHeaderMenuItem;

	// --------------------------
	// apeman-react-html
	// --------------------------

	exports.ApHtml = apemanReactHtml.ApHtml;

	// --------------------------
	// apeman-react-icon
	// --------------------------

	exports.ApIcon = apemanReactIcon.ApIcon;
	exports.ApIconStyle = apemanReactIcon.ApIconStyle;
	exports.ApFaIcon = apemanReactIcon.ApFaIcon;
	exports.ApIonIcon = apemanReactIcon.ApIonIcon;

	// --------------------------
	// apeman-react-image
	// --------------------------

	exports.ApImage = apemanReactImage.ApImage;
	exports.ApImageStyle = apemanReactImage.ApImageStyle;

	// --------------------------
	// apeman-react-info
	// --------------------------

	exports.ApInfoBody = apemanReactInfo.ApInfoBody;
	exports.ApInfoCollapsibleItem = apemanReactInfo.ApInfoCollapsibleItem;
	exports.ApInfoDisclosableItem = apemanReactInfo.ApInfoDisclosableItem;
	exports.ApInfoHeader = apemanReactInfo.ApInfoHeader;
	exports.ApInfoItem = apemanReactInfo.ApInfoItem;
	exports.ApInfoStyle = apemanReactInfo.ApInfoStyle;
	exports.ApInfo = apemanReactInfo.ApInfo;

	// --------------------------
	// apeman-react-jumbotron
	// --------------------------

	exports.ApJumbotron = apemanReactJumbotron.ApJumbotron;
	exports.ApJumbotronText = apemanReactJumbotron.ApJumbotronText;
	exports.ApJumbotronTitle = apemanReactJumbotron.ApJumbotronTitle;
	exports.ApJumbotronStyle = apemanReactJumbotron.ApJumbotronStyle;

	// --------------------------
	// apeman-react-label
	// --------------------------

	exports.ApLabel = apemanReactLabel.ApLabel;
	exports.ApLabelStyle = apemanReactLabel.ApLabelStyle;

	// --------------------------
	// apeman-react-links
	// --------------------------

	exports.ApLinks = apemanReactLinks.ApLinks;
	exports.ApLinksStyle = apemanReactLinks.ApLinksStyle;

	// --------------------------
	// apeman-react-list
	// --------------------------

	exports.ApList = apemanReactList.ApList;
	exports.ApListHeader = apemanReactList.ApListHeader;
	exports.ApListBody = apemanReactList.ApListBody;
	exports.ApListBar = apemanReactList.ApListBar;
	exports.ApListBarMessage = apemanReactList.ApListBarMessage;
	exports.ApListFooter = apemanReactList.ApListFooter;
	exports.ApListMoreButton = apemanReactList.ApListMoreButton;
	exports.ApListItem = apemanReactList.ApListItem;
	exports.ApListItemIcon = apemanReactList.ApListItemIcon;
	exports.ApListItemArrowIcon = apemanReactList.ApListItemArrowIcon;
	exports.ApListItemText = apemanReactList.ApListItemText;
	exports.ApListStyle = apemanReactList.ApListStyle;

	// --------------------------
	// apeman-react-main
	// --------------------------

	exports.ApMain = apemanReactMain.ApMain;
	exports.ApMainStyle = apemanReactMain.ApMainStyle;

	// --------------------------
	// apeman-react-menu
	// --------------------------

	exports.ApMenuItem = apemanReactMenu.ApMenuItem;
	exports.ApMenuStyle = apemanReactMenu.ApMenuStyle;
	exports.ApMenu = apemanReactMenu.ApMenu;

	// --------------------------
	// apeman-react-modal
	// --------------------------

	exports.ApModal = apemanReactModal.ApModal;
	exports.ApModalStyle = apemanReactModal.ApModalStyle;

	// --------------------------
	// apeman-react-note
	// --------------------------

	exports.ApNote = apemanReactNote.ApNote;
	exports.ApNoteStyle = apemanReactNote.ApNoteStyle;

	// --------------------------
	// apeman-react-notice
	// --------------------------

	exports.ApNotice = apemanReactNotice.ApNotice;
	exports.ApNoticeItem = apemanReactNotice.ApNoticeItem;
	exports.ApNoticeStyle = apemanReactNotice.ApNoticeStyle;

	// --------------------------
	// apeman-react-page
	// --------------------------

	exports.ApPageContainer = apemanReactPage.ApPageContainer;
	exports.ApPageStyle = apemanReactPage.ApPageStyle;
	exports.ApPage = apemanReactPage.ApPage;

	// --------------------------
	// apeman-react-pager
	// --------------------------

	exports.ApPager = apemanReactPager.ApPager;
	exports.ApPagerStyle = apemanReactPager.ApPagerStyle;
	exports.ApPagerItem = apemanReactPager.ApPagerItem;

	// --------------------------
	// apeman-react-password
	// --------------------------

	exports.ApPassword = apemanReactPassword.ApPassword;
	exports.ApPasswordStyle = apemanReactPassword.ApPasswordStyle;

	// --------------------------
	// apeman-react-radio
	// --------------------------

	exports.ApRadio = apemanReactRadio.ApRadio;
	exports.ApRadioGroup = apemanReactRadio.ApRadioGroup;
	exports.ApRadioStyle = apemanReactRadio.ApRadioStyle;

	// --------------------------
	// apeman-react-range
	// --------------------------

	exports.ApRange = apemanReactRange.ApRange;
	exports.ApRangeStyle = apemanReactRange.ApRangeStyle;

	// --------------------------
	// apeman-react-scroll
	// --------------------------

	exports.ApScroll = apemanReactScroll.ApScroll;
	exports.ApScrollStyle = apemanReactScroll.ApScrollStyle;

	// --------------------------
	// apeman-react-search
	// --------------------------

	exports.ApSearch = apemanReactSearch.ApSearch;
	exports.ApSearchStyle = apemanReactSearch.ApSearchStyle;

	// --------------------------
	// apeman-react-section
	// --------------------------

	exports.ApSection = apemanReactSection.ApSection;
	exports.ApSectionHeader = apemanReactSection.ApSectionHeader;
	exports.ApSectionHeaderButton = apemanReactSection.ApSectionHeaderButton;
	exports.ApSectionBody = apemanReactSection.ApSectionBody;
	exports.ApSectionStyle = apemanReactSection.ApSectionStyle;

	// --------------------------
	// apeman-react-select
	// --------------------------

	exports.ApSelect = apemanReactSelect.ApSelect;
	exports.ApSelectStyle = apemanReactSelect.ApSelectStyle;

	// --------------------------
	// apeman-react-slider
	// --------------------------

	exports.ApSlider = apemanReactSlider.ApSlider;
	exports.ApSliderStyle = apemanReactSlider.ApSliderStyle;

	// --------------------------
	// apeman-react-spinner
	// --------------------------

	exports.ApSpinner = apemanReactSpinner.ApSpinner;
	exports.ApSpinnerStyle = apemanReactSpinner.ApSpinnerStyle;

	// --------------------------
	// apeman-react-style
	// --------------------------

	exports.ApStyle = apemanReactStyle.ApStyle;

	// --------------------------
	// apeman-react-switch
	// --------------------------

	exports.ApSwitch = apemanReactSwitch.ApSwitch;
	exports.ApSwitchStyle = apemanReactSwitch.ApSwitchStyle;

	// --------------------------
	// apeman-react-tab
	// --------------------------

	exports.ApTab = apemanReactTab.ApTab;
	exports.ApTabContent = apemanReactTab.ApTabContent;
	exports.ApTabGroup = apemanReactTab.ApTabGroup;
	exports.ApTabItem = apemanReactTab.ApTabItem;
	exports.ApTabStyle = apemanReactTab.ApTabStyle;

	// --------------------------
	// apeman-react-table
	// --------------------------

	exports.ApTableBody = apemanReactTable.ApTableBody;
	exports.ApTableData = apemanReactTable.ApTableData;
	exports.ApTableFoot = apemanReactTable.ApTableFoot;
	exports.ApTableHead = apemanReactTable.ApTableHead;
	exports.ApTableHeader = apemanReactTable.ApTableHeader;
	exports.ApTableRow = apemanReactTable.ApTableRow;
	exports.ApTableStyle = apemanReactTable.ApTableStyle;
	exports.ApTable = apemanReactTable.ApTable;

	// --------------------------
	// apeman-react-tag
	// --------------------------

	exports.ApTag = apemanReactTag.ApTag;
	exports.ApTagStyle = apemanReactTag.ApTagStyle;

	// --------------------------
	// apeman-react-text
	// --------------------------

	exports.ApText = apemanReactText.ApText;
	exports.ApTextStyle = apemanReactText.ApTextStyle;

	// --------------------------
	// apeman-react-toast
	// --------------------------

	exports.ApErrorToast = apemanReactToast.ApErrorToast;
	exports.ApInfoToast = apemanReactToast.ApInfoToast;
	exports.ApToastGroup = apemanReactToast.ApToastGroup;
	exports.ApToastStyle = apemanReactToast.ApToastStyle;
	exports.ApToast = apemanReactToast.ApToast;
	exports.ApWarnToast = apemanReactToast.ApWarnToast;

	// --------------------------
	// apeman-react-toggle
	// --------------------------

	exports.ApToggle = apemanReactToggle.ApToggle;
	exports.ApToggleStyle = apemanReactToggle.ApToggleStyle;

	// --------------------------
	// apeman-react-touchable
	// --------------------------

	exports.ApTouchable = apemanReactTouchable.ApTouchable;
	exports.ApTouchableStyle = apemanReactTouchable.ApTouchableStyle;

	// --------------------------
	// apeman-react-upload
	// --------------------------

	exports.ApUpload = apemanReactUpload.ApUpload;
	exports.ApUploadStyle = apemanReactUpload.ApUploadStyle;

	// --------------------------
	// apeman-react-view
	// --------------------------

	exports.ApView = apemanReactView.ApView;
	exports.ApViewHeader = apemanReactView.ApViewHeader;
	exports.ApViewHeaderButton = apemanReactView.ApViewHeaderButton;
	exports.ApViewHeaderTitle = apemanReactView.ApViewHeaderTitle;
	exports.ApViewBody = apemanReactView.ApViewBody;
	exports.ApViewFooter = apemanReactView.ApViewFooter;
	exports.ApViewStack = apemanReactView.ApViewStack;
	exports.ApViewStackStyle = apemanReactView.ApViewStackStyle;
	exports.ApViewStyle = apemanReactView.ApViewStyle;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Button component.
	 * @class ApButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactSpinner = __webpack_require__(29);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	/** @lends ApButton */
	var ApButton = _react2.default.createClass({
	  displayName: 'ApButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Disable button tap */
	    disabled: _react.PropTypes.bool,
	    /** Render with primary style */
	    primary: _react.PropTypes.bool,
	    /** Render with danger style */
	    danger: _react.PropTypes.bool,
	    /** Render with wide style */
	    wide: _react.PropTypes.bool,
	    /** Anchor href */
	    href: _react.PropTypes.string,
	    /** Document id */
	    id: _react.PropTypes.string,
	    /** Hide button */
	    hidden: _react.PropTypes.bool,
	    /** Render with simple style */
	    simple: _react.PropTypes.bool,
	    /** Data for touch events */
	    data: _react.PropTypes.any,
	    /** Show spinner */
	    spinning: _react.PropTypes.bool,
	    /** Theme of spinner */
	    spinner: _react.PropTypes.string
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      disabled: false,
	      primary: false,
	      danger: false,
	      wide: false,
	      href: null,
	      id: null,
	      hidden: false,
	      simple: false,
	      data: null,
	      spinning: false,
	      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-button', props.className, {
	      'ap-button-primary': props.primary,
	      'ap-button-danger': props.danger,
	      'ap-button-wide': props.wide,
	      'ap-button-disabled': props.disabled,
	      'ap-button-simple': props.simple,
	      'ap-button-spinning': props.spinning,
	      'ap-button-hidden': props.hidden
	    });
	    var aProps = (0, _asobj.clone)(props, {
	      without: ['text', 'hasTouch'].concat(_toConsumableArray(Object.keys(ApButton.propTypes)))
	    });
	    return _react2.default.createElement('a', _extends({}, aProps, {
	      className: className,
	      href: props.href,
	      id: props.id,
	      style: Object.assign({}, props.style)
	    }), props.children, props.spinning ? s._renderSpinner() : null);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  },

	  // --------------------
	  // Private
	  // --------------------

	  _renderSpinner: function _renderSpinner() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactSpinner.ApSpinner, { enabled: true,
	      theme: props.spinner,
	      className: 'ap-button-spinner'
	    });
	  }
	});

	exports.default = ApButton; // Dummy export for doc generator

	exports.default = (0, _apemanReactTouchable.withTouch)(ApButton, {
	  getTouchData: function getTouchData() {
	    var s = this;
	    var props = s.props;

	    return props.data;
	  }
	});

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(14)('unscopables'),
	    ArrayProto = Array.prototype;
	if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(31)(ArrayProto, UNSCOPABLES, {});
	module.exports = function (key) {
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ctx = __webpack_require__(53),
	    call = __webpack_require__(272),
	    isArrayIter = __webpack_require__(160),
	    anObject = __webpack_require__(6),
	    toLength = __webpack_require__(22),
	    getIterFn = __webpack_require__(177),
	    BREAK = {},
	    RETURN = {};
	var _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
	  var iterFn = ITERATOR ? function () {
	    return iterable;
	  } : getIterFn(iterable),
	      f = ctx(fn, that, entries ? 2 : 1),
	      index = 0,
	      length,
	      step,
	      iterator,
	      result;
	  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if (result === BREAK || result === RETURN) return result;
	  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
	    result = call(iterator, f, step.value, entries);
	    if (result === BREAK || result === RETURN) return result;
	  }
	};
	_exports.BREAK = BREAK;
	_exports.RETURN = RETURN;

/***/ },
/* 87 */
/***/ function(module, exports) {

	"use strict";

	module.exports = {};

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var def = __webpack_require__(19).f,
	    has = __webpack_require__(25),
	    TAG = __webpack_require__(14)('toStringTag');

	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    defined = __webpack_require__(41),
	    fails = __webpack_require__(12),
	    spaces = __webpack_require__(173),
	    space = '[' + spaces + ']',
	    non = '​',
	    ltrim = RegExp('^' + space + space + '*'),
	    rtrim = RegExp(space + space + '*$');

	var exporter = function exporter(KEY, exec, ALIAS) {
	  var exp = {};
	  var FORCE = fails(function () {
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if (ALIAS) exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};

	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function (string, TYPE) {
	  string = String(defined(string));
	  if (TYPE & 1) string = string.replace(ltrim, '');
	  if (TYPE & 2) string = string.replace(rtrim, '');
	  return string;
	};

	module.exports = exporter;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Browser react utility
	 * @module breact
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get autobind() {
	    return d(__webpack_require__(851));
	  },
	  get create() {
	    return d(__webpack_require__(290));
	  },
	  get markup() {
	    return d(__webpack_require__(852));
	  },
	  get mount() {
	    return d(__webpack_require__(853));
	  },
	  get once() {
	    return d(__webpack_require__(854));
	  },
	  get wrap() {
	    return d(__webpack_require__(855));
	  }
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Module dependencies.
	 */

	var keys = __webpack_require__(878);
	var hasBinary = __webpack_require__(879);
	var sliceBuffer = __webpack_require__(649);
	var base64encoder = __webpack_require__(849);
	var after = __webpack_require__(371);
	var utf8 = __webpack_require__(1081);

	/**
	 * Check if we are running an android browser. That requires us to use
	 * ArrayBuffer with polling transports...
	 *
	 * http://ghinda.net/jpeg-blob-ajax-android/
	 */

	var isAndroid = navigator.userAgent.match(/Android/i);

	/**
	 * Check if we are running in PhantomJS.
	 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
	 * https://github.com/ariya/phantomjs/issues/11395
	 * @type boolean
	 */
	var isPhantomJS = /PhantomJS/i.test(navigator.userAgent);

	/**
	 * When true, avoids using Blobs to encode payloads.
	 * @type boolean
	 */
	var dontSendBlobs = isAndroid || isPhantomJS;

	/**
	 * Current protocol version.
	 */

	exports.protocol = 3;

	/**
	 * Packet types.
	 */

	var packets = exports.packets = {
	  open: 0 // non-ws
	  , close: 1 // non-ws
	  , ping: 2,
	  pong: 3,
	  message: 4,
	  upgrade: 5,
	  noop: 6
	};

	var packetslist = keys(packets);

	/**
	 * Premade error packet.
	 */

	var err = { type: 'error', data: 'parser error' };

	/**
	 * Create a blob api even for blob builder when vendor prefixes exist
	 */

	var Blob = __webpack_require__(850);

	/**
	 * Encodes a packet.
	 *
	 *     <packet type id> [ <data> ]
	 *
	 * Example:
	 *
	 *     5hello world
	 *     3
	 *     4
	 *
	 * Binary is encoded in an identical principle
	 *
	 * @api private
	 */

	exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
	  if ('function' == typeof supportsBinary) {
	    callback = supportsBinary;
	    supportsBinary = false;
	  }

	  if ('function' == typeof utf8encode) {
	    callback = utf8encode;
	    utf8encode = null;
	  }

	  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;

	  if (global.ArrayBuffer && data instanceof ArrayBuffer) {
	    return encodeArrayBuffer(packet, supportsBinary, callback);
	  } else if (Blob && data instanceof global.Blob) {
	    return encodeBlob(packet, supportsBinary, callback);
	  }

	  // might be an object with { base64: true, data: dataAsBase64String }
	  if (data && data.base64) {
	    return encodeBase64Object(packet, callback);
	  }

	  // Sending data as a utf-8 string
	  var encoded = packets[packet.type];

	  // data fragment is optional
	  if (undefined !== packet.data) {
	    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);
	  }

	  return callback('' + encoded);
	};

	function encodeBase64Object(packet, callback) {
	  // packet data is an object { base64: true, data: dataAsBase64String }
	  var message = 'b' + exports.packets[packet.type] + packet.data.data;
	  return callback(message);
	}

	/**
	 * Encode packet helpers for binary types
	 */

	function encodeArrayBuffer(packet, supportsBinary, callback) {
	  if (!supportsBinary) {
	    return exports.encodeBase64Packet(packet, callback);
	  }

	  var data = packet.data;
	  var contentArray = new Uint8Array(data);
	  var resultBuffer = new Uint8Array(1 + data.byteLength);

	  resultBuffer[0] = packets[packet.type];
	  for (var i = 0; i < contentArray.length; i++) {
	    resultBuffer[i + 1] = contentArray[i];
	  }

	  return callback(resultBuffer.buffer);
	}

	function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
	  if (!supportsBinary) {
	    return exports.encodeBase64Packet(packet, callback);
	  }

	  var fr = new FileReader();
	  fr.onload = function () {
	    packet.data = fr.result;
	    exports.encodePacket(packet, supportsBinary, true, callback);
	  };
	  return fr.readAsArrayBuffer(packet.data);
	}

	function encodeBlob(packet, supportsBinary, callback) {
	  if (!supportsBinary) {
	    return exports.encodeBase64Packet(packet, callback);
	  }

	  if (dontSendBlobs) {
	    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
	  }

	  var length = new Uint8Array(1);
	  length[0] = packets[packet.type];
	  var blob = new Blob([length.buffer, packet.data]);

	  return callback(blob);
	}

	/**
	 * Encodes a packet with binary data in a base64 string
	 *
	 * @param {Object} packet, has `type` and `data`
	 * @return {String} base64 encoded message
	 */

	exports.encodeBase64Packet = function (packet, callback) {
	  var message = 'b' + exports.packets[packet.type];
	  if (Blob && packet.data instanceof global.Blob) {
	    var fr = new FileReader();
	    fr.onload = function () {
	      var b64 = fr.result.split(',')[1];
	      callback(message + b64);
	    };
	    return fr.readAsDataURL(packet.data);
	  }

	  var b64data;
	  try {
	    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
	  } catch (e) {
	    // iPhone Safari doesn't let you apply with typed arrays
	    var typed = new Uint8Array(packet.data);
	    var basic = new Array(typed.length);
	    for (var i = 0; i < typed.length; i++) {
	      basic[i] = typed[i];
	    }
	    b64data = String.fromCharCode.apply(null, basic);
	  }
	  message += global.btoa(b64data);
	  return callback(message);
	};

	/**
	 * Decodes a packet. Changes format to Blob if requested.
	 *
	 * @return {Object} with `type` and `data` (if any)
	 * @api private
	 */

	exports.decodePacket = function (data, binaryType, utf8decode) {
	  // String data
	  if (typeof data == 'string' || data === undefined) {
	    if (data.charAt(0) == 'b') {
	      return exports.decodeBase64Packet(data.substr(1), binaryType);
	    }

	    if (utf8decode) {
	      try {
	        data = utf8.decode(data);
	      } catch (e) {
	        return err;
	      }
	    }
	    var type = data.charAt(0);

	    if (Number(type) != type || !packetslist[type]) {
	      return err;
	    }

	    if (data.length > 1) {
	      return { type: packetslist[type], data: data.substring(1) };
	    } else {
	      return { type: packetslist[type] };
	    }
	  }

	  var asArray = new Uint8Array(data);
	  var type = asArray[0];
	  var rest = sliceBuffer(data, 1);
	  if (Blob && binaryType === 'blob') {
	    rest = new Blob([rest]);
	  }
	  return { type: packetslist[type], data: rest };
	};

	/**
	 * Decodes a packet encoded in a base64 string
	 *
	 * @param {String} base64 encoded message
	 * @return {Object} with `type` and `data` (if any)
	 */

	exports.decodeBase64Packet = function (msg, binaryType) {
	  var type = packetslist[msg.charAt(0)];
	  if (!global.ArrayBuffer) {
	    return { type: type, data: { base64: true, data: msg.substr(1) } };
	  }

	  var data = base64encoder.decode(msg.substr(1));

	  if (binaryType === 'blob' && Blob) {
	    data = new Blob([data]);
	  }

	  return { type: type, data: data };
	};

	/**
	 * Encodes multiple messages (payload).
	 *
	 *     <length>:data
	 *
	 * Example:
	 *
	 *     11:hello world2:hi
	 *
	 * If any contents are binary, they will be encoded as base64 strings. Base64
	 * encoded strings are marked with a b before the length specifier
	 *
	 * @param {Array} packets
	 * @api private
	 */

	exports.encodePayload = function (packets, supportsBinary, callback) {
	  if (typeof supportsBinary == 'function') {
	    callback = supportsBinary;
	    supportsBinary = null;
	  }

	  var isBinary = hasBinary(packets);

	  if (supportsBinary && isBinary) {
	    if (Blob && !dontSendBlobs) {
	      return exports.encodePayloadAsBlob(packets, callback);
	    }

	    return exports.encodePayloadAsArrayBuffer(packets, callback);
	  }

	  if (!packets.length) {
	    return callback('0:');
	  }

	  function setLengthHeader(message) {
	    return message.length + ':' + message;
	  }

	  function encodeOne(packet, doneCallback) {
	    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function (message) {
	      doneCallback(null, setLengthHeader(message));
	    });
	  }

	  map(packets, encodeOne, function (err, results) {
	    return callback(results.join(''));
	  });
	};

	/**
	 * Async array map using after
	 */

	function map(ary, each, done) {
	  var result = new Array(ary.length);
	  var next = after(ary.length, done);

	  var eachWithIndex = function eachWithIndex(i, el, cb) {
	    each(el, function (error, msg) {
	      result[i] = msg;
	      cb(error, result);
	    });
	  };

	  for (var i = 0; i < ary.length; i++) {
	    eachWithIndex(i, ary[i], next);
	  }
	}

	/*
	 * Decodes data when a payload is maybe expected. Possible binary contents are
	 * decoded from their base64 representation
	 *
	 * @param {String} data, callback method
	 * @api public
	 */

	exports.decodePayload = function (data, binaryType, callback) {
	  if (typeof data != 'string') {
	    return exports.decodePayloadAsBinary(data, binaryType, callback);
	  }

	  if (typeof binaryType === 'function') {
	    callback = binaryType;
	    binaryType = null;
	  }

	  var packet;
	  if (data == '') {
	    // parser error - ignoring payload
	    return callback(err, 0, 1);
	  }

	  var length = '',
	      n,
	      msg;

	  for (var i = 0, l = data.length; i < l; i++) {
	    var chr = data.charAt(i);

	    if (':' != chr) {
	      length += chr;
	    } else {
	      if ('' == length || length != (n = Number(length))) {
	        // parser error - ignoring payload
	        return callback(err, 0, 1);
	      }

	      msg = data.substr(i + 1, n);

	      if (length != msg.length) {
	        // parser error - ignoring payload
	        return callback(err, 0, 1);
	      }

	      if (msg.length) {
	        packet = exports.decodePacket(msg, binaryType, true);

	        if (err.type == packet.type && err.data == packet.data) {
	          // parser error in individual packet - ignoring payload
	          return callback(err, 0, 1);
	        }

	        var ret = callback(packet, i + n, l);
	        if (false === ret) return;
	      }

	      // advance cursor
	      i += n;
	      length = '';
	    }
	  }

	  if (length != '') {
	    // parser error - ignoring payload
	    return callback(err, 0, 1);
	  }
	};

	/**
	 * Encodes multiple messages (payload) as binary.
	 *
	 * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
	 * 255><data>
	 *
	 * Example:
	 * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
	 *
	 * @param {Array} packets
	 * @return {ArrayBuffer} encoded payload
	 * @api private
	 */

	exports.encodePayloadAsArrayBuffer = function (packets, callback) {
	  if (!packets.length) {
	    return callback(new ArrayBuffer(0));
	  }

	  function encodeOne(packet, doneCallback) {
	    exports.encodePacket(packet, true, true, function (data) {
	      return doneCallback(null, data);
	    });
	  }

	  map(packets, encodeOne, function (err, encodedPackets) {
	    var totalLength = encodedPackets.reduce(function (acc, p) {
	      var len;
	      if (typeof p === 'string') {
	        len = p.length;
	      } else {
	        len = p.byteLength;
	      }
	      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
	    }, 0);

	    var resultArray = new Uint8Array(totalLength);

	    var bufferIndex = 0;
	    encodedPackets.forEach(function (p) {
	      var isString = typeof p === 'string';
	      var ab = p;
	      if (isString) {
	        var view = new Uint8Array(p.length);
	        for (var i = 0; i < p.length; i++) {
	          view[i] = p.charCodeAt(i);
	        }
	        ab = view.buffer;
	      }

	      if (isString) {
	        // not true binary
	        resultArray[bufferIndex++] = 0;
	      } else {
	        // true binary
	        resultArray[bufferIndex++] = 1;
	      }

	      var lenStr = ab.byteLength.toString();
	      for (var i = 0; i < lenStr.length; i++) {
	        resultArray[bufferIndex++] = parseInt(lenStr[i]);
	      }
	      resultArray[bufferIndex++] = 255;

	      var view = new Uint8Array(ab);
	      for (var i = 0; i < view.length; i++) {
	        resultArray[bufferIndex++] = view[i];
	      }
	    });

	    return callback(resultArray.buffer);
	  });
	};

	/**
	 * Encode as Blob
	 */

	exports.encodePayloadAsBlob = function (packets, callback) {
	  function encodeOne(packet, doneCallback) {
	    exports.encodePacket(packet, true, true, function (encoded) {
	      var binaryIdentifier = new Uint8Array(1);
	      binaryIdentifier[0] = 1;
	      if (typeof encoded === 'string') {
	        var view = new Uint8Array(encoded.length);
	        for (var i = 0; i < encoded.length; i++) {
	          view[i] = encoded.charCodeAt(i);
	        }
	        encoded = view.buffer;
	        binaryIdentifier[0] = 0;
	      }

	      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;

	      var lenStr = len.toString();
	      var lengthAry = new Uint8Array(lenStr.length + 1);
	      for (var i = 0; i < lenStr.length; i++) {
	        lengthAry[i] = parseInt(lenStr[i]);
	      }
	      lengthAry[lenStr.length] = 255;

	      if (Blob) {
	        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
	        doneCallback(null, blob);
	      }
	    });
	  }

	  map(packets, encodeOne, function (err, results) {
	    return callback(new Blob(results));
	  });
	};

	/*
	 * Decodes data when a payload is maybe expected. Strings are decoded by
	 * interpreting each byte as a key code for entries marked to start with 0. See
	 * description of encodePayloadAsBinary
	 *
	 * @param {ArrayBuffer} data, callback method
	 * @api public
	 */

	exports.decodePayloadAsBinary = function (data, binaryType, callback) {
	  if (typeof binaryType === 'function') {
	    callback = binaryType;
	    binaryType = null;
	  }

	  var bufferTail = data;
	  var buffers = [];

	  var numberTooLong = false;
	  while (bufferTail.byteLength > 0) {
	    var tailArray = new Uint8Array(bufferTail);
	    var isString = tailArray[0] === 0;
	    var msgLength = '';

	    for (var i = 1;; i++) {
	      if (tailArray[i] == 255) break;

	      if (msgLength.length > 310) {
	        numberTooLong = true;
	        break;
	      }

	      msgLength += tailArray[i];
	    }

	    if (numberTooLong) return callback(err, 0, 1);

	    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
	    msgLength = parseInt(msgLength);

	    var msg = sliceBuffer(bufferTail, 0, msgLength);
	    if (isString) {
	      try {
	        msg = String.fromCharCode.apply(null, new Uint8Array(msg));
	      } catch (e) {
	        // iPhone Safari doesn't let you apply to typed arrays
	        var typed = new Uint8Array(msg);
	        msg = '';
	        for (var i = 0; i < typed.length; i++) {
	          msg += String.fromCharCode(typed[i]);
	        }
	      }
	    }

	    buffers.push(msg);
	    bufferTail = sliceBuffer(bufferTail, msgLength);
	  }

	  var total = buffers.length;
	  buffers.forEach(function (buffer, i) {
	    callback(exports.decodePacket(buffer, binaryType, true), i, total);
	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.connect = exports.Provider = undefined;

	var _Provider = __webpack_require__(934);

	var _Provider2 = _interopRequireDefault(_Provider);

	var _connect = __webpack_require__(935);

	var _connect2 = _interopRequireDefault(_connect);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}

	exports.Provider = _Provider2["default"];
	exports.connect = _connect2["default"];

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(190);
	var setInnerHTML = __webpack_require__(140);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(205);
	var setTextContent = __webpack_require__(344);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function injectDOMPropertyConfig(domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function isCustomAttribute(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Constants variables for socket
	 * @module sg-socket-constants
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get AcknowledgeStatus() {
	    return d(__webpack_require__(1037));
	  },
	  get AuthEvents() {
	    return d(__webpack_require__(1038));
	  },
	  get GreetingEvents() {
	    return d(__webpack_require__(1039));
	  },
	  get LockingEvents() {
	    return d(__webpack_require__(1040));
	  },
	  get ObservingEvents() {
	    return d(__webpack_require__(1041));
	  },
	  get PubsubEvents() {
	    return d(__webpack_require__(1042));
	  },
	  get RemoteEvents() {
	    return d(__webpack_require__(1043));
	  },
	  get ReservedEvents() {
	    return d(__webpack_require__(1044));
	  }
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string cases between camel case, pascal case, snake case etc...
	 * @module stringcase
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get camelcase() {
	    return d(__webpack_require__(359));
	  },
	  get capitalcase() {
	    return d(__webpack_require__(142));
	  },
	  get constcase() {
	    return d(__webpack_require__(1051));
	  },
	  get decapitalcase() {
	    return d(__webpack_require__(1052));
	  },
	  get enumcase() {
	    return d(__webpack_require__(1053));
	  },
	  get lowercase() {
	    return d(__webpack_require__(98));
	  },
	  get pascalcase() {
	    return d(__webpack_require__(1054));
	  },
	  get pathcase() {
	    return d(__webpack_require__(1055));
	  },
	  get sentencecase() {
	    return d(__webpack_require__(1056));
	  },
	  get snakecase() {
	    return d(__webpack_require__(67));
	  },
	  get spacecase() {
	    return d(__webpack_require__(1057));
	  },
	  get spinalcase() {
	    return d(__webpack_require__(1058));
	  },
	  get titlecase() {
	    return d(__webpack_require__(1059));
	  },
	  get trimcase() {
	    return d(__webpack_require__(217));
	  },
	  get uppercase() {
	    return d(__webpack_require__(110));
	  }
	};

/***/ },
/* 98 */
/***/ function(module, exports) {

	/**
	 * Convert string into lower case.
	 * @memberof module:stringcase/lib
	 * @function lowercase
	 * @param {string} str - String to convert.
	 * @returns {string} Lowercase case string.
	 */

	'use strict';

	/** @lends lowercase */

	function lowercase(str) {
	  str = String(str);
	  if (!str) {
	    return str;
	  }
	  return str.toLowerCase();
	}

	/**
	 * Checks whether the string are lowercase.
	 * @memberof module:stringcase/lib
	 * @function lowercase.isLowercase
	 * @param {string} str - String to check
	 * @returns {boolean} - True if the string are lowercase.
	 */
	lowercase.isLowercase = function (str) {
	  return str && !/[A-Z]+/.test(str);
	};

	module.exports = lowercase;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for password component.
	 * @module apeman-react-password
	 * @version 4.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApPassword = exports.ApPasswordStyle = undefined;

	var _ap_password_style = __webpack_require__(539);

	var _ap_password_style2 = _interopRequireDefault(_ap_password_style);

	var _ap_password = __webpack_require__(538);

	var _ap_password2 = _interopRequireDefault(_ap_password);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApPasswordStyle = _ap_password_style2.default;
	exports.ApPassword = _ap_password2.default;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Toast component
	 * @class ApToast
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _arrayfilter = __webpack_require__(652);

	var _arrayfilter2 = _interopRequireDefault(_arrayfilter);

	var _ap_toast_item = __webpack_require__(250);

	var _ap_toast_item2 = _interopRequireDefault(_ap_toast_item);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApToast */
	var ApToast = _react2.default.createClass({
	  displayName: 'ApToast',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    message: _react.PropTypes.string,
	    duration: _react.PropTypes.number,
	    icon: _react.PropTypes.string,
	    name: _react.PropTypes.string,
	    onDismiss: _react.PropTypes.func
	  },

	  mixins: [],

	  statics: {
	    itemJoiner: '____'
	  },

	  getInitialState: function getInitialState() {
	    return {
	      items: ''
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      message: null,
	      duration: 2000,
	      icon: null,
	      name: null,
	      onDismiss: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var valid = state.items.length;
	    if (!valid) {
	      return null;
	    }
	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-toast', props.className, {}),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('div', { className: 'ap-toast-inner' }, s._renderToastItem()));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var props = s.props;

	    s.startTicking();
	    s.pushToastItem(props.message);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    s.pushToastItem(nextProps.message);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    s.stopTicking();
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  startTicking: function startTicking() {
	    var s = this;
	    clearTimeout(s._tickTimer);
	    s._ticking = true;
	    s.doTick();
	  },
	  stopTicking: function stopTicking() {
	    var s = this;
	    clearTimeout(s._tickTimer);
	    s._ticking = false;
	  },
	  doTick: function doTick() {
	    var s = this;
	    var props = s.props;

	    if (!s._ticking) {
	      return;
	    }
	    s._tickTimer = setTimeout(function () {
	      s.shiftToastItem();
	      s.doTick();
	    }, props.duration);
	  },
	  pushToastItem: function pushToastItem(message) {
	    var s = this;
	    if (!message) {
	      return;
	    }
	    var items = (s.state.items || '').split(ApToast.itemJoiner);
	    var duplicate = items[items.length - 1] === message;
	    if (duplicate) {
	      return;
	    }
	    s.setState({
	      items: items.concat(message).join(ApToast.itemJoiner)
	    });
	  },
	  shiftToastItem: function shiftToastItem() {
	    var s = this;
	    var props = s.props;

	    var items = (s.state.items || '').split(ApToast.itemJoiner);
	    if (!items.length) {
	      s.setState({ items: null });
	      return;
	    }
	    s.dismissToastItem(items[0]);
	  },
	  dismissToastItem: function dismissToastItem(message) {
	    var s = this;
	    var props = s.props;

	    var items = (s.state.items || '').split(ApToast.itemJoiner);
	    s.setState({
	      items: items.filter(function (filtering) {
	        return filtering !== message;
	      }).join(ApToast.itemJoiner)
	    });
	    if (props.onDismiss) {
	      props.onDismiss({ dismissed: message, name: props.name });
	    }
	  },
	  handleToastItemTap: function handleToastItemTap(e) {
	    var s = this;
	    var text = e.target.dataset['text'];
	    s.dismissToastItem(text);
	  },

	  // ------------------
	  // Private
	  // ------------------
	  _ticking: false,
	  _tickTimer: null,
	  _renderToastItem: function _renderToastItem() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return (state.items || '').split(ApToast.itemJoiner).filter(_arrayfilter2.default.emptyReject()).map(function (text, i) {
	      return _react2.default.createElement(_ap_toast_item2.default, { key: 'toast-' + text + '-' + i,
	        text: text,
	        icon: props.icon,
	        onTap: s.handleToastItemTap
	      });
	    });
	  }
	});

	exports.default = ApToast;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(40),
	    TAG = __webpack_require__(14)('toStringTag')
	// ES3 wrong here
	,
	    ARG = cof(function () {
	  return arguments;
	}()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function tryGet(it, key) {
	  try {
	    return it[key];
	  } catch (e) {/* empty */}
	};

	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	  // @@toStringTag case
	  : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	  // builtinTag case
	  : ARG ? cof(O)
	  // ES3 arguments fallback
	  : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(40);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 103 */
/***/ function(module, exports) {

	"use strict";

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Browser window accessor
	 * @module bwindow
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get get() {
	    return d(__webpack_require__(293));
	  },
	  get once() {
	    return d(__webpack_require__(859));
	  }
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var EventPluginRegistry = __webpack_require__(191);
	var EventPluginUtils = __webpack_require__(192);
	var ReactErrorUtils = __webpack_require__(198);

	var accumulateInto = __webpack_require__(337);
	var forEachAccumulated = __webpack_require__(339);
	var invariant = __webpack_require__(5);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function putListener(inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : _prodInvariant('94', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function getListener(inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function deleteListener(inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function deleteAllListeners(inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function enqueueEvents(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function processEventQueue(simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function __purge() {
	    listenerBank = {};
	  },

	  __getListenerBank: function __getListenerBank() {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(57);
	var EventPluginHub = __webpack_require__(105);
	var EventPluginUtils = __webpack_require__(192);

	var accumulateInto = __webpack_require__(337);
	var forEachAccumulated = __webpack_require__(339);
	var warning = __webpack_require__(11);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ },
/* 107 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function remove(key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function get(key) {
	    return key._reactInternalInstance;
	  },

	  has: function has(key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function set(key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(58);

	var getEventTarget = __webpack_require__(208);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function view(event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function detail(event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function reinitializeTransaction() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function isInTransaction() {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function perform(method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function initializeAll(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function closeAll(startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Convert string into upper case.
	 * @memberof module:stringcase/lib
	 * @function uppercase
	 * @param {string} str - String to convert.
	 * @returns {string} Upper case string.
	 */

	'use strict';

	/** @lends uppercase */

	function uppercase(str) {
	  str = String(str);
	  if (!str) {
	    return str;
	  }
	  return str.toUpperCase();
	}

	/**
	 * Checks whether the string are uppercase.
	 * @memberof module:stringcase/lib
	 * @function uppercase.isUppercase
	 * @param {string} str - String to check
	 * @returns {boolean} - True if the string are uppercase.
	 */
	uppercase.isUppercase = function (str) {
	  return str && !/[a-z]+/.test(str);
	};

	module.exports = uppercase;

/***/ },
/* 111 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (module) {
		if (!module.webpackPolyfill) {
			module.deprecate = function () {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	};

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for container component.
	 * @module apeman-react-container
	 * @version 3.0.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApContainer = exports.ApContainerStyle = undefined;

	var _ap_container_style = __webpack_require__(417);

	var _ap_container_style2 = _interopRequireDefault(_ap_container_style);

	var _ap_container = __webpack_require__(416);

	var _ap_container2 = _interopRequireDefault(_ap_container);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApContainerStyle = _ap_container_style2.default;
	exports.ApContainer = _ap_container2.default;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for draggable component.
	 * @module apeman-react-draggable
	 * @version 3.0.11
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApDraggable = exports.ApDraggableStyle = undefined;

	var _ap_draggable_style = __webpack_require__(431);

	var _ap_draggable_style2 = _interopRequireDefault(_ap_draggable_style);

	var _ap_draggable = __webpack_require__(430);

	var _ap_draggable2 = _interopRequireDefault(_ap_draggable);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApDraggableStyle = _ap_draggable_style2.default;
	exports.ApDraggable = _ap_draggable2.default;

/***/ },
/* 114 */
/***/ function(module, exports) {

	/**
	 * Constant variables
	 * @namespace Constants
	 */
	'use strict';

	exports.PRODUCTION = 'production';
	exports.DEVELOPMENT = 'development';
	exports.TEST = 'test';

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Get NODE_ENV value
	 * @function getEnv()
	 * @returns {?string} - Env value
	 */
	'use strict';

	/** @lends getEnv */

	function getEnv() {
	  return ("production");
	}

	module.exports = getEnv;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(34),
	    toLength = __webpack_require__(22),
	    toIndex = __webpack_require__(77);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this),
	        length = toLength(O.length),
	        index = toIndex(fromIndex, length),
	        value;
	    // Array#includes uses SameValueZero equality algorithm
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      if (value != value) return true;
	      // Array#toIndex ignores holes, Array#includes - not
	    } else for (; length > index; index++) {
	      if (IS_INCLUDES || index in O) {
	        if (O[index] === el) return IS_INCLUDES || index || 0;
	      }
	    }return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    $export = __webpack_require__(3),
	    redefine = __webpack_require__(32),
	    redefineAll = __webpack_require__(75),
	    meta = __webpack_require__(60),
	    forOf = __webpack_require__(86),
	    anInstance = __webpack_require__(70),
	    isObject = __webpack_require__(13),
	    fails = __webpack_require__(12),
	    $iterDetect = __webpack_require__(122),
	    setToStringTag = __webpack_require__(88),
	    inheritIfRequired = __webpack_require__(159);

	module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
	  var Base = global[NAME],
	      C = Base,
	      ADDER = IS_MAP ? 'set' : 'add',
	      proto = C && C.prototype,
	      O = {};
	  var fixMethod = function fixMethod(KEY) {
	    var fn = proto[KEY];
	    redefine(proto, KEY, KEY == 'delete' ? function (a) {
	      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	    } : KEY == 'has' ? function has(a) {
	      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	    } : KEY == 'get' ? function get(a) {
	      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	    } : KEY == 'add' ? function add(a) {
	      fn.call(this, a === 0 ? 0 : a);return this;
	    } : function set(a, b) {
	      fn.call(this, a === 0 ? 0 : a, b);return this;
	    });
	  };
	  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
	    new C().entries().next();
	  }))) {
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance = new C()
	    // early implementations not supports chaining
	    ,
	        HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	    ,
	        THROWS_ON_PRIMITIVES = fails(function () {
	      instance.has(1);
	    })
	    // most early implementations doesn't supports iterables, most modern - not close it correctly
	    ,
	        ACCEPT_ITERABLES = $iterDetect(function (iter) {
	      new C(iter);
	    }) // eslint-disable-line no-new
	    // for early implementations -0 and +0 not the same
	    ,
	        BUGGY_ZERO = !IS_WEAK && fails(function () {
	      // V8 ~ Chromium 42- fails only with 5+ elements
	      var $instance = new C(),
	          index = 5;
	      while (index--) {
	        $instance[ADDER](index, index);
	      }return !$instance.has(-0);
	    });
	    if (!ACCEPT_ITERABLES) {
	      C = wrapper(function (target, iterable) {
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base(), target, C);
	        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if (IS_WEAK && proto.clear) delete proto.clear;
	  }

	  setToStringTag(C, NAME);

	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);

	  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

	  return C;
	};

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var hide = __webpack_require__(31),
	    redefine = __webpack_require__(32),
	    fails = __webpack_require__(12),
	    defined = __webpack_require__(41),
	    wks = __webpack_require__(14);

	module.exports = function (KEY, length, exec) {
	  var SYMBOL = wks(KEY),
	      fns = exec(defined, SYMBOL, ''[KEY]),
	      strfn = fns[0],
	      rxfn = fns[1];
	  if (fails(function () {
	    var O = {};
	    O[SYMBOL] = function () {
	      return 7;
	    };
	    return ''[KEY](O) != 7;
	  })) {
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	    // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	    // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	    ? function (string, arg) {
	      return rxfn.call(string, this, arg);
	    }
	    // 21.2.5.6 RegExp.prototype[@@match](string)
	    // 21.2.5.9 RegExp.prototype[@@search](string)
	    : function (string) {
	      return rxfn.call(string, this);
	    });
	  }
	};

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags

	var anObject = __webpack_require__(6);
	module.exports = function () {
	  var that = anObject(this),
	      result = '';
	  if (that.global) result += 'g';
	  if (that.ignoreCase) result += 'i';
	  if (that.multiline) result += 'm';
	  if (that.unicode) result += 'u';
	  if (that.sticky) result += 'y';
	  return result;
	};

/***/ },
/* 120 */
/***/ function(module, exports) {

	"use strict";

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function (fn, args, that) {
	                  var un = that === undefined;
	                  switch (args.length) {
	                                    case 0:
	                                                      return un ? fn() : fn.call(that);
	                                    case 1:
	                                                      return un ? fn(args[0]) : fn.call(that, args[0]);
	                                    case 2:
	                                                      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
	                                    case 3:
	                                                      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
	                                    case 4:
	                                                      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
	                  }return fn.apply(that, args);
	};

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(13),
	    cof = __webpack_require__(40),
	    MATCH = __webpack_require__(14)('match');
	module.exports = function (it) {
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ITERATOR = __webpack_require__(14)('iterator'),
	    SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function () {
	    SAFE_CLOSING = true;
	  };
	  Array.from(riter, function () {
	    throw 2;
	  });
	} catch (e) {/* empty */}

	module.exports = function (exec, skipClosing) {
	  if (!skipClosing && !SAFE_CLOSING) return false;
	  var safe = false;
	  try {
	    var arr = [7],
	        iter = arr[ITERATOR]();
	    iter.next = function () {
	      return { done: safe = true };
	    };
	    arr[ITERATOR] = function () {
	      return iter;
	    };
	    exec(arr);
	  } catch (e) {/* empty */}
	  return safe;
	};

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(71) || !__webpack_require__(12)(function () {
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function () {/* empty */});
	  delete __webpack_require__(10)[K];
	});

/***/ },
/* 124 */
/***/ function(module, exports) {

	"use strict";

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    SHARED = '__core-js_shared__',
	    store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    hide = __webpack_require__(31),
	    uid = __webpack_require__(78),
	    TYPED = uid('typed_array'),
	    VIEW = uid('view'),
	    ABV = !!(global.ArrayBuffer && global.DataView),
	    CONSTR = ABV,
	    i = 0,
	    l = 9,
	    Typed;

	var TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');

	while (i < l) {
	  if (Typed = global[TypedArrayConstructors[i++]]) {
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}

	module.exports = {
	  ABV: ABV,
	  CONSTR: CONSTR,
	  TYPED: TYPED,
	  VIEW: VIEW
	};

/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Get surplus.
	 * @function surplus
	 * @param {number} value - Value to calc.
	 * @param {number} [base=1] - Base number.
	 * @returns {number} - Surplus number.
	 */
	'use strict';

	/** @lends surplus */

	function surplus(value, base) {
	  base = base || 0;
	  return value - parseInt(value / base) * base;
	}

	module.exports = surplus;

/***/ },
/* 128 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (a, b) {
	  var fn = function fn() {};
	  fn.prototype = b.prototype;
	  a.prototype = new fn();
	  a.prototype.constructor = a;
	};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(870);
	var isArguments = __webpack_require__(869);

	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();

	    // 7.3. Other pairs that do not both pass typeof value == 'object',
	    // equivalence is determined by ==.
	  } else if (!actual || !expected || (typeof actual === 'undefined' ? 'undefined' : _typeof(actual)) != 'object' && (typeof expected === 'undefined' ? 'undefined' : _typeof(expected)) != 'object') {
	    return opts.strict ? actual === expected : actual == expected;

	    // 7.4. For all other Object pairs, including Array objects, equivalence is
	    // determined by having the same number of owned properties (as verified
	    // with Object.prototype.hasOwnProperty.call), the same set of keys
	    // (although not necessarily the same order), equivalent values for every
	    // corresponding key, and an identical 'prototype' property. Note: this
	    // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	};

	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}

	function isBuffer(x) {
	  if (!x || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}

	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {
	    //happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length) return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i]) return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === (typeof b === 'undefined' ? 'undefined' : _typeof(b));
	}

/***/ },
/* 130 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;

	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;

	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;

	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;

	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function (n) {
	  if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};

	EventEmitter.prototype.emit = function (type) {
	  var er, handler, len, args, i, listeners;

	  if (!this._events) this._events = {};

	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }

	  handler = this._events[type];

	  if (isUndefined(handler)) return false;

	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++) {
	      listeners[i].apply(this, args);
	    }
	  }

	  return true;
	};

	EventEmitter.prototype.addListener = function (type, listener) {
	  var m;

	  if (!isFunction(listener)) throw TypeError('listener must be a function');

	  if (!this._events) this._events = {};

	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);

	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];

	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }

	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }

	  return this;
	};

	EventEmitter.prototype.on = EventEmitter.prototype.addListener;

	EventEmitter.prototype.once = function (type, listener) {
	  if (!isFunction(listener)) throw TypeError('listener must be a function');

	  var fired = false;

	  function g() {
	    this.removeListener(type, g);

	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }

	  g.listener = listener;
	  this.on(type, g);

	  return this;
	};

	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function (type, listener) {
	  var list, position, length, i;

	  if (!isFunction(listener)) throw TypeError('listener must be a function');

	  if (!this._events || !this._events[type]) return this;

	  list = this._events[type];
	  length = list.length;
	  position = -1;

	  if (list === listener || isFunction(list.listener) && list.listener === listener) {
	    delete this._events[type];
	    if (this._events.removeListener) this.emit('removeListener', type, listener);
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener || list[i].listener && list[i].listener === listener) {
	        position = i;
	        break;
	      }
	    }

	    if (position < 0) return this;

	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }

	    if (this._events.removeListener) this.emit('removeListener', type, listener);
	  }

	  return this;
	};

	EventEmitter.prototype.removeAllListeners = function (type) {
	  var key, listeners;

	  if (!this._events) return this;

	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];
	    return this;
	  }

	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }

	  listeners = this._events[type];

	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length) {
	      this.removeListener(type, listeners[listeners.length - 1]);
	    }
	  }
	  delete this._events[type];

	  return this;
	};

	EventEmitter.prototype.listeners = function (type) {
	  var ret;
	  if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();
	  return ret;
	};

	EventEmitter.prototype.listenerCount = function (type) {
	  if (this._events) {
	    var evlistener = this._events[type];

	    if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;
	  }
	  return 0;
	};

	EventEmitter.listenerCount = function (emitter, type) {
	  return emitter.listenerCount(type);
	};

	function isFunction(arg) {
	  return typeof arg === 'function';
	}

	function isNumber(arg) {
	  return typeof arg === 'number';
	}

	function isObject(arg) {
	  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;
	}

	function isUndefined(arg) {
	  return arg === void 0;
	}

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(5);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;

/***/ },
/* 132 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Check types
	 * @module iftype
	 * @version 3.0.0
	 */

	'use strict';

	var IfType = __webpack_require__(305);
	var is = __webpack_require__(306);
	var create = __webpack_require__(900);

	var lib = create.bind();
	lib.create = create;
	lib.IfType = IfType;

	lib.is = is;
	lib.isString = is.bind(lib, 'string');
	lib.isNumber = is.bind(lib, 'number');
	lib.isObject = is.bind(lib, 'object');
	lib.isArray = is.bind(lib, 'array');
	lib.isFunction = is.bind(lib, 'function');

	module.exports = lib;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var each = __webpack_require__(894);
	module.exports = api;

	/**
	 * Convenience wrapper around the api.
	 * Calls `.get` when called with an `object` and a `pointer`.
	 * Calls `.set` when also called with `value`.
	 * If only supplied `object`, returns a partially applied function, mapped to the object.
	 *
	 * @param {Object} obj
	 * @param {String|Array} pointer
	 * @param value
	 * @returns {*}
	 */

	function api(obj, pointer, value) {
	    // .set()
	    if (arguments.length === 3) {
	        return api.set(obj, pointer, value);
	    }
	    // .get()
	    if (arguments.length === 2) {
	        return api.get(obj, pointer);
	    }
	    // Return a partially applied function on `obj`.
	    var wrapped = api.bind(api, obj);

	    // Support for oo style
	    for (var name in api) {
	        if (api.hasOwnProperty(name)) {
	            wrapped[name] = api[name].bind(wrapped, obj);
	        }
	    }
	    return wrapped;
	}

	/**
	 * Lookup a json pointer in an object
	 *
	 * @param {Object} obj
	 * @param {String|Array} pointer
	 * @returns {*}
	 */
	api.get = function get(obj, pointer) {
	    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);

	    for (var i = 0; i < refTokens.length; ++i) {
	        var tok = refTokens[i];
	        if (!((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' && tok in obj)) {
	            throw new Error('Invalid reference token: ' + tok);
	        }
	        obj = obj[tok];
	    }
	    return obj;
	};

	/**
	 * Sets a value on an object
	 *
	 * @param {Object} obj
	 * @param {String|Array} pointer
	 * @param value
	 */
	api.set = function set(obj, pointer, value) {
	    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer),
	        nextTok = refTokens[0];

	    for (var i = 0; i < refTokens.length - 1; ++i) {
	        var tok = refTokens[i];
	        if (tok === '-' && Array.isArray(obj)) {
	            tok = obj.length;
	        }
	        nextTok = refTokens[i + 1];

	        if (!(tok in obj)) {
	            if (nextTok.match(/^(\d+|-)$/)) {
	                obj[tok] = [];
	            } else {
	                obj[tok] = {};
	            }
	        }
	        obj = obj[tok];
	    }
	    if (nextTok === '-' && Array.isArray(obj)) {
	        nextTok = obj.length;
	    }
	    obj[nextTok] = value;
	    return this;
	};

	/**
	 * Removes an attribute
	 *
	 * @param {Object} obj
	 * @param {String|Array} pointer
	 */
	api.remove = function (obj, pointer) {
	    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);
	    var finalToken = refTokens[refTokens.length - 1];
	    if (finalToken === undefined) {
	        throw new Error('Invalid JSON pointer for remove: "' + pointer + '"');
	    }
	    delete api.get(obj, refTokens.slice(0, -1))[finalToken];
	};

	/**
	 * Returns a (pointer -> value) dictionary for an object
	 *
	 * @param obj
	 * @param {function} descend
	 * @returns {}
	 */
	api.dict = function dict(obj, descend) {
	    var results = {};
	    api.walk(obj, function (value, pointer) {
	        results[pointer] = value;
	    }, descend);
	    return results;
	};

	/**
	 * Iterates over an object
	 * Iterator: function (value, pointer) {}
	 *
	 * @param obj
	 * @param {function} iterator
	 * @param {function} descend
	 */
	api.walk = function walk(obj, iterator, descend) {
	    var refTokens = [];

	    descend = descend || function (value) {
	        var type = Object.prototype.toString.call(value);
	        return type === '[object Object]' || type === '[object Array]';
	    };

	    (function next(cur) {
	        each(cur, function (value, key) {
	            refTokens.push(String(key));
	            if (descend(value)) {
	                next(value);
	            } else {
	                iterator(value, api.compile(refTokens));
	            }
	            refTokens.pop();
	        });
	    })(obj);
	};

	/**
	 * Tests if an object has a value for a json pointer
	 *
	 * @param obj
	 * @param pointer
	 * @returns {boolean}
	 */
	api.has = function has(obj, pointer) {
	    try {
	        api.get(obj, pointer);
	    } catch (e) {
	        return false;
	    }
	    return true;
	};

	/**
	 * Escapes a reference token
	 *
	 * @param str
	 * @returns {string}
	 */
	api.escape = function escape(str) {
	    return str.toString().replace(/~/g, '~0').replace(/\//g, '~1');
	};

	/**
	 * Unescapes a reference token
	 *
	 * @param str
	 * @returns {string}
	 */
	api.unescape = function unescape(str) {
	    return str.replace(/~1/g, '/').replace(/~0/g, '~');
	};

	/**
	 * Converts a json pointer into a array of reference tokens
	 *
	 * @param pointer
	 * @returns {Array}
	 */
	api.parse = function parse(pointer) {
	    if (pointer === '') {
	        return [];
	    }
	    if (pointer.charAt(0) !== '/') {
	        throw new Error('Invalid JSON pointer: ' + pointer);
	    }
	    return pointer.substring(1).split(/\//).map(api.unescape);
	};

	/**
	 * Builds a json pointer from a array of reference tokens
	 *
	 * @param refTokens
	 * @returns {string}
	 */
	api.compile = function compile(refTokens) {
	    if (refTokens.length === 0) {
	        return '';
	    }
	    return '/' + refTokens.map(api.escape).join('/');
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Get amount in range.
	 * @function amount
	 * @param {number} min - Min value.
	 * @param {number} max - Max value
	 * @returns {number} - Amount of the range.
	 */

	'use strict';

	var assert = __webpack_require__(59);

	/** @function amount */
	function amount(min, max) {
	  assert.equal(arguments.length, 2, 'Invalid args');
	  return max - min;
	}

	module.exports = amount;

/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function getHostProps(inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }

	    return hostProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var EventConstants = __webpack_require__(57);
	var EventPluginRegistry = __webpack_require__(191);
	var ReactEventEmitterMixin = __webpack_require__(964);
	var ViewportMetrics = __webpack_require__(336);

	var getVendorPrefixedEventName = __webpack_require__(995);
	var isEventSupported = __webpack_require__(210);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function injectReactEventListener(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function setEnabled(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function isEnabled() {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function listenTo(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function ensureScrollValueMonitoring() {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(108);
	var ViewportMetrics = __webpack_require__(336);

	var getEventModifierState = __webpack_require__(207);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function button(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function relatedTarget(event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function pageX(event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function pageY(event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 139 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html


	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(26);
	var DOMNamespaces = __webpack_require__(190);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(205);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function setInnerHTML(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * React components for SUGOS project.
	 * @module sg-react-components
	 * @version 1.3.9
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.SgVideo = exports.SgThemeStyle = exports.SgSwitch = exports.SgPage = exports.SgMicrophone = exports.SgMain = exports.SgKinectFrame = exports.SgHtml = exports.SgHeart = exports.SgHeader = exports.SgHead = exports.SgButton = exports.SgBody = exports.SgAlbum = undefined;

	var _sg_album = __webpack_require__(1013);

	var _sg_album2 = _interopRequireDefault(_sg_album);

	var _sg_body = __webpack_require__(1014);

	var _sg_body2 = _interopRequireDefault(_sg_body);

	var _sg_button = __webpack_require__(1015);

	var _sg_button2 = _interopRequireDefault(_sg_button);

	var _sg_head = __webpack_require__(1016);

	var _sg_head2 = _interopRequireDefault(_sg_head);

	var _sg_header = __webpack_require__(1017);

	var _sg_header2 = _interopRequireDefault(_sg_header);

	var _sg_heart = __webpack_require__(1018);

	var _sg_heart2 = _interopRequireDefault(_sg_heart);

	var _sg_html = __webpack_require__(1019);

	var _sg_html2 = _interopRequireDefault(_sg_html);

	var _sg_kinect_frame = __webpack_require__(1020);

	var _sg_kinect_frame2 = _interopRequireDefault(_sg_kinect_frame);

	var _sg_main = __webpack_require__(1021);

	var _sg_main2 = _interopRequireDefault(_sg_main);

	var _sg_microphone = __webpack_require__(1022);

	var _sg_microphone2 = _interopRequireDefault(_sg_microphone);

	var _sg_page = __webpack_require__(1023);

	var _sg_page2 = _interopRequireDefault(_sg_page);

	var _sg_switch = __webpack_require__(1024);

	var _sg_switch2 = _interopRequireDefault(_sg_switch);

	var _sg_theme_style = __webpack_require__(1025);

	var _sg_theme_style2 = _interopRequireDefault(_sg_theme_style);

	var _sg_video = __webpack_require__(1026);

	var _sg_video2 = _interopRequireDefault(_sg_video);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.SgAlbum = _sg_album2.default;
	exports.SgBody = _sg_body2.default;
	exports.SgButton = _sg_button2.default;
	exports.SgHead = _sg_head2.default;
	exports.SgHeader = _sg_header2.default;
	exports.SgHeart = _sg_heart2.default;
	exports.SgHtml = _sg_html2.default;
	exports.SgKinectFrame = _sg_kinect_frame2.default;
	exports.SgMain = _sg_main2.default;
	exports.SgMicrophone = _sg_microphone2.default;
	exports.SgPage = _sg_page2.default;
	exports.SgSwitch = _sg_switch2.default;
	exports.SgThemeStyle = _sg_theme_style2.default;
	exports.SgVideo = _sg_video2.default;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into capital case.
	 * First letters will be uppercase.
	 * @memberof module:stringcase/lib
	 * @function capitalcase
	 * @param {string} str - String to convert.
	 * @returns {string} Capital case string.
	 */

	'use strict';

	var uppercase = __webpack_require__(110);

	/** @lends capitalcase */
	function capitalcase(str) {
	  str = String(str);
	  if (!str) {
	    return str;
	  }
	  return uppercase(str[0]) + str.slice(1);
	}

	module.exports = capitalcase;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.toggleRequesting = exports.modalWindow = exports.dominantColor = exports.connectActors = undefined;

	var _actors = __webpack_require__(1092);

	var _actors2 = _interopRequireDefault(_actors);

	var _dominant_color = __webpack_require__(1093);

	var _dominant_color2 = _interopRequireDefault(_dominant_color);

	var _modal_window = __webpack_require__(1094);

	var _modal_window2 = _interopRequireDefault(_modal_window);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var connectActors = _actors2.default.connectActors;
	var toggleRequesting = _actors2.default.toggleRequesting;
	exports.connectActors = connectActors;
	exports.dominantColor = _dominant_color2.default;
	exports.modalWindow = _modal_window2.default;
	exports.toggleRequesting = toggleRequesting;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Dialog component.
	 * @class ApDialog
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactIcon = __webpack_require__(20);

	var _apemanReactSpinner = __webpack_require__(29);

	var _ap_dialog_header = __webpack_require__(226);

	var _ap_dialog_header2 = _interopRequireDefault(_ap_dialog_header);

	var _ap_dialog_body = __webpack_require__(225);

	var _ap_dialog_body2 = _interopRequireDefault(_ap_dialog_body);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var DEFAULT_CLOSE_ICON = 'fa fa-close';

	/** @lends ApDialog */
	var ApDialog = _react2.default.createClass({
	  displayName: 'ApDialog',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    present: _react.PropTypes.bool.isRequired,
	    onClose: _react.PropTypes.func,
	    spinning: _react.PropTypes.bool,
	    spinner: _react.PropTypes.string,
	    title: _react.PropTypes.string,
	    closeIcon: _react.PropTypes.string
	  },

	  statics: {
	    DEFAULT_CLOSE_ICON: DEFAULT_CLOSE_ICON
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      present: false,
	      onClose: null,
	      spinning: false,
	      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME,
	      title: null,
	      closeIcon: DEFAULT_CLOSE_ICON
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    if (!props.present) {
	      return null;
	    }
	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-dialog', props.className, {
	        'ap-dialog-present': props.present
	      }),
	      style: Object.assign({}, props.style) }, _react2.default.createElement(_apemanReactSpinner.ApSpinner, { theme: props.spinner,
	      className: 'ap-dialog-spinner',
	      enabled: props.spinning }), _react2.default.createElement('div', { className: 'ap-dialog-inner' }, s.renderBack(), _react2.default.createElement('div', { className: 'ap-dialog-content' }, _react2.default.createElement(_ap_dialog_header2.default, null, s.renderTitle(), s.renderCloseButton()), _react2.default.createElement(_ap_dialog_body2.default, null, props.children))));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var props = s.props;

	    s.toggleDocumentScroll(props.present);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;

	    s.toggleDocumentScroll(nextProps.present);
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    return true;
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    var s = this;
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    var s = this;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    s.toggleDocumentScroll(false);
	  },

	  // ------------------
	  // Helper
	  // ------------------

	  handleClose: function handleClose(e) {
	    var s = this;
	    var props = s.props;

	    if (props.onClose) {
	      props.onClose(e);
	    }
	  },
	  toggleDocumentScroll: function toggleDocumentScroll(enabled) {
	    var s = this;

	    var _document = document;
	    var body = _document.body;

	    if (enabled) {
	      body.classList.add('ap-dialog-fix');
	    } else {
	      body.classList.remove('ap-dialog-fix');
	    }
	  },

	  // ------------------
	  // Private
	  // ------------------

	  renderBack: function renderBack() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: 'ap-dialog-back' }, _react2.default.createElement(_apemanReactTouchable.ApTouchable, { onTap: s.handleClose }, _react2.default.createElement('div', { className: 'ap-dialog-back-inner' })));
	  },
	  renderCloseButton: function renderCloseButton() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('a', { className: 'ap-dialog-close-button' }, _react2.default.createElement(_apemanReactTouchable.ApTouchable, { onTap: s.handleClose }, _react2.default.createElement('span', null, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-dialog-close-button-icon', props.closeIcon) }))));
	  },
	  renderTitle: function renderTitle() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('h3', { className: 'ap-dialog-title' }, props.title);
	  }
	});

	exports.default = ApDialog;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for dropdown components
	 * @module apeman-react-dropdown
	 * @version 3.0.8
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApDropdown = exports.ApDropdownStyle = exports.ApDropdownItem = undefined;

	var _ap_dropdown_item = __webpack_require__(433);

	var _ap_dropdown_item2 = _interopRequireDefault(_ap_dropdown_item);

	var _ap_dropdown_style = __webpack_require__(434);

	var _ap_dropdown_style2 = _interopRequireDefault(_ap_dropdown_style);

	var _ap_dropdown = __webpack_require__(432);

	var _ap_dropdown2 = _interopRequireDefault(_ap_dropdown);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApDropdownItem = _ap_dropdown_item2.default;
	exports.ApDropdownStyle = _ap_dropdown_style2.default;
	exports.ApDropdown = _ap_dropdown2.default;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for icon components.
	 * @class ApIcon
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _asobj = __webpack_require__(8);

	var _asenv = __webpack_require__(261);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var assertCache = {};
	var notfoundCache = [];

	var ASSERT_DELAY = 400;

	/** @lends ApIcon */
	var ApIcon = _react2.default.createClass({
	  displayName: 'ApIcon',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {
	    /**
	     * Check if has style.
	     * @param className
	     */
	    hasStyleWithClass: function hasStyleWithClass(className) {
	      var styleSheets = document.styleSheets || [];
	      for (var i = 0; i < styleSheets.length; i++) {
	        var styleSheet = styleSheets[i];
	        var rules = styleSheet.rules || styleSheet.cssRules || [];
	        for (var j = 0; j < rules.length; j++) {
	          var rule = rules[j];
	          var selectorText = rule.selectorText;
	          var hit = selectorText && new RegExp('.' + className).test(selectorText);
	          if (hit) {
	            return true;
	          }
	        }
	      }
	      return false;
	    },
	    warnNotFound: function warnNotFound() {
	      setTimeout(function () {
	        if (notfoundCache.length > 0) {
	          console.warn('[ApIcon] No style found for class ' + notfoundCache.map(function (notFound) {
	            return '"' + notFound + '"';
	          }).join(', ') + '.\nYou seeing this warning either because of:\n  1. Misspelling the name or missing some stylesheets.\n  2. Using stylesheets from another domain.');
	          notfoundCache = [];
	        }
	      }, 100);
	    },

	    ASSERT_DELAY: ASSERT_DELAY
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('i', { className: (0, _classnames2.default)('ap-icon', props.className),
	      style: Object.assign({}, props.style),
	      'aria-hidden': 'true'
	    });
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.mounted = true;
	    var props = s.props;

	    if (!(0, _asenv.isProduction)()) {
	      s.assertClassName(props.className, { delay: 1200 });
	    }
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    if (!(0, _asenv.isProduction)()) {
	      if (nextProps.hasOwnProperty('className')) {
	        s.assertClassName(nextProps.className);
	      }
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    clearTimeout(s._assertTimer);
	  },

	  // ------------------
	  // Helper
	  // ------------------

	  assertClassName: function assertClassName(className) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    if (!className) {
	      return;
	    }
	    var s = this;
	    clearTimeout(s._assertTimer);
	    s._assertTimer = setTimeout(function () {
	      if (!s.mounted) {
	        return;
	      }
	      className.split(/\s/g).forEach(function (className) {
	        if (!className) {
	          return;
	        }
	        if (assertCache.hasOwnProperty(className)) {
	          return;
	        }
	        if (/^ap/.test(className)) {
	          return;
	        }
	        var valid = ApIcon.hasStyleWithClass(className);
	        if (!valid) {
	          notfoundCache.push(className);
	        }
	        assertCache[className] = valid;
	      });
	      ApIcon.warnNotFound();
	    }, options.delay || ASSERT_DELAY);
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _assertTimer: -1
	});

	exports.default = ApIcon;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Item of info.
	 * @class ApInfoItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApInfoItem */
	var ApInfoItem = _react2.default.createClass({
	  displayName: 'ApInfoItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    label: _react.PropTypes.string,
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	    unit: _react.PropTypes.string,
	    icon: _react.PropTypes.string,
	    link: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
	    linkText: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {
	    OPEN_ICON: 'fa fa-angle-down',
	    CLOSE_ICON: 'fa fa-angle-right',
	    NEXT_ICON: 'fa fa-angle-right',
	    PREV_ICON: 'fa fa-angle-left'
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      icon: null,
	      label: null,
	      value: null,
	      link: null,
	      linkText: null,
	      unit: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-info-item', {
	      'ap-info-item-tappable': !!props.React
	    }, props.className);
	    var label = props.label;
	    var value = props.value;
	    var unit = props.unit;
	    var link = props.link;
	    var linkText = props.linkText;
	    var icon = props.icon;

	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, props.style) }, label ? s.renderLabel(label) : null, props.children, _react2.default.createElement('div', { className: 'ap-info-item-value' }, link && linkText ? s.renderValueText(value) : null, link ? s.renderValueLink(linkText || value, link) : s.renderValueText(value), unit ? _react2.default.createElement('small', { className: 'ap-info-item-unit' }, unit) : null, icon ? s.renderIcon(icon) : null));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------
	  renderLabel: function renderLabel(label) {
	    var s = this;
	    return _react2.default.createElement('div', { className: 'ap-info-item-label' }, label);
	  },
	  renderValueText: function renderValueText(text) {
	    return _react2.default.createElement('span', { className: 'ap-info-item-value-text' }, text);
	  },
	  renderValueLink: function renderValueLink(text, link) {
	    var s = this;
	    if (typeof link === 'function') {
	      return _react2.default.createElement('a', { className: 'ap-info-item-link', href: 'javascript:void(0)',
	        onClick: link }, text);
	    } else {
	      return _react2.default.createElement('a', { className: 'ap-info-item-link', href: link }, text);
	    }
	  },
	  renderIcon: function renderIcon(icon) {
	    var s = this;
	    return _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)(icon, 'ap-info-item-icon') });
	  }
	});

	exports.default = ApInfoItem; // Dummy export for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApInfoItem);

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package label component.
	 * @module apeman-react-label
	 * @version 2.0.11
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApLabel = exports.ApLabelStyle = undefined;

	var _ap_label_style = __webpack_require__(490);

	var _ap_label_style2 = _interopRequireDefault(_ap_label_style);

	var _ap_label = __webpack_require__(489);

	var _ap_label2 = _interopRequireDefault(_ap_label);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApLabelStyle = _ap_label_style2.default;
	exports.ApLabel = _ap_label2.default;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List item icon component.
	 * @class ApListItemIcon
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListItemIcon */
	var ApListItemIcon = _react2.default.createClass({
	  displayName: 'ApListItemIcon',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-list-item-icon', props.className),
	      style: Object.assign({}, props.style) });
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApListItemIcon;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for tab component.
	 * @module apeman-react-tab
	 * @version 3.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApTab = exports.ApTabStyle = exports.ApTabItem = exports.ApTabGroup = exports.ApTabContent = undefined;

	var _ap_tab_content = __webpack_require__(589);

	var _ap_tab_content2 = _interopRequireDefault(_ap_tab_content);

	var _ap_tab_group = __webpack_require__(590);

	var _ap_tab_group2 = _interopRequireDefault(_ap_tab_group);

	var _ap_tab_item = __webpack_require__(591);

	var _ap_tab_item2 = _interopRequireDefault(_ap_tab_item);

	var _ap_tab_style = __webpack_require__(592);

	var _ap_tab_style2 = _interopRequireDefault(_ap_tab_style);

	var _ap_tab = __webpack_require__(588);

	var _ap_tab2 = _interopRequireDefault(_ap_tab);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApTabContent = _ap_tab_content2.default;
	exports.ApTabGroup = _ap_tab_group2.default;
	exports.ApTabItem = _ap_tab_item2.default;
	exports.ApTabStyle = _ap_tab_style2.default;
	exports.ApTab = _ap_tab2.default;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function renderStyleData
	 */
	'use strict';

	var _require = __webpack_require__(4);

	var ApStyle = _require.ApStyle;

	var _require2 = __webpack_require__(184);

	var EOL = _require2.EOL;
	/** @lends renderStyleData */

	function renderStyleData(data) {
	  var stringifyStyle = ApStyle.stringifyStyle;
	  var stringifyMediaStyle = ApStyle.stringifyMediaStyle;
	  var SMALL_MEDIA_BREAKPOINT = ApStyle.SMALL_MEDIA_BREAKPOINT;
	  var MEDIUM_MEDIA_BREAKPOINT = ApStyle.MEDIUM_MEDIA_BREAKPOINT;
	  var LARGE_MEDIA_BREAKPOINT = ApStyle.LARGE_MEDIA_BREAKPOINT;
	  var all = data.all;
	  var small = data.small;
	  var medium = data.medium;
	  var large = data.large;

	  return [stringifyStyle(all), stringifyMediaStyle(small, SMALL_MEDIA_BREAKPOINT), stringifyMediaStyle(medium, MEDIUM_MEDIA_BREAKPOINT), stringifyMediaStyle(large, LARGE_MEDIA_BREAKPOINT)].filter(function (style) {
	    return !!style;
	  }).join(EOL);
	}

	module.exports = renderStyleData;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * rotate color
	 * @function rotate
	 * @param {string} color - Color value.
	 * @param {number} degree to rotate. 0 to 360
	 * @returns {string}
	 */
	'use strict';

	var _require = __webpack_require__(27);

	var rotate = _require.rotate;

	module.exports = rotate;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';

	var toObject = __webpack_require__(23),
	    toIndex = __webpack_require__(77),
	    toLength = __webpack_require__(22);
	module.exports = function fill(value /*, start = 0, end = @length */) {
	  var O = toObject(this),
	      length = toLength(O.length),
	      aLen = arguments.length,
	      index = toIndex(aLen > 1 ? arguments[1] : undefined, length),
	      end = aLen > 2 ? arguments[2] : undefined,
	      endPos = end === undefined ? length : toIndex(end, length);
	  while (endPos > index) {
	    O[index++] = value;
	  }return O;
	};

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $defineProperty = __webpack_require__(19),
	    createDesc = __webpack_require__(61);

	module.exports = function (object, index, value) {
	  if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
	};

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isObject = __webpack_require__(13),
	    document = __webpack_require__(10).document
	// in old IE typeof document.createElement is 'object'
	,
	    is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 156 */
/***/ function(module, exports) {

	'use strict';

	// IE 8- don't enum bug keys
	module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MATCH = __webpack_require__(14)('match');
	module.exports = function (KEY) {
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch (e) {
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch (f) {/* empty */}
	  }return true;
	};

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(10).document && document.documentElement;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isObject = __webpack_require__(13),
	    setPrototypeOf = __webpack_require__(167).set;
	module.exports = function (that, target, C) {
	  var P,
	      S = target.constructor;
	  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
	    setPrototypeOf(that, P);
	  }return that;
	};

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// check on default Array iterator
	var Iterators = __webpack_require__(87),
	    ITERATOR = __webpack_require__(14)('iterator'),
	    ArrayProto = Array.prototype;

	module.exports = function (it) {
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(40);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var create = __webpack_require__(72),
	    descriptor = __webpack_require__(61),
	    setToStringTag = __webpack_require__(88),
	    IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(31)(IteratorPrototype, __webpack_require__(14)('iterator'), function () {
	  return this;
	});

	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var LIBRARY = __webpack_require__(71),
	    $export = __webpack_require__(3),
	    redefine = __webpack_require__(32),
	    hide = __webpack_require__(31),
	    has = __webpack_require__(25),
	    Iterators = __webpack_require__(87),
	    $iterCreate = __webpack_require__(162),
	    setToStringTag = __webpack_require__(88),
	    getPrototypeOf = __webpack_require__(36),
	    ITERATOR = __webpack_require__(14)('iterator'),
	    BUGGY = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	,
	    FF_ITERATOR = '@@iterator',
	    KEYS = 'keys',
	    VALUES = 'values';

	var returnThis = function returnThis() {
	  return this;
	};

	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function getMethod(kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS:
	        return function keys() {
	          return new Constructor(this, kind);
	        };
	      case VALUES:
	        return function values() {
	          return new Constructor(this, kind);
	        };
	    }return function entries() {
	      return new Constructor(this, kind);
	    };
	  };
	  var TAG = NAME + ' Iterator',
	      DEF_VALUES = DEFAULT == VALUES,
	      VALUES_BUG = false,
	      proto = Base.prototype,
	      $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
	      $default = $native || getMethod(DEFAULT),
	      $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined,
	      $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
	      methods,
	      key,
	      IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() {
	      return $native.call(this);
	    };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 164 */
/***/ function(module, exports) {

	"use strict";

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = !$expm1
	// Old FF bug
	|| $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	// Tor Browser bug
	|| $expm1(-2e-17) != -2e-17 ? function expm1(x) {
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 165 */
/***/ function(module, exports) {

	"use strict";

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x) {
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    macrotask = __webpack_require__(174).set,
	    Observer = global.MutationObserver || global.WebKitMutationObserver,
	    process = global.process,
	    Promise = global.Promise,
	    isNode = __webpack_require__(40)(process) == 'process';

	module.exports = function () {
	  var head, last, notify;

	  var flush = function flush() {
	    var parent, fn;
	    if (isNode && (parent = process.domain)) parent.exit();
	    while (head) {
	      fn = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch (e) {
	        if (head) notify();else last = undefined;
	        throw e;
	      }
	    }last = undefined;
	    if (parent) parent.enter();
	  };

	  // Node.js
	  if (isNode) {
	    notify = function notify() {
	      process.nextTick(flush);
	    };
	    // browsers with MutationObserver
	  } else if (Observer) {
	    var toggle = true,
	        node = document.createTextNode('');
	    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
	    notify = function notify() {
	      node.data = toggle = !toggle;
	    };
	    // environments with maybe non-completely correct, but existent Promise
	  } else if (Promise && Promise.resolve) {
	    var promise = Promise.resolve();
	    notify = function notify() {
	      promise.then(flush);
	    };
	    // for other environments - macrotask based on:
	    // - setImmediate
	    // - MessageChannel
	    // - window.postMessag
	    // - onreadystatechange
	    // - setTimeout
	  } else {
	    notify = function notify() {
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }

	  return function (fn) {
	    var task = { fn: fn, next: undefined };
	    if (last) last.next = task;
	    if (!head) {
	      head = task;
	      notify();
	    }last = task;
	  };
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(13),
	    anObject = __webpack_require__(6);
	var check = function check(O, proto) {
	  anObject(O);
	  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	  function (test, buggy, set) {
	    try {
	      set = __webpack_require__(53)(Function.call, __webpack_require__(35).f(Object.prototype, '__proto__').set, 2);
	      set(test, []);
	      buggy = !(test instanceof Array);
	    } catch (e) {
	      buggy = true;
	    }
	    return function setPrototypeOf(O, proto) {
	      check(O, proto);
	      if (buggy) O.__proto__ = proto;else set(O, proto);
	      return O;
	    };
	  }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var shared = __webpack_require__(125)('keys'),
	    uid = __webpack_require__(78);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject = __webpack_require__(6),
	    aFunction = __webpack_require__(30),
	    SPECIES = __webpack_require__(14)('species');
	module.exports = function (O, D) {
	  var C = anObject(O).constructor,
	      S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toInteger = __webpack_require__(62),
	    defined = __webpack_require__(41);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that)),
	        i = toInteger(pos),
	        l = s.length,
	        a,
	        b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(121),
	    defined = __webpack_require__(41);

	module.exports = function (that, searchString, NAME) {
	  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toInteger = __webpack_require__(62),
	    defined = __webpack_require__(41);

	module.exports = function repeat(count) {
	  var str = String(defined(this)),
	      res = '',
	      n = toInteger(count);
	  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
	  for (; n > 0; (n >>>= 1) && (str += str)) {
	    if (n & 1) res += str;
	  }return res;
	};

/***/ },
/* 173 */
/***/ function(module, exports) {

	'use strict';

	module.exports = '\t\n\u000b\f\r   ᠎    ' + '         　\u2028\u2029﻿';

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ctx = __webpack_require__(53),
	    invoke = __webpack_require__(120),
	    html = __webpack_require__(158),
	    cel = __webpack_require__(155),
	    global = __webpack_require__(10),
	    process = global.process,
	    setTask = global.setImmediate,
	    clearTask = global.clearImmediate,
	    MessageChannel = global.MessageChannel,
	    counter = 0,
	    queue = {},
	    ONREADYSTATECHANGE = 'onreadystatechange',
	    defer,
	    channel,
	    port;
	var run = function run() {
	  var id = +this;
	  if (queue.hasOwnProperty(id)) {
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function listener(event) {
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if (!setTask || !clearTask) {
	  setTask = function setImmediate(fn) {
	    var args = [],
	        i = 1;
	    while (arguments.length > i) {
	      args.push(arguments[i++]);
	    }queue[++counter] = function () {
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id) {
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if (__webpack_require__(40)(process) == 'process') {
	    defer = function defer(id) {
	      process.nextTick(ctx(run, id, 1));
	    };
	    // Browsers with MessageChannel, includes WebWorkers
	  } else if (MessageChannel) {
	    channel = new MessageChannel();
	    port = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	    // Browsers with postMessage, skip WebWorkers
	    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
	    defer = function defer(id) {
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	    // IE8-
	  } else if (ONREADYSTATECHANGE in cel('script')) {
	    defer = function defer(id) {
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	    // Rest old browsers
	  } else {
	    defer = function defer(id) {
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set: setTask,
	  clear: clearTask
	};

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    DESCRIPTORS = __webpack_require__(18),
	    LIBRARY = __webpack_require__(71),
	    $typed = __webpack_require__(126),
	    hide = __webpack_require__(31),
	    redefineAll = __webpack_require__(75),
	    fails = __webpack_require__(12),
	    anInstance = __webpack_require__(70),
	    toInteger = __webpack_require__(62),
	    toLength = __webpack_require__(22),
	    gOPN = __webpack_require__(73).f,
	    dP = __webpack_require__(19).f,
	    arrayFill = __webpack_require__(153),
	    setToStringTag = __webpack_require__(88),
	    ARRAY_BUFFER = 'ArrayBuffer',
	    DATA_VIEW = 'DataView',
	    PROTOTYPE = 'prototype',
	    WRONG_LENGTH = 'Wrong length!',
	    WRONG_INDEX = 'Wrong index!',
	    $ArrayBuffer = global[ARRAY_BUFFER],
	    $DataView = global[DATA_VIEW],
	    Math = global.Math,
	    RangeError = global.RangeError,
	    Infinity = global.Infinity,
	    BaseBuffer = $ArrayBuffer,
	    abs = Math.abs,
	    pow = Math.pow,
	    floor = Math.floor,
	    log = Math.log,
	    LN2 = Math.LN2,
	    BUFFER = 'buffer',
	    BYTE_LENGTH = 'byteLength',
	    BYTE_OFFSET = 'byteOffset',
	    $BUFFER = DESCRIPTORS ? '_b' : BUFFER,
	    $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH,
	    $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function packIEEE754(value, mLen, nBytes) {
	  var buffer = Array(nBytes),
	      eLen = nBytes * 8 - mLen - 1,
	      eMax = (1 << eLen) - 1,
	      eBias = eMax >> 1,
	      rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0,
	      i = 0,
	      s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0,
	      e,
	      m,
	      c;
	  value = abs(value);
	  if (value != value || value === Infinity) {
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if (value * (c = pow(2, -e)) < 1) {
	      e--;
	      c *= 2;
	    }
	    if (e + eBias >= 1) {
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if (value * c >= 2) {
	      e++;
	      c /= 2;
	    }
	    if (e + eBias >= eMax) {
	      m = 0;
	      e = eMax;
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {}
	  e = e << mLen | m;
	  eLen += mLen;
	  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {}
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function unpackIEEE754(buffer, mLen, nBytes) {
	  var eLen = nBytes * 8 - mLen - 1,
	      eMax = (1 << eLen) - 1,
	      eBias = eMax >> 1,
	      nBits = eLen - 7,
	      i = nBytes - 1,
	      s = buffer[i--],
	      e = s & 127,
	      m;
	  s >>= 7;
	  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {}
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {}
	  if (e === 0) {
	    e = 1 - eBias;
	  } else if (e === eMax) {
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  }return (s ? -1 : 1) * m * pow(2, e - mLen);
	};

	var unpackI32 = function unpackI32(bytes) {
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function packI8(it) {
	  return [it & 0xff];
	};
	var packI16 = function packI16(it) {
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function packI32(it) {
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function packF64(it) {
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function packF32(it) {
	  return packIEEE754(it, 23, 4);
	};

	var addGetter = function addGetter(C, key, internal) {
	  dP(C[PROTOTYPE], key, { get: function get() {
	      return this[internal];
	    } });
	};

	var get = function get(view, bytes, index, isLittleEndian) {
	  var numIndex = +index,
	      intIndex = toInteger(numIndex);
	  if (numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b,
	      start = intIndex + view[$OFFSET],
	      pack = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function set(view, bytes, index, conversion, value, isLittleEndian) {
	  var numIndex = +index,
	      intIndex = toInteger(numIndex);
	  if (numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b,
	      start = intIndex + view[$OFFSET],
	      pack = conversion(+value);
	  for (var i = 0; i < bytes; i++) {
	    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	  }
	};

	var validateArrayBufferArguments = function validateArrayBufferArguments(that, length) {
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length,
	      byteLength = toLength(numberLength);
	  if (numberLength != byteLength) throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};

	if (!$typed.ABV) {
	  $ArrayBuffer = function ArrayBuffer(length) {
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };

	  $DataView = function DataView(buffer, byteOffset, byteLength) {
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH],
	        offset = toInteger(byteOffset);
	    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };

	  if (DESCRIPTORS) {
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }

	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset) {
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset) {
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */) {
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */) {
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */) {
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */) {
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */) {
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */) {
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value) {
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value) {
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */) {
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */) {
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */) {
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */) {
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */) {
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */) {
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if (!fails(function () {
	    new $ArrayBuffer(); // eslint-disable-line no-new
	  }) || !fails(function () {
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })) {
	    $ArrayBuffer = function ArrayBuffer(length) {
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
	      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2)),
	      $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value) {
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value) {
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    core = __webpack_require__(52),
	    LIBRARY = __webpack_require__(71),
	    wksExt = __webpack_require__(285),
	    defineProperty = __webpack_require__(19).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var classof = __webpack_require__(101),
	    ITERATOR = __webpack_require__(14)('iterator'),
	    Iterators = __webpack_require__(87);
	module.exports = __webpack_require__(52).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
	};

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var addToUnscopables = __webpack_require__(85),
	    step = __webpack_require__(273),
	    Iterators = __webpack_require__(87),
	    toIObject = __webpack_require__(34);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(163)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0; // next index
	  this._k = kind; // kind
	  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t,
	      kind = this._k,
	      index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 179 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Expose `Emitter`.
	 */

	module.exports = Emitter;

	/**
	 * Initialize a new `Emitter`.
	 *
	 * @api public
	 */

	function Emitter(obj) {
	  if (obj) return mixin(obj);
	};

	/**
	 * Mixin the emitter properties.
	 *
	 * @param {Object} obj
	 * @return {Object}
	 * @api private
	 */

	function mixin(obj) {
	  for (var key in Emitter.prototype) {
	    obj[key] = Emitter.prototype[key];
	  }
	  return obj;
	}

	/**
	 * Listen on the given `event` with `fn`.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
	  this._callbacks = this._callbacks || {};
	  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
	  return this;
	};

	/**
	 * Adds an `event` listener that will be invoked a single
	 * time then automatically removed.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.once = function (event, fn) {
	  function on() {
	    this.off(event, on);
	    fn.apply(this, arguments);
	  }

	  on.fn = fn;
	  this.on(event, on);
	  return this;
	};

	/**
	 * Remove the given callback for `event` or all
	 * registered callbacks.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
	  this._callbacks = this._callbacks || {};

	  // all
	  if (0 == arguments.length) {
	    this._callbacks = {};
	    return this;
	  }

	  // specific event
	  var callbacks = this._callbacks['$' + event];
	  if (!callbacks) return this;

	  // remove all handlers
	  if (1 == arguments.length) {
	    delete this._callbacks['$' + event];
	    return this;
	  }

	  // remove specific handler
	  var cb;
	  for (var i = 0; i < callbacks.length; i++) {
	    cb = callbacks[i];
	    if (cb === fn || cb.fn === fn) {
	      callbacks.splice(i, 1);
	      break;
	    }
	  }
	  return this;
	};

	/**
	 * Emit `event` with the given args.
	 *
	 * @param {String} event
	 * @param {Mixed} ...
	 * @return {Emitter}
	 */

	Emitter.prototype.emit = function (event) {
	  this._callbacks = this._callbacks || {};
	  var args = [].slice.call(arguments, 1),
	      callbacks = this._callbacks['$' + event];

	  if (callbacks) {
	    callbacks = callbacks.slice(0);
	    for (var i = 0, len = callbacks.length; i < len; ++i) {
	      callbacks[i].apply(this, args);
	    }
	  }

	  return this;
	};

	/**
	 * Return array of callbacks for `event`.
	 *
	 * @param {String} event
	 * @return {Array}
	 * @api public
	 */

	Emitter.prototype.listeners = function (event) {
	  this._callbacks = this._callbacks || {};
	  return this._callbacks['$' + event] || [];
	};

	/**
	 * Check if this emitter has `event` handlers.
	 *
	 * @param {String} event
	 * @return {Boolean}
	 * @api public
	 */

	Emitter.prototype.hasListeners = function (event) {
	  return !!this.listeners(event).length;
	};

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Module dependencies.
	 */

	var parser = __webpack_require__(91);
	var Emitter = __webpack_require__(182);

	/**
	 * Module exports.
	 */

	module.exports = Transport;

	/**
	 * Transport abstract constructor.
	 *
	 * @param {Object} options.
	 * @api private
	 */

	function Transport(opts) {
	  this.path = opts.path;
	  this.hostname = opts.hostname;
	  this.port = opts.port;
	  this.secure = opts.secure;
	  this.query = opts.query;
	  this.timestampParam = opts.timestampParam;
	  this.timestampRequests = opts.timestampRequests;
	  this.readyState = '';
	  this.agent = opts.agent || false;
	  this.socket = opts.socket;
	  this.enablesXDR = opts.enablesXDR;

	  // SSL options for Node.js client
	  this.pfx = opts.pfx;
	  this.key = opts.key;
	  this.passphrase = opts.passphrase;
	  this.cert = opts.cert;
	  this.ca = opts.ca;
	  this.ciphers = opts.ciphers;
	  this.rejectUnauthorized = opts.rejectUnauthorized;

	  // other options for Node.js client
	  this.extraHeaders = opts.extraHeaders;
	}

	/**
	 * Mix in `Emitter`.
	 */

	Emitter(Transport.prototype);

	/**
	 * Emits an error.
	 *
	 * @param {String} str
	 * @return {Transport} for chaining
	 * @api public
	 */

	Transport.prototype.onError = function (msg, desc) {
	  var err = new Error(msg);
	  err.type = 'TransportError';
	  err.description = desc;
	  this.emit('error', err);
	  return this;
	};

	/**
	 * Opens the transport.
	 *
	 * @api public
	 */

	Transport.prototype.open = function () {
	  if ('closed' == this.readyState || '' == this.readyState) {
	    this.readyState = 'opening';
	    this.doOpen();
	  }

	  return this;
	};

	/**
	 * Closes the transport.
	 *
	 * @api private
	 */

	Transport.prototype.close = function () {
	  if ('opening' == this.readyState || 'open' == this.readyState) {
	    this.doClose();
	    this.onClose();
	  }

	  return this;
	};

	/**
	 * Sends multiple packets.
	 *
	 * @param {Array} packets
	 * @api private
	 */

	Transport.prototype.send = function (packets) {
	  if ('open' == this.readyState) {
	    this.write(packets);
	  } else {
	    throw new Error('Transport not open');
	  }
	};

	/**
	 * Called upon open
	 *
	 * @api private
	 */

	Transport.prototype.onOpen = function () {
	  this.readyState = 'open';
	  this.writable = true;
	  this.emit('open');
	};

	/**
	 * Called with data.
	 *
	 * @param {String} data
	 * @api private
	 */

	Transport.prototype.onData = function (data) {
	  var packet = parser.decodePacket(data, this.socket.binaryType);
	  this.onPacket(packet);
	};

	/**
	 * Called with a decoded packet.
	 */

	Transport.prototype.onPacket = function (packet) {
	  this.emit('packet', packet);
	};

	/**
	 * Called upon close.
	 *
	 * @api private
	 */

	Transport.prototype.onClose = function () {
	  this.readyState = 'closed';
	  this.emit('close');
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// browser shim for xmlhttprequest module
	var hasCORS = __webpack_require__(897);

	module.exports = function (opts) {
	  var xdomain = opts.xdomain;

	  // scheme must be same when usign XDomainRequest
	  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
	  var xscheme = opts.xscheme;

	  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
	  // https://github.com/Automattic/engine.io-client/pull/217
	  var enablesXDR = opts.enablesXDR;

	  // XMLHttpRequest can be disabled on IE
	  try {
	    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {
	      return new XMLHttpRequest();
	    }
	  } catch (e) {}

	  // Use XDomainRequest for IE8 if enablesXDR is true
	  // because loading bar keeps flashing when using jsonp-polling
	  // https://github.com/yujiosaka/socke.io-ie8-loading-example
	  try {
	    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {
	      return new XDomainRequest();
	    }
	  } catch (e) {}

	  if (!xdomain) {
	    try {
	      return new ActiveXObject('Microsoft.XMLHTTP');
	    } catch (e) {}
	  }
	};

/***/ },
/* 182 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Expose `Emitter`.
	 */

	module.exports = Emitter;

	/**
	 * Initialize a new `Emitter`.
	 *
	 * @api public
	 */

	function Emitter(obj) {
	  if (obj) return mixin(obj);
	};

	/**
	 * Mixin the emitter properties.
	 *
	 * @param {Object} obj
	 * @return {Object}
	 * @api private
	 */

	function mixin(obj) {
	  for (var key in Emitter.prototype) {
	    obj[key] = Emitter.prototype[key];
	  }
	  return obj;
	}

	/**
	 * Listen on the given `event` with `fn`.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
	  this._callbacks = this._callbacks || {};
	  (this._callbacks[event] = this._callbacks[event] || []).push(fn);
	  return this;
	};

	/**
	 * Adds an `event` listener that will be invoked a single
	 * time then automatically removed.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.once = function (event, fn) {
	  var self = this;
	  this._callbacks = this._callbacks || {};

	  function on() {
	    self.off(event, on);
	    fn.apply(this, arguments);
	  }

	  on.fn = fn;
	  this.on(event, on);
	  return this;
	};

	/**
	 * Remove the given callback for `event` or all
	 * registered callbacks.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
	  this._callbacks = this._callbacks || {};

	  // all
	  if (0 == arguments.length) {
	    this._callbacks = {};
	    return this;
	  }

	  // specific event
	  var callbacks = this._callbacks[event];
	  if (!callbacks) return this;

	  // remove all handlers
	  if (1 == arguments.length) {
	    delete this._callbacks[event];
	    return this;
	  }

	  // remove specific handler
	  var cb;
	  for (var i = 0; i < callbacks.length; i++) {
	    cb = callbacks[i];
	    if (cb === fn || cb.fn === fn) {
	      callbacks.splice(i, 1);
	      break;
	    }
	  }
	  return this;
	};

	/**
	 * Emit `event` with the given args.
	 *
	 * @param {String} event
	 * @param {Mixed} ...
	 * @return {Emitter}
	 */

	Emitter.prototype.emit = function (event) {
	  this._callbacks = this._callbacks || {};
	  var args = [].slice.call(arguments, 1),
	      callbacks = this._callbacks[event];

	  if (callbacks) {
	    callbacks = callbacks.slice(0);
	    for (var i = 0, len = callbacks.length; i < len; ++i) {
	      callbacks[i].apply(this, args);
	    }
	  }

	  return this;
	};

	/**
	 * Return array of callbacks for `event`.
	 *
	 * @param {String} event
	 * @return {Array}
	 * @api public
	 */

	Emitter.prototype.listeners = function (event) {
	  this._callbacks = this._callbacks || {};
	  return this._callbacks[event] || [];
	};

	/**
	 * Check if this emitter has `event` handlers.
	 *
	 * @param {String} event
	 * @return {Boolean}
	 * @api public
	 */

	Emitter.prototype.hasListeners = function (event) {
	  return !!this.listeners(event).length;
	};

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getPrototype = __webpack_require__(908),
	    isHostObject = __webpack_require__(909),
	    isObjectLike = __webpack_require__(910);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object,
	 *  else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;

/***/ },
/* 184 */
/***/ function(module, exports) {

	'use strict';

	exports.endianness = function () {
	    return 'LE';
	};

	exports.hostname = function () {
	    if (typeof location !== 'undefined') {
	        return location.hostname;
	    } else return '';
	};

	exports.loadavg = function () {
	    return [];
	};

	exports.uptime = function () {
	    return 0;
	};

	exports.freemem = function () {
	    return Number.MAX_VALUE;
	};

	exports.totalmem = function () {
	    return Number.MAX_VALUE;
	};

	exports.cpus = function () {
	    return [];
	};

	exports.type = function () {
	    return 'Browser';
	};

	exports.release = function () {
	    if (typeof navigator !== 'undefined') {
	        return navigator.appVersion;
	    }
	    return '';
	};

	exports.networkInterfaces = exports.getNetworkInterfaces = function () {
	    return {};
	};

	exports.arch = function () {
	    return 'javascript';
	};

	exports.platform = function () {
	    return 'browser';
	};

	exports.tmpdir = exports.tmpDir = function () {
	    return '/tmp';
	};

	exports.EOL = '\n';

/***/ },
/* 185 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Compiles a querystring
	 * Returns string representation of the object
	 *
	 * @param {Object}
	 * @api private
	 */

	exports.encode = function (obj) {
	  var str = '';

	  for (var i in obj) {
	    if (obj.hasOwnProperty(i)) {
	      if (str.length) str += '&';
	      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
	    }
	  }

	  return str;
	};

	/**
	 * Parses a simple querystring into an object
	 *
	 * @param {String} qs
	 * @api private
	 */

	exports.decode = function (qs) {
	  var qry = {};
	  var pairs = qs.split('&');
	  for (var i = 0, l = pairs.length; i < l; i++) {
	    var pair = pairs[i].split('=');
	    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
	  }
	  return qry;
	};

/***/ },
/* 186 */
/***/ function(module, exports) {

	/**
	 * Random val context.
	 * @function random
	 * @returns {number} Random number between 0 and 1.
	 */

	'use strict';

	/** @lends random */

	function random() {
	  return Math.random();
	}

	module.exports = random;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Basic range calculations.
	 * @module rangecal
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get amount() {
	    return d(__webpack_require__(135));
	  },
	  get contains() {
	    return d(__webpack_require__(928));
	  },
	  get rate() {
	    return d(__webpack_require__(929));
	  },
	  get round() {
	    return d(__webpack_require__(930));
	  },
	  get value() {
	    return d(__webpack_require__(931));
	  }
	};

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(960);

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(94);
	var Danger = __webpack_require__(941);
	var ReactMultiChildUpdateTypes = __webpack_require__(332);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactInstrumentation = __webpack_require__(37);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(205);
	var setInnerHTML = __webpack_require__(140);
	var setTextContent = __webpack_require__(344);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function dangerouslyReplaceNodeWithMarkup(oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function processUpdates(parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;

/***/ },
/* 190 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function injectEventPluginOrder(InjectedEventPluginOrder) {
	    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function getPluginModuleForEvent(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function _resetEventPlugins() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var EventConstants = __webpack_require__(57);
	var ReactErrorUtils = __webpack_require__(198);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function injectComponentTree(Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function injectTreeTraversal(Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function validateEventDispatches(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function getInstanceFromNode(node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function getNodeFromInstance(node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function isAncestor(a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function getLowestCommonAncestor(a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function getParentInstance(inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function traverseTwoPhase(target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;

/***/ },
/* 193 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactPropTypes = __webpack_require__(334);
	var ReactPropTypeLocations = __webpack_require__(201);
	var ReactPropTypesSecret = __webpack_require__(202);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function value(props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function checked(props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function checkPropTypes(tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function getValue(inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function getChecked(inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function executeOnChange(inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactNoopUpdateQueue = __webpack_require__(199);

	var canDefineProperty = __webpack_require__(338);
	var emptyObject = __webpack_require__(92);
	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !((typeof partialState === 'undefined' ? 'undefined' : _typeof(partialState)) === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function get() {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function injectEnvironment(environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeHook
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(66);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var itemMap;
	var rootIDSet;

	var itemByKey;
	var rootByKey;

	if (canUseCollections) {
	  itemMap = new Map();
	  rootIDSet = new Set();
	} else {
	  itemByKey = {};
	  rootByKey = {};
	}

	var unmountedIDs = [];

	// Use non-numeric keys to prevent V8 performance issues:
	// https://github.com/facebook/react/pull/7232
	function getKeyFromID(id) {
	  return '.' + id;
	}
	function getIDFromKey(key) {
	  return parseInt(key.substr(1), 10);
	}

	function get(id) {
	  if (canUseCollections) {
	    return itemMap.get(id);
	  } else {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  }
	}

	function remove(id) {
	  if (canUseCollections) {
	    itemMap['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  }
	}

	function create(id, element, parentID) {
	  var item = {
	    element: element,
	    parentID: parentID,
	    text: null,
	    childIDs: [],
	    isMounted: false,
	    updateCount: 0
	  };

	  if (canUseCollections) {
	    itemMap.set(id, item);
	  } else {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  }
	}

	function addRoot(id) {
	  if (canUseCollections) {
	    rootIDSet.add(id);
	  } else {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  }
	}

	function removeRoot(id) {
	  if (canUseCollections) {
	    rootIDSet['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  }
	}

	function getRegisteredIDs() {
	  if (canUseCollections) {
	    return Array.from(itemMap.keys());
	  } else {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  }
	}

	function getRootIDs() {
	  if (canUseCollections) {
	    return Array.from(rootIDSet.keys());
	  } else {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  }
	}

	function purgeDeep(id) {
	  var item = get(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    remove(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function _getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function onSetChildren(id, nextChildIDs) {
	    var item = get(id);
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = get(nextChildID);
	      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || _typeof(nextChild.element) !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent ID is missing.
	      }
	      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
	    create(id, element, parentID);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function onMountComponent(id) {
	    var item = get(id);
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function onUpdateComponent(id) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function onUnmountComponent(id) {
	    var item = get(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function purgeUnmountedComponents() {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function isMounted(id) {
	    var item = get(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function getStackAddendumByID(id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function getChildIDs(id) {
	    var item = get(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function getDisplayName(id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return _getDisplayName(element);
	  },
	  getElement: function getElement(id) {
	    var item = get(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function getOwnerID(id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function getParentID(id) {
	    var item = get(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function getSource(id) {
	    var item = get(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function getText(id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function getUpdateCount(id) {
	    var item = get(id);
	    return item ? item.updateCount : 0;
	  },

	  getRegisteredIDs: getRegisteredIDs,

	  getRootIDs: getRootIDs
	};

	module.exports = ReactComponentTreeHook;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function rethrowCaughtError() {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(11);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(131);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 202 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(66);
	var ReactInstanceMap = __webpack_require__(107);
	var ReactInstrumentation = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(45);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function validateCallback(callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;

/***/ },
/* 204 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.3.1';

/***/ },
/* 205 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function createMicrosoftUnsafeLocalFunction(func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 206 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 207 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 208 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var ReactCompositeComponent = __webpack_require__(949);
	var ReactEmptyComponent = __webpack_require__(326);
	var ReactHostComponent = __webpack_require__(328);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : _prodInvariant('131', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : void 0;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (false) {
	    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(26);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 211 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement === 'undefined' ? 'undefined' : _typeof(prevElement);
	  var nextType = typeof nextElement === 'undefined' ? 'undefined' : _typeof(nextElement);
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(66);
	var ReactElement = __webpack_require__(44);

	var getIteratorFn = __webpack_require__(341);
	var invariant = __webpack_require__(5);
	var KeyEscapeUtils = __webpack_require__(193);
	var warning = __webpack_require__(11);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && (typeof component === 'undefined' ? 'undefined' : _typeof(component)) === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children === 'undefined' ? 'undefined' : _typeof(children);

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var emptyFunction = __webpack_require__(43);
	var warning = __webpack_require__(11);

	var validateDOMNesting = emptyFunction;

	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function updatedAncestorInfo(oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function findOwnerStack(instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function validateDOMNesting(childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

	var _createStore = __webpack_require__(346);

	var _createStore2 = _interopRequireDefault(_createStore);

	var _combineReducers = __webpack_require__(1003);

	var _combineReducers2 = _interopRequireDefault(_combineReducers);

	var _bindActionCreators = __webpack_require__(1002);

	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

	var _applyMiddleware = __webpack_require__(1001);

	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

	var _compose = __webpack_require__(345);

	var _compose2 = _interopRequireDefault(_compose);

	var _warning = __webpack_require__(347);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}

	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}

	if (false) {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}

	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];

/***/ },
/* 215 */
/***/ function(module, exports) {

	/**
	 * Supported types
	 * @namespace Types
	 */
	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	module.exports = Object.assign(exports, {
	  'builtin:date': {
	    is: function is(value) {
	      return value instanceof Date;
	    },
	    format: function format(value) {
	      return value;
	    },
	    parse: function parse(value) {
	      return new Date(value);
	    }
	  },
	  'builtin:error': {
	    is: function is(value) {
	      return value instanceof Error;
	    },
	    format: function format(_ref) {
	      var name = _ref.name;
	      var message = _ref.message;
	      var stack = _ref.stack;
	      return { name: name, message: message, stack: stack };
	    },
	    parse: function parse(_ref2) {
	      var name = _ref2.name;
	      var message = _ref2.message;
	      var stack = _ref2.stack;
	      return Object.assign(new Error(message), { name: name, message: message, stack: stack });
	    }
	  },
	  'builtin:regexp': {
	    is: function is(value) {
	      return value instanceof RegExp;
	    },
	    format: function format(value) {
	      return String(value);
	    },
	    parse: function parse(value) {
	      return eval(value.replace(/\//g, '/'));
	    }
	  },
	  'buildin:nan': {
	    is: function is(value) {
	      return typeof value === 'number' && Number.isNaN(value);
	    },
	    format: function format() {
	      return null;
	    },
	    parse: function parse() {
	      return NaN;
	    }
	  },
	  'buildin:symbol': {
	    is: function is(value) {
	      return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'symbol';
	    },
	    format: function format(value) {
	      return String(value);
	    },
	    parse: function parse(value) {
	      return typeof Symbol !== 'undefined' && Symbol.for(String(value).replace(/^Symbol\(|\)$/g, ''));
	    }
	  }
	});

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Module dependencies.
	 */

	var debug = __webpack_require__(24)('socket.io-parser');
	var json = __webpack_require__(907);
	var isArray = __webpack_require__(358);
	var Emitter = __webpack_require__(1050);
	var binary = __webpack_require__(1049);
	var isBuf = __webpack_require__(357);

	/**
	 * Protocol version.
	 *
	 * @api public
	 */

	exports.protocol = 4;

	/**
	 * Packet types.
	 *
	 * @api public
	 */

	exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];

	/**
	 * Packet type `connect`.
	 *
	 * @api public
	 */

	exports.CONNECT = 0;

	/**
	 * Packet type `disconnect`.
	 *
	 * @api public
	 */

	exports.DISCONNECT = 1;

	/**
	 * Packet type `event`.
	 *
	 * @api public
	 */

	exports.EVENT = 2;

	/**
	 * Packet type `ack`.
	 *
	 * @api public
	 */

	exports.ACK = 3;

	/**
	 * Packet type `error`.
	 *
	 * @api public
	 */

	exports.ERROR = 4;

	/**
	 * Packet type 'binary event'
	 *
	 * @api public
	 */

	exports.BINARY_EVENT = 5;

	/**
	 * Packet type `binary ack`. For acks with binary arguments.
	 *
	 * @api public
	 */

	exports.BINARY_ACK = 6;

	/**
	 * Encoder constructor.
	 *
	 * @api public
	 */

	exports.Encoder = Encoder;

	/**
	 * Decoder constructor.
	 *
	 * @api public
	 */

	exports.Decoder = Decoder;

	/**
	 * A socket.io Encoder instance
	 *
	 * @api public
	 */

	function Encoder() {}

	/**
	 * Encode a packet as a single string if non-binary, or as a
	 * buffer sequence, depending on packet type.
	 *
	 * @param {Object} obj - packet object
	 * @param {Function} callback - function to handle encodings (likely engine.write)
	 * @return Calls callback with Array of encodings
	 * @api public
	 */

	Encoder.prototype.encode = function (obj, callback) {
	  debug('encoding packet %j', obj);

	  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {
	    encodeAsBinary(obj, callback);
	  } else {
	    var encoding = encodeAsString(obj);
	    callback([encoding]);
	  }
	};

	/**
	 * Encode packet as string.
	 *
	 * @param {Object} packet
	 * @return {String} encoded
	 * @api private
	 */

	function encodeAsString(obj) {
	  var str = '';
	  var nsp = false;

	  // first is type
	  str += obj.type;

	  // attachments if we have them
	  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {
	    str += obj.attachments;
	    str += '-';
	  }

	  // if we have a namespace other than `/`
	  // we append it followed by a comma `,`
	  if (obj.nsp && '/' != obj.nsp) {
	    nsp = true;
	    str += obj.nsp;
	  }

	  // immediately followed by the id
	  if (null != obj.id) {
	    if (nsp) {
	      str += ',';
	      nsp = false;
	    }
	    str += obj.id;
	  }

	  // json data
	  if (null != obj.data) {
	    if (nsp) str += ',';
	    str += json.stringify(obj.data);
	  }

	  debug('encoded %j as %s', obj, str);
	  return str;
	}

	/**
	 * Encode packet as 'buffer sequence' by removing blobs, and
	 * deconstructing packet into object with placeholders and
	 * a list of buffers.
	 *
	 * @param {Object} packet
	 * @return {Buffer} encoded
	 * @api private
	 */

	function encodeAsBinary(obj, callback) {

	  function writeEncoding(bloblessData) {
	    var deconstruction = binary.deconstructPacket(bloblessData);
	    var pack = encodeAsString(deconstruction.packet);
	    var buffers = deconstruction.buffers;

	    buffers.unshift(pack); // add packet info to beginning of data list
	    callback(buffers); // write all the buffers
	  }

	  binary.removeBlobs(obj, writeEncoding);
	}

	/**
	 * A socket.io Decoder instance
	 *
	 * @return {Object} decoder
	 * @api public
	 */

	function Decoder() {
	  this.reconstructor = null;
	}

	/**
	 * Mix in `Emitter` with Decoder.
	 */

	Emitter(Decoder.prototype);

	/**
	 * Decodes an ecoded packet string into packet JSON.
	 *
	 * @param {String} obj - encoded packet
	 * @return {Object} packet
	 * @api public
	 */

	Decoder.prototype.add = function (obj) {
	  var packet;
	  if ('string' == typeof obj) {
	    packet = decodeString(obj);
	    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) {
	      // binary packet's json
	      this.reconstructor = new BinaryReconstructor(packet);

	      // no attachments, labeled binary but no binary data to follow
	      if (this.reconstructor.reconPack.attachments === 0) {
	        this.emit('decoded', packet);
	      }
	    } else {
	      // non-binary full packet
	      this.emit('decoded', packet);
	    }
	  } else if (isBuf(obj) || obj.base64) {
	    // raw binary data
	    if (!this.reconstructor) {
	      throw new Error('got binary data when not reconstructing a packet');
	    } else {
	      packet = this.reconstructor.takeBinaryData(obj);
	      if (packet) {
	        // received final buffer
	        this.reconstructor = null;
	        this.emit('decoded', packet);
	      }
	    }
	  } else {
	    throw new Error('Unknown type: ' + obj);
	  }
	};

	/**
	 * Decode a packet String (JSON data)
	 *
	 * @param {String} str
	 * @return {Object} packet
	 * @api private
	 */

	function decodeString(str) {
	  var p = {};
	  var i = 0;

	  // look up type
	  p.type = Number(str.charAt(0));
	  if (null == exports.types[p.type]) return error();

	  // look up attachments if type binary
	  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {
	    var buf = '';
	    while (str.charAt(++i) != '-') {
	      buf += str.charAt(i);
	      if (i == str.length) break;
	    }
	    if (buf != Number(buf) || str.charAt(i) != '-') {
	      throw new Error('Illegal attachments');
	    }
	    p.attachments = Number(buf);
	  }

	  // look up namespace (if any)
	  if ('/' == str.charAt(i + 1)) {
	    p.nsp = '';
	    while (++i) {
	      var c = str.charAt(i);
	      if (',' == c) break;
	      p.nsp += c;
	      if (i == str.length) break;
	    }
	  } else {
	    p.nsp = '/';
	  }

	  // look up id
	  var next = str.charAt(i + 1);
	  if ('' !== next && Number(next) == next) {
	    p.id = '';
	    while (++i) {
	      var c = str.charAt(i);
	      if (null == c || Number(c) != c) {
	        --i;
	        break;
	      }
	      p.id += str.charAt(i);
	      if (i == str.length) break;
	    }
	    p.id = Number(p.id);
	  }

	  // look up json data
	  if (str.charAt(++i)) {
	    try {
	      p.data = json.parse(str.substr(i));
	    } catch (e) {
	      return error();
	    }
	  }

	  debug('decoded %s as %j', str, p);
	  return p;
	}

	/**
	 * Deallocates a parser's resources
	 *
	 * @api public
	 */

	Decoder.prototype.destroy = function () {
	  if (this.reconstructor) {
	    this.reconstructor.finishedReconstruction();
	  }
	};

	/**
	 * A manager of a binary event's 'buffer sequence'. Should
	 * be constructed whenever a packet of type BINARY_EVENT is
	 * decoded.
	 *
	 * @param {Object} packet
	 * @return {BinaryReconstructor} initialized reconstructor
	 * @api private
	 */

	function BinaryReconstructor(packet) {
	  this.reconPack = packet;
	  this.buffers = [];
	}

	/**
	 * Method to be called when binary data received from connection
	 * after a BINARY_EVENT packet.
	 *
	 * @param {Buffer | ArrayBuffer} binData - the raw binary data received
	 * @return {null | Object} returns null if more binary data is expected or
	 *   a reconstructed packet object if all buffers have been received.
	 * @api private
	 */

	BinaryReconstructor.prototype.takeBinaryData = function (binData) {
	  this.buffers.push(binData);
	  if (this.buffers.length == this.reconPack.attachments) {
	    // done with buffer list
	    var packet = binary.reconstructPacket(this.reconPack, this.buffers);
	    this.finishedReconstruction();
	    return packet;
	  }
	  return null;
	};

	/**
	 * Cleans up binary packet reconstruction variables.
	 *
	 * @api private
	 */

	BinaryReconstructor.prototype.finishedReconstruction = function () {
	  this.reconPack = null;
	  this.buffers = [];
	};

	function error(data) {
	  return {
	    type: exports.ERROR,
	    data: 'parser error'
	  };
	}

/***/ },
/* 217 */
/***/ function(module, exports) {

	/**
	 * Convert string into trimmed string.
	 * @memberof module:stringcase/lib
	 * @function trimcase
	 * @param {string} str - String to convert.
	 * @returns {string} Trimmed case string.
	 */

	'use strict';

	/** @lends trimcase */

	function trimcase(str) {
	  return String(str).trim();
	}

	module.exports = trimcase;

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {"use strict";

	var nextTick = __webpack_require__(1076).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;

	// DOM APIs, for completeness

	exports.setTimeout = function () {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function () {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout = exports.clearInterval = function (timeout) {
	  timeout.close();
	};

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function () {};
	Timeout.prototype.close = function () {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function (item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function (item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function (item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout) item._onTimeout();
	    }, msecs);
	  }
	};

	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function (fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

	  immediateIds[id] = true;

	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });

	  return id;
	};

	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function (id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(218).setImmediate, __webpack_require__(218).clearImmediate))

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Operate two functions.
	 * @function _operate
	 * @param {number[]} vector1 - Vector to operate.
	 * @param {number[]} vector2 - Vector to operate.
	 * @param {function} operator - Operator function.
	 * @returns {number[]} - Operated vector.
	 * @private
	 */
	'use strict';

	var validateSameLength = __webpack_require__(1090);

	function _operate(vector1, vector2, operator) {
	  validateSameLength(vector1, vector2);

	  var len = vector1.length;
	  var result = [];
	  for (var i = 0; i < len; i++) {
	    var operated = operator(vector1[i], vector2[i], i);
	    result.push(operated);
	  }
	  return result;
	}

	module.exports = _operate;

/***/ },
/* 220 */
/***/ function(module, exports) {

	/**
	 * Scale vectors.
	 * @memberof module:veccal/lib
	 * @function scale
	 * @param {number[]} vector - Vector to scale.
	 * @param {number} rate - Scale rate
	 * @returns {number[]} - Scaled vector.
	 *
	 */

	'use strict';

	/** @lends scale */

	function scale(vector, rate) {
	  var result = [];
	  for (var i = 0, len = vector.length; i < len; i++) {
	    var val = vector[i] * rate;
	    result.push(val);
	  }
	  return result;
	}

	module.exports = scale;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Detect dark or not
	 * @function isDark
	 * @param {string} color - Color value
	 * @returns {boolean}
	 */
	'use strict';

	var parse = __webpack_require__(82);
	function isDark(color) {
	  var _parse$rgb = parse(color).rgb();

	  var r = _parse$rgb.r;
	  var g = _parse$rgb.g;
	  var b = _parse$rgb.b;

	  return r * 0.299 + g * 0.587 + b * 0.114 < 186;
	}

	module.exports = isDark;

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for captcha component.
	 * @module apeman-react-captcha
	 * @version 3.1.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApCaptcha = exports.ApCaptchaSvg = exports.ApCaptchaStyle = undefined;

	var _ap_captcha_style = __webpack_require__(398);

	var _ap_captcha_style2 = _interopRequireDefault(_ap_captcha_style);

	var _ap_captcha_svg = __webpack_require__(399);

	var _ap_captcha_svg2 = _interopRequireDefault(_ap_captcha_svg);

	var _ap_captcha = __webpack_require__(397);

	var _ap_captcha2 = _interopRequireDefault(_ap_captcha);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApCaptchaStyle = _ap_captcha_style2.default;
	exports.ApCaptchaSvg = _ap_captcha_svg2.default;
	exports.ApCaptcha = _ap_captcha2.default;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Checkbox component.
	 * @class ApCheckbox
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var DEFAULT_ICON = 'ion ion-android-checkbox-outline-blank';
	var DEFAULT_CHECKED_ICON = 'ion ion-android-checkbox';

	/** @lends ApCheckbox */

	var ApCheckbox = function (_Component) {
	  _inherits(ApCheckbox, _Component);

	  function ApCheckbox() {
	    _classCallCheck(this, ApCheckbox);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApCheckbox).apply(this, arguments));
	  }

	  _createClass(ApCheckbox, [{
	    key: 'render',
	    value: function render() {
	      var _iconClass;

	      var s = this;
	      var props = s.props;
	      var id = props.id;
	      var name = props.name;
	      var value = props.value;
	      var checked = props.checked;
	      var onChange = props.onChange;

	      var iconClass = (_iconClass = {
	        'ap-checkbox-icon-checked': checked
	      }, _defineProperty(_iconClass, props.checkedIcon, checked), _defineProperty(_iconClass, props.icon, !checked), _iconClass);

	      var className = (0, _classnames2.default)('ap-checkbox', props.className, {
	        'ap-checkbox-checked': checked
	      });
	      return _react2.default.createElement('label', { className: className,
	        htmlFor: id,
	        id: id + '-wrap' }, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-checkbox-icon', iconClass) }), _react2.default.createElement('input', { type: 'checkbox',
	        className: (0, _classnames2.default)('ap-checkbox-input'),
	        id: id,
	        name: name,
	        value: value,
	        checked: checked,
	        onChange: onChange }), _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-checkbox-title') }, props.title));
	    }
	  }]);

	  return ApCheckbox;
	}(_react.Component);

	Object.assign(ApCheckbox, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Document id */
	    id: _react.PropTypes.string.isRequired,
	    /** Name of checkbox input */
	    name: _react.PropTypes.string.isRequired,
	    /** Value of checkbox input */
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.bool]).isRequired,
	    /** Label title */
	    title: _react.PropTypes.string,
	    /** Checked or not */
	    checked: _react.PropTypes.bool,
	    /** Handle for change event */
	    onChange: _react.PropTypes.func,
	    /** Icon class name for normal state */
	    icon: _react.PropTypes.string,
	    /** Icon class name for checked state */
	    checkedIcon: _react.PropTypes.string
	  },

	  defaultProps: {
	    id: null,
	    name: null,
	    value: '',
	    title: '',
	    checked: false,
	    onChange: null,
	    icon: DEFAULT_ICON,
	    checkedIcon: DEFAULT_CHECKED_ICON
	  },

	  DEFAULT_ICON: DEFAULT_ICON,
	  DEFAULT_CHECKED_ICON: DEFAULT_CHECKED_ICON

	});

	exports.default = ApCheckbox;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for checkbox component.
	 * @module apeman-react-checkbox
	 * @version 4.1.0
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApCheckbox = exports.ApCheckboxStyle = exports.ApCheckboxGroup = undefined;

	var _ap_checkbox_group = __webpack_require__(414);

	var _ap_checkbox_group2 = _interopRequireDefault(_ap_checkbox_group);

	var _ap_checkbox_style = __webpack_require__(415);

	var _ap_checkbox_style2 = _interopRequireDefault(_ap_checkbox_style);

	var _ap_checkbox = __webpack_require__(223);

	var _ap_checkbox2 = _interopRequireDefault(_ap_checkbox);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApCheckboxGroup = _ap_checkbox_group2.default;
	exports.ApCheckboxStyle = _ap_checkbox_style2.default;
	exports.ApCheckbox = _ap_checkbox2.default;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Body for dialog.
	 * @class ApDialogBody
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApDialogBody */
	var ApDialogBody = function (_Component) {
	  _inherits(ApDialogBody, _Component);

	  function ApDialogBody() {
	    _classCallCheck(this, ApDialogBody);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDialogBody).apply(this, arguments));
	  }

	  _createClass(ApDialogBody, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-dialog-body', props.className),
	        style: Object.assign({}, props.style) }, props.children);
	    }
	  }]);

	  return ApDialogBody;
	}(_react.Component);

	exports.default = ApDialogBody;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Header for dialog.
	 * @class ApDialogHeader
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApDialogHeader */
	var ApDialogHeader = function (_Component) {
	  _inherits(ApDialogHeader, _Component);

	  function ApDialogHeader() {
	    _classCallCheck(this, ApDialogHeader);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDialogHeader).apply(this, arguments));
	  }

	  _createClass(ApDialogHeader, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-dialog-header', props.className),
	        style: Object.assign({}, props.style) }, props.children);
	    }
	  }]);

	  return ApDialogHeader;
	}(_react.Component);

	exports.default = ApDialogHeader;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Yes/No dialog.
	 * @class ApYesnoDialog
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	var _ap_dialog = __webpack_require__(144);

	var _ap_dialog2 = _interopRequireDefault(_ap_dialog);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApYesnoDialog */
	var ApYesnoDialog = function (_Component) {
	  _inherits(ApYesnoDialog, _Component);

	  function ApYesnoDialog() {
	    _classCallCheck(this, ApYesnoDialog);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApYesnoDialog).apply(this, arguments));
	  }

	  _createClass(ApYesnoDialog, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      if (!props.present) {
	        return null;
	      }
	      return _react2.default.createElement(_ap_dialog2.default, _extends({ className: (0, _classnames2.default)('ap-yesno-dialog', props.className),
	        style: Object.assign({}, props.style)
	      }, props), _react2.default.createElement('div', null, props.children), _react2.default.createElement('div', { className: 'ap-yesno-dialog-control' }, _react2.default.createElement(ApYesnoDialog.Button, { text: props.noText, onTap: props.onNo }), _react2.default.createElement(ApYesnoDialog.Button, { text: props.yesText, onTap: props.onYes })));
	    }
	  }]);

	  return ApYesnoDialog;
	}(_react.Component);

	Object.assign(ApYesnoDialog, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    present: _react.PropTypes.bool.isRequired,
	    /** Handler for tapping YES */
	    onYes: _react.PropTypes.func,
	    /** Handler for tapping NO */
	    onNo: _react.PropTypes.func,
	    /** Dialog title */
	    title: _react.PropTypes.string,
	    /** Text of YES button */
	    yesText: _react.PropTypes.string,
	    /** Text of NO button */
	    noText: _react.PropTypes.string
	  },

	  defaultProps: {
	    present: false,
	    onYes: null,
	    onNo: null,
	    title: null,
	    yesText: 'Yes',
	    noText: 'No'
	  },

	  // --------------------
	  // Sub components
	  // --------------------
	  Button: function Button(_ref) {
	    var text = _ref.text;
	    var onTap = _ref.onTap;

	    var s = this;
	    return _react2.default.createElement('a', { className: 'ap-yesno-dialog-button' }, _react2.default.createElement(_apemanReactTouchable.ApTouchable, { onTap: onTap }, _react2.default.createElement('span', { className: 'ap-yesno-dialog-button-text' }, text)));
	  }
	});

	exports.default = ApYesnoDialog;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * iframe components.
	 * @class ApFrame
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactSpinner = __webpack_require__(29);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApFrame */
	var ApFrame = _react2.default.createClass({
	  displayName: 'ApFrame',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Source URL string */
	    src: _react.PropTypes.string,
	    /** Theme of spinner */
	    spinner: _react.PropTypes.string,
	    /** Display with full screen */
	    full: _react.PropTypes.bool,
	    /** Component width */
	    width: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    /** Component height */
	    height: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    /** Ref to iframe */
	    iframeRef: _react.PropTypes.func
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    return {
	      spinning: !!props.src,
	      err: null
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      src: null,
	      full: false,
	      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME,
	      width: 'auto',
	      height: 'auto'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-frame', {
	      'ap-frame-full': props.full
	    }, props.className);
	    var style = Object.assign({
	      width: props.width,
	      height: props.height
	    }, props.style);
	    return _react2.default.createElement('div', { className: className,
	      style: style }, _react2.default.createElement(_apemanReactSpinner.ApSpinner, { enabled: state.spinning,
	      theme: props.spinner,
	      className: 'ap-frame-spinner'
	    }), _react2.default.createElement('iframe', { src: props.src,
	      className: 'ap-frame-frame',
	      frameBorder: '0',
	      onLoad: s.handleLoad,
	      ref: props.iframeRef
	    }), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var state = s.state;

	    var stopSpinning = state.spinning && !nextProps.src;
	    if (stopSpinning) {
	      s.setState({ spinning: false });
	    }
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  handleLoad: function handleLoad(e) {
	    var s = this;
	    var props = s.props;

	    s.setState({
	      spinning: false
	    });
	    if (props.onLoad) {
	      props.onLoad(e);
	    }
	  }

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApFrame;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List item arrow icon component.
	 * @class ApListItemArrowIcon
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_list_item_icon = __webpack_require__(149);

	var _ap_list_item_icon2 = _interopRequireDefault(_ap_list_item_icon);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListItemArrowIcon */
	var ApListItemArrowIcon = _react2.default.createClass({
	  displayName: 'ApListItemArrowIcon',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    direction: _react.PropTypes.oneOf(['up', 'down', 'right', 'left'])
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      direction: 'right'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-list-item-arrow-icon', 'fa fa-angle-' + props.direction, props.className);
	    return _react2.default.createElement(_ap_list_item_icon2.default, { className: className,
	      style: Object.assign({}, props.style) });
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApListItemArrowIcon;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Image for list item.
	 * @class ApListItemImage
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactImage = __webpack_require__(68);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListItemImage */
	var ApListItemImage = _react2.default.createClass({
	  displayName: 'ApListItemImage',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    src: _react.PropTypes.string,
	    alt: _react.PropTypes.string,
	    scale: _react.PropTypes.oneOf(['fit', 'fill', 'none']),
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      src: null,
	      alt: null,
	      width: null,
	      height: null,
	      scale: 'fill'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-list-item-image', props.className) }, _react2.default.createElement(_apemanReactImage.ApImage, { src: props.src,
	      alt: props.alt,
	      scale: props.scale,
	      width: props.width,
	      height: props.height
	    }));
	  }
	});

	exports.default = ApListItemImage;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Content of list item.
	 * @class ApListItemText
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListItemText */
	var ApListItemText = _react2.default.createClass({
	  displayName: 'ApListItemText',

	  mixins: [],
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-list-item-text', props.className) }, props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApListItemText;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for resize mixins
	 * @module apeman-react-mixin-resize
	 * @version 1.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApResizeMixin = undefined;

	var _ap_resize_mixin = __webpack_require__(515);

	var _ap_resize_mixin2 = _interopRequireDefault(_ap_resize_mixin);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApResizeMixin = _ap_resize_mixin2.default;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for pager components.
	 * @class ApPagerItem
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApPagerItem */
	var ApPagerItem = function (_Component) {
	  _inherits(ApPagerItem, _Component);

	  function ApPagerItem() {
	    _classCallCheck(this, ApPagerItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApPagerItem).apply(this, arguments));
	  }

	  _createClass(ApPagerItem, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var className = (0, _classnames2.default)('ap-pager-item', {
	        'ap-pager-item-selected': props.selected
	      }, props.className);
	      return _react2.default.createElement('a', { className: className,
	        style: Object.assign({}, props.style)
	      }, _react2.default.createElement('span', { className: 'ap-pager-item-inner' }, props.title, props.children));
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApPagerItem;
	}(_react.Component);

	Object.assign(ApPagerItem, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Text */
	    title: _react.PropTypes.string,
	    /** Selected or not */
	    selected: _react.PropTypes.bool,
	    /** Data for event */
	    data: _react.PropTypes.any
	  },

	  defaultProps: {
	    selected: false
	  }

	});

	exports.default = ApPagerItem; // Dummy export for doc parser

	exports.default = (0, _apemanReactTouchable.withTouch)(ApPagerItem, {
	  getTouchData: function getTouchData() {
	    var s = this;
	    var props = s.props;

	    return props.data;
	  }
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Radio button component.
	 * @class ApRadio
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	var DEFAULT_ICON = 'ion ion-ios-circle-outline';
	var DEFAULT_CHECKED_ICON = 'ion ion-ios-circle-filled';

	/** @lends ApRadio */
	var ApRadio = _react2.default.createClass({
	  displayName: 'ApRadio',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Element id of the radio box */
	    id: _react.PropTypes.string.isRequired,
	    /** Name of the radio box */
	    name: _react.PropTypes.string.isRequired,
	    /** value of the radio box */
	    value: _react.PropTypes.string.isRequired,
	    /** Title text */
	    title: _react.PropTypes.string,
	    /** Checked or not */
	    checked: _react.PropTypes.bool,
	    /** Handler for change event */
	    onChange: _react.PropTypes.func,
	    /** Class name for icon */
	    icon: _react.PropTypes.string,
	    /** Class name for checked icon */
	    checkedIcon: _react.PropTypes.string
	  },

	  statics: {
	    DEFAULT_ICON: DEFAULT_ICON,
	    DEFAULT_CHECKED_ICON: DEFAULT_CHECKED_ICON
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      id: null,
	      name: null,
	      value: null,
	      title: '',
	      checked: false,
	      onChange: null,
	      icon: DEFAULT_ICON,
	      checkedIcon: DEFAULT_CHECKED_ICON
	    };
	  },
	  render: function render() {
	    var _iconClass;

	    var s = this;
	    var props = s.props;
	    var id = props.id;
	    var name = props.name;
	    var value = props.value;
	    var checked = props.checked;
	    var onChange = props.onChange;

	    var iconClass = (_iconClass = {
	      'ap-radio-icon-checked': checked
	    }, _defineProperty(_iconClass, props.checkedIcon, checked), _defineProperty(_iconClass, props.icon, !checked), _iconClass);

	    var className = (0, _classnames2.default)('ap-radio', {
	      'ap-checkbox-checked': checked
	    });
	    return _react2.default.createElement('label', { className: className,
	      htmlFor: id,
	      id: id + '-wrap' }, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-radio-icon', iconClass) }), _react2.default.createElement('input', { type: 'radio',
	      className: (0, _classnames2.default)('ap-radio-input'),
	      id: id,
	      name: name,
	      value: value,
	      checked: checked,
	      onChange: onChange }), _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-radio-title') }, props.title));
	  }
	});

	exports.default = ApRadio;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Handle of range component.
	 * @class ApRangeHandle
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactDraggable = __webpack_require__(113);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRangeHandle */
	var ApRangeHandle = _react2.default.createClass({
	  displayName: 'ApRangeHandle',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Handle for move */
	    onMove: _react.PropTypes.func,
	    shouldMove: _react.PropTypes.func,
	    x: _react.PropTypes.number,
	    minX: _react.PropTypes.number,
	    maxX: _react.PropTypes.number
	  },

	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactDraggable.ApDraggable, { onMove: props.onMove,
	      shouldMove: props.shouldMove,
	      x: props.x,
	      minX: props.minX,
	      maxX: props.maxX,
	      className: (0, _classnames2.default)('ap-range-handle', props.className),
	      direction: 'HORIZONTAL' }, _react2.default.createElement('div', null, _react2.default.createElement('div', { className: 'ap-range-handle-area' }), _react2.default.createElement('div', { className: 'ap-range-handle-icon' })));
	  }
	});

	exports.default = ApRangeHandle;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Range label component.
	 * @class ApRangeLabel
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRangeLabel */
	var ApRangeLabel = _react2.default.createClass({
	  displayName: 'ApRangeLabel',

	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    value: _react.PropTypes.number
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      value: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('label', { className: (0, _classnames2.default)('ap-range-label', props.className) }, _react2.default.createElement('span', null, props.value));
	  }
	});

	exports.default = ApRangeLabel;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for scroll components.
	 * @module apeman-react-scroll
	 * @version 2.0.10
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApScroll = exports.ApScrollStyle = undefined;

	var _ap_scroll_style = __webpack_require__(561);

	var _ap_scroll_style2 = _interopRequireDefault(_ap_scroll_style);

	var _ap_scroll = __webpack_require__(560);

	var _ap_scroll2 = _interopRequireDefault(_ap_scroll);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApScrollStyle = _ap_scroll_style2.default;
	exports.ApScroll = _ap_scroll2.default;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Item component
	 * @class ApSelectItem
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _asobj = __webpack_require__(8);

	var _apemanReactTouchable = __webpack_require__(9);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApSelectItem */
	var ApSelectItem = function (_Component) {
	  _inherits(ApSelectItem, _Component);

	  function ApSelectItem() {
	    _classCallCheck(this, ApSelectItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApSelectItem).apply(this, arguments));
	  }

	  _createClass(ApSelectItem, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var hasChildren = _react2.default.Children.count(props.children) > 0;
	      return _react2.default.createElement('a', { className: (0, _classnames2.default)('ap-select-item', {
	          'ap-select-item-focused': props.focused
	        }) }, hasChildren ? props.children : props.label);
	    }

	    // --------------------
	    // Lifecycle
	    // --------------------

	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApSelectItem;
	}(_react.Component);

	Object.assign(ApSelectItem, {

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Data for event */
	    data: _react.PropTypes.string,
	    /** Item label text */
	    label: _react.PropTypes.string,
	    /** Focused or not */
	    focused: _react.PropTypes.bool
	  },

	  defaultProps: {
	    label: null,
	    data: null,
	    focused: false
	  }
	});

	exports.default = ApSelectItem;
	exports.default = (0, _apemanReactTouchable.withTouch)(ApSelectItem, {
	  getTouchData: function getTouchData() {
	    var s = this;
	    var props = s.props;

	    return props.data;
	  }
	});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Label component
	 * @class ApSelectLabel
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactTouchable = __webpack_require__(9);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApSelectLabel */
	var ApSelectLabel = function (_Component) {
	  _inherits(ApSelectLabel, _Component);

	  function ApSelectLabel() {
	    _classCallCheck(this, ApSelectLabel);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApSelectLabel).apply(this, arguments));
	  }

	  _createClass(ApSelectLabel, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var hasVal = !!props.value;
	      var className = (0, _classnames2.default)('ap-select-label-value', {
	        'ap-select-label-placeholder': !hasVal
	      });
	      return _react2.default.createElement('a', { className: 'ap-select-label' }, _react2.default.createElement('span', { className: className }, hasVal ? props.value : props.placeholder), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: props.icon }));
	    }
	  }]);

	  return ApSelectLabel;
	}(_react.Component);

	Object.assign(ApSelectLabel, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    placeholder: _react.PropTypes.string,
	    icon: _react.PropTypes.string
	  },

	  defaultProps: {
	    value: null
	  }

	});

	exports.default = ApSelectLabel;
	exports.default = (0, _apemanReactTouchable.withTouch)(ApSelectLabel, {
	  getTouchData: function getTouchData() {
	    var s = this;
	    var props = s.props;

	    return props.data;
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for select component.
	 * @module apeman-react-select
	 * @version 3.0.6
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSelect = exports.ApSelectStyle = exports.ApSelectLabel = exports.ApSelectItem = undefined;

	var _ap_select_item = __webpack_require__(238);

	var _ap_select_item2 = _interopRequireDefault(_ap_select_item);

	var _ap_select_label = __webpack_require__(239);

	var _ap_select_label2 = _interopRequireDefault(_ap_select_label);

	var _ap_select_style = __webpack_require__(572);

	var _ap_select_style2 = _interopRequireDefault(_ap_select_style);

	var _ap_select = __webpack_require__(571);

	var _ap_select2 = _interopRequireDefault(_ap_select);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApSelectItem = _ap_select_item2.default;
	exports.ApSelectLabel = _ap_select_label2.default;
	exports.ApSelectStyle = _ap_select_style2.default;
	exports.ApSelect = _ap_select2.default;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Handle of slider component.
	 * @class ApSliderHandle
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactDraggable = __webpack_require__(113);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSliderHandle */
	var ApSliderHandle = _react2.default.createClass({
	  displayName: 'ApSliderHandle',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    onMove: _react.PropTypes.func,
	    shouldMove: _react.PropTypes.func,
	    x: _react.PropTypes.number,
	    minX: _react.PropTypes.number,
	    maxX: _react.PropTypes.number
	  },

	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactDraggable.ApDraggable, { onMove: props.onMove,
	      shouldMove: props.shouldMove,
	      x: props.x,
	      minX: props.minX,
	      maxX: props.maxX,
	      className: (0, _classnames2.default)('ap-slider-handle', props.className),
	      direction: 'HORIZONTAL' }, _react2.default.createElement('div', null, _react2.default.createElement('div', { className: 'ap-slider-handle-area' }), _react2.default.createElement('div', { className: 'ap-slider-handle-icon' })));
	  }
	});

	exports.default = ApSliderHandle;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Slider label component.
	 * @class ApSliderLabel
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSliderLabel */
	var ApSliderLabel = _react2.default.createClass({
	  displayName: 'ApSliderLabel',

	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    value: _react.PropTypes.number
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      value: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('label', { className: (0, _classnames2.default)('ap-slider-label', props.className) }, _react2.default.createElement('span', null, props.value));
	  }
	});

	exports.default = ApSliderLabel;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for spinner.
	 * @class ApSpinner
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var SpinnerThemes = {
	  a: ['fa', 'fa-spin', 'fa-spinner'],
	  b: ['fa', 'fa-spin', 'fa-circle-o-notch'],
	  c: ['fa', 'fa-spin', 'fa-refresh'],
	  d: ['fa', 'fa-spin', 'fa-gear'],
	  e: ['fa', 'fa-spin', 'fa-pulse']
	};
	var SpinnerSizes = ['medium', 'xx-small', 'x-small', 'small', 'large', 'x-large', 'xx-large', 'smaller', 'larger'];

	var DEFAULT_THEME = 'c';
	var DEFAULT_SIZE = 'large';

	/** @lends ApSpinner */

	var ApSpinner = function (_Component) {
	  _inherits(ApSpinner, _Component);

	  function ApSpinner() {
	    _classCallCheck(this, ApSpinner);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApSpinner).apply(this, arguments));
	  }

	  _createClass(ApSpinner, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var className = (0, _classnames2.default)('ap-spinner', props.className, {
	        'ap-spinner-cover': !!props.cover,
	        'ap-spinner-enabled': !!props.enabled
	      });
	      return _react2.default.createElement('div', { className: className,
	        style: Object.assign({}, props.style) }, _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-spinner-icon', SpinnerThemes[props.theme]),
	        style: { fontSize: props.size }
	      }));
	    }

	    // --------------------
	    // Lifecycle
	    // --------------------

	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var s = this;
	      s.setState({
	        iconVisible: true
	      });
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      var s = this;
	    }

	    // --------------------
	    // Custom
	    // --------------------

	  }]);

	  return ApSpinner;
	}(_react.Component);

	Object.assign(ApSpinner, {
	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    /** Shows spin */
	    enabled: _react.PropTypes.bool,
	    /** Theme of the spinner */
	    theme: _react.PropTypes.oneOf(Object.keys(SpinnerThemes)),
	    /** Size of spinner icon */
	    size: _react.PropTypes.oneOf(SpinnerSizes),
	    /** show as cover */
	    cover: _react.PropTypes.bool
	  },
	  defaultProps: {
	    enabled: false,
	    theme: DEFAULT_THEME,
	    size: DEFAULT_SIZE
	  },
	  DEFAULT_THEME: DEFAULT_THEME
	});

	exports.default = ApSpinner;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for switch components
	 * @module apeman-react-switch
	 * @version 2.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSwitch = exports.ApSwitchStyle = undefined;

	var _ap_switch_style = __webpack_require__(587);

	var _ap_switch_style2 = _interopRequireDefault(_ap_switch_style);

	var _ap_switch = __webpack_require__(586);

	var _ap_switch2 = _interopRequireDefault(_ap_switch);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApSwitchStyle = _ap_switch_style2.default;
	exports.ApSwitch = _ap_switch2.default;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Basic style for ApTheme.
	 * @class ApBasicThemeStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactBasic = __webpack_require__(83);

	var _apemanReactBasic2 = _interopRequireDefault(_apemanReactBasic);

	var _apemanReactStyle = __webpack_require__(4);

	var _render_style_data = __webpack_require__(151);

	var _render_style_data2 = _interopRequireDefault(_render_style_data);

	var _style_content = __webpack_require__(247);

	var _style_content2 = _interopRequireDefault(_style_content);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApBasicThemeStyle */
	var ApBasicThemeStyle = _react2.default.createClass({
	  displayName: 'ApBasicThemeStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    dominant: _react.PropTypes.string.isRequired,
	    subordinate: _react.PropTypes.string,
	    accent: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      dominant: '#38E',
	      subordinate: '#FFF',
	      accent: '#EE3'
	    };
	  },

	  statics: {
	    css: function css(config) {
	      var dominant = config.dominant;
	      var subordinate = config.subordinate;
	      var accent = config.accent;

	      return [_apemanReactBasic2.default.ApContainerStyle, _apemanReactBasic2.default.ApTabStyle, _apemanReactBasic2.default.ApIconStyle, _apemanReactBasic2.default.ApSpinnerStyle, _apemanReactBasic2.default.ApImageStyle, _apemanReactBasic2.default.ApNoteStyle, _apemanReactBasic2.default.ApTagStyle, _apemanReactBasic2.default.ApListStyle, _apemanReactBasic2.default.ApButtonStyle, _apemanReactBasic2.default.ApCheckboxStyle, _apemanReactBasic2.default.ApRadioStyle, _apemanReactBasic2.default.ApArticleStyle, _apemanReactBasic2.default.ApSectionStyle, _apemanReactBasic2.default.ApAsideStyle, _apemanReactBasic2.default.ApTouchableStyle, _apemanReactBasic2.default.ApDraggableStyle, _apemanReactBasic2.default.ApTextStyle, _apemanReactBasic2.default.ApSelectStyle, _apemanReactBasic2.default.ApPasswordStyle, _apemanReactBasic2.default.ApSearchStyle, _apemanReactBasic2.default.ApUploadStyle, _apemanReactBasic2.default.ApToggleStyle, _apemanReactBasic2.default.ApLinksStyle, _apemanReactBasic2.default.ApScrollStyle, _apemanReactBasic2.default.ApMenuStyle, _apemanReactBasic2.default.ApInfoStyle, _apemanReactBasic2.default.ApFrameStyle, _apemanReactBasic2.default.ApCaptchaStyle, _apemanReactBasic2.default.ApFieldStyle, _apemanReactBasic2.default.ApToastStyle, _apemanReactBasic2.default.ApBodyStyle, _apemanReactBasic2.default.ApDropdownStyle, _apemanReactBasic2.default.ApHeaderStyle, _apemanReactBasic2.default.ApMainStyle, _apemanReactBasic2.default.ApFooterStyle, _apemanReactBasic2.default.ApModalStyle, _apemanReactBasic2.default.ApDialogStyle, _apemanReactBasic2.default.ApYesnoDialogStyle, _apemanReactBasic2.default.ApConfirmDialogStyle, _apemanReactBasic2.default.ApFormStyle, _apemanReactBasic2.default.ApNoticeStyle, _apemanReactBasic2.default.ApSliderStyle, _apemanReactBasic2.default.ApRangeStyle, _apemanReactBasic2.default.ApAccordionStyle, _apemanReactBasic2.default.ApPageStyle, _apemanReactBasic2.default.ApJumbotronStyle, _apemanReactBasic2.default.ApViewStyle, _apemanReactBasic2.default.ApViewStackStyle, _apemanReactBasic2.default.ApDoneStyle, _apemanReactBasic2.default.ApDevtoolStyle, _apemanReactBasic2.default.ApGridStyle, _apemanReactBasic2.default.ApCardStyle, _apemanReactBasic2.default.ApCatalogStyle, _apemanReactBasic2.default.ApSwitchStyle, _apemanReactBasic2.default.ApTableStyle, _apemanReactBasic2.default.ApPagerStyle, (0, _style_content2.default)(_react2.default.createElement(_apemanReactBasic2.default.ApChatStyle, { highlightColor: dominant }))].map(function (style) {
	        if (typeof style === 'string') {
	          return style;
	        }
	        var props = Object.assign({}, style.getDefaultProps(), {
	          highlightColor: dominant, backgroundColor: subordinate
	        });
	        if (!style.styleData) {
	          throw new Error('.styleData() is not implemented on ' + style.displayName);
	        }
	        return (0, _render_style_data2.default)(style.styleData(props));
	      }).join('');
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var data = {
	      '.ap-basic-theme': {}
	    };
	    var smallMediaData = {};
	    var mediumMediaData = {};
	    var largeMediaData = {};

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(data, props.style),
	      smallMediaData: smallMediaData,
	      mediumMediaData: mediumMediaData,
	      largeMediaData: largeMediaData
	    }, ApBasicThemeStyle.css(props), props.children);
	  }
	});

	exports.default = ApBasicThemeStyle;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Basic style for ApTheme.
	 * @class ApHandyThemeStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactHandy = __webpack_require__(453);

	var _apemanReactHandy2 = _interopRequireDefault(_apemanReactHandy);

	var _apemanReactStyle = __webpack_require__(4);

	var _render_style_data = __webpack_require__(151);

	var _render_style_data2 = _interopRequireDefault(_render_style_data);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHandyThemeStyle */
	var ApHandyThemeStyle = _react2.default.createClass({
	  displayName: 'ApHandyThemeStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    dominant: _react.PropTypes.string.isRequired,
	    subordinate: _react.PropTypes.string.isRequired,
	    accent: _react.PropTypes.string.isRequired
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    css: function css(config) {
	      var dominant = config.dominant;
	      var subordinate = config.subordinate;
	      var accent = config.accent;

	      return [_apemanReactHandy2.default.ApSignStyle, _apemanReactHandy2.default.ApRecoverStyle, _apemanReactHandy2.default.ApProfileStyle, _apemanReactHandy2.default.ApResignStyle].map(function (style) {
	        if (typeof style === 'string') {
	          return style;
	        }
	        var props = Object.assign({}, style.getDefaultProps(), {
	          highlightColor: dominant, backgroundColor: subordinate
	        });
	        return (0, _render_style_data2.default)(style.styleData(props));
	      }).join('');
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var dominant = props.dominant;
	    var subordinate = props.subordinate;
	    var accent = props.accent;

	    var data = {
	      '.ap-handy-theme': {}
	    };
	    var smallMediaData = {};
	    var mediumMediaData = {};
	    var largeMediaData = {};

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(data, props.style),
	      smallMediaData: smallMediaData,
	      mediumMediaData: mediumMediaData,
	      largeMediaData: largeMediaData
	    }, ApHandyThemeStyle.css(props), props.children);
	  }
	});

	exports.default = ApHandyThemeStyle;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function styleContent
	 */

	'use strict';

	var ReactDOM = __webpack_require__(188);

	/** @lends styleContent */
	function styleContent(elm) {
	  var markup = ReactDOM.renderToStaticMarkup(elm);
	  return markup.replace(/<style.*?>/, '').replace(/<\/style.*?>/, '');
	}

	module.exports = styleContent;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Error toast.
	 * @class ApErrorToast
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _ap_toast = __webpack_require__(100);

	var _ap_toast2 = _interopRequireDefault(_ap_toast);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApErrorToast */
	var ApErrorToast = _react2.default.createClass({
	  displayName: 'ApErrorToast',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    message: _react.PropTypes.string,
	    duration: _react.PropTypes.number,
	    icon: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      items: ''
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      message: null,
	      duration: 2000,
	      icon: 'fa fa-check-circle'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_ap_toast2.default, _extends({}, props, { className: 'ap-error-toast' }));
	  }
	});

	exports.default = ApErrorToast;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Info toast.
	 * @class ApInfoToast
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _ap_toast = __webpack_require__(100);

	var _ap_toast2 = _interopRequireDefault(_ap_toast);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApInfoToast */
	var ApInfoToast = _react2.default.createClass({
	  displayName: 'ApInfoToast',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    message: _react.PropTypes.string,
	    duration: _react.PropTypes.number,
	    icon: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      items: ''
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      message: null,
	      duration: 2000,
	      icon: 'fa fa-exclamation-circle'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_ap_toast2.default, _extends({}, props, { className: 'ap-info-toast' }));
	  }
	});

	exports.default = ApInfoToast;

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Toast item component
	 * @class ApToastItem
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _asobj = __webpack_require__(8);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApToastItem */
	var ApToastItem = _react2.default.createClass({
	  displayName: 'ApToastItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    text: _react.PropTypes.string,
	    icon: _react.PropTypes.string
	  },

	  mixins: [],

	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: 'ap-toast-item',
	      'data-text': props.text }, _react2.default.createElement('span', { className: 'ap-toast-text' }, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-toast-item-icon', props.icon) }), props.text), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApToastItem; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApToastItem);

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Warn toast.
	 * @class ApWarnToast
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _ap_toast = __webpack_require__(100);

	var _ap_toast2 = _interopRequireDefault(_ap_toast);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApWarnToast */
	var ApWarnToast = _react2.default.createClass({
	  displayName: 'ApWarnToast',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    message: _react.PropTypes.string,
	    duration: _react.PropTypes.number,
	    icon: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      items: ''
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      message: null,
	      duration: 2000,
	      icon: 'fa fa-warning'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_ap_toast2.default, _extends({}, props, { className: 'ap-warn-toast' }));
	  }
	});

	exports.default = ApWarnToast;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for toggle components.
	 * @class ApToggleItem
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApToggleItem */
	var ApToggleItem = function (_Component) {
	  _inherits(ApToggleItem, _Component);

	  function ApToggleItem() {
	    _classCallCheck(this, ApToggleItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApToggleItem).apply(this, arguments));
	  }

	  _createClass(ApToggleItem, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var className = (0, _classnames2.default)('ap-toggle-item', {
	        'ap-toggle-item-active': props.active
	      }, props.className);
	      var buttonProps = (0, _asobj.clone)(props, {
	        without: 'active'
	      });
	      return _react2.default.createElement(_apemanReactButton.ApButton, _extends({}, buttonProps, {
	        className: className,
	        style: Object.assign({}, props.style)
	      }), props.children);
	    }
	  }]);

	  return ApToggleItem;
	}(_react.Component);

	Object.assign(ApToggleItem, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    active: _react.PropTypes.bool
	  },
	  defaultProps: {}

	});

	exports.default = ApToggleItem;

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create an new hammer instance
	 * @function newHammer
	 */
	'use strict';

	/** @lends newHammer */

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	function newHammer(node) {
	  // Require here to avoid non-browser error
	  var Hammer = __webpack_require__(304);
	  var hammer = new Hammer(node, {
	    cssProps: {
	      userSelect: true
	    }
	  });
	  return Object.assign(hammer, { Hammer: Hammer });
	}

	exports.default = newHammer;

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Higher order component with touching feature
	 * @function withTouch
	 * @param {function} Component - A component constructor
	 * @returns {function} - Wrapped component
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _breact = __webpack_require__(90);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _asobj = __webpack_require__(8);

	var _enums = __webpack_require__(619);

	var _new_hammer = __webpack_require__(253);

	var _new_hammer2 = _interopRequireDefault(_new_hammer);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	var propTypes = {
	  /** Handler for "tap" event */
	  onTap: _react.PropTypes.func,
	  /** Handler for "doubletap" event */
	  onDoubleTap: _react.PropTypes.func,
	  /** Handler for "pan" event */
	  onPan: _react.PropTypes.func,
	  /** Handler for "panstart" event */
	  onPanStart: _react.PropTypes.func,
	  /** Handler for "panmove" event */
	  onPanMove: _react.PropTypes.func,
	  /** Handler for "panend" event */
	  onPanEnd: _react.PropTypes.func,
	  /** Handler for "pancancel" event */
	  onPanCancel: _react.PropTypes.func,
	  /** Handler for "swipe" event */
	  onSwipe: _react.PropTypes.func,
	  /** Handler for "press" event */
	  onPress: _react.PropTypes.func,
	  /** Handler for "pressup" event */
	  onPressUp: _react.PropTypes.func,
	  /** Handler for "pinch" event */
	  onPinch: _react.PropTypes.func,
	  /** Handler for "pinchstart" event */
	  onPinchStart: _react.PropTypes.func,
	  /** Handler for "pinchmove" event */
	  onPinchMove: _react.PropTypes.func,
	  /** Handler for "pinchend" event */
	  onPinchEnd: _react.PropTypes.func,
	  /** Handler for "pinchcancel" event */
	  onPinchCancel: _react.PropTypes.func,
	  /** Handler for "rotate" event */
	  onRotate: _react.PropTypes.func,
	  /** Handler for "rotatestart" event */
	  onRotateStart: _react.PropTypes.func,
	  /** Handler for "rotatemove" event */
	  onRotateMove: _react.PropTypes.func,
	  /** Handler for "rotateend" event */
	  onRotateEnd: _react.PropTypes.func,
	  /** Handler for "rotatecancel" event */
	  onRotateCancel: _react.PropTypes.func,
	  /** Options for touch */
	  touchOptions: _react.PropTypes.object,
	  /** Pixcel for pan threshold */
	  panThreshold: _react.PropTypes.number,
	  /** Direction for pan */
	  panDirection: _react.PropTypes.oneOf(_enums.directions),
	  /** Direction for swipe */
	  swipeDirection: _react.PropTypes.oneOf(_enums.directions)
	};

	function createTouchHammer(node, props, getData) {
	  if (!node) {
	    return;
	  }
	  var hammer = (0, _new_hammer2.default)(node);
	  if (props.touchOptions) {
	    hammer.set(props.touchOptions);
	  }
	  Object.keys(propTypes).filter(function (key) {
	    return !!props[key];
	  }).forEach(function (key) {
	    if (/^on/.test(key)) {
	      (function () {
	        var event = key.replace(/^on/, '').toLowerCase();
	        var handler = props[key];
	        hammer.on(event, function (e) {
	          e.data = getData(); // Set touching data.
	          handler(e);
	        });
	      })();
	    }
	    if (/Direction$/.test(key)) {
	      var gesture = key.replace(/Direction$/, '');
	      hammer.get(gesture).set({ direction: hammer.Hammer['DIRECTION_' + props[key]] });
	    }
	    if (/Threshold$/.test(key)) {
	      var threshold = key.replace(/Threshold$/, '');
	      hammer.get(threshold).set({ threshold: props[key] });
	    }
	  });
	  return hammer;
	}

	function destroyTouchHammer(hammer) {
	  if (!hammer) {
	    return;
	  }
	  hammer.stop();
	  hammer.destroy();
	}

	function supportsTouch(props) {
	  var touchableKey = Object.keys(propTypes);
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;

	  try {
	    for (var _iterator = Object.keys(props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var key = _step.value;

	      var hit = !!~touchableKey.indexOf(key);
	      if (hit) {
	        return true;
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }

	  return false;
	}

	/** @lends withTouch */
	function withTouch(Component) {
	  var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var getTouchData = config.getTouchData;

	  var spec = Object.assign({
	    displayName: 'withTouch',

	    propTypes: propTypes,

	    render: function render() {
	      var s = this;
	      var props = s.props;

	      var wrappedProps = (0, _asobj.clone)(props, {
	        without: Object.keys(propTypes || {})
	      });
	      wrappedProps.hasTouch = !!props.onTap;
	      var children = _react2.default.Children.toArray(props.children);
	      return _react2.default.createElement.apply(_react2.default, [Component, wrappedProps].concat(_toConsumableArray(children)));
	    },
	    componentDidMount: function componentDidMount() {
	      var s = this;
	      var touchable = supportsTouch(s.props);
	      var getData = function getData() {
	        return s.getTouchData ? s.getTouchData() : undefined;
	      };
	      if (touchable) {
	        s.touchHammer = createTouchHammer(_reactDom2.default.findDOMNode(s), s.props, getData);
	      }
	    },
	    componentWillUnmount: function componentWillUnmount() {
	      var s = this;
	      var hammer = s.touchHammer;
	      if (hammer) {
	        destroyTouchHammer(hammer);
	      }
	      delete s.touchHammer;
	    }
	  }, { getTouchData: getTouchData });
	  return (0, _breact.wrap)(Component, spec);
	}

	exports.default = withTouch;

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for file upload components.
	 * @module apeman-react-upload
	 * @version 3.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApUpload = exports.ApUploadStyle = undefined;

	var _ap_upload_style = __webpack_require__(622);

	var _ap_upload_style2 = _interopRequireDefault(_ap_upload_style);

	var _ap_upload = __webpack_require__(621);

	var _ap_upload2 = _interopRequireDefault(_ap_upload);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApUploadStyle = _ap_upload_style2.default;
	exports.ApUpload = _ap_upload2.default;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Button for header.
	 * @class ApViewHeaderButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactMixinPure = __webpack_require__(28);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewHeaderButton */
	var ApViewHeaderButton = _react2.default.createClass({
	  displayName: 'ApViewHeaderButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Text of button */
	    text: _react.PropTypes.string,
	    /** Text of icon */
	    icon: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      text: null,
	      icon: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var text = props.text;
	    var icon = props.icon;

	    var isEmpty = !(text || icon);
	    if (isEmpty) {
	      return null;
	    }

	    return _react2.default.createElement('a', { className: (0, _classnames2.default)('ap-view-header-button', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('span', { className: 'ap-view-header-button-inner' }, _react2.default.createElement('span', { className: 'ap-view-header-button-aligner' }, '&ngbsp;'), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-view-header-ion', icon) }), _react2.default.createElement('span', { className: 'ap-view-header-button-text' }, text), props.children));
	  }

	  // ------------------
	  // Custom
	  // ------------------

	});

	exports.default = ApViewHeaderButton; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApViewHeaderButton);

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Button for header.
	 * @class ApViewHeaderTitle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactMixinPure = __webpack_require__(28);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewHeaderTitle */
	var ApViewHeaderTitle = _react2.default.createClass({
	  displayName: 'ApViewHeaderTitle',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Text of the title */
	    text: _react.PropTypes.string,
	    /** Icon of the title */
	    icon: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      text: null,
	      icon: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var text = props.text;
	    var icon = props.icon;

	    var isEmpty = !(text || icon);
	    if (isEmpty) {
	      return null;
	    }

	    return _react2.default.createElement('h3', { className: (0, _classnames2.default)('ap-view-header-title', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('span', null, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: icon }), _react2.default.createElement('span', { className: 'ap-view-header-title-text' }, text), props.children));
	  }

	  // ------------------
	  // Custom
	  // ------------------

	});

	exports.default = ApViewHeaderTitle; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApViewHeaderTitle);

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for view components.
	 * @module apeman-react-view
	 * @version 2.2.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApView = exports.ApViewStyle = exports.ApViewStack = exports.ApViewStackStyle = exports.ApViewSidebar = exports.ApViewHeader = exports.ApViewHeaderTitle = exports.ApViewHeaderButton = exports.ApViewFooter = exports.ApViewBody = undefined;

	var _ap_view_body = __webpack_require__(624);

	var _ap_view_body2 = _interopRequireDefault(_ap_view_body);

	var _ap_view_footer = __webpack_require__(625);

	var _ap_view_footer2 = _interopRequireDefault(_ap_view_footer);

	var _ap_view_header_button = __webpack_require__(256);

	var _ap_view_header_button2 = _interopRequireDefault(_ap_view_header_button);

	var _ap_view_header_title = __webpack_require__(257);

	var _ap_view_header_title2 = _interopRequireDefault(_ap_view_header_title);

	var _ap_view_header = __webpack_require__(626);

	var _ap_view_header2 = _interopRequireDefault(_ap_view_header);

	var _ap_view_sidebar = __webpack_require__(627);

	var _ap_view_sidebar2 = _interopRequireDefault(_ap_view_sidebar);

	var _ap_view_stack_style = __webpack_require__(629);

	var _ap_view_stack_style2 = _interopRequireDefault(_ap_view_stack_style);

	var _ap_view_stack = __webpack_require__(628);

	var _ap_view_stack2 = _interopRequireDefault(_ap_view_stack);

	var _ap_view_style = __webpack_require__(630);

	var _ap_view_style2 = _interopRequireDefault(_ap_view_style);

	var _ap_view = __webpack_require__(623);

	var _ap_view2 = _interopRequireDefault(_ap_view);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApViewBody = _ap_view_body2.default;
	exports.ApViewFooter = _ap_view_footer2.default;
	exports.ApViewHeaderButton = _ap_view_header_button2.default;
	exports.ApViewHeaderTitle = _ap_view_header_title2.default;
	exports.ApViewHeader = _ap_view_header2.default;
	exports.ApViewSidebar = _ap_view_sidebar2.default;
	exports.ApViewStackStyle = _ap_view_stack_style2.default;
	exports.ApViewStack = _ap_view_stack2.default;
	exports.ApViewStyle = _ap_view_style2.default;
	exports.ApView = _ap_view2.default;

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * rotate color
	 * @function rotate
	 * @param {string} color - Color value.
	 * @param {number} degree to rotate. 0 to 360
	 * @returns {string}
	 */
	'use strict';

	var _require = __webpack_require__(27);

	var rotate = _require.rotate;


	module.exports = rotate;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Color utility.
	 * @module apemancolor
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get alpha() {
	    return d(__webpack_require__(637));
	  },
	  get colorizers() {
	    return d(__webpack_require__(638));
	  },
	  get isDark() {
	    return d(__webpack_require__(641));
	  },
	  get isLight() {
	    return d(__webpack_require__(642));
	  },
	  get mix() {
	    return d(__webpack_require__(643));
	  },
	  get parse() {
	    return d(__webpack_require__(644));
	  },
	  get rotate() {
	    return d(__webpack_require__(152));
	  }
	};

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * NODE_ENV accessor
	 * @module asenv
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get constants() {
	    return d(__webpack_require__(114));
	  },
	  get getEnv() {
	    return d(__webpack_require__(115));
	  },
	  get isDevelopment() {
	    return d(__webpack_require__(657));
	  },
	  get isProduction() {
	    return d(__webpack_require__(658));
	  },
	  get isTest() {
	    return d(__webpack_require__(659));
	  },
	  get setEnv() {
	    return d(__webpack_require__(660));
	  }
	};

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var cof = __webpack_require__(40);
	module.exports = function (it, msg) {
	  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';

	var toObject = __webpack_require__(23),
	    toIndex = __webpack_require__(77),
	    toLength = __webpack_require__(22);

	module.exports = [].copyWithin || function copyWithin(target /*= 0*/, start /*= 0, end = @length*/) {
	  var O = toObject(this),
	      len = toLength(O.length),
	      to = toIndex(target, len),
	      from = toIndex(start, len),
	      end = arguments.length > 2 ? arguments[2] : undefined,
	      count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to),
	      inc = 1;
	  if (from < to && to < from + count) {
	    inc = -1;
	    from += count - 1;
	    to += count - 1;
	  }
	  while (count-- > 0) {
	    if (from in O) O[to] = O[from];else delete O[to];
	    to += inc;
	    from += inc;
	  }return O;
	};

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var forOf = __webpack_require__(86);

	module.exports = function (iter, ITERATOR) {
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var aFunction = __webpack_require__(30),
	    toObject = __webpack_require__(23),
	    IObject = __webpack_require__(102),
	    toLength = __webpack_require__(22);

	module.exports = function (that, callbackfn, aLen, memo, isRight) {
	  aFunction(callbackfn);
	  var O = toObject(that),
	      self = IObject(O),
	      length = toLength(O.length),
	      index = isRight ? length - 1 : 0,
	      i = isRight ? -1 : 1;
	  if (aLen < 2) for (;;) {
	    if (index in self) {
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if (isRight ? index < 0 : length <= index) {
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for (; isRight ? index >= 0 : length > index; index += i) {
	    if (index in self) {
	      memo = callbackfn(memo, self[index], index, O);
	    }
	  }return memo;
	};

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var aFunction = __webpack_require__(30),
	    isObject = __webpack_require__(13),
	    invoke = __webpack_require__(120),
	    arraySlice = [].slice,
	    factories = {};

	var construct = function construct(F, len, args) {
	  if (!(len in factories)) {
	    for (var n = [], i = 0; i < len; i++) {
	      n[i] = 'a[' + i + ']';
	    }factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  }return factories[len](F, args);
	};

	module.exports = Function.bind || function bind(that /*, args... */) {
	  var fn = aFunction(this),
	      partArgs = arraySlice.call(arguments, 1);
	  var bound = function bound() /* args... */{
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var dP = __webpack_require__(19).f,
	    create = __webpack_require__(72),
	    redefineAll = __webpack_require__(75),
	    ctx = __webpack_require__(53),
	    anInstance = __webpack_require__(70),
	    defined = __webpack_require__(41),
	    forOf = __webpack_require__(86),
	    $iterDefine = __webpack_require__(163),
	    step = __webpack_require__(273),
	    setSpecies = __webpack_require__(76),
	    DESCRIPTORS = __webpack_require__(18),
	    fastKey = __webpack_require__(60).fastKey,
	    SIZE = DESCRIPTORS ? '_s' : 'size';

	var getEntry = function getEntry(that, key) {
	  // fast case
	  var index = fastKey(key),
	      entry;
	  if (index !== 'F') return that._i[index];
	  // frozen object case
	  for (entry = that._f; entry; entry = entry.n) {
	    if (entry.k == key) return entry;
	  }
	};

	module.exports = {
	  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
	    var C = wrapper(function (that, iterable) {
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined; // first entry
	      that._l = undefined; // last entry
	      that[SIZE] = 0; // size
	      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear() {
	        for (var that = this, data = that._i, entry = that._f; entry; entry = entry.n) {
	          entry.r = true;
	          if (entry.p) entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function _delete(key) {
	        var that = this,
	            entry = getEntry(that, key);
	        if (entry) {
	          var next = entry.n,
	              prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if (prev) prev.n = next;
	          if (next) next.p = prev;
	          if (that._f == entry) that._f = next;
	          if (that._l == entry) that._l = prev;
	          that[SIZE]--;
	        }return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */) {
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3),
	            entry;
	        while (entry = entry ? entry.n : this._f) {
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while (entry && entry.r) {
	            entry = entry.p;
	          }
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key) {
	        return !!getEntry(this, key);
	      }
	    });
	    if (DESCRIPTORS) dP(C.prototype, 'size', {
	      get: function get() {
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function def(that, key, value) {
	    var entry = getEntry(that, key),
	        prev,
	        index;
	    // change existing entry
	    if (entry) {
	      entry.v = value;
	      // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key, // <- key
	        v: value, // <- value
	        p: prev = that._l, // <- previous entry
	        n: undefined, // <- next entry
	        r: false // <- removed
	      };
	      if (!that._f) that._f = entry;
	      if (prev) prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if (index !== 'F') that._i[index] = entry;
	    }return that;
	  },
	  getEntry: getEntry,
	  setStrong: function setStrong(C, NAME, IS_MAP) {
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function (iterated, kind) {
	      this._t = iterated; // target
	      this._k = kind; // kind
	      this._l = undefined; // previous
	    }, function () {
	      var that = this,
	          kind = that._k,
	          entry = that._l;
	      // revert to the last existing entry
	      while (entry && entry.r) {
	        entry = entry.p;
	      } // get next entry
	      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if (kind == 'keys') return step(0, entry.k);
	      if (kind == 'values') return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(101),
	    from = __webpack_require__(264);
	module.exports = function (NAME) {
	  return function toJSON() {
	    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var redefineAll = __webpack_require__(75),
	    getWeak = __webpack_require__(60).getWeak,
	    anObject = __webpack_require__(6),
	    isObject = __webpack_require__(13),
	    anInstance = __webpack_require__(70),
	    forOf = __webpack_require__(86),
	    createArrayMethod = __webpack_require__(48),
	    $has = __webpack_require__(25),
	    arrayFind = createArrayMethod(5),
	    arrayFindIndex = createArrayMethod(6),
	    id = 0;

	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function uncaughtFrozenStore(that) {
	  return that._l || (that._l = new UncaughtFrozenStore());
	};
	var UncaughtFrozenStore = function UncaughtFrozenStore() {
	  this.a = [];
	};
	var findUncaughtFrozen = function findUncaughtFrozen(store, key) {
	  return arrayFind(store.a, function (it) {
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function get(key) {
	    var entry = findUncaughtFrozen(this, key);
	    if (entry) return entry[1];
	  },
	  has: function has(key) {
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function set(key, value) {
	    var entry = findUncaughtFrozen(this, key);
	    if (entry) entry[1] = value;else this.a.push([key, value]);
	  },
	  'delete': function _delete(key) {
	    var index = arrayFindIndex(this.a, function (it) {
	      return it[0] === key;
	    });
	    if (~index) this.a.splice(index, 1);
	    return !!~index;
	  }
	};

	module.exports = {
	  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
	    var C = wrapper(function (that, iterable) {
	      anInstance(that, C, NAME, '_i');
	      that._i = id++; // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function _delete(key) {
	        if (!isObject(key)) return false;
	        var data = getWeak(key);
	        if (data === true) return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key) {
	        if (!isObject(key)) return false;
	        var data = getWeak(key);
	        if (data === true) return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function def(that, key, value) {
	    var data = getWeak(anObject(key), true);
	    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = !__webpack_require__(18) && !__webpack_require__(12)(function () {
	  return Object.defineProperty(__webpack_require__(155)('div'), 'a', { get: function get() {
	      return 7;
	    } }).a != 7;
	});

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(13),
	    floor = Math.floor;
	module.exports = function isInteger(it) {
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(6);
	module.exports = function (iterator, fn, value, entries) {
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	    // 7.4.6 IteratorClose(iterator, completion)
	  } catch (e) {
	    var ret = iterator['return'];
	    if (ret !== undefined) anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 273 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};

/***/ },
/* 274 */
/***/ function(module, exports) {

	"use strict";

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x) {
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)

	var getKeys = __webpack_require__(74),
	    gOPS = __webpack_require__(124),
	    pIE = __webpack_require__(103),
	    toObject = __webpack_require__(23),
	    IObject = __webpack_require__(102),
	    $assign = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(12)(function () {
	  var A = {},
	      B = {},
	      S = Symbol(),
	      K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) {
	    B[k] = k;
	  });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) {
	  // eslint-disable-line no-unused-vars
	  var T = toObject(target),
	      aLen = arguments.length,
	      index = 1,
	      getSymbols = gOPS.f,
	      isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]),
	        keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
	        length = keys.length,
	        j = 0,
	        key;
	    while (length > j) {
	      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	    }
	  }return T;
	} : $assign;

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var dP = __webpack_require__(19),
	    anObject = __webpack_require__(6),
	    getKeys = __webpack_require__(74);

	module.exports = __webpack_require__(18) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties),
	      length = keys.length,
	      i = 0,
	      P;
	  while (length > i) {
	    dP.f(O, P = keys[i++], Properties[P]);
	  }return O;
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(34),
	    gOPN = __webpack_require__(73).f,
	    toString = {}.toString;

	var windowNames = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function getWindowNames(it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var has = __webpack_require__(25),
	    toIObject = __webpack_require__(34),
	    arrayIndexOf = __webpack_require__(116)(false),
	    IE_PROTO = __webpack_require__(168)('IE_PROTO');

	module.exports = function (object, names) {
	  var O = toIObject(object),
	      i = 0,
	      result = [],
	      key;
	  for (key in O) {
	    if (key != IE_PROTO) has(O, key) && result.push(key);
	  } // Don't enum bug & hidden keys
	  while (names.length > i) {
	    if (has(O, key = names[i++])) {
	      ~arrayIndexOf(result, key) || result.push(key);
	    }
	  }return result;
	};

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getKeys = __webpack_require__(74),
	    toIObject = __webpack_require__(34),
	    isEnum = __webpack_require__(103).f;
	module.exports = function (isEntries) {
	  return function (it) {
	    var O = toIObject(it),
	        keys = getKeys(O),
	        length = keys.length,
	        i = 0,
	        result = [],
	        key;
	    while (length > i) {
	      if (isEnum.call(O, key = keys[i++])) {
	        result.push(isEntries ? [key, O[key]] : O[key]);
	      }
	    }return result;
	  };
	};

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// all object keys, includes non-enumerable and symbols
	var gOPN = __webpack_require__(73),
	    gOPS = __webpack_require__(124),
	    anObject = __webpack_require__(6),
	    Reflect = __webpack_require__(10).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
	  var keys = gOPN.f(anObject(it)),
	      getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $parseFloat = __webpack_require__(10).parseFloat,
	    $trim = __webpack_require__(89).trim;

	module.exports = 1 / $parseFloat(__webpack_require__(173) + '-0') !== -Infinity ? function parseFloat(str) {
	  var string = $trim(String(str), 3),
	      result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $parseInt = __webpack_require__(10).parseInt,
	    $trim = __webpack_require__(89).trim,
	    ws = __webpack_require__(173),
	    hex = /^[\-+]?0[xX]/;

	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
	  var string = $trim(String(str), 3);
	  return $parseInt(string, radix >>> 0 || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 283 */
/***/ function(module, exports) {

	"use strict";

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y) {
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(22),
	    repeat = __webpack_require__(172),
	    defined = __webpack_require__(41);

	module.exports = function (that, maxLength, fillString, left) {
	  var S = String(defined(that)),
	      stringLength = S.length,
	      fillStr = fillString === undefined ? ' ' : String(fillString),
	      intMaxLength = toLength(maxLength);
	  if (intMaxLength <= stringLength || fillStr == '') return S;
	  var fillLen = intMaxLength - stringLength,
	      stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.f = __webpack_require__(14);

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var strong = __webpack_require__(267);

	// 23.1 Map Objects
	module.exports = __webpack_require__(117)('Map', function (get) {
	  return function Map() {
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key) {
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value) {
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 21.2.5.3 get RegExp.prototype.flags()
	if (__webpack_require__(18) && /./g.flags != 'g') __webpack_require__(19).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(119)
	});

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var strong = __webpack_require__(267);

	// 23.2 Set Objects
	module.exports = __webpack_require__(117)('Set', function (get) {
	  return function Set() {
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value) {
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var each = __webpack_require__(48)(0),
	    redefine = __webpack_require__(32),
	    meta = __webpack_require__(60),
	    assign = __webpack_require__(275),
	    weak = __webpack_require__(269),
	    isObject = __webpack_require__(13),
	    getWeak = meta.getWeak,
	    isExtensible = Object.isExtensible,
	    uncaughtFrozenStore = weak.ufstore,
	    tmp = {},
	    InternalMap;

	var wrapper = function wrapper(get) {
	  return function WeakMap() {
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};

	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key) {
	    if (isObject(key)) {
	      var data = getWeak(key);
	      if (data === true) return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value) {
	    return weak.def(this, key, value);
	  }
	};

	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(117)('WeakMap', wrapper, methods, weak, true, true);

	// IE11 WeakMap frozen keys fix
	if (new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7) {
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function (key) {
	    var proto = $WeakMap.prototype,
	        method = proto[key];
	    redefine(proto, key, function (a, b) {
	      // store frozen objects on internal weakmap shim
	      if (isObject(a) && !isExtensible(a)) {
	        if (!this._f) this._f = new InternalMap();
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	        // store all the rest on native weakmap
	      }return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create an element
	 * @function create
	 * @param {Object} Component
	 * @param {Object} props
	 * @param {...Object} children - Child elements
	 * @returns {Object}
	 */
	'use strict';

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	var React = __webpack_require__(1);

	/** @lends create */
	function create(Component, props) {
	  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    children[_key - 2] = arguments[_key];
	  }

	  Component = Component.default || Component;
	  props = Object.assign({}, props); // Copy props to cut prototype chain
	  children = [].concat(children || []).reduce(function (children, child) {
	    return children.concat(child);
	  }, []);
	  return React.createElement.apply(React, [Component, props].concat(_toConsumableArray(children)));
	}

	module.exports = create;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @class BRequest
	 */
	'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var superagent = __webpack_require__(1070);
	var objnest = __webpack_require__(309);

	/** @lends BRequest */

	var BRequest = function () {
	  function BRequest(conf) {
	    _classCallCheck(this, BRequest);

	    var s = this;
	    /**  Default headers */
	    s.defaults = null;
	    /** Timeout durations */
	    s.timeout = 30 * 1000;
	    Object.assign(s, conf || {});
	  }

	  _createClass(BRequest, [{
	    key: '_send',
	    value: function _send(instance) {
	      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	      var s = this;
	      var pipe = options.pipe;

	      delete options.pipe;
	      return BRequest.toPromise(instance.set(Object.assign({}, s.defaults, options.headers)).timeout(options.timeout || s.timeout), { pipe: pipe });
	    }

	    /**
	     * Send GET request.
	     * @param {string} url - URL to send.
	     * @param {object} [query] - Query string data
	     * @param {object} [options] - Optional settings
	     * @returns {Promise}
	     */

	  }, {
	    key: 'get',
	    value: function get(url, query) {
	      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	      var s = this;
	      return s._send(superagent.get(url).query(objnest.flatten(query || {})), options);
	    }

	    /**
	     * Send HEAD request.
	     * @param {string} url - URL to send.
	     * @param {object} [query] - Query string data
	     * @param {object} [options] - Optional settings
	     * @returns {Promise}
	     */

	  }, {
	    key: 'head',
	    value: function head(url, query) {
	      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	      var s = this;
	      return s._send(superagent.head(url).query(objnest.flatten(query || {})), options);
	    }

	    /**
	     * Send OPTIONS request.
	     * @param {string} url - URL to send.
	     * @param {object} [query] - Query string data
	     * @param {object} [options] - Optional settings
	     * @returns {Promise}
	     */

	  }, {
	    key: 'options',
	    value: function options(url, query, _options) {
	      var s = this;
	      _options = _options || {};
	      return s._send(superagent.options(url).query(objnest.flatten(query || {})), _options);
	    }

	    /**
	     * Send POST request.
	     * @param {string} url - URL to send.
	     * @param {object} data - Send data.
	     * @param {object} [options] - Optional settings
	     * @returns {Promise}
	     */

	  }, {
	    key: 'post',
	    value: function post(url, data, options) {
	      var s = this;
	      options = options || {};
	      return s._send(superagent.post(url, BRequest.format(data)), options);
	    }

	    /**
	     * Send PATCH request.
	     * @param {string} url - URL to send.
	     * @param {object} data - Send data.
	     * @param {object} [options] - Optional settings
	     * @returns {Promise}
	     */

	  }, {
	    key: 'patch',
	    value: function patch(url, data, options) {
	      var s = this;
	      options = options || {};
	      return s._send(superagent.patch(url, BRequest.format(data)), options);
	    }

	    /**
	     * Send DELETE request.
	     * @param {string} url - URL to send.
	     * @param {object} data - Send data.
	     * @param {object} [options] - Optional settings
	     * @returns {Promise}
	     */

	  }, {
	    key: 'delete',
	    value: function _delete(url, data, options) {
	      var s = this;
	      options = options || {};
	      return s._send(superagent.delete(url).send(data), options);
	    }
	  }]);

	  return BRequest;
	}();

	Object.assign(BRequest, {
	  /**
	   * Format sending data
	   * @param {object} data - Data to format
	   * @returns {object} - Formatted src.
	   */
	  format: function format(data) {
	    var result = {};
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = Object.keys(data || {})[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var key = _step.value;

	        var skip = data[key] === null || data[key] === undefined;
	        if (skip) {
	          continue;
	        }
	        result[key] = data[key];
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    return result;
	  },

	  /**
	   * Convert promise
	   * @param instance
	   * @param {Object} [options]
	   * @returns {Promise}
	   */
	  toPromise: function toPromise(instance) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	    var pipe = options.pipe;

	    return new Promise(function (resolve, reject) {
	      if (pipe) {
	        instance.pipe(pipe).on('close', function () {
	          return resolve();
	        }).on('error', function (err) {
	          return reject(err);
	        });
	      } else {
	        instance.end(function (err, res) {
	          return err ? reject(err) : resolve(res);
	        });
	      }
	    });
	  },

	  superagent: superagent
	});

	module.exports = BRequest;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict';

	var base64 = __webpack_require__(858);
	var ieee754 = __webpack_require__(899);
	var isArray = __webpack_require__(905);

	exports.Buffer = Buffer;
	exports.SlowBuffer = SlowBuffer;
	exports.INSPECT_MAX_BYTES = 50;

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength();

	function typedArraySupport() {
	  try {
	    var arr = new Uint8Array(1);
	    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {
	        return 42;
	      } };
	    return arr.foo() === 42 && // typed array instances can be augmented
	    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`
	  } catch (e) {
	    return false;
	  }
	}

	function kMaxLength() {
	  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
	}

	function createBuffer(that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length');
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length);
	    that.__proto__ = Buffer.prototype;
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length);
	    }
	    that.length = length;
	  }

	  return that;
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer(arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length);
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error('If encoding is specified then the first argument must be a string');
	    }
	    return allocUnsafe(this, arg);
	  }
	  return from(this, arg, encodingOrOffset, length);
	}

	Buffer.poolSize = 8192; // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype;
	  return arr;
	};

	function from(that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number');
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length);
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset);
	  }

	  return fromObject(that, value);
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length);
	};

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype;
	  Buffer.__proto__ = Uint8Array;
	  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    });
	  }
	}

	function assertSize(size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number');
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative');
	  }
	}

	function alloc(that, size, fill, encoding) {
	  assertSize(size);
	  if (size <= 0) {
	    return createBuffer(that, size);
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
	  }
	  return createBuffer(that, size);
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding);
	};

	function allocUnsafe(that, size) {
	  assertSize(size);
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0;
	    }
	  }
	  return that;
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size);
	};
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size);
	};

	function fromString(that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8';
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding');
	  }

	  var length = byteLength(string, encoding) | 0;
	  that = createBuffer(that, length);

	  var actual = that.write(string, encoding);

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual);
	  }

	  return that;
	}

	function fromArrayLike(that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0;
	  that = createBuffer(that, length);
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255;
	  }
	  return that;
	}

	function fromArrayBuffer(that, array, byteOffset, length) {
	  array.byteLength; // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds');
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds');
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array);
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset);
	  } else {
	    array = new Uint8Array(array, byteOffset, length);
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array;
	    that.__proto__ = Buffer.prototype;
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array);
	  }
	  return that;
	}

	function fromObject(that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0;
	    that = createBuffer(that, len);

	    if (that.length === 0) {
	      return that;
	    }

	    obj.copy(that, 0, 0, len);
	    return that;
	  }

	  if (obj) {
	    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0);
	      }
	      return fromArrayLike(that, obj);
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data);
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
	}

	function checked(length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
	  }
	  return length | 0;
	}

	function SlowBuffer(length) {
	  if (+length != length) {
	    // eslint-disable-line eqeqeq
	    length = 0;
	  }
	  return Buffer.alloc(+length);
	}

	Buffer.isBuffer = function isBuffer(b) {
	  return !!(b != null && b._isBuffer);
	};

	Buffer.compare = function compare(a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers');
	  }

	  if (a === b) return 0;

	  var x = a.length;
	  var y = b.length;

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i];
	      y = b[i];
	      break;
	    }
	  }

	  if (x < y) return -1;
	  if (y < x) return 1;
	  return 0;
	};

	Buffer.isEncoding = function isEncoding(encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true;
	    default:
	      return false;
	  }
	};

	Buffer.concat = function concat(list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers');
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0);
	  }

	  var i;
	  if (length === undefined) {
	    length = 0;
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length;
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length);
	  var pos = 0;
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i];
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers');
	    }
	    buf.copy(buffer, pos);
	    pos += buf.length;
	  }
	  return buffer;
	};

	function byteLength(string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length;
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength;
	  }
	  if (typeof string !== 'string') {
	    string = '' + string;
	  }

	  var len = string.length;
	  if (len === 0) return 0;

	  // Use a for loop to avoid recursion
	  var loweredCase = false;
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len;
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length;
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2;
	      case 'hex':
	        return len >>> 1;
	      case 'base64':
	        return base64ToBytes(string).length;
	      default:
	        if (loweredCase) return utf8ToBytes(string).length; // assume utf8
	        encoding = ('' + encoding).toLowerCase();
	        loweredCase = true;
	    }
	  }
	}
	Buffer.byteLength = byteLength;

	function slowToString(encoding, start, end) {
	  var loweredCase = false;

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0;
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return '';
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length;
	  }

	  if (end <= 0) {
	    return '';
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0;
	  start >>>= 0;

	  if (end <= start) {
	    return '';
	  }

	  if (!encoding) encoding = 'utf8';

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end);

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end);

	      case 'ascii':
	        return asciiSlice(this, start, end);

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end);

	      case 'base64':
	        return base64Slice(this, start, end);

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end);

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
	        encoding = (encoding + '').toLowerCase();
	        loweredCase = true;
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true;

	function swap(b, n, m) {
	  var i = b[n];
	  b[n] = b[m];
	  b[m] = i;
	}

	Buffer.prototype.swap16 = function swap16() {
	  var len = this.length;
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits');
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1);
	  }
	  return this;
	};

	Buffer.prototype.swap32 = function swap32() {
	  var len = this.length;
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits');
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3);
	    swap(this, i + 1, i + 2);
	  }
	  return this;
	};

	Buffer.prototype.swap64 = function swap64() {
	  var len = this.length;
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits');
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7);
	    swap(this, i + 1, i + 6);
	    swap(this, i + 2, i + 5);
	    swap(this, i + 3, i + 4);
	  }
	  return this;
	};

	Buffer.prototype.toString = function toString() {
	  var length = this.length | 0;
	  if (length === 0) return '';
	  if (arguments.length === 0) return utf8Slice(this, 0, length);
	  return slowToString.apply(this, arguments);
	};

	Buffer.prototype.equals = function equals(b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
	  if (this === b) return true;
	  return Buffer.compare(this, b) === 0;
	};

	Buffer.prototype.inspect = function inspect() {
	  var str = '';
	  var max = exports.INSPECT_MAX_BYTES;
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
	    if (this.length > max) str += ' ... ';
	  }
	  return '<Buffer ' + str + '>';
	};

	Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer');
	  }

	  if (start === undefined) {
	    start = 0;
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0;
	  }
	  if (thisStart === undefined) {
	    thisStart = 0;
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length;
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index');
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0;
	  }
	  if (thisStart >= thisEnd) {
	    return -1;
	  }
	  if (start >= end) {
	    return 1;
	  }

	  start >>>= 0;
	  end >>>= 0;
	  thisStart >>>= 0;
	  thisEnd >>>= 0;

	  if (this === target) return 0;

	  var x = thisEnd - thisStart;
	  var y = end - start;
	  var len = Math.min(x, y);

	  var thisCopy = this.slice(thisStart, thisEnd);
	  var targetCopy = target.slice(start, end);

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i];
	      y = targetCopy[i];
	      break;
	    }
	  }

	  if (x < y) return -1;
	  if (y < x) return 1;
	  return 0;
	};

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1;

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset;
	    byteOffset = 0;
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff;
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000;
	  }
	  byteOffset = +byteOffset; // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : buffer.length - 1;
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1;else byteOffset = buffer.length - 1;
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0;else return -1;
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding);
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1;
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
	  } else if (typeof val === 'number') {
	    val = val & 0xFF; // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
	      }
	    }
	    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
	  }

	  throw new TypeError('val must be string, number or Buffer');
	}

	function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1;
	  var arrLength = arr.length;
	  var valLength = val.length;

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase();
	    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1;
	      }
	      indexSize = 2;
	      arrLength /= 2;
	      valLength /= 2;
	      byteOffset /= 2;
	    }
	  }

	  function read(buf, i) {
	    if (indexSize === 1) {
	      return buf[i];
	    } else {
	      return buf.readUInt16BE(i * indexSize);
	    }
	  }

	  var i;
	  if (dir) {
	    var foundIndex = -1;
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i;
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex;
	        foundIndex = -1;
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true;
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false;
	          break;
	        }
	      }
	      if (found) return i;
	    }
	  }

	  return -1;
	}

	Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1;
	};

	Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
	};

	Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
	};

	function hexWrite(buf, string, offset, length) {
	  offset = Number(offset) || 0;
	  var remaining = buf.length - offset;
	  if (!length) {
	    length = remaining;
	  } else {
	    length = Number(length);
	    if (length > remaining) {
	      length = remaining;
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length;
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

	  if (length > strLen / 2) {
	    length = strLen / 2;
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16);
	    if (isNaN(parsed)) return i;
	    buf[offset + i] = parsed;
	  }
	  return i;
	}

	function utf8Write(buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
	}

	function asciiWrite(buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length);
	}

	function latin1Write(buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length);
	}

	function base64Write(buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length);
	}

	function ucs2Write(buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
	}

	Buffer.prototype.write = function write(string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8';
	    length = this.length;
	    offset = 0;
	    // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset;
	    length = this.length;
	    offset = 0;
	    // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0;
	    if (isFinite(length)) {
	      length = length | 0;
	      if (encoding === undefined) encoding = 'utf8';
	    } else {
	      encoding = length;
	      length = undefined;
	    }
	    // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
	  }

	  var remaining = this.length - offset;
	  if (length === undefined || length > remaining) length = remaining;

	  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds');
	  }

	  if (!encoding) encoding = 'utf8';

	  var loweredCase = false;
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length);

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length);

	      case 'ascii':
	        return asciiWrite(this, string, offset, length);

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length);

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length);

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length);

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
	        encoding = ('' + encoding).toLowerCase();
	        loweredCase = true;
	    }
	  }
	};

	Buffer.prototype.toJSON = function toJSON() {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  };
	};

	function base64Slice(buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf);
	  } else {
	    return base64.fromByteArray(buf.slice(start, end));
	  }
	}

	function utf8Slice(buf, start, end) {
	  end = Math.min(buf.length, end);
	  var res = [];

	  var i = start;
	  while (i < end) {
	    var firstByte = buf[i];
	    var codePoint = null;
	    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint;

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte;
	          }
	          break;
	        case 2:
	          secondByte = buf[i + 1];
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint;
	            }
	          }
	          break;
	        case 3:
	          secondByte = buf[i + 1];
	          thirdByte = buf[i + 2];
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint;
	            }
	          }
	          break;
	        case 4:
	          secondByte = buf[i + 1];
	          thirdByte = buf[i + 2];
	          fourthByte = buf[i + 3];
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint;
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD;
	      bytesPerSequence = 1;
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000;
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
	      codePoint = 0xDC00 | codePoint & 0x3FF;
	    }

	    res.push(codePoint);
	    i += bytesPerSequence;
	  }

	  return decodeCodePointsArray(res);
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000;

	function decodeCodePointsArray(codePoints) {
	  var len = codePoints.length;
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = '';
	  var i = 0;
	  while (i < len) {
	    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
	  }
	  return res;
	}

	function asciiSlice(buf, start, end) {
	  var ret = '';
	  end = Math.min(buf.length, end);

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F);
	  }
	  return ret;
	}

	function latin1Slice(buf, start, end) {
	  var ret = '';
	  end = Math.min(buf.length, end);

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i]);
	  }
	  return ret;
	}

	function hexSlice(buf, start, end) {
	  var len = buf.length;

	  if (!start || start < 0) start = 0;
	  if (!end || end < 0 || end > len) end = len;

	  var out = '';
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i]);
	  }
	  return out;
	}

	function utf16leSlice(buf, start, end) {
	  var bytes = buf.slice(start, end);
	  var res = '';
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
	  }
	  return res;
	}

	Buffer.prototype.slice = function slice(start, end) {
	  var len = this.length;
	  start = ~~start;
	  end = end === undefined ? len : ~~end;

	  if (start < 0) {
	    start += len;
	    if (start < 0) start = 0;
	  } else if (start > len) {
	    start = len;
	  }

	  if (end < 0) {
	    end += len;
	    if (end < 0) end = 0;
	  } else if (end > len) {
	    end = len;
	  }

	  if (end < start) end = start;

	  var newBuf;
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end);
	    newBuf.__proto__ = Buffer.prototype;
	  } else {
	    var sliceLen = end - start;
	    newBuf = new Buffer(sliceLen, undefined);
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start];
	    }
	  }

	  return newBuf;
	};

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset(offset, ext, length) {
	  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
	}

	Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);

	  var val = this[offset];
	  var mul = 1;
	  var i = 0;
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul;
	  }

	  return val;
	};

	Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length);
	  }

	  var val = this[offset + --byteLength];
	  var mul = 1;
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul;
	  }

	  return val;
	};

	Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length);
	  return this[offset];
	};

	Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  return this[offset] | this[offset + 1] << 8;
	};

	Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  return this[offset] << 8 | this[offset + 1];
	};

	Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
	};

	Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
	};

	Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);

	  var val = this[offset];
	  var mul = 1;
	  var i = 0;
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul;
	  }
	  mul *= 0x80;

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

	  return val;
	};

	Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);

	  var i = byteLength;
	  var mul = 1;
	  var val = this[offset + --i];
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul;
	  }
	  mul *= 0x80;

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

	  return val;
	};

	Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length);
	  if (!(this[offset] & 0x80)) return this[offset];
	  return (0xff - this[offset] + 1) * -1;
	};

	Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  var val = this[offset] | this[offset + 1] << 8;
	  return val & 0x8000 ? val | 0xFFFF0000 : val;
	};

	Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  var val = this[offset + 1] | this[offset] << 8;
	  return val & 0x8000 ? val | 0xFFFF0000 : val;
	};

	Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
	};

	Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
	};

	Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return ieee754.read(this, offset, true, 23, 4);
	};

	Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return ieee754.read(this, offset, false, 23, 4);
	};

	Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length);
	  return ieee754.read(this, offset, true, 52, 8);
	};

	Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length);
	  return ieee754.read(this, offset, false, 52, 8);
	};

	function checkInt(buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
	  if (offset + ext > buf.length) throw new RangeError('Index out of range');
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
	    checkInt(this, value, offset, byteLength, maxBytes, 0);
	  }

	  var mul = 1;
	  var i = 0;
	  this[offset] = value & 0xFF;
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = value / mul & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
	    checkInt(this, value, offset, byteLength, maxBytes, 0);
	  }

	  var i = byteLength - 1;
	  var mul = 1;
	  this[offset + i] = value & 0xFF;
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = value / mul & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
	  this[offset] = value & 0xff;
	  return offset + 1;
	};

	function objectWriteUInt16(buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1;
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	  } else {
	    objectWriteUInt16(this, value, offset, true);
	  }
	  return offset + 2;
	};

	Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 8;
	    this[offset + 1] = value & 0xff;
	  } else {
	    objectWriteUInt16(this, value, offset, false);
	  }
	  return offset + 2;
	};

	function objectWriteUInt32(buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1;
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = value >>> 24;
	    this[offset + 2] = value >>> 16;
	    this[offset + 1] = value >>> 8;
	    this[offset] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, true);
	  }
	  return offset + 4;
	};

	Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 24;
	    this[offset + 1] = value >>> 16;
	    this[offset + 2] = value >>> 8;
	    this[offset + 3] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, false);
	  }
	  return offset + 4;
	};

	Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1);

	    checkInt(this, value, offset, byteLength, limit - 1, -limit);
	  }

	  var i = 0;
	  var mul = 1;
	  var sub = 0;
	  this[offset] = value & 0xFF;
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1;
	    }
	    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1);

	    checkInt(this, value, offset, byteLength, limit - 1, -limit);
	  }

	  var i = byteLength - 1;
	  var mul = 1;
	  var sub = 0;
	  this[offset + i] = value & 0xFF;
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1;
	    }
	    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
	  if (value < 0) value = 0xff + value + 1;
	  this[offset] = value & 0xff;
	  return offset + 1;
	};

	Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	  } else {
	    objectWriteUInt16(this, value, offset, true);
	  }
	  return offset + 2;
	};

	Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 8;
	    this[offset + 1] = value & 0xff;
	  } else {
	    objectWriteUInt16(this, value, offset, false);
	  }
	  return offset + 2;
	};

	Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	    this[offset + 2] = value >>> 16;
	    this[offset + 3] = value >>> 24;
	  } else {
	    objectWriteUInt32(this, value, offset, true);
	  }
	  return offset + 4;
	};

	Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
	  if (value < 0) value = 0xffffffff + value + 1;
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 24;
	    this[offset + 1] = value >>> 16;
	    this[offset + 2] = value >>> 8;
	    this[offset + 3] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, false);
	  }
	  return offset + 4;
	};

	function checkIEEE754(buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range');
	  if (offset < 0) throw new RangeError('Index out of range');
	}

	function writeFloat(buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4);
	  return offset + 4;
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert);
	};

	Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert);
	};

	function writeDouble(buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8);
	  return offset + 8;
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert);
	};

	Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert);
	};

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy(target, targetStart, start, end) {
	  if (!start) start = 0;
	  if (!end && end !== 0) end = this.length;
	  if (targetStart >= target.length) targetStart = target.length;
	  if (!targetStart) targetStart = 0;
	  if (end > 0 && end < start) end = start;

	  // Copy 0 bytes; we're done
	  if (end === start) return 0;
	  if (target.length === 0 || this.length === 0) return 0;

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds');
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
	  if (end < 0) throw new RangeError('sourceEnd out of bounds');

	  // Are we oob?
	  if (end > this.length) end = this.length;
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start;
	  }

	  var len = end - start;
	  var i;

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start];
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start];
	    }
	  } else {
	    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
	  }

	  return len;
	};

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill(val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start;
	      start = 0;
	      end = this.length;
	    } else if (typeof end === 'string') {
	      encoding = end;
	      end = this.length;
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0);
	      if (code < 256) {
	        val = code;
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string');
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding);
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255;
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index');
	  }

	  if (end <= start) {
	    return this;
	  }

	  start = start >>> 0;
	  end = end === undefined ? this.length : end >>> 0;

	  if (!val) val = 0;

	  var i;
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val;
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
	    var len = bytes.length;
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len];
	    }
	  }

	  return this;
	};

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

	function base64clean(str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '');
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return '';
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '=';
	  }
	  return str;
	}

	function stringtrim(str) {
	  if (str.trim) return str.trim();
	  return str.replace(/^\s+|\s+$/g, '');
	}

	function toHex(n) {
	  if (n < 16) return '0' + n.toString(16);
	  return n.toString(16);
	}

	function utf8ToBytes(string, units) {
	  units = units || Infinity;
	  var codePoint;
	  var length = string.length;
	  var leadSurrogate = null;
	  var bytes = [];

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i);

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	          continue;
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	          continue;
	        }

	        // valid lead
	        leadSurrogate = codePoint;

	        continue;
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	        leadSurrogate = codePoint;
	        continue;
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	    }

	    leadSurrogate = null;

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break;
	      bytes.push(codePoint);
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break;
	      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break;
	      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break;
	      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
	    } else {
	      throw new Error('Invalid code point');
	    }
	  }

	  return bytes;
	}

	function asciiToBytes(str) {
	  var byteArray = [];
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF);
	  }
	  return byteArray;
	}

	function utf16leToBytes(str, units) {
	  var c, hi, lo;
	  var byteArray = [];
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break;

	    c = str.charCodeAt(i);
	    hi = c >> 8;
	    lo = c % 256;
	    byteArray.push(lo);
	    byteArray.push(hi);
	  }

	  return byteArray;
	}

	function base64ToBytes(str) {
	  return base64.toByteArray(base64clean(str));
	}

	function blitBuffer(src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if (i + offset >= dst.length || i >= src.length) break;
	    dst[i + offset] = src[i];
	  }
	  return i;
	}

	function isnan(val) {
	  return val !== val; // eslint-disable-line no-self-compare
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(292).Buffer, (function() { return this; }())))

/***/ },
/* 293 */
/***/ function(module, exports) {

	/**
	 * Get object from window
	 * @function get
	 * @param {string} name - Name of object
	 * @param {Object} [options] - Optional settings
	 * @param {boolean} [options.strict] - Throws error when not found.
	 * @returns {?Object}
	 */
	'use strict';

	var _window = function _window() {
	  return typeof window === 'undefined' ? null : window;
	};

	/** @lends get */
	function get(name) {
	  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	  var window = _window();
	  var keys = name.split(/\./g);
	  var found = window && window[keys.shift()];
	  while (keys.length && found) {
	    found = found[keys.shift()];
	  }
	  var failed = options.strict && !found;
	  if (failed) {
	    throw new Error(name + ' not found!');
	  }
	  return found;
	}

	module.exports = get;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Chop numbers.
	 * @module chopcal
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get ceil() {
	    return d(__webpack_require__(860));
	  },
	  get floor() {
	    return d(__webpack_require__(861));
	  },
	  get round() {
	    return d(__webpack_require__(862));
	  },
	  get surplus() {
	    return d(__webpack_require__(127));
	  }
	};

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, module) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var clone = function () {
	  'use strict';

	  /**
	   * Clones (copies) an Object using deep copying.
	   *
	   * This function supports circular references by default, but if you are certain
	   * there are no circular references in your object, you can save some CPU time
	   * by calling clone(obj, false).
	   *
	   * Caution: if `circular` is false and `parent` contains circular references,
	   * your program may enter an infinite loop and crash.
	   *
	   * @param `parent` - the object to be cloned
	   * @param `circular` - set to true if the object to be cloned may contain
	   *    circular references. (optional - true by default)
	   * @param `depth` - set to a number if the object is only to be cloned to
	   *    a particular depth. (optional - defaults to Infinity)
	   * @param `prototype` - sets the prototype to be used when cloning an object.
	   *    (optional - defaults to parent prototype).
	  */

	  function clone(parent, circular, depth, prototype) {
	    var filter;
	    if ((typeof circular === 'undefined' ? 'undefined' : _typeof(circular)) === 'object') {
	      depth = circular.depth;
	      prototype = circular.prototype;
	      filter = circular.filter;
	      circular = circular.circular;
	    }
	    // maintain two arrays for circular references, where corresponding parents
	    // and children have the same index
	    var allParents = [];
	    var allChildren = [];

	    var useBuffer = typeof Buffer != 'undefined';

	    if (typeof circular == 'undefined') circular = true;

	    if (typeof depth == 'undefined') depth = Infinity;

	    // recurse this function so we don't reset allParents and allChildren
	    function _clone(parent, depth) {
	      // cloning null always returns null
	      if (parent === null) return null;

	      if (depth == 0) return parent;

	      var child;
	      var proto;
	      if ((typeof parent === 'undefined' ? 'undefined' : _typeof(parent)) != 'object') {
	        return parent;
	      }

	      if (clone.__isArray(parent)) {
	        child = [];
	      } else if (clone.__isRegExp(parent)) {
	        child = new RegExp(parent.source, __getRegExpFlags(parent));
	        if (parent.lastIndex) child.lastIndex = parent.lastIndex;
	      } else if (clone.__isDate(parent)) {
	        child = new Date(parent.getTime());
	      } else if (useBuffer && Buffer.isBuffer(parent)) {
	        child = new Buffer(parent.length);
	        parent.copy(child);
	        return child;
	      } else {
	        if (typeof prototype == 'undefined') {
	          proto = Object.getPrototypeOf(parent);
	          child = Object.create(proto);
	        } else {
	          child = Object.create(prototype);
	          proto = prototype;
	        }
	      }

	      if (circular) {
	        var index = allParents.indexOf(parent);

	        if (index != -1) {
	          return allChildren[index];
	        }
	        allParents.push(parent);
	        allChildren.push(child);
	      }

	      for (var i in parent) {
	        var attrs;
	        if (proto) {
	          attrs = Object.getOwnPropertyDescriptor(proto, i);
	        }

	        if (attrs && attrs.set == null) {
	          continue;
	        }
	        child[i] = _clone(parent[i], depth - 1);
	      }

	      return child;
	    }

	    return _clone(parent, depth);
	  }

	  /**
	   * Simple flat clone using prototype, accepts only objects, usefull for property
	   * override on FLAT configuration object (no nested props).
	   *
	   * USE WITH CAUTION! This may not behave as you wish if you do not know how this
	   * works.
	   */
	  clone.clonePrototype = function clonePrototype(parent) {
	    if (parent === null) return null;

	    var c = function c() {};
	    c.prototype = parent;
	    return new c();
	  };

	  // private utility functions

	  function __objToStr(o) {
	    return Object.prototype.toString.call(o);
	  };
	  clone.__objToStr = __objToStr;

	  function __isDate(o) {
	    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && __objToStr(o) === '[object Date]';
	  };
	  clone.__isDate = __isDate;

	  function __isArray(o) {
	    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && __objToStr(o) === '[object Array]';
	  };
	  clone.__isArray = __isArray;

	  function __isRegExp(o) {
	    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && __objToStr(o) === '[object RegExp]';
	  };
	  clone.__isRegExp = __isRegExp;

	  function __getRegExpFlags(re) {
	    var flags = '';
	    if (re.global) flags += 'g';
	    if (re.ignoreCase) flags += 'i';
	    if (re.multiline) flags += 'm';
	    return flags;
	  };
	  clone.__getRegExpFlags = __getRegExpFlags;

	  return clone;
	}();

	if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {
	  module.exports = clone;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(292).Buffer, __webpack_require__(111)(module)))

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/* MIT license */
	var cssKeywords = __webpack_require__(863);

	// NOTE: conversions should only return primitive values (i.e. arrays, or
	//       values that give correct `typeof` results).
	//       do not use box values types (i.e. Number(), String(), etc.)

	var reverseKeywords = {};
	for (var key in cssKeywords) {
		if (cssKeywords.hasOwnProperty(key)) {
			reverseKeywords[cssKeywords[key]] = key;
		}
	}

	var convert = module.exports = {
		rgb: { channels: 3 },
		hsl: { channels: 3 },
		hsv: { channels: 3 },
		hwb: { channels: 3 },
		cmyk: { channels: 4 },
		xyz: { channels: 3 },
		lab: { channels: 3 },
		lch: { channels: 3 },
		hex: { channels: 1 },
		keyword: { channels: 1 },
		ansi16: { channels: 1 },
		ansi256: { channels: 1 },
		hcg: { channels: 3 },
		apple: { channels: 3 }
	};

	// hide .channels property
	for (var model in convert) {
		if (convert.hasOwnProperty(model)) {
			if (!('channels' in convert[model])) {
				throw new Error('missing channels property: ' + model);
			}

			var channels = convert[model].channels;
			delete convert[model].channels;
			Object.defineProperty(convert[model], 'channels', { value: channels });
		}
	}

	convert.rgb.hsl = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var min = Math.min(r, g, b);
		var max = Math.max(r, g, b);
		var delta = max - min;
		var h;
		var s;
		var l;

		if (max === min) {
			h = 0;
		} else if (r === max) {
			h = (g - b) / delta;
		} else if (g === max) {
			h = 2 + (b - r) / delta;
		} else if (b === max) {
			h = 4 + (r - g) / delta;
		}

		h = Math.min(h * 60, 360);

		if (h < 0) {
			h += 360;
		}

		l = (min + max) / 2;

		if (max === min) {
			s = 0;
		} else if (l <= 0.5) {
			s = delta / (max + min);
		} else {
			s = delta / (2 - max - min);
		}

		return [h, s * 100, l * 100];
	};

	convert.rgb.hsv = function (rgb) {
		var r = rgb[0];
		var g = rgb[1];
		var b = rgb[2];
		var min = Math.min(r, g, b);
		var max = Math.max(r, g, b);
		var delta = max - min;
		var h;
		var s;
		var v;

		if (max === 0) {
			s = 0;
		} else {
			s = delta / max * 1000 / 10;
		}

		if (max === min) {
			h = 0;
		} else if (r === max) {
			h = (g - b) / delta;
		} else if (g === max) {
			h = 2 + (b - r) / delta;
		} else if (b === max) {
			h = 4 + (r - g) / delta;
		}

		h = Math.min(h * 60, 360);

		if (h < 0) {
			h += 360;
		}

		v = max / 255 * 1000 / 10;

		return [h, s, v];
	};

	convert.rgb.hwb = function (rgb) {
		var r = rgb[0];
		var g = rgb[1];
		var b = rgb[2];
		var h = convert.rgb.hsl(rgb)[0];
		var w = 1 / 255 * Math.min(r, Math.min(g, b));

		b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

		return [h, w * 100, b * 100];
	};

	convert.rgb.cmyk = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var c;
		var m;
		var y;
		var k;

		k = Math.min(1 - r, 1 - g, 1 - b);
		c = (1 - r - k) / (1 - k) || 0;
		m = (1 - g - k) / (1 - k) || 0;
		y = (1 - b - k) / (1 - k) || 0;

		return [c * 100, m * 100, y * 100, k * 100];
	};

	/**
	 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	 * */
	function comparativeDistance(x, y) {
		return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);
	}

	convert.rgb.keyword = function (rgb) {
		var reversed = reverseKeywords[rgb];
		if (reversed) {
			return reversed;
		}

		var currentClosestDistance = Infinity;
		var currentClosestKeyword;

		for (var keyword in cssKeywords) {
			if (cssKeywords.hasOwnProperty(keyword)) {
				var value = cssKeywords[keyword];

				// Compute comparative distance
				var distance = comparativeDistance(rgb, value);

				// Check if its less, if so set as closest
				if (distance < currentClosestDistance) {
					currentClosestDistance = distance;
					currentClosestKeyword = keyword;
				}
			}
		}

		return currentClosestKeyword;
	};

	convert.keyword.rgb = function (keyword) {
		return cssKeywords[keyword];
	};

	convert.rgb.xyz = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;

		// assume sRGB
		r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
		g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
		b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;

		var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
		var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
		var z = r * 0.0193 + g * 0.1192 + b * 0.9505;

		return [x * 100, y * 100, z * 100];
	};

	convert.rgb.lab = function (rgb) {
		var xyz = convert.rgb.xyz(rgb);
		var x = xyz[0];
		var y = xyz[1];
		var z = xyz[2];
		var l;
		var a;
		var b;

		x /= 95.047;
		y /= 100;
		z /= 108.883;

		x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;

		l = 116 * y - 16;
		a = 500 * (x - y);
		b = 200 * (y - z);

		return [l, a, b];
	};

	convert.hsl.rgb = function (hsl) {
		var h = hsl[0] / 360;
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var t1;
		var t2;
		var t3;
		var rgb;
		var val;

		if (s === 0) {
			val = l * 255;
			return [val, val, val];
		}

		if (l < 0.5) {
			t2 = l * (1 + s);
		} else {
			t2 = l + s - l * s;
		}

		t1 = 2 * l - t2;

		rgb = [0, 0, 0];
		for (var i = 0; i < 3; i++) {
			t3 = h + 1 / 3 * -(i - 1);
			if (t3 < 0) {
				t3++;
			}
			if (t3 > 1) {
				t3--;
			}

			if (6 * t3 < 1) {
				val = t1 + (t2 - t1) * 6 * t3;
			} else if (2 * t3 < 1) {
				val = t2;
			} else if (3 * t3 < 2) {
				val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
			} else {
				val = t1;
			}

			rgb[i] = val * 255;
		}

		return rgb;
	};

	convert.hsl.hsv = function (hsl) {
		var h = hsl[0];
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var smin = s;
		var lmin = Math.max(l, 0.01);
		var sv;
		var v;

		l *= 2;
		s *= l <= 1 ? l : 2 - l;
		smin *= lmin <= 1 ? lmin : 2 - lmin;
		v = (l + s) / 2;
		sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);

		return [h, sv * 100, v * 100];
	};

	convert.hsv.rgb = function (hsv) {
		var h = hsv[0] / 60;
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
		var hi = Math.floor(h) % 6;

		var f = h - Math.floor(h);
		var p = 255 * v * (1 - s);
		var q = 255 * v * (1 - s * f);
		var t = 255 * v * (1 - s * (1 - f));
		v *= 255;

		switch (hi) {
			case 0:
				return [v, t, p];
			case 1:
				return [q, v, p];
			case 2:
				return [p, v, t];
			case 3:
				return [p, q, v];
			case 4:
				return [t, p, v];
			case 5:
				return [v, p, q];
		}
	};

	convert.hsv.hsl = function (hsv) {
		var h = hsv[0];
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
		var vmin = Math.max(v, 0.01);
		var lmin;
		var sl;
		var l;

		l = (2 - s) * v;
		lmin = (2 - s) * vmin;
		sl = s * vmin;
		sl /= lmin <= 1 ? lmin : 2 - lmin;
		sl = sl || 0;
		l /= 2;

		return [h, sl * 100, l * 100];
	};

	// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
	convert.hwb.rgb = function (hwb) {
		var h = hwb[0] / 360;
		var wh = hwb[1] / 100;
		var bl = hwb[2] / 100;
		var ratio = wh + bl;
		var i;
		var v;
		var f;
		var n;

		// wh + bl cant be > 1
		if (ratio > 1) {
			wh /= ratio;
			bl /= ratio;
		}

		i = Math.floor(6 * h);
		v = 1 - bl;
		f = 6 * h - i;

		if ((i & 0x01) !== 0) {
			f = 1 - f;
		}

		n = wh + f * (v - wh); // linear interpolation

		var r;
		var g;
		var b;
		switch (i) {
			default:
			case 6:
			case 0:
				r = v;g = n;b = wh;break;
			case 1:
				r = n;g = v;b = wh;break;
			case 2:
				r = wh;g = v;b = n;break;
			case 3:
				r = wh;g = n;b = v;break;
			case 4:
				r = n;g = wh;b = v;break;
			case 5:
				r = v;g = wh;b = n;break;
		}

		return [r * 255, g * 255, b * 255];
	};

	convert.cmyk.rgb = function (cmyk) {
		var c = cmyk[0] / 100;
		var m = cmyk[1] / 100;
		var y = cmyk[2] / 100;
		var k = cmyk[3] / 100;
		var r;
		var g;
		var b;

		r = 1 - Math.min(1, c * (1 - k) + k);
		g = 1 - Math.min(1, m * (1 - k) + k);
		b = 1 - Math.min(1, y * (1 - k) + k);

		return [r * 255, g * 255, b * 255];
	};

	convert.xyz.rgb = function (xyz) {
		var x = xyz[0] / 100;
		var y = xyz[1] / 100;
		var z = xyz[2] / 100;
		var r;
		var g;
		var b;

		r = x * 3.2406 + y * -1.5372 + z * -0.4986;
		g = x * -0.9689 + y * 1.8758 + z * 0.0415;
		b = x * 0.0557 + y * -0.2040 + z * 1.0570;

		// assume sRGB
		r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;

		g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;

		b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;

		r = Math.min(Math.max(0, r), 1);
		g = Math.min(Math.max(0, g), 1);
		b = Math.min(Math.max(0, b), 1);

		return [r * 255, g * 255, b * 255];
	};

	convert.xyz.lab = function (xyz) {
		var x = xyz[0];
		var y = xyz[1];
		var z = xyz[2];
		var l;
		var a;
		var b;

		x /= 95.047;
		y /= 100;
		z /= 108.883;

		x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;

		l = 116 * y - 16;
		a = 500 * (x - y);
		b = 200 * (y - z);

		return [l, a, b];
	};

	convert.lab.xyz = function (lab) {
		var l = lab[0];
		var a = lab[1];
		var b = lab[2];
		var x;
		var y;
		var z;

		y = (l + 16) / 116;
		x = a / 500 + y;
		z = y - b / 200;

		var y2 = Math.pow(y, 3);
		var x2 = Math.pow(x, 3);
		var z2 = Math.pow(z, 3);
		y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
		x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
		z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

		x *= 95.047;
		y *= 100;
		z *= 108.883;

		return [x, y, z];
	};

	convert.lab.lch = function (lab) {
		var l = lab[0];
		var a = lab[1];
		var b = lab[2];
		var hr;
		var h;
		var c;

		hr = Math.atan2(b, a);
		h = hr * 360 / 2 / Math.PI;

		if (h < 0) {
			h += 360;
		}

		c = Math.sqrt(a * a + b * b);

		return [l, c, h];
	};

	convert.lch.lab = function (lch) {
		var l = lch[0];
		var c = lch[1];
		var h = lch[2];
		var a;
		var b;
		var hr;

		hr = h / 360 * 2 * Math.PI;
		a = c * Math.cos(hr);
		b = c * Math.sin(hr);

		return [l, a, b];
	};

	convert.rgb.ansi16 = function (args) {
		var r = args[0];
		var g = args[1];
		var b = args[2];
		var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

		value = Math.round(value / 50);

		if (value === 0) {
			return 30;
		}

		var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));

		if (value === 2) {
			ansi += 60;
		}

		return ansi;
	};

	convert.hsv.ansi16 = function (args) {
		// optimization here; we already know the value and don't need to get
		// it converted for us.
		return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
	};

	convert.rgb.ansi256 = function (args) {
		var r = args[0];
		var g = args[1];
		var b = args[2];

		// we use the extended greyscale palette here, with the exception of
		// black and white. normal palette only has 4 greyscale shades.
		if (r === g && g === b) {
			if (r < 8) {
				return 16;
			}

			if (r > 248) {
				return 231;
			}

			return Math.round((r - 8) / 247 * 24) + 232;
		}

		var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);

		return ansi;
	};

	convert.ansi16.rgb = function (args) {
		var color = args % 10;

		// handle greyscale
		if (color === 0 || color === 7) {
			if (args > 50) {
				color += 3.5;
			}

			color = color / 10.5 * 255;

			return [color, color, color];
		}

		var mult = (~~(args > 50) + 1) * 0.5;
		var r = (color & 1) * mult * 255;
		var g = (color >> 1 & 1) * mult * 255;
		var b = (color >> 2 & 1) * mult * 255;

		return [r, g, b];
	};

	convert.ansi256.rgb = function (args) {
		// handle greyscale
		if (args >= 232) {
			var c = (args - 232) * 10 + 8;
			return [c, c, c];
		}

		args -= 16;

		var rem;
		var r = Math.floor(args / 36) / 5 * 255;
		var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
		var b = rem % 6 / 5 * 255;

		return [r, g, b];
	};

	convert.rgb.hex = function (args) {
		var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);

		var string = integer.toString(16).toUpperCase();
		return '000000'.substring(string.length) + string;
	};

	convert.hex.rgb = function (args) {
		var match = args.toString(16).match(/[a-f0-9]{6}/i);
		if (!match) {
			return [0, 0, 0];
		}

		var integer = parseInt(match[0], 16);
		var r = integer >> 16 & 0xFF;
		var g = integer >> 8 & 0xFF;
		var b = integer & 0xFF;

		return [r, g, b];
	};

	convert.rgb.hcg = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var max = Math.max(Math.max(r, g), b);
		var min = Math.min(Math.min(r, g), b);
		var chroma = max - min;
		var grayscale;
		var hue;

		if (chroma < 1) {
			grayscale = min / (1 - chroma);
		} else {
			grayscale = 0;
		}

		if (chroma <= 0) {
			hue = 0;
		} else if (max === r) {
			hue = (g - b) / chroma % 6;
		} else if (max === g) {
			hue = 2 + (b - r) / chroma;
		} else {
			hue = 4 + (r - g) / chroma + 4;
		}

		hue /= 6;
		hue %= 1;

		return [hue * 360, chroma * 100, grayscale * 100];
	};

	convert.hsl.hcg = function (hsl) {
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var c = 1;
		var f = 0;

		if (l < 0.5) {
			c = 2.0 * s * l;
		} else {
			c = 2.0 * s * (1.0 - l);
		}

		if (c < 1.0) {
			f = (l - 0.5 * c) / (1.0 - c);
		}

		return [hsl[0], c * 100, f * 100];
	};

	convert.hsv.hcg = function (hsv) {
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;

		var c = s * v;
		var f = 0;

		if (c < 1.0) {
			f = (v - c) / (1 - c);
		}

		return [hsv[0], c * 100, f * 100];
	};

	convert.hcg.rgb = function (hcg) {
		var h = hcg[0] / 360;
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;

		if (c === 0.0) {
			return [g * 255, g * 255, g * 255];
		}

		var pure = [0, 0, 0];
		var hi = h % 1 * 6;
		var v = hi % 1;
		var w = 1 - v;
		var mg = 0;

		switch (Math.floor(hi)) {
			case 0:
				pure[0] = 1;pure[1] = v;pure[2] = 0;break;
			case 1:
				pure[0] = w;pure[1] = 1;pure[2] = 0;break;
			case 2:
				pure[0] = 0;pure[1] = 1;pure[2] = v;break;
			case 3:
				pure[0] = 0;pure[1] = w;pure[2] = 1;break;
			case 4:
				pure[0] = v;pure[1] = 0;pure[2] = 1;break;
			default:
				pure[0] = 1;pure[1] = 0;pure[2] = w;
		}

		mg = (1.0 - c) * g;

		return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];
	};

	convert.hcg.hsv = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;

		var v = c + g * (1.0 - c);
		var f = 0;

		if (v > 0.0) {
			f = c / v;
		}

		return [hcg[0], f * 100, v * 100];
	};

	convert.hcg.hsl = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;

		var l = g * (1.0 - c) + 0.5 * c;
		var s = 0;

		if (l > 0.0 && l < 0.5) {
			s = c / (2 * l);
		} else if (l >= 0.5 && l < 1.0) {
			s = c / (2 * (1 - l));
		}

		return [hcg[0], s * 100, l * 100];
	};

	convert.hcg.hwb = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
		var v = c + g * (1.0 - c);
		return [hcg[0], (v - c) * 100, (1 - v) * 100];
	};

	convert.hwb.hcg = function (hwb) {
		var w = hwb[1] / 100;
		var b = hwb[2] / 100;
		var v = 1 - b;
		var c = v - w;
		var g = 0;

		if (c < 1) {
			g = (v - c) / (1 - c);
		}

		return [hwb[0], c * 100, g * 100];
	};

	convert.apple.rgb = function (apple) {
		return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
	};

	convert.rgb.apple = function (rgb) {
		return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
	};

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/* MIT license */
	var _clone = __webpack_require__(295);
	var convert = __webpack_require__(864);
	var string = __webpack_require__(867);

	var Color = function Color(obj) {
		if (obj instanceof Color) {
			return obj;
		}
		if (!(this instanceof Color)) {
			return new Color(obj);
		}

		this.values = {
			rgb: [0, 0, 0],
			hsl: [0, 0, 0],
			hsv: [0, 0, 0],
			hwb: [0, 0, 0],
			cmyk: [0, 0, 0, 0],
			alpha: 1
		};

		// parse Color() argument
		var vals;
		if (typeof obj === 'string') {
			vals = string.getRgba(obj);
			if (vals) {
				this.setValues('rgb', vals);
			} else if (vals = string.getHsla(obj)) {
				this.setValues('hsl', vals);
			} else if (vals = string.getHwb(obj)) {
				this.setValues('hwb', vals);
			} else {
				throw new Error('Unable to parse color from string "' + obj + '"');
			}
		} else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
			vals = obj;
			if (vals.r !== undefined || vals.red !== undefined) {
				this.setValues('rgb', vals);
			} else if (vals.l !== undefined || vals.lightness !== undefined) {
				this.setValues('hsl', vals);
			} else if (vals.v !== undefined || vals.value !== undefined) {
				this.setValues('hsv', vals);
			} else if (vals.w !== undefined || vals.whiteness !== undefined) {
				this.setValues('hwb', vals);
			} else if (vals.c !== undefined || vals.cyan !== undefined) {
				this.setValues('cmyk', vals);
			} else {
				throw new Error('Unable to parse color from object ' + JSON.stringify(obj));
			}
		}
	};

	Color.prototype = {
		rgb: function rgb() {
			return this.setSpace('rgb', arguments);
		},
		hsl: function hsl() {
			return this.setSpace('hsl', arguments);
		},
		hsv: function hsv() {
			return this.setSpace('hsv', arguments);
		},
		hwb: function hwb() {
			return this.setSpace('hwb', arguments);
		},
		cmyk: function cmyk() {
			return this.setSpace('cmyk', arguments);
		},

		rgbArray: function rgbArray() {
			return this.values.rgb;
		},
		hslArray: function hslArray() {
			return this.values.hsl;
		},
		hsvArray: function hsvArray() {
			return this.values.hsv;
		},
		hwbArray: function hwbArray() {
			if (this.values.alpha !== 1) {
				return this.values.hwb.concat([this.values.alpha]);
			}
			return this.values.hwb;
		},
		cmykArray: function cmykArray() {
			return this.values.cmyk;
		},
		rgbaArray: function rgbaArray() {
			var rgb = this.values.rgb;
			return rgb.concat([this.values.alpha]);
		},
		hslaArray: function hslaArray() {
			var hsl = this.values.hsl;
			return hsl.concat([this.values.alpha]);
		},
		alpha: function alpha(val) {
			if (val === undefined) {
				return this.values.alpha;
			}
			this.setValues('alpha', val);
			return this;
		},

		red: function red(val) {
			return this.setChannel('rgb', 0, val);
		},
		green: function green(val) {
			return this.setChannel('rgb', 1, val);
		},
		blue: function blue(val) {
			return this.setChannel('rgb', 2, val);
		},
		hue: function hue(val) {
			if (val) {
				val %= 360;
				val = val < 0 ? 360 + val : val;
			}
			return this.setChannel('hsl', 0, val);
		},
		saturation: function saturation(val) {
			return this.setChannel('hsl', 1, val);
		},
		lightness: function lightness(val) {
			return this.setChannel('hsl', 2, val);
		},
		saturationv: function saturationv(val) {
			return this.setChannel('hsv', 1, val);
		},
		whiteness: function whiteness(val) {
			return this.setChannel('hwb', 1, val);
		},
		blackness: function blackness(val) {
			return this.setChannel('hwb', 2, val);
		},
		value: function value(val) {
			return this.setChannel('hsv', 2, val);
		},
		cyan: function cyan(val) {
			return this.setChannel('cmyk', 0, val);
		},
		magenta: function magenta(val) {
			return this.setChannel('cmyk', 1, val);
		},
		yellow: function yellow(val) {
			return this.setChannel('cmyk', 2, val);
		},
		black: function black(val) {
			return this.setChannel('cmyk', 3, val);
		},

		hexString: function hexString() {
			return string.hexString(this.values.rgb);
		},
		rgbString: function rgbString() {
			return string.rgbString(this.values.rgb, this.values.alpha);
		},
		rgbaString: function rgbaString() {
			return string.rgbaString(this.values.rgb, this.values.alpha);
		},
		percentString: function percentString() {
			return string.percentString(this.values.rgb, this.values.alpha);
		},
		hslString: function hslString() {
			return string.hslString(this.values.hsl, this.values.alpha);
		},
		hslaString: function hslaString() {
			return string.hslaString(this.values.hsl, this.values.alpha);
		},
		hwbString: function hwbString() {
			return string.hwbString(this.values.hwb, this.values.alpha);
		},
		keyword: function keyword() {
			return string.keyword(this.values.rgb, this.values.alpha);
		},

		rgbNumber: function rgbNumber() {
			return this.values.rgb[0] << 16 | this.values.rgb[1] << 8 | this.values.rgb[2];
		},

		luminosity: function luminosity() {
			// http://www.w3.org/TR/WCAG20/#relativeluminancedef
			var rgb = this.values.rgb;
			var lum = [];
			for (var i = 0; i < rgb.length; i++) {
				var chan = rgb[i] / 255;
				lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);
			}
			return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
		},

		contrast: function contrast(color2) {
			// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
			var lum1 = this.luminosity();
			var lum2 = color2.luminosity();
			if (lum1 > lum2) {
				return (lum1 + 0.05) / (lum2 + 0.05);
			}
			return (lum2 + 0.05) / (lum1 + 0.05);
		},

		level: function level(color2) {
			var contrastRatio = this.contrast(color2);
			if (contrastRatio >= 7.1) {
				return 'AAA';
			}

			return contrastRatio >= 4.5 ? 'AA' : '';
		},

		dark: function dark() {
			// YIQ equation from http://24ways.org/2010/calculating-color-contrast
			var rgb = this.values.rgb;
			var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
			return yiq < 128;
		},

		light: function light() {
			return !this.dark();
		},

		negate: function negate() {
			var rgb = [];
			for (var i = 0; i < 3; i++) {
				rgb[i] = 255 - this.values.rgb[i];
			}
			this.setValues('rgb', rgb);
			return this;
		},

		lighten: function lighten(ratio) {
			this.values.hsl[2] += this.values.hsl[2] * ratio;
			this.setValues('hsl', this.values.hsl);
			return this;
		},

		darken: function darken(ratio) {
			this.values.hsl[2] -= this.values.hsl[2] * ratio;
			this.setValues('hsl', this.values.hsl);
			return this;
		},

		saturate: function saturate(ratio) {
			this.values.hsl[1] += this.values.hsl[1] * ratio;
			this.setValues('hsl', this.values.hsl);
			return this;
		},

		desaturate: function desaturate(ratio) {
			this.values.hsl[1] -= this.values.hsl[1] * ratio;
			this.setValues('hsl', this.values.hsl);
			return this;
		},

		whiten: function whiten(ratio) {
			this.values.hwb[1] += this.values.hwb[1] * ratio;
			this.setValues('hwb', this.values.hwb);
			return this;
		},

		blacken: function blacken(ratio) {
			this.values.hwb[2] += this.values.hwb[2] * ratio;
			this.setValues('hwb', this.values.hwb);
			return this;
		},

		greyscale: function greyscale() {
			var rgb = this.values.rgb;
			// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
			var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
			this.setValues('rgb', [val, val, val]);
			return this;
		},

		clearer: function clearer(ratio) {
			this.setValues('alpha', this.values.alpha - this.values.alpha * ratio);
			return this;
		},

		opaquer: function opaquer(ratio) {
			this.setValues('alpha', this.values.alpha + this.values.alpha * ratio);
			return this;
		},

		rotate: function rotate(degrees) {
			var hue = this.values.hsl[0];
			hue = (hue + degrees) % 360;
			hue = hue < 0 ? 360 + hue : hue;
			this.values.hsl[0] = hue;
			this.setValues('hsl', this.values.hsl);
			return this;
		},

		/**
	  * Ported from sass implementation in C
	  * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
	  */
		mix: function mix(mixinColor, weight) {
			var color1 = this;
			var color2 = mixinColor;
			var p = weight === undefined ? 0.5 : weight;

			var w = 2 * p - 1;
			var a = color1.alpha() - color2.alpha();

			var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
			var w2 = 1 - w1;

			return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));
		},

		toJSON: function toJSON() {
			return this.rgb();
		},

		clone: function clone() {
			var col = new Color();
			col.values = _clone(this.values);
			return col;
		}
	};

	Color.prototype.getValues = function (space) {
		var vals = {};

		for (var i = 0; i < space.length; i++) {
			vals[space.charAt(i)] = this.values[space][i];
		}

		if (this.values.alpha !== 1) {
			vals.a = this.values.alpha;
		}

		// {r: 255, g: 255, b: 255, a: 0.4}
		return vals;
	};

	Color.prototype.setValues = function (space, vals) {
		var spaces = {
			rgb: ['red', 'green', 'blue'],
			hsl: ['hue', 'saturation', 'lightness'],
			hsv: ['hue', 'saturation', 'value'],
			hwb: ['hue', 'whiteness', 'blackness'],
			cmyk: ['cyan', 'magenta', 'yellow', 'black']
		};

		var maxes = {
			rgb: [255, 255, 255],
			hsl: [360, 100, 100],
			hsv: [360, 100, 100],
			hwb: [360, 100, 100],
			cmyk: [100, 100, 100, 100]
		};

		var i;
		var alpha = 1;
		if (space === 'alpha') {
			alpha = vals;
		} else if (vals.length) {
			// [10, 10, 10]
			this.values[space] = vals.slice(0, space.length);
			alpha = vals[space.length];
		} else if (vals[space.charAt(0)] !== undefined) {
			// {r: 10, g: 10, b: 10}
			for (i = 0; i < space.length; i++) {
				this.values[space][i] = vals[space.charAt(i)];
			}

			alpha = vals.a;
		} else if (vals[spaces[space][0]] !== undefined) {
			// {red: 10, green: 10, blue: 10}
			var chans = spaces[space];

			for (i = 0; i < space.length; i++) {
				this.values[space][i] = vals[chans[i]];
			}

			alpha = vals.alpha;
		}

		this.values.alpha = Math.max(0, Math.min(1, alpha === undefined ? this.values.alpha : alpha));

		if (space === 'alpha') {
			return false;
		}

		var capped;

		// cap values of the space prior converting all values
		for (i = 0; i < space.length; i++) {
			capped = Math.max(0, Math.min(maxes[space][i], this.values[space][i]));
			this.values[space][i] = Math.round(capped);
		}

		// convert to all the other color spaces
		for (var sname in spaces) {
			if (sname !== space) {
				this.values[sname] = convert[space][sname](this.values[space]);
			}

			// cap values
			for (i = 0; i < sname.length; i++) {
				capped = Math.max(0, Math.min(maxes[sname][i], this.values[sname][i]));
				this.values[sname][i] = Math.round(capped);
			}
		}

		return true;
	};

	Color.prototype.setSpace = function (space, args) {
		var vals = args[0];

		if (vals === undefined) {
			// color.rgb()
			return this.getValues(space);
		}

		// color.rgb(10, 10, 10)
		if (typeof vals === 'number') {
			vals = Array.prototype.slice.call(args);
		}

		this.setValues(space, vals);
		return this;
	};

	Color.prototype.setChannel = function (space, index, val) {
		if (val === undefined) {
			// color.red()
			return this.values[space][index];
		} else if (val === this.values[space][index]) {
			// color.red(color.red())
			return this;
		}

		// color.red(100)
		this.values[space][index] = val;
		this.setValues(space, this.values[space]);

		return this;
	};

	module.exports = Color;

/***/ },
/* 298 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Slice reference.
	 */

	var slice = [].slice;

	/**
	 * Bind `obj` to `fn`.
	 *
	 * @param {Object} obj
	 * @param {Function|String} fn or string
	 * @return {Function}
	 * @api public
	 */

	module.exports = function (obj, fn) {
	  if ('string' == typeof fn) fn = obj[fn];
	  if ('function' != typeof fn) throw new Error('bind() requires a function');
	  var args = slice.call(arguments, 2);
	  return function () {
	    return fn.apply(obj, args.concat(slice.call(arguments)));
	  };
	};

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Module dependencies
	 */

	var XMLHttpRequest = __webpack_require__(181);
	var XHR = __webpack_require__(876);
	var JSONP = __webpack_require__(875);
	var websocket = __webpack_require__(877);

	/**
	 * Export transports.
	 */

	exports.polling = polling;
	exports.websocket = websocket;

	/**
	 * Polling transport polymorphic constructor.
	 * Decides on xhr vs jsonp based on feature detection.
	 *
	 * @api private
	 */

	function polling(opts) {
	  var xhr;
	  var xd = false;
	  var xs = false;
	  var jsonp = false !== opts.jsonp;

	  if (global.location) {
	    var isSSL = 'https:' == location.protocol;
	    var port = location.port;

	    // some user agents have empty `location.port`
	    if (!port) {
	      port = isSSL ? 443 : 80;
	    }

	    xd = opts.hostname != location.hostname || port != opts.port;
	    xs = opts.secure != isSSL;
	  }

	  opts.xdomain = xd;
	  opts.xscheme = xs;
	  xhr = new XMLHttpRequest(opts);

	  if ('open' in xhr && !opts.forceJSONP) {
	    return new XHR(opts);
	  } else {
	    if (!jsonp) throw new Error('JSONP disabled');
	    return new JSONP(opts);
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Module dependencies.
	 */

	var Transport = __webpack_require__(180);
	var parseqs = __webpack_require__(185);
	var parser = __webpack_require__(91);
	var inherit = __webpack_require__(128);
	var yeast = __webpack_require__(365);
	var debug = __webpack_require__(24)('engine.io-client:polling');

	/**
	 * Module exports.
	 */

	module.exports = Polling;

	/**
	 * Is XHR2 supported?
	 */

	var hasXHR2 = function () {
	  var XMLHttpRequest = __webpack_require__(181);
	  var xhr = new XMLHttpRequest({ xdomain: false });
	  return null != xhr.responseType;
	}();

	/**
	 * Polling interface.
	 *
	 * @param {Object} opts
	 * @api private
	 */

	function Polling(opts) {
	  var forceBase64 = opts && opts.forceBase64;
	  if (!hasXHR2 || forceBase64) {
	    this.supportsBinary = false;
	  }
	  Transport.call(this, opts);
	}

	/**
	 * Inherits from Transport.
	 */

	inherit(Polling, Transport);

	/**
	 * Transport name.
	 */

	Polling.prototype.name = 'polling';

	/**
	 * Opens the socket (triggers polling). We write a PING message to determine
	 * when the transport is open.
	 *
	 * @api private
	 */

	Polling.prototype.doOpen = function () {
	  this.poll();
	};

	/**
	 * Pauses polling.
	 *
	 * @param {Function} callback upon buffers are flushed and transport is paused
	 * @api private
	 */

	Polling.prototype.pause = function (onPause) {
	  var pending = 0;
	  var self = this;

	  this.readyState = 'pausing';

	  function pause() {
	    debug('paused');
	    self.readyState = 'paused';
	    onPause();
	  }

	  if (this.polling || !this.writable) {
	    var total = 0;

	    if (this.polling) {
	      debug('we are currently polling - waiting to pause');
	      total++;
	      this.once('pollComplete', function () {
	        debug('pre-pause polling complete');
	        --total || pause();
	      });
	    }

	    if (!this.writable) {
	      debug('we are currently writing - waiting to pause');
	      total++;
	      this.once('drain', function () {
	        debug('pre-pause writing complete');
	        --total || pause();
	      });
	    }
	  } else {
	    pause();
	  }
	};

	/**
	 * Starts polling cycle.
	 *
	 * @api public
	 */

	Polling.prototype.poll = function () {
	  debug('polling');
	  this.polling = true;
	  this.doPoll();
	  this.emit('poll');
	};

	/**
	 * Overloads onData to detect payloads.
	 *
	 * @api private
	 */

	Polling.prototype.onData = function (data) {
	  var self = this;
	  debug('polling got data %s', data);
	  var callback = function callback(packet, index, total) {
	    // if its the first message we consider the transport open
	    if ('opening' == self.readyState) {
	      self.onOpen();
	    }

	    // if its a close packet, we close the ongoing requests
	    if ('close' == packet.type) {
	      self.onClose();
	      return false;
	    }

	    // otherwise bypass onData and handle the message
	    self.onPacket(packet);
	  };

	  // decode payload
	  parser.decodePayload(data, this.socket.binaryType, callback);

	  // if an event did not trigger closing
	  if ('closed' != this.readyState) {
	    // if we got data we're not polling
	    this.polling = false;
	    this.emit('pollComplete');

	    if ('open' == this.readyState) {
	      this.poll();
	    } else {
	      debug('ignoring poll - transport state "%s"', this.readyState);
	    }
	  }
	};

	/**
	 * For polling, send a close packet.
	 *
	 * @api private
	 */

	Polling.prototype.doClose = function () {
	  var self = this;

	  function close() {
	    debug('writing close packet');
	    self.write([{ type: 'close' }]);
	  }

	  if ('open' == this.readyState) {
	    debug('transport open - closing');
	    close();
	  } else {
	    // in case we're trying to close while
	    // handshaking is in progress (GH-164)
	    debug('transport not open - deferring close');
	    this.once('open', close);
	  }
	};

	/**
	 * Writes a packets payload.
	 *
	 * @param {Array} data packets
	 * @param {Function} drain callback
	 * @api private
	 */

	Polling.prototype.write = function (packets) {
	  var self = this;
	  this.writable = false;
	  var callbackfn = function callbackfn() {
	    self.writable = true;
	    self.emit('drain');
	  };

	  var self = this;
	  parser.encodePayload(packets, this.supportsBinary, function (data) {
	    self.doWrite(data, callbackfn);
	  });
	};

	/**
	 * Generates uri for connection.
	 *
	 * @api private
	 */

	Polling.prototype.uri = function () {
	  var query = this.query || {};
	  var schema = this.secure ? 'https' : 'http';
	  var port = '';

	  // cache busting is forced
	  if (false !== this.timestampRequests) {
	    query[this.timestampParam] = yeast();
	  }

	  if (!this.supportsBinary && !query.sid) {
	    query.b64 = 1;
	  }

	  query = parseqs.encode(query);

	  // avoid port if default for schema
	  if (this.port && ('https' == schema && this.port != 443 || 'http' == schema && this.port != 80)) {
	    port = ':' + this.port;
	  }

	  // prepend ? to query
	  if (query.length) {
	    query = '?' + query;
	  }

	  var ipv6 = this.hostname.indexOf(':') !== -1;
	  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
	};

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(43);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;

/***/ },
/* 302 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 303 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */

	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*! Hammer.JS - v2.0.7 - 2016-04-22
	 * http://hammerjs.github.io/
	 *
	 * Copyright (c) 2016 Jorik Tangelder;
	 * Licensed under the MIT license */
	(function (window, document, exportName, undefined) {
	    'use strict';

	    var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
	    var TEST_ELEMENT = document.createElement('div');

	    var TYPE_FUNCTION = 'function';

	    var round = Math.round;
	    var abs = Math.abs;
	    var now = Date.now;

	    /**
	     * set a timeout with a given scope
	     * @param {Function} fn
	     * @param {Number} timeout
	     * @param {Object} context
	     * @returns {number}
	     */
	    function setTimeoutContext(fn, timeout, context) {
	        return setTimeout(bindFn(fn, context), timeout);
	    }

	    /**
	     * if the argument is an array, we want to execute the fn on each entry
	     * if it aint an array we don't want to do a thing.
	     * this is used by all the methods that accept a single and array argument.
	     * @param {*|Array} arg
	     * @param {String} fn
	     * @param {Object} [context]
	     * @returns {Boolean}
	     */
	    function invokeArrayArg(arg, fn, context) {
	        if (Array.isArray(arg)) {
	            each(arg, context[fn], context);
	            return true;
	        }
	        return false;
	    }

	    /**
	     * walk objects and arrays
	     * @param {Object} obj
	     * @param {Function} iterator
	     * @param {Object} context
	     */
	    function each(obj, iterator, context) {
	        var i;

	        if (!obj) {
	            return;
	        }

	        if (obj.forEach) {
	            obj.forEach(iterator, context);
	        } else if (obj.length !== undefined) {
	            i = 0;
	            while (i < obj.length) {
	                iterator.call(context, obj[i], i, obj);
	                i++;
	            }
	        } else {
	            for (i in obj) {
	                obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
	            }
	        }
	    }

	    /**
	     * wrap a method with a deprecation warning and stack trace
	     * @param {Function} method
	     * @param {String} name
	     * @param {String} message
	     * @returns {Function} A new function wrapping the supplied method.
	     */
	    function deprecate(method, name, message) {
	        var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\n' + message + ' AT \n';
	        return function () {
	            var e = new Error('get-stack-trace');
	            var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '').replace(/^\s+at\s+/gm, '').replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';

	            var log = window.console && (window.console.warn || window.console.log);
	            if (log) {
	                log.call(window.console, deprecationMessage, stack);
	            }
	            return method.apply(this, arguments);
	        };
	    }

	    /**
	     * extend object.
	     * means that properties in dest will be overwritten by the ones in src.
	     * @param {Object} target
	     * @param {...Object} objects_to_assign
	     * @returns {Object} target
	     */
	    var assign;
	    if (typeof Object.assign !== 'function') {
	        assign = function assign(target) {
	            if (target === undefined || target === null) {
	                throw new TypeError('Cannot convert undefined or null to object');
	            }

	            var output = Object(target);
	            for (var index = 1; index < arguments.length; index++) {
	                var source = arguments[index];
	                if (source !== undefined && source !== null) {
	                    for (var nextKey in source) {
	                        if (source.hasOwnProperty(nextKey)) {
	                            output[nextKey] = source[nextKey];
	                        }
	                    }
	                }
	            }
	            return output;
	        };
	    } else {
	        assign = Object.assign;
	    }

	    /**
	     * extend object.
	     * means that properties in dest will be overwritten by the ones in src.
	     * @param {Object} dest
	     * @param {Object} src
	     * @param {Boolean} [merge=false]
	     * @returns {Object} dest
	     */
	    var extend = deprecate(function extend(dest, src, merge) {
	        var keys = Object.keys(src);
	        var i = 0;
	        while (i < keys.length) {
	            if (!merge || merge && dest[keys[i]] === undefined) {
	                dest[keys[i]] = src[keys[i]];
	            }
	            i++;
	        }
	        return dest;
	    }, 'extend', 'Use `assign`.');

	    /**
	     * merge the values from src in the dest.
	     * means that properties that exist in dest will not be overwritten by src
	     * @param {Object} dest
	     * @param {Object} src
	     * @returns {Object} dest
	     */
	    var merge = deprecate(function merge(dest, src) {
	        return extend(dest, src, true);
	    }, 'merge', 'Use `assign`.');

	    /**
	     * simple class inheritance
	     * @param {Function} child
	     * @param {Function} base
	     * @param {Object} [properties]
	     */
	    function inherit(child, base, properties) {
	        var baseP = base.prototype,
	            childP;

	        childP = child.prototype = Object.create(baseP);
	        childP.constructor = child;
	        childP._super = baseP;

	        if (properties) {
	            assign(childP, properties);
	        }
	    }

	    /**
	     * simple function bind
	     * @param {Function} fn
	     * @param {Object} context
	     * @returns {Function}
	     */
	    function bindFn(fn, context) {
	        return function boundFn() {
	            return fn.apply(context, arguments);
	        };
	    }

	    /**
	     * let a boolean value also be a function that must return a boolean
	     * this first item in args will be used as the context
	     * @param {Boolean|Function} val
	     * @param {Array} [args]
	     * @returns {Boolean}
	     */
	    function boolOrFn(val, args) {
	        if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) == TYPE_FUNCTION) {
	            return val.apply(args ? args[0] || undefined : undefined, args);
	        }
	        return val;
	    }

	    /**
	     * use the val2 when val1 is undefined
	     * @param {*} val1
	     * @param {*} val2
	     * @returns {*}
	     */
	    function ifUndefined(val1, val2) {
	        return val1 === undefined ? val2 : val1;
	    }

	    /**
	     * addEventListener with multiple events at once
	     * @param {EventTarget} target
	     * @param {String} types
	     * @param {Function} handler
	     */
	    function addEventListeners(target, types, handler) {
	        each(splitStr(types), function (type) {
	            target.addEventListener(type, handler, false);
	        });
	    }

	    /**
	     * removeEventListener with multiple events at once
	     * @param {EventTarget} target
	     * @param {String} types
	     * @param {Function} handler
	     */
	    function removeEventListeners(target, types, handler) {
	        each(splitStr(types), function (type) {
	            target.removeEventListener(type, handler, false);
	        });
	    }

	    /**
	     * find if a node is in the given parent
	     * @method hasParent
	     * @param {HTMLElement} node
	     * @param {HTMLElement} parent
	     * @return {Boolean} found
	     */
	    function hasParent(node, parent) {
	        while (node) {
	            if (node == parent) {
	                return true;
	            }
	            node = node.parentNode;
	        }
	        return false;
	    }

	    /**
	     * small indexOf wrapper
	     * @param {String} str
	     * @param {String} find
	     * @returns {Boolean} found
	     */
	    function inStr(str, find) {
	        return str.indexOf(find) > -1;
	    }

	    /**
	     * split string on whitespace
	     * @param {String} str
	     * @returns {Array} words
	     */
	    function splitStr(str) {
	        return str.trim().split(/\s+/g);
	    }

	    /**
	     * find if a array contains the object using indexOf or a simple polyFill
	     * @param {Array} src
	     * @param {String} find
	     * @param {String} [findByKey]
	     * @return {Boolean|Number} false when not found, or the index
	     */
	    function inArray(src, find, findByKey) {
	        if (src.indexOf && !findByKey) {
	            return src.indexOf(find);
	        } else {
	            var i = 0;
	            while (i < src.length) {
	                if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {
	                    return i;
	                }
	                i++;
	            }
	            return -1;
	        }
	    }

	    /**
	     * convert array-like objects to real arrays
	     * @param {Object} obj
	     * @returns {Array}
	     */
	    function toArray(obj) {
	        return Array.prototype.slice.call(obj, 0);
	    }

	    /**
	     * unique array with objects based on a key (like 'id') or just by the array's value
	     * @param {Array} src [{id:1},{id:2},{id:1}]
	     * @param {String} [key]
	     * @param {Boolean} [sort=False]
	     * @returns {Array} [{id:1},{id:2}]
	     */
	    function uniqueArray(src, key, sort) {
	        var results = [];
	        var values = [];
	        var i = 0;

	        while (i < src.length) {
	            var val = key ? src[i][key] : src[i];
	            if (inArray(values, val) < 0) {
	                results.push(src[i]);
	            }
	            values[i] = val;
	            i++;
	        }

	        if (sort) {
	            if (!key) {
	                results = results.sort();
	            } else {
	                results = results.sort(function sortUniqueArray(a, b) {
	                    return a[key] > b[key];
	                });
	            }
	        }

	        return results;
	    }

	    /**
	     * get the prefixed property
	     * @param {Object} obj
	     * @param {String} property
	     * @returns {String|Undefined} prefixed
	     */
	    function prefixed(obj, property) {
	        var prefix, prop;
	        var camelProp = property[0].toUpperCase() + property.slice(1);

	        var i = 0;
	        while (i < VENDOR_PREFIXES.length) {
	            prefix = VENDOR_PREFIXES[i];
	            prop = prefix ? prefix + camelProp : property;

	            if (prop in obj) {
	                return prop;
	            }
	            i++;
	        }
	        return undefined;
	    }

	    /**
	     * get a unique id
	     * @returns {number} uniqueId
	     */
	    var _uniqueId = 1;
	    function uniqueId() {
	        return _uniqueId++;
	    }

	    /**
	     * get the window object of an element
	     * @param {HTMLElement} element
	     * @returns {DocumentView|Window}
	     */
	    function getWindowForElement(element) {
	        var doc = element.ownerDocument || element;
	        return doc.defaultView || doc.parentWindow || window;
	    }

	    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

	    var SUPPORT_TOUCH = 'ontouchstart' in window;
	    var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
	    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

	    var INPUT_TYPE_TOUCH = 'touch';
	    var INPUT_TYPE_PEN = 'pen';
	    var INPUT_TYPE_MOUSE = 'mouse';
	    var INPUT_TYPE_KINECT = 'kinect';

	    var COMPUTE_INTERVAL = 25;

	    var INPUT_START = 1;
	    var INPUT_MOVE = 2;
	    var INPUT_END = 4;
	    var INPUT_CANCEL = 8;

	    var DIRECTION_NONE = 1;
	    var DIRECTION_LEFT = 2;
	    var DIRECTION_RIGHT = 4;
	    var DIRECTION_UP = 8;
	    var DIRECTION_DOWN = 16;

	    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
	    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
	    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

	    var PROPS_XY = ['x', 'y'];
	    var PROPS_CLIENT_XY = ['clientX', 'clientY'];

	    /**
	     * create new input type manager
	     * @param {Manager} manager
	     * @param {Function} callback
	     * @returns {Input}
	     * @constructor
	     */
	    function Input(manager, callback) {
	        var self = this;
	        this.manager = manager;
	        this.callback = callback;
	        this.element = manager.element;
	        this.target = manager.options.inputTarget;

	        // smaller wrapper around the handler, for the scope and the enabled state of the manager,
	        // so when disabled the input events are completely bypassed.
	        this.domHandler = function (ev) {
	            if (boolOrFn(manager.options.enable, [manager])) {
	                self.handler(ev);
	            }
	        };

	        this.init();
	    }

	    Input.prototype = {
	        /**
	         * should handle the inputEvent data and trigger the callback
	         * @virtual
	         */
	        handler: function handler() {},

	        /**
	         * bind the events
	         */
	        init: function init() {
	            this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
	            this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
	            this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
	        },

	        /**
	         * unbind the events
	         */
	        destroy: function destroy() {
	            this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
	            this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
	            this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
	        }
	    };

	    /**
	     * create new input type manager
	     * called by the Manager constructor
	     * @param {Hammer} manager
	     * @returns {Input}
	     */
	    function createInputInstance(manager) {
	        var Type;
	        var inputClass = manager.options.inputClass;

	        if (inputClass) {
	            Type = inputClass;
	        } else if (SUPPORT_POINTER_EVENTS) {
	            Type = PointerEventInput;
	        } else if (SUPPORT_ONLY_TOUCH) {
	            Type = TouchInput;
	        } else if (!SUPPORT_TOUCH) {
	            Type = MouseInput;
	        } else {
	            Type = TouchMouseInput;
	        }
	        return new Type(manager, inputHandler);
	    }

	    /**
	     * handle input events
	     * @param {Manager} manager
	     * @param {String} eventType
	     * @param {Object} input
	     */
	    function inputHandler(manager, eventType, input) {
	        var pointersLen = input.pointers.length;
	        var changedPointersLen = input.changedPointers.length;
	        var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;
	        var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;

	        input.isFirst = !!isFirst;
	        input.isFinal = !!isFinal;

	        if (isFirst) {
	            manager.session = {};
	        }

	        // source event is the normalized value of the domEvents
	        // like 'touchstart, mouseup, pointerdown'
	        input.eventType = eventType;

	        // compute scale, rotation etc
	        computeInputData(manager, input);

	        // emit secret event
	        manager.emit('hammer.input', input);

	        manager.recognize(input);
	        manager.session.prevInput = input;
	    }

	    /**
	     * extend the data with some usable properties like scale, rotate, velocity etc
	     * @param {Object} manager
	     * @param {Object} input
	     */
	    function computeInputData(manager, input) {
	        var session = manager.session;
	        var pointers = input.pointers;
	        var pointersLength = pointers.length;

	        // store the first input to calculate the distance and direction
	        if (!session.firstInput) {
	            session.firstInput = simpleCloneInputData(input);
	        }

	        // to compute scale and rotation we need to store the multiple touches
	        if (pointersLength > 1 && !session.firstMultiple) {
	            session.firstMultiple = simpleCloneInputData(input);
	        } else if (pointersLength === 1) {
	            session.firstMultiple = false;
	        }

	        var firstInput = session.firstInput;
	        var firstMultiple = session.firstMultiple;
	        var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

	        var center = input.center = getCenter(pointers);
	        input.timeStamp = now();
	        input.deltaTime = input.timeStamp - firstInput.timeStamp;

	        input.angle = getAngle(offsetCenter, center);
	        input.distance = getDistance(offsetCenter, center);

	        computeDeltaXY(session, input);
	        input.offsetDirection = getDirection(input.deltaX, input.deltaY);

	        var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
	        input.overallVelocityX = overallVelocity.x;
	        input.overallVelocityY = overallVelocity.y;
	        input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;

	        input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
	        input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

	        input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;

	        computeIntervalInputData(session, input);

	        // find the correct target
	        var target = manager.element;
	        if (hasParent(input.srcEvent.target, target)) {
	            target = input.srcEvent.target;
	        }
	        input.target = target;
	    }

	    function computeDeltaXY(session, input) {
	        var center = input.center;
	        var offset = session.offsetDelta || {};
	        var prevDelta = session.prevDelta || {};
	        var prevInput = session.prevInput || {};

	        if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
	            prevDelta = session.prevDelta = {
	                x: prevInput.deltaX || 0,
	                y: prevInput.deltaY || 0
	            };

	            offset = session.offsetDelta = {
	                x: center.x,
	                y: center.y
	            };
	        }

	        input.deltaX = prevDelta.x + (center.x - offset.x);
	        input.deltaY = prevDelta.y + (center.y - offset.y);
	    }

	    /**
	     * velocity is calculated every x ms
	     * @param {Object} session
	     * @param {Object} input
	     */
	    function computeIntervalInputData(session, input) {
	        var last = session.lastInterval || input,
	            deltaTime = input.timeStamp - last.timeStamp,
	            velocity,
	            velocityX,
	            velocityY,
	            direction;

	        if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
	            var deltaX = input.deltaX - last.deltaX;
	            var deltaY = input.deltaY - last.deltaY;

	            var v = getVelocity(deltaTime, deltaX, deltaY);
	            velocityX = v.x;
	            velocityY = v.y;
	            velocity = abs(v.x) > abs(v.y) ? v.x : v.y;
	            direction = getDirection(deltaX, deltaY);

	            session.lastInterval = input;
	        } else {
	            // use latest velocity info if it doesn't overtake a minimum period
	            velocity = last.velocity;
	            velocityX = last.velocityX;
	            velocityY = last.velocityY;
	            direction = last.direction;
	        }

	        input.velocity = velocity;
	        input.velocityX = velocityX;
	        input.velocityY = velocityY;
	        input.direction = direction;
	    }

	    /**
	     * create a simple clone from the input used for storage of firstInput and firstMultiple
	     * @param {Object} input
	     * @returns {Object} clonedInputData
	     */
	    function simpleCloneInputData(input) {
	        // make a simple copy of the pointers because we will get a reference if we don't
	        // we only need clientXY for the calculations
	        var pointers = [];
	        var i = 0;
	        while (i < input.pointers.length) {
	            pointers[i] = {
	                clientX: round(input.pointers[i].clientX),
	                clientY: round(input.pointers[i].clientY)
	            };
	            i++;
	        }

	        return {
	            timeStamp: now(),
	            pointers: pointers,
	            center: getCenter(pointers),
	            deltaX: input.deltaX,
	            deltaY: input.deltaY
	        };
	    }

	    /**
	     * get the center of all the pointers
	     * @param {Array} pointers
	     * @return {Object} center contains `x` and `y` properties
	     */
	    function getCenter(pointers) {
	        var pointersLength = pointers.length;

	        // no need to loop when only one touch
	        if (pointersLength === 1) {
	            return {
	                x: round(pointers[0].clientX),
	                y: round(pointers[0].clientY)
	            };
	        }

	        var x = 0,
	            y = 0,
	            i = 0;
	        while (i < pointersLength) {
	            x += pointers[i].clientX;
	            y += pointers[i].clientY;
	            i++;
	        }

	        return {
	            x: round(x / pointersLength),
	            y: round(y / pointersLength)
	        };
	    }

	    /**
	     * calculate the velocity between two points. unit is in px per ms.
	     * @param {Number} deltaTime
	     * @param {Number} x
	     * @param {Number} y
	     * @return {Object} velocity `x` and `y`
	     */
	    function getVelocity(deltaTime, x, y) {
	        return {
	            x: x / deltaTime || 0,
	            y: y / deltaTime || 0
	        };
	    }

	    /**
	     * get the direction between two points
	     * @param {Number} x
	     * @param {Number} y
	     * @return {Number} direction
	     */
	    function getDirection(x, y) {
	        if (x === y) {
	            return DIRECTION_NONE;
	        }

	        if (abs(x) >= abs(y)) {
	            return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
	        }
	        return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
	    }

	    /**
	     * calculate the absolute distance between two points
	     * @param {Object} p1 {x, y}
	     * @param {Object} p2 {x, y}
	     * @param {Array} [props] containing x and y keys
	     * @return {Number} distance
	     */
	    function getDistance(p1, p2, props) {
	        if (!props) {
	            props = PROPS_XY;
	        }
	        var x = p2[props[0]] - p1[props[0]],
	            y = p2[props[1]] - p1[props[1]];

	        return Math.sqrt(x * x + y * y);
	    }

	    /**
	     * calculate the angle between two coordinates
	     * @param {Object} p1
	     * @param {Object} p2
	     * @param {Array} [props] containing x and y keys
	     * @return {Number} angle
	     */
	    function getAngle(p1, p2, props) {
	        if (!props) {
	            props = PROPS_XY;
	        }
	        var x = p2[props[0]] - p1[props[0]],
	            y = p2[props[1]] - p1[props[1]];
	        return Math.atan2(y, x) * 180 / Math.PI;
	    }

	    /**
	     * calculate the rotation degrees between two pointersets
	     * @param {Array} start array of pointers
	     * @param {Array} end array of pointers
	     * @return {Number} rotation
	     */
	    function getRotation(start, end) {
	        return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
	    }

	    /**
	     * calculate the scale factor between two pointersets
	     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
	     * @param {Array} start array of pointers
	     * @param {Array} end array of pointers
	     * @return {Number} scale
	     */
	    function getScale(start, end) {
	        return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
	    }

	    var MOUSE_INPUT_MAP = {
	        mousedown: INPUT_START,
	        mousemove: INPUT_MOVE,
	        mouseup: INPUT_END
	    };

	    var MOUSE_ELEMENT_EVENTS = 'mousedown';
	    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

	    /**
	     * Mouse events input
	     * @constructor
	     * @extends Input
	     */
	    function MouseInput() {
	        this.evEl = MOUSE_ELEMENT_EVENTS;
	        this.evWin = MOUSE_WINDOW_EVENTS;

	        this.pressed = false; // mousedown state

	        Input.apply(this, arguments);
	    }

	    inherit(MouseInput, Input, {
	        /**
	         * handle mouse events
	         * @param {Object} ev
	         */
	        handler: function MEhandler(ev) {
	            var eventType = MOUSE_INPUT_MAP[ev.type];

	            // on start we want to have the left mouse button down
	            if (eventType & INPUT_START && ev.button === 0) {
	                this.pressed = true;
	            }

	            if (eventType & INPUT_MOVE && ev.which !== 1) {
	                eventType = INPUT_END;
	            }

	            // mouse must be down
	            if (!this.pressed) {
	                return;
	            }

	            if (eventType & INPUT_END) {
	                this.pressed = false;
	            }

	            this.callback(this.manager, eventType, {
	                pointers: [ev],
	                changedPointers: [ev],
	                pointerType: INPUT_TYPE_MOUSE,
	                srcEvent: ev
	            });
	        }
	    });

	    var POINTER_INPUT_MAP = {
	        pointerdown: INPUT_START,
	        pointermove: INPUT_MOVE,
	        pointerup: INPUT_END,
	        pointercancel: INPUT_CANCEL,
	        pointerout: INPUT_CANCEL
	    };

	    // in IE10 the pointer types is defined as an enum
	    var IE10_POINTER_TYPE_ENUM = {
	        2: INPUT_TYPE_TOUCH,
	        3: INPUT_TYPE_PEN,
	        4: INPUT_TYPE_MOUSE,
	        5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
	    };

	    var POINTER_ELEMENT_EVENTS = 'pointerdown';
	    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

	    // IE10 has prefixed support, and case-sensitive
	    if (window.MSPointerEvent && !window.PointerEvent) {
	        POINTER_ELEMENT_EVENTS = 'MSPointerDown';
	        POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
	    }

	    /**
	     * Pointer events input
	     * @constructor
	     * @extends Input
	     */
	    function PointerEventInput() {
	        this.evEl = POINTER_ELEMENT_EVENTS;
	        this.evWin = POINTER_WINDOW_EVENTS;

	        Input.apply(this, arguments);

	        this.store = this.manager.session.pointerEvents = [];
	    }

	    inherit(PointerEventInput, Input, {
	        /**
	         * handle mouse events
	         * @param {Object} ev
	         */
	        handler: function PEhandler(ev) {
	            var store = this.store;
	            var removePointer = false;

	            var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
	            var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
	            var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

	            var isTouch = pointerType == INPUT_TYPE_TOUCH;

	            // get index of the event in the store
	            var storeIndex = inArray(store, ev.pointerId, 'pointerId');

	            // start and mouse must be down
	            if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
	                if (storeIndex < 0) {
	                    store.push(ev);
	                    storeIndex = store.length - 1;
	                }
	            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
	                removePointer = true;
	            }

	            // it not found, so the pointer hasn't been down (so it's probably a hover)
	            if (storeIndex < 0) {
	                return;
	            }

	            // update the event in the store
	            store[storeIndex] = ev;

	            this.callback(this.manager, eventType, {
	                pointers: store,
	                changedPointers: [ev],
	                pointerType: pointerType,
	                srcEvent: ev
	            });

	            if (removePointer) {
	                // remove from the store
	                store.splice(storeIndex, 1);
	            }
	        }
	    });

	    var SINGLE_TOUCH_INPUT_MAP = {
	        touchstart: INPUT_START,
	        touchmove: INPUT_MOVE,
	        touchend: INPUT_END,
	        touchcancel: INPUT_CANCEL
	    };

	    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
	    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

	    /**
	     * Touch events input
	     * @constructor
	     * @extends Input
	     */
	    function SingleTouchInput() {
	        this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
	        this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
	        this.started = false;

	        Input.apply(this, arguments);
	    }

	    inherit(SingleTouchInput, Input, {
	        handler: function TEhandler(ev) {
	            var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

	            // should we handle the touch events?
	            if (type === INPUT_START) {
	                this.started = true;
	            }

	            if (!this.started) {
	                return;
	            }

	            var touches = normalizeSingleTouches.call(this, ev, type);

	            // when done, reset the started state
	            if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
	                this.started = false;
	            }

	            this.callback(this.manager, type, {
	                pointers: touches[0],
	                changedPointers: touches[1],
	                pointerType: INPUT_TYPE_TOUCH,
	                srcEvent: ev
	            });
	        }
	    });

	    /**
	     * @this {TouchInput}
	     * @param {Object} ev
	     * @param {Number} type flag
	     * @returns {undefined|Array} [all, changed]
	     */
	    function normalizeSingleTouches(ev, type) {
	        var all = toArray(ev.touches);
	        var changed = toArray(ev.changedTouches);

	        if (type & (INPUT_END | INPUT_CANCEL)) {
	            all = uniqueArray(all.concat(changed), 'identifier', true);
	        }

	        return [all, changed];
	    }

	    var TOUCH_INPUT_MAP = {
	        touchstart: INPUT_START,
	        touchmove: INPUT_MOVE,
	        touchend: INPUT_END,
	        touchcancel: INPUT_CANCEL
	    };

	    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

	    /**
	     * Multi-user touch events input
	     * @constructor
	     * @extends Input
	     */
	    function TouchInput() {
	        this.evTarget = TOUCH_TARGET_EVENTS;
	        this.targetIds = {};

	        Input.apply(this, arguments);
	    }

	    inherit(TouchInput, Input, {
	        handler: function MTEhandler(ev) {
	            var type = TOUCH_INPUT_MAP[ev.type];
	            var touches = getTouches.call(this, ev, type);
	            if (!touches) {
	                return;
	            }

	            this.callback(this.manager, type, {
	                pointers: touches[0],
	                changedPointers: touches[1],
	                pointerType: INPUT_TYPE_TOUCH,
	                srcEvent: ev
	            });
	        }
	    });

	    /**
	     * @this {TouchInput}
	     * @param {Object} ev
	     * @param {Number} type flag
	     * @returns {undefined|Array} [all, changed]
	     */
	    function getTouches(ev, type) {
	        var allTouches = toArray(ev.touches);
	        var targetIds = this.targetIds;

	        // when there is only one touch, the process can be simplified
	        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
	            targetIds[allTouches[0].identifier] = true;
	            return [allTouches, allTouches];
	        }

	        var i,
	            targetTouches,
	            changedTouches = toArray(ev.changedTouches),
	            changedTargetTouches = [],
	            target = this.target;

	        // get target touches from touches
	        targetTouches = allTouches.filter(function (touch) {
	            return hasParent(touch.target, target);
	        });

	        // collect touches
	        if (type === INPUT_START) {
	            i = 0;
	            while (i < targetTouches.length) {
	                targetIds[targetTouches[i].identifier] = true;
	                i++;
	            }
	        }

	        // filter changed touches to only contain touches that exist in the collected target ids
	        i = 0;
	        while (i < changedTouches.length) {
	            if (targetIds[changedTouches[i].identifier]) {
	                changedTargetTouches.push(changedTouches[i]);
	            }

	            // cleanup removed touches
	            if (type & (INPUT_END | INPUT_CANCEL)) {
	                delete targetIds[changedTouches[i].identifier];
	            }
	            i++;
	        }

	        if (!changedTargetTouches.length) {
	            return;
	        }

	        return [
	        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
	        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];
	    }

	    /**
	     * Combined touch and mouse input
	     *
	     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
	     * This because touch devices also emit mouse events while doing a touch.
	     *
	     * @constructor
	     * @extends Input
	     */

	    var DEDUP_TIMEOUT = 2500;
	    var DEDUP_DISTANCE = 25;

	    function TouchMouseInput() {
	        Input.apply(this, arguments);

	        var handler = bindFn(this.handler, this);
	        this.touch = new TouchInput(this.manager, handler);
	        this.mouse = new MouseInput(this.manager, handler);

	        this.primaryTouch = null;
	        this.lastTouches = [];
	    }

	    inherit(TouchMouseInput, Input, {
	        /**
	         * handle mouse and touch events
	         * @param {Hammer} manager
	         * @param {String} inputEvent
	         * @param {Object} inputData
	         */
	        handler: function TMEhandler(manager, inputEvent, inputData) {
	            var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,
	                isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;

	            if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
	                return;
	            }

	            // when we're in a touch event, record touches to  de-dupe synthetic mouse event
	            if (isTouch) {
	                recordTouches.call(this, inputEvent, inputData);
	            } else if (isMouse && isSyntheticEvent.call(this, inputData)) {
	                return;
	            }

	            this.callback(manager, inputEvent, inputData);
	        },

	        /**
	         * remove the event listeners
	         */
	        destroy: function destroy() {
	            this.touch.destroy();
	            this.mouse.destroy();
	        }
	    });

	    function recordTouches(eventType, eventData) {
	        if (eventType & INPUT_START) {
	            this.primaryTouch = eventData.changedPointers[0].identifier;
	            setLastTouch.call(this, eventData);
	        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
	            setLastTouch.call(this, eventData);
	        }
	    }

	    function setLastTouch(eventData) {
	        var touch = eventData.changedPointers[0];

	        if (touch.identifier === this.primaryTouch) {
	            var lastTouch = { x: touch.clientX, y: touch.clientY };
	            this.lastTouches.push(lastTouch);
	            var lts = this.lastTouches;
	            var removeLastTouch = function removeLastTouch() {
	                var i = lts.indexOf(lastTouch);
	                if (i > -1) {
	                    lts.splice(i, 1);
	                }
	            };
	            setTimeout(removeLastTouch, DEDUP_TIMEOUT);
	        }
	    }

	    function isSyntheticEvent(eventData) {
	        var x = eventData.srcEvent.clientX,
	            y = eventData.srcEvent.clientY;
	        for (var i = 0; i < this.lastTouches.length; i++) {
	            var t = this.lastTouches[i];
	            var dx = Math.abs(x - t.x),
	                dy = Math.abs(y - t.y);
	            if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
	                return true;
	            }
	        }
	        return false;
	    }

	    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
	    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

	    // magical touchAction value
	    var TOUCH_ACTION_COMPUTE = 'compute';
	    var TOUCH_ACTION_AUTO = 'auto';
	    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
	    var TOUCH_ACTION_NONE = 'none';
	    var TOUCH_ACTION_PAN_X = 'pan-x';
	    var TOUCH_ACTION_PAN_Y = 'pan-y';
	    var TOUCH_ACTION_MAP = getTouchActionProps();

	    /**
	     * Touch Action
	     * sets the touchAction property or uses the js alternative
	     * @param {Manager} manager
	     * @param {String} value
	     * @constructor
	     */
	    function TouchAction(manager, value) {
	        this.manager = manager;
	        this.set(value);
	    }

	    TouchAction.prototype = {
	        /**
	         * set the touchAction value on the element or enable the polyfill
	         * @param {String} value
	         */
	        set: function set(value) {
	            // find out the touch-action by the event handlers
	            if (value == TOUCH_ACTION_COMPUTE) {
	                value = this.compute();
	            }

	            if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
	                this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
	            }
	            this.actions = value.toLowerCase().trim();
	        },

	        /**
	         * just re-set the touchAction value
	         */
	        update: function update() {
	            this.set(this.manager.options.touchAction);
	        },

	        /**
	         * compute the value for the touchAction property based on the recognizer's settings
	         * @returns {String} value
	         */
	        compute: function compute() {
	            var actions = [];
	            each(this.manager.recognizers, function (recognizer) {
	                if (boolOrFn(recognizer.options.enable, [recognizer])) {
	                    actions = actions.concat(recognizer.getTouchAction());
	                }
	            });
	            return cleanTouchActions(actions.join(' '));
	        },

	        /**
	         * this method is called on each input cycle and provides the preventing of the browser behavior
	         * @param {Object} input
	         */
	        preventDefaults: function preventDefaults(input) {
	            var srcEvent = input.srcEvent;
	            var direction = input.offsetDirection;

	            // if the touch action did prevented once this session
	            if (this.manager.session.prevented) {
	                srcEvent.preventDefault();
	                return;
	            }

	            var actions = this.actions;
	            var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
	            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
	            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];

	            if (hasNone) {
	                //do not prevent defaults if this is a tap gesture

	                var isTapPointer = input.pointers.length === 1;
	                var isTapMovement = input.distance < 2;
	                var isTapTouchTime = input.deltaTime < 250;

	                if (isTapPointer && isTapMovement && isTapTouchTime) {
	                    return;
	                }
	            }

	            if (hasPanX && hasPanY) {
	                // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
	                return;
	            }

	            if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {
	                return this.preventSrc(srcEvent);
	            }
	        },

	        /**
	         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
	         * @param {Object} srcEvent
	         */
	        preventSrc: function preventSrc(srcEvent) {
	            this.manager.session.prevented = true;
	            srcEvent.preventDefault();
	        }
	    };

	    /**
	     * when the touchActions are collected they are not a valid value, so we need to clean things up. *
	     * @param {String} actions
	     * @returns {*}
	     */
	    function cleanTouchActions(actions) {
	        // none
	        if (inStr(actions, TOUCH_ACTION_NONE)) {
	            return TOUCH_ACTION_NONE;
	        }

	        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
	        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

	        // if both pan-x and pan-y are set (different recognizers
	        // for different directions, e.g. horizontal pan but vertical swipe?)
	        // we need none (as otherwise with pan-x pan-y combined none of these
	        // recognizers will work, since the browser would handle all panning
	        if (hasPanX && hasPanY) {
	            return TOUCH_ACTION_NONE;
	        }

	        // pan-x OR pan-y
	        if (hasPanX || hasPanY) {
	            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
	        }

	        // manipulation
	        if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
	            return TOUCH_ACTION_MANIPULATION;
	        }

	        return TOUCH_ACTION_AUTO;
	    }

	    function getTouchActionProps() {
	        if (!NATIVE_TOUCH_ACTION) {
	            return false;
	        }
	        var touchMap = {};
	        var cssSupports = window.CSS && window.CSS.supports;
	        ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {

	            // If css.supports is not supported but there is native touch-action assume it supports
	            // all values. This is the case for IE 10 and 11.
	            touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;
	        });
	        return touchMap;
	    }

	    /**
	     * Recognizer flow explained; *
	     * All recognizers have the initial state of POSSIBLE when a input session starts.
	     * The definition of a input session is from the first input until the last input, with all it's movement in it. *
	     * Example session for mouse-input: mousedown -> mousemove -> mouseup
	     *
	     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
	     * which determines with state it should be.
	     *
	     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
	     * POSSIBLE to give it another change on the next cycle.
	     *
	     *               Possible
	     *                  |
	     *            +-----+---------------+
	     *            |                     |
	     *      +-----+-----+               |
	     *      |           |               |
	     *   Failed      Cancelled          |
	     *                          +-------+------+
	     *                          |              |
	     *                      Recognized       Began
	     *                                         |
	     *                                      Changed
	     *                                         |
	     *                                  Ended/Recognized
	     */
	    var STATE_POSSIBLE = 1;
	    var STATE_BEGAN = 2;
	    var STATE_CHANGED = 4;
	    var STATE_ENDED = 8;
	    var STATE_RECOGNIZED = STATE_ENDED;
	    var STATE_CANCELLED = 16;
	    var STATE_FAILED = 32;

	    /**
	     * Recognizer
	     * Every recognizer needs to extend from this class.
	     * @constructor
	     * @param {Object} options
	     */
	    function Recognizer(options) {
	        this.options = assign({}, this.defaults, options || {});

	        this.id = uniqueId();

	        this.manager = null;

	        // default is enable true
	        this.options.enable = ifUndefined(this.options.enable, true);

	        this.state = STATE_POSSIBLE;

	        this.simultaneous = {};
	        this.requireFail = [];
	    }

	    Recognizer.prototype = {
	        /**
	         * @virtual
	         * @type {Object}
	         */
	        defaults: {},

	        /**
	         * set options
	         * @param {Object} options
	         * @return {Recognizer}
	         */
	        set: function set(options) {
	            assign(this.options, options);

	            // also update the touchAction, in case something changed about the directions/enabled state
	            this.manager && this.manager.touchAction.update();
	            return this;
	        },

	        /**
	         * recognize simultaneous with an other recognizer.
	         * @param {Recognizer} otherRecognizer
	         * @returns {Recognizer} this
	         */
	        recognizeWith: function recognizeWith(otherRecognizer) {
	            if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
	                return this;
	            }

	            var simultaneous = this.simultaneous;
	            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
	            if (!simultaneous[otherRecognizer.id]) {
	                simultaneous[otherRecognizer.id] = otherRecognizer;
	                otherRecognizer.recognizeWith(this);
	            }
	            return this;
	        },

	        /**
	         * drop the simultaneous link. it doesnt remove the link on the other recognizer.
	         * @param {Recognizer} otherRecognizer
	         * @returns {Recognizer} this
	         */
	        dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {
	            if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
	                return this;
	            }

	            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
	            delete this.simultaneous[otherRecognizer.id];
	            return this;
	        },

	        /**
	         * recognizer can only run when an other is failing
	         * @param {Recognizer} otherRecognizer
	         * @returns {Recognizer} this
	         */
	        requireFailure: function requireFailure(otherRecognizer) {
	            if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
	                return this;
	            }

	            var requireFail = this.requireFail;
	            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
	            if (inArray(requireFail, otherRecognizer) === -1) {
	                requireFail.push(otherRecognizer);
	                otherRecognizer.requireFailure(this);
	            }
	            return this;
	        },

	        /**
	         * drop the requireFailure link. it does not remove the link on the other recognizer.
	         * @param {Recognizer} otherRecognizer
	         * @returns {Recognizer} this
	         */
	        dropRequireFailure: function dropRequireFailure(otherRecognizer) {
	            if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
	                return this;
	            }

	            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
	            var index = inArray(this.requireFail, otherRecognizer);
	            if (index > -1) {
	                this.requireFail.splice(index, 1);
	            }
	            return this;
	        },

	        /**
	         * has require failures boolean
	         * @returns {boolean}
	         */
	        hasRequireFailures: function hasRequireFailures() {
	            return this.requireFail.length > 0;
	        },

	        /**
	         * if the recognizer can recognize simultaneous with an other recognizer
	         * @param {Recognizer} otherRecognizer
	         * @returns {Boolean}
	         */
	        canRecognizeWith: function canRecognizeWith(otherRecognizer) {
	            return !!this.simultaneous[otherRecognizer.id];
	        },

	        /**
	         * You should use `tryEmit` instead of `emit` directly to check
	         * that all the needed recognizers has failed before emitting.
	         * @param {Object} input
	         */
	        emit: function emit(input) {
	            var self = this;
	            var state = this.state;

	            function emit(event) {
	                self.manager.emit(event, input);
	            }

	            // 'panstart' and 'panmove'
	            if (state < STATE_ENDED) {
	                emit(self.options.event + stateStr(state));
	            }

	            emit(self.options.event); // simple 'eventName' events

	            if (input.additionalEvent) {
	                // additional event(panleft, panright, pinchin, pinchout...)
	                emit(input.additionalEvent);
	            }

	            // panend and pancancel
	            if (state >= STATE_ENDED) {
	                emit(self.options.event + stateStr(state));
	            }
	        },

	        /**
	         * Check that all the require failure recognizers has failed,
	         * if true, it emits a gesture event,
	         * otherwise, setup the state to FAILED.
	         * @param {Object} input
	         */
	        tryEmit: function tryEmit(input) {
	            if (this.canEmit()) {
	                return this.emit(input);
	            }
	            // it's failing anyway
	            this.state = STATE_FAILED;
	        },

	        /**
	         * can we emit?
	         * @returns {boolean}
	         */
	        canEmit: function canEmit() {
	            var i = 0;
	            while (i < this.requireFail.length) {
	                if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
	                    return false;
	                }
	                i++;
	            }
	            return true;
	        },

	        /**
	         * update the recognizer
	         * @param {Object} inputData
	         */
	        recognize: function recognize(inputData) {
	            // make a new copy of the inputData
	            // so we can change the inputData without messing up the other recognizers
	            var inputDataClone = assign({}, inputData);

	            // is is enabled and allow recognizing?
	            if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
	                this.reset();
	                this.state = STATE_FAILED;
	                return;
	            }

	            // reset when we've reached the end
	            if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
	                this.state = STATE_POSSIBLE;
	            }

	            this.state = this.process(inputDataClone);

	            // the recognizer has recognized a gesture
	            // so trigger an event
	            if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
	                this.tryEmit(inputDataClone);
	            }
	        },

	        /**
	         * return the state of the recognizer
	         * the actual recognizing happens in this method
	         * @virtual
	         * @param {Object} inputData
	         * @returns {Const} STATE
	         */
	        process: function process(inputData) {}, // jshint ignore:line

	        /**
	         * return the preferred touch-action
	         * @virtual
	         * @returns {Array}
	         */
	        getTouchAction: function getTouchAction() {},

	        /**
	         * called when the gesture isn't allowed to recognize
	         * like when another is being recognized or it is disabled
	         * @virtual
	         */
	        reset: function reset() {}
	    };

	    /**
	     * get a usable string, used as event postfix
	     * @param {Const} state
	     * @returns {String} state
	     */
	    function stateStr(state) {
	        if (state & STATE_CANCELLED) {
	            return 'cancel';
	        } else if (state & STATE_ENDED) {
	            return 'end';
	        } else if (state & STATE_CHANGED) {
	            return 'move';
	        } else if (state & STATE_BEGAN) {
	            return 'start';
	        }
	        return '';
	    }

	    /**
	     * direction cons to string
	     * @param {Const} direction
	     * @returns {String}
	     */
	    function directionStr(direction) {
	        if (direction == DIRECTION_DOWN) {
	            return 'down';
	        } else if (direction == DIRECTION_UP) {
	            return 'up';
	        } else if (direction == DIRECTION_LEFT) {
	            return 'left';
	        } else if (direction == DIRECTION_RIGHT) {
	            return 'right';
	        }
	        return '';
	    }

	    /**
	     * get a recognizer by name if it is bound to a manager
	     * @param {Recognizer|String} otherRecognizer
	     * @param {Recognizer} recognizer
	     * @returns {Recognizer}
	     */
	    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
	        var manager = recognizer.manager;
	        if (manager) {
	            return manager.get(otherRecognizer);
	        }
	        return otherRecognizer;
	    }

	    /**
	     * This recognizer is just used as a base for the simple attribute recognizers.
	     * @constructor
	     * @extends Recognizer
	     */
	    function AttrRecognizer() {
	        Recognizer.apply(this, arguments);
	    }

	    inherit(AttrRecognizer, Recognizer, {
	        /**
	         * @namespace
	         * @memberof AttrRecognizer
	         */
	        defaults: {
	            /**
	             * @type {Number}
	             * @default 1
	             */
	            pointers: 1
	        },

	        /**
	         * Used to check if it the recognizer receives valid input, like input.distance > 10.
	         * @memberof AttrRecognizer
	         * @param {Object} input
	         * @returns {Boolean} recognized
	         */
	        attrTest: function attrTest(input) {
	            var optionPointers = this.options.pointers;
	            return optionPointers === 0 || input.pointers.length === optionPointers;
	        },

	        /**
	         * Process the input and return the state for the recognizer
	         * @memberof AttrRecognizer
	         * @param {Object} input
	         * @returns {*} State
	         */
	        process: function process(input) {
	            var state = this.state;
	            var eventType = input.eventType;

	            var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
	            var isValid = this.attrTest(input);

	            // on cancel input and we've recognized before, return STATE_CANCELLED
	            if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
	                return state | STATE_CANCELLED;
	            } else if (isRecognized || isValid) {
	                if (eventType & INPUT_END) {
	                    return state | STATE_ENDED;
	                } else if (!(state & STATE_BEGAN)) {
	                    return STATE_BEGAN;
	                }
	                return state | STATE_CHANGED;
	            }
	            return STATE_FAILED;
	        }
	    });

	    /**
	     * Pan
	     * Recognized when the pointer is down and moved in the allowed direction.
	     * @constructor
	     * @extends AttrRecognizer
	     */
	    function PanRecognizer() {
	        AttrRecognizer.apply(this, arguments);

	        this.pX = null;
	        this.pY = null;
	    }

	    inherit(PanRecognizer, AttrRecognizer, {
	        /**
	         * @namespace
	         * @memberof PanRecognizer
	         */
	        defaults: {
	            event: 'pan',
	            threshold: 10,
	            pointers: 1,
	            direction: DIRECTION_ALL
	        },

	        getTouchAction: function getTouchAction() {
	            var direction = this.options.direction;
	            var actions = [];
	            if (direction & DIRECTION_HORIZONTAL) {
	                actions.push(TOUCH_ACTION_PAN_Y);
	            }
	            if (direction & DIRECTION_VERTICAL) {
	                actions.push(TOUCH_ACTION_PAN_X);
	            }
	            return actions;
	        },

	        directionTest: function directionTest(input) {
	            var options = this.options;
	            var hasMoved = true;
	            var distance = input.distance;
	            var direction = input.direction;
	            var x = input.deltaX;
	            var y = input.deltaY;

	            // lock to axis?
	            if (!(direction & options.direction)) {
	                if (options.direction & DIRECTION_HORIZONTAL) {
	                    direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
	                    hasMoved = x != this.pX;
	                    distance = Math.abs(input.deltaX);
	                } else {
	                    direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
	                    hasMoved = y != this.pY;
	                    distance = Math.abs(input.deltaY);
	                }
	            }
	            input.direction = direction;
	            return hasMoved && distance > options.threshold && direction & options.direction;
	        },

	        attrTest: function attrTest(input) {
	            return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));
	        },

	        emit: function emit(input) {

	            this.pX = input.deltaX;
	            this.pY = input.deltaY;

	            var direction = directionStr(input.direction);

	            if (direction) {
	                input.additionalEvent = this.options.event + direction;
	            }
	            this._super.emit.call(this, input);
	        }
	    });

	    /**
	     * Pinch
	     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
	     * @constructor
	     * @extends AttrRecognizer
	     */
	    function PinchRecognizer() {
	        AttrRecognizer.apply(this, arguments);
	    }

	    inherit(PinchRecognizer, AttrRecognizer, {
	        /**
	         * @namespace
	         * @memberof PinchRecognizer
	         */
	        defaults: {
	            event: 'pinch',
	            threshold: 0,
	            pointers: 2
	        },

	        getTouchAction: function getTouchAction() {
	            return [TOUCH_ACTION_NONE];
	        },

	        attrTest: function attrTest(input) {
	            return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
	        },

	        emit: function emit(input) {
	            if (input.scale !== 1) {
	                var inOut = input.scale < 1 ? 'in' : 'out';
	                input.additionalEvent = this.options.event + inOut;
	            }
	            this._super.emit.call(this, input);
	        }
	    });

	    /**
	     * Press
	     * Recognized when the pointer is down for x ms without any movement.
	     * @constructor
	     * @extends Recognizer
	     */
	    function PressRecognizer() {
	        Recognizer.apply(this, arguments);

	        this._timer = null;
	        this._input = null;
	    }

	    inherit(PressRecognizer, Recognizer, {
	        /**
	         * @namespace
	         * @memberof PressRecognizer
	         */
	        defaults: {
	            event: 'press',
	            pointers: 1,
	            time: 251, // minimal time of the pointer to be pressed
	            threshold: 9 // a minimal movement is ok, but keep it low
	        },

	        getTouchAction: function getTouchAction() {
	            return [TOUCH_ACTION_AUTO];
	        },

	        process: function process(input) {
	            var options = this.options;
	            var validPointers = input.pointers.length === options.pointers;
	            var validMovement = input.distance < options.threshold;
	            var validTime = input.deltaTime > options.time;

	            this._input = input;

	            // we only allow little movement
	            // and we've reached an end event, so a tap is possible
	            if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {
	                this.reset();
	            } else if (input.eventType & INPUT_START) {
	                this.reset();
	                this._timer = setTimeoutContext(function () {
	                    this.state = STATE_RECOGNIZED;
	                    this.tryEmit();
	                }, options.time, this);
	            } else if (input.eventType & INPUT_END) {
	                return STATE_RECOGNIZED;
	            }
	            return STATE_FAILED;
	        },

	        reset: function reset() {
	            clearTimeout(this._timer);
	        },

	        emit: function emit(input) {
	            if (this.state !== STATE_RECOGNIZED) {
	                return;
	            }

	            if (input && input.eventType & INPUT_END) {
	                this.manager.emit(this.options.event + 'up', input);
	            } else {
	                this._input.timeStamp = now();
	                this.manager.emit(this.options.event, this._input);
	            }
	        }
	    });

	    /**
	     * Rotate
	     * Recognized when two or more pointer are moving in a circular motion.
	     * @constructor
	     * @extends AttrRecognizer
	     */
	    function RotateRecognizer() {
	        AttrRecognizer.apply(this, arguments);
	    }

	    inherit(RotateRecognizer, AttrRecognizer, {
	        /**
	         * @namespace
	         * @memberof RotateRecognizer
	         */
	        defaults: {
	            event: 'rotate',
	            threshold: 0,
	            pointers: 2
	        },

	        getTouchAction: function getTouchAction() {
	            return [TOUCH_ACTION_NONE];
	        },

	        attrTest: function attrTest(input) {
	            return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
	        }
	    });

	    /**
	     * Swipe
	     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
	     * @constructor
	     * @extends AttrRecognizer
	     */
	    function SwipeRecognizer() {
	        AttrRecognizer.apply(this, arguments);
	    }

	    inherit(SwipeRecognizer, AttrRecognizer, {
	        /**
	         * @namespace
	         * @memberof SwipeRecognizer
	         */
	        defaults: {
	            event: 'swipe',
	            threshold: 10,
	            velocity: 0.3,
	            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
	            pointers: 1
	        },

	        getTouchAction: function getTouchAction() {
	            return PanRecognizer.prototype.getTouchAction.call(this);
	        },

	        attrTest: function attrTest(input) {
	            var direction = this.options.direction;
	            var velocity;

	            if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
	                velocity = input.overallVelocity;
	            } else if (direction & DIRECTION_HORIZONTAL) {
	                velocity = input.overallVelocityX;
	            } else if (direction & DIRECTION_VERTICAL) {
	                velocity = input.overallVelocityY;
	            }

	            return this._super.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers == this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
	        },

	        emit: function emit(input) {
	            var direction = directionStr(input.offsetDirection);
	            if (direction) {
	                this.manager.emit(this.options.event + direction, input);
	            }

	            this.manager.emit(this.options.event, input);
	        }
	    });

	    /**
	     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
	     * between the given interval and position. The delay option can be used to recognize multi-taps without firing
	     * a single tap.
	     *
	     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
	     * multi-taps being recognized.
	     * @constructor
	     * @extends Recognizer
	     */
	    function TapRecognizer() {
	        Recognizer.apply(this, arguments);

	        // previous time and center,
	        // used for tap counting
	        this.pTime = false;
	        this.pCenter = false;

	        this._timer = null;
	        this._input = null;
	        this.count = 0;
	    }

	    inherit(TapRecognizer, Recognizer, {
	        /**
	         * @namespace
	         * @memberof PinchRecognizer
	         */
	        defaults: {
	            event: 'tap',
	            pointers: 1,
	            taps: 1,
	            interval: 300, // max time between the multi-tap taps
	            time: 250, // max time of the pointer to be down (like finger on the screen)
	            threshold: 9, // a minimal movement is ok, but keep it low
	            posThreshold: 10 // a multi-tap can be a bit off the initial position
	        },

	        getTouchAction: function getTouchAction() {
	            return [TOUCH_ACTION_MANIPULATION];
	        },

	        process: function process(input) {
	            var options = this.options;

	            var validPointers = input.pointers.length === options.pointers;
	            var validMovement = input.distance < options.threshold;
	            var validTouchTime = input.deltaTime < options.time;

	            this.reset();

	            if (input.eventType & INPUT_START && this.count === 0) {
	                return this.failTimeout();
	            }

	            // we only allow little movement
	            // and we've reached an end event, so a tap is possible
	            if (validMovement && validTouchTime && validPointers) {
	                if (input.eventType != INPUT_END) {
	                    return this.failTimeout();
	                }

	                var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;
	                var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

	                this.pTime = input.timeStamp;
	                this.pCenter = input.center;

	                if (!validMultiTap || !validInterval) {
	                    this.count = 1;
	                } else {
	                    this.count += 1;
	                }

	                this._input = input;

	                // if tap count matches we have recognized it,
	                // else it has began recognizing...
	                var tapCount = this.count % options.taps;
	                if (tapCount === 0) {
	                    // no failing requirements, immediately trigger the tap event
	                    // or wait as long as the multitap interval to trigger
	                    if (!this.hasRequireFailures()) {
	                        return STATE_RECOGNIZED;
	                    } else {
	                        this._timer = setTimeoutContext(function () {
	                            this.state = STATE_RECOGNIZED;
	                            this.tryEmit();
	                        }, options.interval, this);
	                        return STATE_BEGAN;
	                    }
	                }
	            }
	            return STATE_FAILED;
	        },

	        failTimeout: function failTimeout() {
	            this._timer = setTimeoutContext(function () {
	                this.state = STATE_FAILED;
	            }, this.options.interval, this);
	            return STATE_FAILED;
	        },

	        reset: function reset() {
	            clearTimeout(this._timer);
	        },

	        emit: function emit() {
	            if (this.state == STATE_RECOGNIZED) {
	                this._input.tapCount = this.count;
	                this.manager.emit(this.options.event, this._input);
	            }
	        }
	    });

	    /**
	     * Simple way to create a manager with a default set of recognizers.
	     * @param {HTMLElement} element
	     * @param {Object} [options]
	     * @constructor
	     */
	    function Hammer(element, options) {
	        options = options || {};
	        options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
	        return new Manager(element, options);
	    }

	    /**
	     * @const {string}
	     */
	    Hammer.VERSION = '2.0.7';

	    /**
	     * default settings
	     * @namespace
	     */
	    Hammer.defaults = {
	        /**
	         * set if DOM events are being triggered.
	         * But this is slower and unused by simple implementations, so disabled by default.
	         * @type {Boolean}
	         * @default false
	         */
	        domEvents: false,

	        /**
	         * The value for the touchAction property/fallback.
	         * When set to `compute` it will magically set the correct value based on the added recognizers.
	         * @type {String}
	         * @default compute
	         */
	        touchAction: TOUCH_ACTION_COMPUTE,

	        /**
	         * @type {Boolean}
	         * @default true
	         */
	        enable: true,

	        /**
	         * EXPERIMENTAL FEATURE -- can be removed/changed
	         * Change the parent input target element.
	         * If Null, then it is being set the to main element.
	         * @type {Null|EventTarget}
	         * @default null
	         */
	        inputTarget: null,

	        /**
	         * force an input class
	         * @type {Null|Function}
	         * @default null
	         */
	        inputClass: null,

	        /**
	         * Default recognizer setup when calling `Hammer()`
	         * When creating a new Manager these will be skipped.
	         * @type {Array}
	         */
	        preset: [
	        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
	        [RotateRecognizer, { enable: false }], [PinchRecognizer, { enable: false }, ['rotate']], [SwipeRecognizer, { direction: DIRECTION_HORIZONTAL }], [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']], [TapRecognizer], [TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']], [PressRecognizer]],

	        /**
	         * Some CSS properties can be used to improve the working of Hammer.
	         * Add them to this method and they will be set when creating a new Manager.
	         * @namespace
	         */
	        cssProps: {
	            /**
	             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
	             * @type {String}
	             * @default 'none'
	             */
	            userSelect: 'none',

	            /**
	             * Disable the Windows Phone grippers when pressing an element.
	             * @type {String}
	             * @default 'none'
	             */
	            touchSelect: 'none',

	            /**
	             * Disables the default callout shown when you touch and hold a touch target.
	             * On iOS, when you touch and hold a touch target such as a link, Safari displays
	             * a callout containing information about the link. This property allows you to disable that callout.
	             * @type {String}
	             * @default 'none'
	             */
	            touchCallout: 'none',

	            /**
	             * Specifies whether zooming is enabled. Used by IE10>
	             * @type {String}
	             * @default 'none'
	             */
	            contentZooming: 'none',

	            /**
	             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
	             * @type {String}
	             * @default 'none'
	             */
	            userDrag: 'none',

	            /**
	             * Overrides the highlight color shown when the user taps a link or a JavaScript
	             * clickable element in iOS. This property obeys the alpha value, if specified.
	             * @type {String}
	             * @default 'rgba(0,0,0,0)'
	             */
	            tapHighlightColor: 'rgba(0,0,0,0)'
	        }
	    };

	    var STOP = 1;
	    var FORCED_STOP = 2;

	    /**
	     * Manager
	     * @param {HTMLElement} element
	     * @param {Object} [options]
	     * @constructor
	     */
	    function Manager(element, options) {
	        this.options = assign({}, Hammer.defaults, options || {});

	        this.options.inputTarget = this.options.inputTarget || element;

	        this.handlers = {};
	        this.session = {};
	        this.recognizers = [];
	        this.oldCssProps = {};

	        this.element = element;
	        this.input = createInputInstance(this);
	        this.touchAction = new TouchAction(this, this.options.touchAction);

	        toggleCssProps(this, true);

	        each(this.options.recognizers, function (item) {
	            var recognizer = this.add(new item[0](item[1]));
	            item[2] && recognizer.recognizeWith(item[2]);
	            item[3] && recognizer.requireFailure(item[3]);
	        }, this);
	    }

	    Manager.prototype = {
	        /**
	         * set options
	         * @param {Object} options
	         * @returns {Manager}
	         */
	        set: function set(options) {
	            assign(this.options, options);

	            // Options that need a little more setup
	            if (options.touchAction) {
	                this.touchAction.update();
	            }
	            if (options.inputTarget) {
	                // Clean up existing event listeners and reinitialize
	                this.input.destroy();
	                this.input.target = options.inputTarget;
	                this.input.init();
	            }
	            return this;
	        },

	        /**
	         * stop recognizing for this session.
	         * This session will be discarded, when a new [input]start event is fired.
	         * When forced, the recognizer cycle is stopped immediately.
	         * @param {Boolean} [force]
	         */
	        stop: function stop(force) {
	            this.session.stopped = force ? FORCED_STOP : STOP;
	        },

	        /**
	         * run the recognizers!
	         * called by the inputHandler function on every movement of the pointers (touches)
	         * it walks through all the recognizers and tries to detect the gesture that is being made
	         * @param {Object} inputData
	         */
	        recognize: function recognize(inputData) {
	            var session = this.session;
	            if (session.stopped) {
	                return;
	            }

	            // run the touch-action polyfill
	            this.touchAction.preventDefaults(inputData);

	            var recognizer;
	            var recognizers = this.recognizers;

	            // this holds the recognizer that is being recognized.
	            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
	            // if no recognizer is detecting a thing, it is set to `null`
	            var curRecognizer = session.curRecognizer;

	            // reset when the last recognizer is recognized
	            // or when we're in a new session
	            if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {
	                curRecognizer = session.curRecognizer = null;
	            }

	            var i = 0;
	            while (i < recognizers.length) {
	                recognizer = recognizers[i];

	                // find out if we are allowed try to recognize the input for this one.
	                // 1.   allow if the session is NOT forced stopped (see the .stop() method)
	                // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
	                //      that is being recognized.
	                // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
	                //      this can be setup with the `recognizeWith()` method on the recognizer.
	                if (session.stopped !== FORCED_STOP && ( // 1
	                !curRecognizer || recognizer == curRecognizer || // 2
	                recognizer.canRecognizeWith(curRecognizer))) {
	                    // 3
	                    recognizer.recognize(inputData);
	                } else {
	                    recognizer.reset();
	                }

	                // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
	                // current active recognizer. but only if we don't already have an active recognizer
	                if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
	                    curRecognizer = session.curRecognizer = recognizer;
	                }
	                i++;
	            }
	        },

	        /**
	         * get a recognizer by its event name.
	         * @param {Recognizer|String} recognizer
	         * @returns {Recognizer|Null}
	         */
	        get: function get(recognizer) {
	            if (recognizer instanceof Recognizer) {
	                return recognizer;
	            }

	            var recognizers = this.recognizers;
	            for (var i = 0; i < recognizers.length; i++) {
	                if (recognizers[i].options.event == recognizer) {
	                    return recognizers[i];
	                }
	            }
	            return null;
	        },

	        /**
	         * add a recognizer to the manager
	         * existing recognizers with the same event name will be removed
	         * @param {Recognizer} recognizer
	         * @returns {Recognizer|Manager}
	         */
	        add: function add(recognizer) {
	            if (invokeArrayArg(recognizer, 'add', this)) {
	                return this;
	            }

	            // remove existing
	            var existing = this.get(recognizer.options.event);
	            if (existing) {
	                this.remove(existing);
	            }

	            this.recognizers.push(recognizer);
	            recognizer.manager = this;

	            this.touchAction.update();
	            return recognizer;
	        },

	        /**
	         * remove a recognizer by name or instance
	         * @param {Recognizer|String} recognizer
	         * @returns {Manager}
	         */
	        remove: function remove(recognizer) {
	            if (invokeArrayArg(recognizer, 'remove', this)) {
	                return this;
	            }

	            recognizer = this.get(recognizer);

	            // let's make sure this recognizer exists
	            if (recognizer) {
	                var recognizers = this.recognizers;
	                var index = inArray(recognizers, recognizer);

	                if (index !== -1) {
	                    recognizers.splice(index, 1);
	                    this.touchAction.update();
	                }
	            }

	            return this;
	        },

	        /**
	         * bind event
	         * @param {String} events
	         * @param {Function} handler
	         * @returns {EventEmitter} this
	         */
	        on: function on(events, handler) {
	            if (events === undefined) {
	                return;
	            }
	            if (handler === undefined) {
	                return;
	            }

	            var handlers = this.handlers;
	            each(splitStr(events), function (event) {
	                handlers[event] = handlers[event] || [];
	                handlers[event].push(handler);
	            });
	            return this;
	        },

	        /**
	         * unbind event, leave emit blank to remove all handlers
	         * @param {String} events
	         * @param {Function} [handler]
	         * @returns {EventEmitter} this
	         */
	        off: function off(events, handler) {
	            if (events === undefined) {
	                return;
	            }

	            var handlers = this.handlers;
	            each(splitStr(events), function (event) {
	                if (!handler) {
	                    delete handlers[event];
	                } else {
	                    handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
	                }
	            });
	            return this;
	        },

	        /**
	         * emit event to the listeners
	         * @param {String} event
	         * @param {Object} data
	         */
	        emit: function emit(event, data) {
	            // we also want to trigger dom events
	            if (this.options.domEvents) {
	                triggerDomEvent(event, data);
	            }

	            // no handlers, so skip it all
	            var handlers = this.handlers[event] && this.handlers[event].slice();
	            if (!handlers || !handlers.length) {
	                return;
	            }

	            data.type = event;
	            data.preventDefault = function () {
	                data.srcEvent.preventDefault();
	            };

	            var i = 0;
	            while (i < handlers.length) {
	                handlers[i](data);
	                i++;
	            }
	        },

	        /**
	         * destroy the manager and unbinds all events
	         * it doesn't unbind dom events, that is the user own responsibility
	         */
	        destroy: function destroy() {
	            this.element && toggleCssProps(this, false);

	            this.handlers = {};
	            this.session = {};
	            this.input.destroy();
	            this.element = null;
	        }
	    };

	    /**
	     * add/remove the css properties as defined in manager.options.cssProps
	     * @param {Manager} manager
	     * @param {Boolean} add
	     */
	    function toggleCssProps(manager, add) {
	        var element = manager.element;
	        if (!element.style) {
	            return;
	        }
	        var prop;
	        each(manager.options.cssProps, function (value, name) {
	            prop = prefixed(element.style, name);
	            if (add) {
	                manager.oldCssProps[prop] = element.style[prop];
	                element.style[prop] = value;
	            } else {
	                element.style[prop] = manager.oldCssProps[prop] || '';
	            }
	        });
	        if (!add) {
	            manager.oldCssProps = {};
	        }
	    }

	    /**
	     * trigger dom event
	     * @param {String} event
	     * @param {Object} data
	     */
	    function triggerDomEvent(event, data) {
	        var gestureEvent = document.createEvent('Event');
	        gestureEvent.initEvent(event, true, true);
	        gestureEvent.gesture = data;
	        data.target.dispatchEvent(gestureEvent);
	    }

	    assign(Hammer, {
	        INPUT_START: INPUT_START,
	        INPUT_MOVE: INPUT_MOVE,
	        INPUT_END: INPUT_END,
	        INPUT_CANCEL: INPUT_CANCEL,

	        STATE_POSSIBLE: STATE_POSSIBLE,
	        STATE_BEGAN: STATE_BEGAN,
	        STATE_CHANGED: STATE_CHANGED,
	        STATE_ENDED: STATE_ENDED,
	        STATE_RECOGNIZED: STATE_RECOGNIZED,
	        STATE_CANCELLED: STATE_CANCELLED,
	        STATE_FAILED: STATE_FAILED,

	        DIRECTION_NONE: DIRECTION_NONE,
	        DIRECTION_LEFT: DIRECTION_LEFT,
	        DIRECTION_RIGHT: DIRECTION_RIGHT,
	        DIRECTION_UP: DIRECTION_UP,
	        DIRECTION_DOWN: DIRECTION_DOWN,
	        DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
	        DIRECTION_VERTICAL: DIRECTION_VERTICAL,
	        DIRECTION_ALL: DIRECTION_ALL,

	        Manager: Manager,
	        Input: Input,
	        TouchAction: TouchAction,

	        TouchInput: TouchInput,
	        MouseInput: MouseInput,
	        PointerEventInput: PointerEventInput,
	        TouchMouseInput: TouchMouseInput,
	        SingleTouchInput: SingleTouchInput,

	        Recognizer: Recognizer,
	        AttrRecognizer: AttrRecognizer,
	        Tap: TapRecognizer,
	        Pan: PanRecognizer,
	        Swipe: SwipeRecognizer,
	        Pinch: PinchRecognizer,
	        Rotate: RotateRecognizer,
	        Press: PressRecognizer,

	        on: addEventListeners,
	        off: removeEventListeners,
	        each: each,
	        merge: merge,
	        extend: extend,
	        assign: assign,
	        inherit: inherit,
	        bindFn: bindFn,
	        prefixed: prefixed
	    });

	    // this prevents errors when Hammer is loaded in the presence of an AMD
	    //  style loader but by script tag, not by the loader.
	    var freeGlobal = typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}; // jshint ignore:line
	    freeGlobal.Hammer = Hammer;

	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	            return Hammer;
	        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof module != 'undefined' && module.exports) {
	        module.exports = Hammer;
	    } else {
	        window[exportName] = Hammer;
	    }
	})(window, document, 'Hammer');

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Type check instance.
	 * @constructor Iftype
	 * @param {*} value - Value to check.
	 */

	'use strict';

	var is = __webpack_require__(306);

	/** @lends Iftype */
	function Iftype(val) {
	  var s = this;
	  s.val(val);
	}

	Iftype.prototype = {
	  /**
	   * Detect type matches.
	   * @param {string} type
	   * @returns {boolean} - Type matches or not.
	   */
	  is: function typeIs(type) {
	    var s = this;
	    return is(type, s.val());
	  },
	  /**
	   * Detect if string.
	   * @returns {boolean} - Type matches or not.
	   */
	  isString: function isStringType() {
	    var s = this;
	    return s.is('string');
	  },
	  /**
	   * Detect if number.
	   * @returns {boolean} - Type matches or not.
	   */
	  isNumber: function isNumberType() {
	    var s = this;
	    return s.is('number');
	  },
	  /**
	   * Detect if object.
	   * @returns {boolean} - Type matches or not.
	   */
	  isObject: function isObjectType() {
	    var s = this;
	    return s.is('object');
	  },
	  /**
	   * Detect if array.
	   * @returns {boolean} - Type matches or not.
	   */
	  isArray: function isArrayType() {
	    var s = this;
	    return s.is('array');
	  },
	  /**
	   * Detect if function.
	   * @returns {boolean} - Type matches or not.
	   */
	  isFunction: function isFunctionType() {
	    var s = this;
	    return s.is('function');
	  },
	  val: function val(_val) {
	    var s = this;
	    if (arguments.length === 0) {
	      return s._val;
	    }
	    s._val = _val;
	    return s;
	  }
	};

	module.exports = Iftype;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function is
	 * @param {string} type
	 * @param {val}
	 */

	'use strict';

	var typeHits = __webpack_require__(902);
	var assert = __webpack_require__(59);

	/** @lends is */
	function is(type, val) {
	  assert.ok(arguments.length === 2, 'Invalid arguments');
	  return typeHits(val, type);
	}

	module.exports = is;

/***/ },
/* 307 */
/***/ function(module, exports) {

	"use strict";

	var indexOf = [].indexOf;

	module.exports = function (arr, obj) {
	  if (indexOf) return arr.indexOf(obj);
	  for (var i = 0; i < arr.length; ++i) {
	    if (arr[i] === obj) return i;
	  }
	  return -1;
	};

/***/ },
/* 308 */
/***/ function(module, exports) {

	/**
	 * Get sum value.
	 * @function sum
	 * @param {...number} values - Values to sum.
	 * @returns {number} - Sum value.
	 */

	'use strict';

	/** @lends sum */

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	function sum() {
	  var args = arguments;
	  var result = 0;
	  for (var i = 0, len = args.length; i < len; i++) {
	    var val = args[i];
	    if (Array.isArray(val)) {
	      val = sum.apply(undefined, _toConsumableArray(val));
	    }
	    result += val;
	  }
	  return result;
	}

	module.exports = sum;

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert nested object to flatten or expand.
	 * @module objnest
	 * @version 3.0.6
	 */

	'use strict';

	var create = __webpack_require__(915);
	var Objnest = __webpack_require__(310);

	var lib = create();

	Object.assign(lib, create, {
	  create: create,
	  Objnest: Objnest
	});

	module.exports = lib;

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @constructor Objnest
	 * @param {object} config
	 */
	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	var extend = __webpack_require__(881);
	var isArrayKey = __webpack_require__(917);
	var fromArrayKey = __webpack_require__(916);
	var toArrayKey = __webpack_require__(918);

	/** @lends Objnest */
	function Objnest(config) {
	  var s = this;
	  extend(s, config || {});
	}

	Objnest.prototype = {
	  separator: '.',
	  /**
	   * @function expand
	   * @param {object} object - Obj to flatten
	   * @returns {object} Flatten obj.
	   * @example
	   *  let obj = objnest.expand({
	   *      'foo.bar': 'baz'
	   *  })
	   *  console.log(obj) // => {foo: {bar: 'baz'}}
	   */
	  expand: function expand(object) {
	    var s = this;
	    if (Array.isArray(object)) {
	      return object.map(function (object) {
	        return s.expand(object);
	      });
	    }
	    var separator = s.separator;
	    var result = {};
	    Object.keys(object).forEach(function (key) {
	      var val = object[key];
	      if (!!~key.indexOf(separator)) {
	        var subKeys = key.split(separator),
	            subObj = {},
	            thisKey = subKeys.shift();
	        subObj[subKeys.join('.')] = val;
	        var subExpandedObj = s.expand(subObj);
	        var thisVal = result[thisKey];
	        val = s._merge(thisVal, subExpandedObj);
	        key = thisKey;
	      }
	      if (isArrayKey(key)) {
	        var arrayKey = fromArrayKey(key);
	        result[arrayKey.name] = result[arrayKey.name] || [];
	        result[arrayKey.name][arrayKey.index] = s._merge(result[arrayKey.name][arrayKey.index], val);
	      } else {
	        result[key] = val;
	      }
	    });
	    return result;
	  },

	  /**
	   * Flatten nested object.
	   * @param {object} nested - Object to flatten.
	   * @returns {object} - Flattened object.
	   * @example
	   *  let flattened = objnest.flatten({
	   *      'foo': {'bar': 'baz'}
	   *  })
	   *  console.log(flattened) // => {'foo.bar': 'baz'}
	   */
	  flatten: function flatten(nested) {
	    var s = this;
	    if (typeof nested === 'string') {
	      return nested;
	    }
	    var separator = s.separator;
	    var flattened = {};
	    Object.keys(nested || {}).forEach(function (key) {
	      var value = nested[key];

	      (function () {
	        switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {
	          case 'string':
	          case 'number':
	          case 'boolean':
	          case 'function':
	            flattened[key] = value;
	            break;
	          default:
	            var subValues = s.flatten(value);
	            Object.keys(subValues).forEach(function (subKey) {
	              var fullKey = void 0;
	              if (Array.isArray(value)) {
	                fullKey = key + toArrayKey(subKey);
	              } else {
	                fullKey = [key, subKey].join(separator);
	              }
	              flattened[fullKey] = subValues[subKey];
	            });
	            break;
	        }
	      })();
	    });
	    return flattened;
	  },
	  _merge: function _merge(v1, v2) {
	    if (typeof v1 === 'undefined') {
	      return v2;
	    }
	    if (typeof v2 === 'undefined') {
	      return v1;
	    }
	    return extend(true, v1, v2 || {});
	  }
	};

	module.exports = Objnest;

/***/ },
/* 311 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Parses an URI
	 *
	 * @author Steven Levithan <stevenlevithan.com> (MIT license)
	 * @api private
	 */

	var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

	var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];

	module.exports = function parseuri(str) {
	    var src = str,
	        b = str.indexOf('['),
	        e = str.indexOf(']');

	    if (b != -1 && e != -1) {
	        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
	    }

	    var m = re.exec(str || ''),
	        uri = {},
	        i = 14;

	    while (i--) {
	        uri[parts[i]] = m[i] || '';
	    }

	    if (b != -1 && e != -1) {
	        uri.source = src;
	        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
	        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
	        uri.ipv6uri = true;
	    }

	    return uri;
	};

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Random int value.
	 * @function randomInt
	 * @param {number} [min=Number.MIN_SAFE_INTEGER] - Min value.
	 * @param {number} [max=Number.MAX_SAFE_INTEGER] - Max value.
	 * @returns {number} - Random int.
	 */

	'use strict';

	var random = __webpack_require__(186);

	/** @lends randomInt */
	function randomInt(min, max) {
	  if (typeof min === 'undefined') {
	    min = Number.MIN_SAFE_INTEGER || -9007199254740991;
	  }
	  if (typeof max === 'undefined') {
	    max = Number.MAX_SAFE_INTEGER || 9007199254740991;
	  }
	  return parseInt((max - min) * random() + min);
	}

	module.exports = randomInt;

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(1);

	exports["default"] = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});

/***/ },
/* 314 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that you can use this stack
	    // to find the callsite that caused this warning to fire.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 315 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(315);
	var ExecutionEnvironment = __webpack_require__(26);
	var ReactInstrumentation = __webpack_require__(37);

	var camelizeStyleName = __webpack_require__(883);
	var dangerousStyleValue = __webpack_require__(990);
	var hyphenateStyleName = __webpack_require__(890);
	var memoizeStringOnly = __webpack_require__(893);
	var warning = __webpack_require__(11);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function checkRenderMessage(owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function warnValidStyle(name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function createMarkupForStyles(styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function setValueForStyles(node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var PooledClass = __webpack_require__(65);

	var invariant = __webpack_require__(5);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function rollback(len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function destructor() {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(95);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactInstrumentation = __webpack_require__(37);

	var quoteAttributeValueForBrowser = __webpack_require__(997);
	var warning = __webpack_require__(11);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function createMarkupForID(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function setAttributeForID(node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function createMarkupForRoot() {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function setAttributeForRoot(node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function createMarkupForProperty(name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function createMarkupForCustomAttribute(name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function setValueForProperty(node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function setValueForAttribute(node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function deleteValueForAttribute(node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function deleteValueForProperty(node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(65);
	var ReactElement = __webpack_require__(44);

	var emptyFunction = __webpack_require__(43);
	var traverseAllChildren = __webpack_require__(212);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var ReactComponent = __webpack_require__(195);
	var ReactElement = __webpack_require__(44);
	var ReactPropTypeLocations = __webpack_require__(201);
	var ReactPropTypeLocationNames = __webpack_require__(200);
	var ReactNoopUpdateQueue = __webpack_require__(199);

	var emptyObject = __webpack_require__(92);
	var invariant = __webpack_require__(5);
	var keyMirror = __webpack_require__(131);
	var keyOf = __webpack_require__(63);
	var warning = __webpack_require__(11);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function displayName(Constructor, _displayName) {
	    Constructor.displayName = _displayName;
	  },
	  mixins: function mixins(Constructor, _mixins) {
	    if (_mixins) {
	      for (var i = 0; i < _mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, _mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, _childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
	  },
	  contextTypes: function contextTypes(Constructor, _contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, _contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = _getDefaultProps;
	    }
	  },
	  propTypes: function propTypes(Constructor, _propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, _propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
	  },
	  statics: function statics(Constructor, _statics) {
	    mixStaticSpecIntoComponent(Constructor, _statics);
	  },
	  autobind: function autobind() {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (false) {
	      var typeofSpec = typeof spec === 'undefined' ? 'undefined' : _typeof(spec);
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && (typeof one === 'undefined' ? 'undefined' : _typeof(one)) === 'object' && (typeof two === 'undefined' ? 'undefined' : _typeof(two)) === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function replaceState(newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted() {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function ReactClassComponent() {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function createClass(spec) {
	    var Constructor = function Constructor(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function injectMixin(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

/***/ },
/* 321 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(213);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var DisabledInputUtils = __webpack_require__(136);
	var LinkedValueUtils = __webpack_require__(194);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactUpdates = __webpack_require__(45);

	var warning = __webpack_require__(11);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function getHostProps(inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function getSelectValueContext(inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function postUpdateWrapper(inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var ReactUpdates = __webpack_require__(45);
	var Transaction = __webpack_require__(109);

	var emptyFunction = __webpack_require__(43);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function close() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(939);
	var ChangeEventPlugin = __webpack_require__(940);
	var DefaultEventPluginOrder = __webpack_require__(942);
	var EnterLeaveEventPlugin = __webpack_require__(943);
	var HTMLDOMPropertyConfig = __webpack_require__(945);
	var ReactComponentBrowserEnvironment = __webpack_require__(948);
	var ReactDOMComponent = __webpack_require__(952);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactDOMEmptyComponent = __webpack_require__(953);
	var ReactDOMTreeTraversal = __webpack_require__(963);
	var ReactDOMTextComponent = __webpack_require__(961);
	var ReactDefaultBatchingStrategy = __webpack_require__(324);
	var ReactEventListener = __webpack_require__(965);
	var ReactInjection = __webpack_require__(966);
	var ReactReconcileTransaction = __webpack_require__(970);
	var SVGDOMPropertyConfig = __webpack_require__(975);
	var SelectEventPlugin = __webpack_require__(976);
	var SimpleEventPlugin = __webpack_require__(977);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 326 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function create(instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 327 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var invariant = __webpack_require__(5);

	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function injectTextComponentClass(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function injectComponentClasses(componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(959);

	var containsNode = __webpack_require__(884);
	var focusNode = __webpack_require__(302);
	var getActiveElement = __webpack_require__(303);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function hasSelectionCapabilities(elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function getSelectionInformation() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function restoreSelection(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function getSelection(input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function setSelection(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(988);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function addChecksumToMarkup(markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function canReuseMarkup(markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var DOMLazyTree = __webpack_require__(94);
	var DOMProperty = __webpack_require__(95);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactCurrentOwner = __webpack_require__(66);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactDOMContainerInfo = __webpack_require__(322);
	var ReactDOMFeatureFlags = __webpack_require__(955);
	var ReactElement = __webpack_require__(44);
	var ReactFeatureFlags = __webpack_require__(327);
	var ReactInstanceMap = __webpack_require__(107);
	var ReactInstrumentation = __webpack_require__(37);
	var ReactMarkupChecksum = __webpack_require__(330);
	var ReactReconciler = __webpack_require__(80);
	var ReactUpdateQueue = __webpack_require__(203);
	var ReactUpdates = __webpack_require__(45);

	var emptyObject = __webpack_require__(92);
	var instantiateReactComponent = __webpack_require__(209);
	var invariant = __webpack_require__(5);
	var setInnerHTML = __webpack_require__(140);
	var shouldUpdateReactComponent = __webpack_require__(211);
	var warning = __webpack_require__(11);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function TopLevelWrapper() {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function scrollMonitor(container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function _updateRootComponent(prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function _renderNewRootComponent(nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function _renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function render(nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function unmountComponentAtNode(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function _mountImageIntoNode(markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(131);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactElement = __webpack_require__(44);

	var invariant = __webpack_require__(5);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function getType(node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var ReactElement = __webpack_require__(44);
	var ReactPropTypeLocationNames = __webpack_require__(200);
	var ReactPropTypesSecret = __webpack_require__(202);

	var emptyFunction = __webpack_require__(43);
	var getIteratorFn = __webpack_require__(341);
	var warning = __webpack_require__(11);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;

	function createChainableTypeChecker(validate) {
	  if (false) {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (false) {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var PooledClass = __webpack_require__(65);
	var Transaction = __webpack_require__(109);
	var ReactInstrumentation = __webpack_require__(37);
	var ReactServerUpdateQueue = __webpack_require__(974);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function enqueue() {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function getUpdateQueue() {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {},

	  checkpoint: function checkpoint() {},

	  rollback: function rollback() {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 336 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function refreshScrollValues(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (false) {
	  try {
	    Object.defineProperty({}, 'x', { get: function get() {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;

/***/ },
/* 339 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(333);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 341 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(26);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 343 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(26);
	var escapeTextContentForBrowser = __webpack_require__(139);
	var setInnerHTML = __webpack_require__(140);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function setTextContent(node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function setTextContent(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 345 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */

	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }

	  if (funcs.length === 1) {
	    return funcs[0];
	  }

	  var last = funcs[funcs.length - 1];
	  var rest = funcs.slice(0, -1);
	  return function () {
	    return rest.reduceRight(function (composed, f) {
	      return f(composed);
	    }, last.apply(undefined, arguments));
	  };
	}

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;

	var _isPlainObject = __webpack_require__(183);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _symbolObservable = __webpack_require__(1073);

	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}

	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};

	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;

	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }

	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }

	    return enhancer(createStore)(reducer, preloadedState);
	  }

	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }

	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;

	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }

	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }

	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }

	    var isSubscribed = true;

	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);

	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }

	      isSubscribed = false;

	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }

	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }

	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }

	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }

	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }

	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }

	    return action;
	  }

	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }

	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }

	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;

	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }

	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }

	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }

	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });

	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ },
/* 347 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 348 */
/***/ function(module, exports) {

	/**
	 * Task queue class
	 * @class SGQueue
	 */
	'use strict';

	/** @lends SGQueue */

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var SGQueue = function () {
	  function SGQueue() {
	    _classCallCheck(this, SGQueue);

	    var s = this;
	    s._worker = null;
	  }

	  _createClass(SGQueue, [{
	    key: 'push',
	    value: function push(task) {
	      var s = this;
	      var worker = s.then(task);
	      s._worker = worker;
	      return worker;
	    }
	  }, {
	    key: 'then',
	    value: function then(next) {
	      var s = this;
	      return Promise.resolve(s._worker).then(next).catch(function (err) {
	        s._worker = null;
	        return Promise.reject(err);
	      });
	    }
	  }]);

	  return SGQueue;
	}();

	module.exports = SGQueue;

/***/ },
/* 349 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var MICROPHONE_TRANSITION = 800;

	exports.MICROPHONE_TRANSITION = MICROPHONE_TRANSITION;

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Format data to payload and meta
	 * @function format
	 * @returns {Object}
	 */
	'use strict';

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	var _require = __webpack_require__(134);

	var dict = _require.dict;
	var set = _require.set;

	var defaultConverters = __webpack_require__(215);

	/** @lends format */
	function format(payload) {
	  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var _options$converters = options.converters;
	  var converters = _options$converters === undefined ? defaultConverters : _options$converters;

	  payload = Array.isArray(payload) ? [].concat(_toConsumableArray(payload)) : Object.assign({}, payload);
	  var pointed = dict(payload);
	  var meta = {};
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;

	  try {
	    for (var _iterator = Object.keys(pointed)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var pointer = _step.value;

	      var value = pointed[pointer];
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;

	      try {
	        for (var _iterator2 = Object.keys(converters)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var typeName = _step2.value;

	          var converter = converters[typeName];
	          if (converter.is(value)) {
	            set(payload, pointer, converter.format(value));
	            meta[pointer] = typeName;
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }

	  return { payload: payload, meta: meta };
	}

	module.exports = format;

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Parse data with meta
	 * @function parse
	 * @returns {Object}
	 */
	'use strict';

	var _require = __webpack_require__(134);

	var get = _require.get;
	var set = _require.set;

	var defaultConverters = __webpack_require__(215);

	/** @lends parse */
	function parse(payload, meta) {
	  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  if (Array.isArray(payload)) {
	    return payload.map(function (data) {
	      return parse(data, meta, options);
	    });
	  }
	  var _options$converters = options.converters;
	  var converters = _options$converters === undefined ? defaultConverters : _options$converters;

	  payload = Object.assign({}, payload);
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;

	  try {
	    for (var _iterator = Object.keys(meta || {})[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var pointer = _step.value;

	      var typeName = meta[pointer];
	      var converter = converters[typeName];
	      if (!converter) {
	        throw new Error('[sg-serializer] Unknown type: ' + typeName + ' ');
	      }
	      var value = get(payload, pointer);
	      set(payload, pointer, converter.parse(value));
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }

	  return payload;
	}

	module.exports = parse;

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function sgSocketClient
	 * @returns {Object}
	 */
	'use strict';

	var socketIoClient = __webpack_require__(1047);

	var _require = __webpack_require__(96);

	var ReservedEvents = _require.ReservedEvents;

	var debug = __webpack_require__(24)('sg:socket:client');

	var _require2 = __webpack_require__(1032);

	var CallExtension = _require2.CallExtension;
	var LockExtension = _require2.LockExtension;
	var WrapExtension = _require2.WrapExtension;
	var PubsubExtension = _require2.PubsubExtension;
	var CONNECT = ReservedEvents.CONNECT;
	var CONNECT_ERROR = ReservedEvents.CONNECT_ERROR;
	var CONNECT_TIMEOUT = ReservedEvents.CONNECT_TIMEOUT;
	var DISCONNECT = ReservedEvents.DISCONNECT;

	/** @lends sgSocketClient */

	function sgSocketClient() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  var socket = socketIoClient.apply(undefined, args);
	  Object.assign(socket, {
	    $initial: [].concat(args)
	  });
	  var io = socket.io;

	  var untilConnect = new Promise(function (resolve, reject) {
	    var uri = io.uri;

	    socket.on(CONNECT_ERROR, function () {
	      var message = 'Failed to connect to server: ' + uri;
	      debug(message);
	      reject(new Error(message));
	    });
	    socket.on(CONNECT_TIMEOUT, function () {
	      var message = 'Connection timeout with server: ' + uri;
	      debug(message);
	      reject(new Error(message));
	    });
	    socket.on(CONNECT, function () {
	      debug('Connected to server: ' + uri);
	      resolve({ uri: uri });
	    });
	  });

	  var untilDisconnect = new Promise(function (resolve, reject) {
	    var uri = io.uri;

	    socket.on(DISCONNECT, function () {
	      debug('Disconnected from server: ' + uri);
	      resolve({ uri: uri });
	    });
	  });

	  Object.assign(socket, CallExtension, LockExtension, WrapExtension, PubsubExtension, {
	    waitToConnect: function waitToConnect() {
	      return untilConnect;
	    },
	    waitToDisconnect: function waitToDisconnect() {
	      return untilDisconnect;
	    }
	  });
	  return socket;
	}

	module.exports = sgSocketClient;

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * A validator class
	 * @class SgValidator
	 * @param {Object} schema - JSON schema
	 */
	'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var assert = __webpack_require__(59);
	var tv4 = __webpack_require__(1078);

	/** @lends SgValidator */

	var SgValidator = function () {
	  function SgValidator(schema) {
	    _classCallCheck(this, SgValidator);

	    var s = this;
	    assert.ok(schema, 'schema is required');
	    s.schema = schema;
	  }

	  /**
	   * Validate a data
	   * @param {Object} data
	   * @returns {?ValidationError}
	   */

	  _createClass(SgValidator, [{
	    key: 'validate',
	    value: function validate(data) {
	      var s = this;
	      var result = tv4.validateMultiple(data, s.schema);
	      if (result.valid) {
	        return null;
	      }
	      return result.errors;
	    }
	  }]);

	  return SgValidator;
	}();

	module.exports = SgValidator;

	/**
	 * Error result of validation
	 * @typedef {Object} ValidationError
	 */

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * Module dependencies.
	 */

	var eio = __webpack_require__(872);
	var Socket = __webpack_require__(356);
	var Emitter = __webpack_require__(179);
	var parser = __webpack_require__(216);
	var on = __webpack_require__(355);
	var bind = __webpack_require__(298);
	var debug = __webpack_require__(24)('socket.io-client:manager');
	var indexOf = __webpack_require__(307);
	var Backoff = __webpack_require__(848);

	/**
	 * IE6+ hasOwnProperty
	 */

	var has = Object.prototype.hasOwnProperty;

	/**
	 * Module exports
	 */

	module.exports = Manager;

	/**
	 * `Manager` constructor.
	 *
	 * @param {String} engine instance or engine uri/opts
	 * @param {Object} options
	 * @api public
	 */

	function Manager(uri, opts) {
	  if (!(this instanceof Manager)) return new Manager(uri, opts);
	  if (uri && 'object' == (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {
	    opts = uri;
	    uri = undefined;
	  }
	  opts = opts || {};

	  opts.path = opts.path || '/socket.io';
	  this.nsps = {};
	  this.subs = [];
	  this.opts = opts;
	  this.reconnection(opts.reconnection !== false);
	  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
	  this.reconnectionDelay(opts.reconnectionDelay || 1000);
	  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
	  this.randomizationFactor(opts.randomizationFactor || 0.5);
	  this.backoff = new Backoff({
	    min: this.reconnectionDelay(),
	    max: this.reconnectionDelayMax(),
	    jitter: this.randomizationFactor()
	  });
	  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
	  this.readyState = 'closed';
	  this.uri = uri;
	  this.connecting = [];
	  this.lastPing = null;
	  this.encoding = false;
	  this.packetBuffer = [];
	  this.encoder = new parser.Encoder();
	  this.decoder = new parser.Decoder();
	  this.autoConnect = opts.autoConnect !== false;
	  if (this.autoConnect) this.open();
	}

	/**
	 * Propagate given event to sockets and emit on `this`
	 *
	 * @api private
	 */

	Manager.prototype.emitAll = function () {
	  this.emit.apply(this, arguments);
	  for (var nsp in this.nsps) {
	    if (has.call(this.nsps, nsp)) {
	      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
	    }
	  }
	};

	/**
	 * Update `socket.id` of all sockets
	 *
	 * @api private
	 */

	Manager.prototype.updateSocketIds = function () {
	  for (var nsp in this.nsps) {
	    if (has.call(this.nsps, nsp)) {
	      this.nsps[nsp].id = this.engine.id;
	    }
	  }
	};

	/**
	 * Mix in `Emitter`.
	 */

	Emitter(Manager.prototype);

	/**
	 * Sets the `reconnection` config.
	 *
	 * @param {Boolean} true/false if it should automatically reconnect
	 * @return {Manager} self or value
	 * @api public
	 */

	Manager.prototype.reconnection = function (v) {
	  if (!arguments.length) return this._reconnection;
	  this._reconnection = !!v;
	  return this;
	};

	/**
	 * Sets the reconnection attempts config.
	 *
	 * @param {Number} max reconnection attempts before giving up
	 * @return {Manager} self or value
	 * @api public
	 */

	Manager.prototype.reconnectionAttempts = function (v) {
	  if (!arguments.length) return this._reconnectionAttempts;
	  this._reconnectionAttempts = v;
	  return this;
	};

	/**
	 * Sets the delay between reconnections.
	 *
	 * @param {Number} delay
	 * @return {Manager} self or value
	 * @api public
	 */

	Manager.prototype.reconnectionDelay = function (v) {
	  if (!arguments.length) return this._reconnectionDelay;
	  this._reconnectionDelay = v;
	  this.backoff && this.backoff.setMin(v);
	  return this;
	};

	Manager.prototype.randomizationFactor = function (v) {
	  if (!arguments.length) return this._randomizationFactor;
	  this._randomizationFactor = v;
	  this.backoff && this.backoff.setJitter(v);
	  return this;
	};

	/**
	 * Sets the maximum delay between reconnections.
	 *
	 * @param {Number} delay
	 * @return {Manager} self or value
	 * @api public
	 */

	Manager.prototype.reconnectionDelayMax = function (v) {
	  if (!arguments.length) return this._reconnectionDelayMax;
	  this._reconnectionDelayMax = v;
	  this.backoff && this.backoff.setMax(v);
	  return this;
	};

	/**
	 * Sets the connection timeout. `false` to disable
	 *
	 * @return {Manager} self or value
	 * @api public
	 */

	Manager.prototype.timeout = function (v) {
	  if (!arguments.length) return this._timeout;
	  this._timeout = v;
	  return this;
	};

	/**
	 * Starts trying to reconnect if reconnection is enabled and we have not
	 * started reconnecting yet
	 *
	 * @api private
	 */

	Manager.prototype.maybeReconnectOnOpen = function () {
	  // Only try to reconnect if it's the first time we're connecting
	  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
	    // keeps reconnection from firing twice for the same reconnection loop
	    this.reconnect();
	  }
	};

	/**
	 * Sets the current transport `socket`.
	 *
	 * @param {Function} optional, callback
	 * @return {Manager} self
	 * @api public
	 */

	Manager.prototype.open = Manager.prototype.connect = function (fn) {
	  debug('readyState %s', this.readyState);
	  if (~this.readyState.indexOf('open')) return this;

	  debug('opening %s', this.uri);
	  this.engine = eio(this.uri, this.opts);
	  var socket = this.engine;
	  var self = this;
	  this.readyState = 'opening';
	  this.skipReconnect = false;

	  // emit `open`
	  var openSub = on(socket, 'open', function () {
	    self.onopen();
	    fn && fn();
	  });

	  // emit `connect_error`
	  var errorSub = on(socket, 'error', function (data) {
	    debug('connect_error');
	    self.cleanup();
	    self.readyState = 'closed';
	    self.emitAll('connect_error', data);
	    if (fn) {
	      var err = new Error('Connection error');
	      err.data = data;
	      fn(err);
	    } else {
	      // Only do this if there is no fn to handle the error
	      self.maybeReconnectOnOpen();
	    }
	  });

	  // emit `connect_timeout`
	  if (false !== this._timeout) {
	    var timeout = this._timeout;
	    debug('connect attempt will timeout after %d', timeout);

	    // set timer
	    var timer = setTimeout(function () {
	      debug('connect attempt timed out after %d', timeout);
	      openSub.destroy();
	      socket.close();
	      socket.emit('error', 'timeout');
	      self.emitAll('connect_timeout', timeout);
	    }, timeout);

	    this.subs.push({
	      destroy: function destroy() {
	        clearTimeout(timer);
	      }
	    });
	  }

	  this.subs.push(openSub);
	  this.subs.push(errorSub);

	  return this;
	};

	/**
	 * Called upon transport open.
	 *
	 * @api private
	 */

	Manager.prototype.onopen = function () {
	  debug('open');

	  // clear old subs
	  this.cleanup();

	  // mark as open
	  this.readyState = 'open';
	  this.emit('open');

	  // add new subs
	  var socket = this.engine;
	  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
	  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
	  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
	  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
	  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
	  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
	};

	/**
	 * Called upon a ping.
	 *
	 * @api private
	 */

	Manager.prototype.onping = function () {
	  this.lastPing = new Date();
	  this.emitAll('ping');
	};

	/**
	 * Called upon a packet.
	 *
	 * @api private
	 */

	Manager.prototype.onpong = function () {
	  this.emitAll('pong', new Date() - this.lastPing);
	};

	/**
	 * Called with data.
	 *
	 * @api private
	 */

	Manager.prototype.ondata = function (data) {
	  this.decoder.add(data);
	};

	/**
	 * Called when parser fully decodes a packet.
	 *
	 * @api private
	 */

	Manager.prototype.ondecoded = function (packet) {
	  this.emit('packet', packet);
	};

	/**
	 * Called upon socket error.
	 *
	 * @api private
	 */

	Manager.prototype.onerror = function (err) {
	  debug('error', err);
	  this.emitAll('error', err);
	};

	/**
	 * Creates a new socket for the given `nsp`.
	 *
	 * @return {Socket}
	 * @api public
	 */

	Manager.prototype.socket = function (nsp) {
	  var socket = this.nsps[nsp];
	  if (!socket) {
	    socket = new Socket(this, nsp);
	    this.nsps[nsp] = socket;
	    var self = this;
	    socket.on('connecting', onConnecting);
	    socket.on('connect', function () {
	      socket.id = self.engine.id;
	    });

	    if (this.autoConnect) {
	      // manually call here since connecting evnet is fired before listening
	      onConnecting();
	    }
	  }

	  function onConnecting() {
	    if (!~indexOf(self.connecting, socket)) {
	      self.connecting.push(socket);
	    }
	  }

	  return socket;
	};

	/**
	 * Called upon a socket close.
	 *
	 * @param {Socket} socket
	 */

	Manager.prototype.destroy = function (socket) {
	  var index = indexOf(this.connecting, socket);
	  if (~index) this.connecting.splice(index, 1);
	  if (this.connecting.length) return;

	  this.close();
	};

	/**
	 * Writes a packet.
	 *
	 * @param {Object} packet
	 * @api private
	 */

	Manager.prototype.packet = function (packet) {
	  debug('writing packet %j', packet);
	  var self = this;

	  if (!self.encoding) {
	    // encode, then write to engine with result
	    self.encoding = true;
	    this.encoder.encode(packet, function (encodedPackets) {
	      for (var i = 0; i < encodedPackets.length; i++) {
	        self.engine.write(encodedPackets[i], packet.options);
	      }
	      self.encoding = false;
	      self.processPacketQueue();
	    });
	  } else {
	    // add packet to the queue
	    self.packetBuffer.push(packet);
	  }
	};

	/**
	 * If packet buffer is non-empty, begins encoding the
	 * next packet in line.
	 *
	 * @api private
	 */

	Manager.prototype.processPacketQueue = function () {
	  if (this.packetBuffer.length > 0 && !this.encoding) {
	    var pack = this.packetBuffer.shift();
	    this.packet(pack);
	  }
	};

	/**
	 * Clean up transport subscriptions and packet buffer.
	 *
	 * @api private
	 */

	Manager.prototype.cleanup = function () {
	  debug('cleanup');

	  var sub;
	  while (sub = this.subs.shift()) {
	    sub.destroy();
	  }this.packetBuffer = [];
	  this.encoding = false;
	  this.lastPing = null;

	  this.decoder.destroy();
	};

	/**
	 * Close the current socket.
	 *
	 * @api private
	 */

	Manager.prototype.close = Manager.prototype.disconnect = function () {
	  debug('disconnect');
	  this.skipReconnect = true;
	  this.reconnecting = false;
	  if ('opening' == this.readyState) {
	    // `onclose` will not fire because
	    // an open event never happened
	    this.cleanup();
	  }
	  this.backoff.reset();
	  this.readyState = 'closed';
	  if (this.engine) this.engine.close();
	};

	/**
	 * Called upon engine close.
	 *
	 * @api private
	 */

	Manager.prototype.onclose = function (reason) {
	  debug('onclose');

	  this.cleanup();
	  this.backoff.reset();
	  this.readyState = 'closed';
	  this.emit('close', reason);

	  if (this._reconnection && !this.skipReconnect) {
	    this.reconnect();
	  }
	};

	/**
	 * Attempt a reconnection.
	 *
	 * @api private
	 */

	Manager.prototype.reconnect = function () {
	  if (this.reconnecting || this.skipReconnect) return this;

	  var self = this;

	  if (this.backoff.attempts >= this._reconnectionAttempts) {
	    debug('reconnect failed');
	    this.backoff.reset();
	    this.emitAll('reconnect_failed');
	    this.reconnecting = false;
	  } else {
	    var delay = this.backoff.duration();
	    debug('will wait %dms before reconnect attempt', delay);

	    this.reconnecting = true;
	    var timer = setTimeout(function () {
	      if (self.skipReconnect) return;

	      debug('attempting reconnect');
	      self.emitAll('reconnect_attempt', self.backoff.attempts);
	      self.emitAll('reconnecting', self.backoff.attempts);

	      // check again for the case socket closed in above events
	      if (self.skipReconnect) return;

	      self.open(function (err) {
	        if (err) {
	          debug('reconnect attempt error');
	          self.reconnecting = false;
	          self.reconnect();
	          self.emitAll('reconnect_error', err.data);
	        } else {
	          debug('reconnect success');
	          self.onreconnect();
	        }
	      });
	    }, delay);

	    this.subs.push({
	      destroy: function destroy() {
	        clearTimeout(timer);
	      }
	    });
	  }
	};

	/**
	 * Called upon successful reconnect.
	 *
	 * @api private
	 */

	Manager.prototype.onreconnect = function () {
	  var attempt = this.backoff.attempts;
	  this.reconnecting = false;
	  this.backoff.reset();
	  this.updateSocketIds();
	  this.emitAll('reconnect', attempt);
	};

/***/ },
/* 355 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Module exports.
	 */

	module.exports = on;

	/**
	 * Helper for subscriptions.
	 *
	 * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
	 * @param {String} event name
	 * @param {Function} callback
	 * @api public
	 */

	function on(obj, ev, fn) {
	  obj.on(ev, fn);
	  return {
	    destroy: function destroy() {
	      obj.removeListener(ev, fn);
	    }
	  };
	}

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Module dependencies.
	 */

	var parser = __webpack_require__(216);
	var Emitter = __webpack_require__(179);
	var toArray = __webpack_require__(1077);
	var on = __webpack_require__(355);
	var bind = __webpack_require__(298);
	var debug = __webpack_require__(24)('socket.io-client:socket');
	var hasBin = __webpack_require__(895);

	/**
	 * Module exports.
	 */

	module.exports = exports = Socket;

	/**
	 * Internal events (blacklisted).
	 * These events can't be emitted by the user.
	 *
	 * @api private
	 */

	var events = {
	  connect: 1,
	  connect_error: 1,
	  connect_timeout: 1,
	  connecting: 1,
	  disconnect: 1,
	  error: 1,
	  reconnect: 1,
	  reconnect_attempt: 1,
	  reconnect_failed: 1,
	  reconnect_error: 1,
	  reconnecting: 1,
	  ping: 1,
	  pong: 1
	};

	/**
	 * Shortcut to `Emitter#emit`.
	 */

	var emit = Emitter.prototype.emit;

	/**
	 * `Socket` constructor.
	 *
	 * @api public
	 */

	function Socket(io, nsp) {
	  this.io = io;
	  this.nsp = nsp;
	  this.json = this; // compat
	  this.ids = 0;
	  this.acks = {};
	  this.receiveBuffer = [];
	  this.sendBuffer = [];
	  this.connected = false;
	  this.disconnected = true;
	  if (this.io.autoConnect) this.open();
	}

	/**
	 * Mix in `Emitter`.
	 */

	Emitter(Socket.prototype);

	/**
	 * Subscribe to open, close and packet events
	 *
	 * @api private
	 */

	Socket.prototype.subEvents = function () {
	  if (this.subs) return;

	  var io = this.io;
	  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];
	};

	/**
	 * "Opens" the socket.
	 *
	 * @api public
	 */

	Socket.prototype.open = Socket.prototype.connect = function () {
	  if (this.connected) return this;

	  this.subEvents();
	  this.io.open(); // ensure open
	  if ('open' == this.io.readyState) this.onopen();
	  this.emit('connecting');
	  return this;
	};

	/**
	 * Sends a `message` event.
	 *
	 * @return {Socket} self
	 * @api public
	 */

	Socket.prototype.send = function () {
	  var args = toArray(arguments);
	  args.unshift('message');
	  this.emit.apply(this, args);
	  return this;
	};

	/**
	 * Override `emit`.
	 * If the event is in `events`, it's emitted normally.
	 *
	 * @param {String} event name
	 * @return {Socket} self
	 * @api public
	 */

	Socket.prototype.emit = function (ev) {
	  if (events.hasOwnProperty(ev)) {
	    emit.apply(this, arguments);
	    return this;
	  }

	  var args = toArray(arguments);
	  var parserType = parser.EVENT; // default
	  if (hasBin(args)) {
	    parserType = parser.BINARY_EVENT;
	  } // binary
	  var packet = { type: parserType, data: args };

	  packet.options = {};
	  packet.options.compress = !this.flags || false !== this.flags.compress;

	  // event ack callback
	  if ('function' == typeof args[args.length - 1]) {
	    debug('emitting packet with ack id %d', this.ids);
	    this.acks[this.ids] = args.pop();
	    packet.id = this.ids++;
	  }

	  if (this.connected) {
	    this.packet(packet);
	  } else {
	    this.sendBuffer.push(packet);
	  }

	  delete this.flags;

	  return this;
	};

	/**
	 * Sends a packet.
	 *
	 * @param {Object} packet
	 * @api private
	 */

	Socket.prototype.packet = function (packet) {
	  packet.nsp = this.nsp;
	  this.io.packet(packet);
	};

	/**
	 * Called upon engine `open`.
	 *
	 * @api private
	 */

	Socket.prototype.onopen = function () {
	  debug('transport is open - connecting');

	  // write connect packet if necessary
	  if ('/' != this.nsp) {
	    this.packet({ type: parser.CONNECT });
	  }
	};

	/**
	 * Called upon engine `close`.
	 *
	 * @param {String} reason
	 * @api private
	 */

	Socket.prototype.onclose = function (reason) {
	  debug('close (%s)', reason);
	  this.connected = false;
	  this.disconnected = true;
	  delete this.id;
	  this.emit('disconnect', reason);
	};

	/**
	 * Called with socket packet.
	 *
	 * @param {Object} packet
	 * @api private
	 */

	Socket.prototype.onpacket = function (packet) {
	  if (packet.nsp != this.nsp) return;

	  switch (packet.type) {
	    case parser.CONNECT:
	      this.onconnect();
	      break;

	    case parser.EVENT:
	      this.onevent(packet);
	      break;

	    case parser.BINARY_EVENT:
	      this.onevent(packet);
	      break;

	    case parser.ACK:
	      this.onack(packet);
	      break;

	    case parser.BINARY_ACK:
	      this.onack(packet);
	      break;

	    case parser.DISCONNECT:
	      this.ondisconnect();
	      break;

	    case parser.ERROR:
	      this.emit('error', packet.data);
	      break;
	  }
	};

	/**
	 * Called upon a server event.
	 *
	 * @param {Object} packet
	 * @api private
	 */

	Socket.prototype.onevent = function (packet) {
	  var args = packet.data || [];
	  debug('emitting event %j', args);

	  if (null != packet.id) {
	    debug('attaching ack callback to event');
	    args.push(this.ack(packet.id));
	  }

	  if (this.connected) {
	    emit.apply(this, args);
	  } else {
	    this.receiveBuffer.push(args);
	  }
	};

	/**
	 * Produces an ack callback to emit with an event.
	 *
	 * @api private
	 */

	Socket.prototype.ack = function (id) {
	  var self = this;
	  var sent = false;
	  return function () {
	    // prevent double callbacks
	    if (sent) return;
	    sent = true;
	    var args = toArray(arguments);
	    debug('sending ack %j', args);

	    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;
	    self.packet({
	      type: type,
	      id: id,
	      data: args
	    });
	  };
	};

	/**
	 * Called upon a server acknowlegement.
	 *
	 * @param {Object} packet
	 * @api private
	 */

	Socket.prototype.onack = function (packet) {
	  var ack = this.acks[packet.id];
	  if ('function' == typeof ack) {
	    debug('calling ack %s with %j', packet.id, packet.data);
	    ack.apply(this, packet.data);
	    delete this.acks[packet.id];
	  } else {
	    debug('bad ack %s', packet.id);
	  }
	};

	/**
	 * Called upon server connect.
	 *
	 * @api private
	 */

	Socket.prototype.onconnect = function () {
	  this.connected = true;
	  this.disconnected = false;
	  this.emit('connect');
	  this.emitBuffered();
	};

	/**
	 * Emit buffered events (received and emitted).
	 *
	 * @api private
	 */

	Socket.prototype.emitBuffered = function () {
	  var i;
	  for (i = 0; i < this.receiveBuffer.length; i++) {
	    emit.apply(this, this.receiveBuffer[i]);
	  }
	  this.receiveBuffer = [];

	  for (i = 0; i < this.sendBuffer.length; i++) {
	    this.packet(this.sendBuffer[i]);
	  }
	  this.sendBuffer = [];
	};

	/**
	 * Called upon server disconnect.
	 *
	 * @api private
	 */

	Socket.prototype.ondisconnect = function () {
	  debug('server disconnect (%s)', this.nsp);
	  this.destroy();
	  this.onclose('io server disconnect');
	};

	/**
	 * Called upon forced client/server side disconnections,
	 * this method ensures the manager stops tracking us and
	 * that reconnections don't get triggered for this.
	 *
	 * @api private.
	 */

	Socket.prototype.destroy = function () {
	  if (this.subs) {
	    // clean subscriptions to avoid reconnections
	    for (var i = 0; i < this.subs.length; i++) {
	      this.subs[i].destroy();
	    }
	    this.subs = null;
	  }

	  this.io.destroy(this);
	};

	/**
	 * Disconnects the socket manually.
	 *
	 * @return {Socket} self
	 * @api public
	 */

	Socket.prototype.close = Socket.prototype.disconnect = function () {
	  if (this.connected) {
	    debug('performing disconnect (%s)', this.nsp);
	    this.packet({ type: parser.DISCONNECT });
	  }

	  // remove socket from pool
	  this.destroy();

	  if (this.connected) {
	    // fire events
	    this.onclose('io client disconnect');
	  }
	  return this;
	};

	/**
	 * Sets the compress flag.
	 *
	 * @param {Boolean} if `true`, compresses the sending data
	 * @return {Socket} self
	 * @api public
	 */

	Socket.prototype.compress = function (compress) {
	  this.flags = this.flags || {};
	  this.flags.compress = compress;
	  return this;
	};

/***/ },
/* 357 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	module.exports = isBuf;

	/**
	 * Returns true if obj is a buffer or an arraybuffer.
	 *
	 * @api private
	 */

	function isBuf(obj) {
	  return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 358 */
/***/ function(module, exports) {

	'use strict';

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into camel case.
	 * @memberof module:stringcase/lib
	 * @function camelcase
	 * @param {string} str - String to convert.
	 * @returns {string} Camel case string.
	 */

	'use strict';

	var lowercase = __webpack_require__(98);
	var uppercase = __webpack_require__(110);

	var replacing = {
	  from: /[\-_\.\s]([a-zA-Z])/g,
	  to: function to(a, b) {
	    return uppercase(b);
	  }
	};

	/** @lends camelcase */
	function camelcase(str) {
	  if (camelcase.isCamelcase(str)) {
	    return str;
	  }
	  str = String(str).replace(/^[\-_\.]/, '');
	  if (!str) {
	    return str;
	  }
	  if (uppercase.isUppercase(str)) {
	    str = lowercase(str);
	  }
	  return lowercase(str[0]) + str.replace(replacing.from, replacing.to).slice(1);
	}

	/**
	 * Checks whether the string are camelcase.
	 * @memberof module:stringcase/lib
	 * @function camelcase.isCamelcase
	 * @param {string} str - String to check
	 * @returns {boolean} - True if the string are camelcase.
	 */
	camelcase.isCamelcase = function (str) {
	  return str && /^[a-zA-Z]+$/.test(str) && lowercase(str[0]) === str[0];
	};

	module.exports = camelcase;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Caller to access remote actor
	 * @class SugoCaller
	 * @param {Object} config - Caller configuration
	 * @param {string} [config.protocol] - Protocol to use ( "http" or "https" )
	 * @param {string} [config.host] - Hub host name. ( eg: "localhost:3000" )
	 * @param {string} [config.pathname] - Hub URL path name ( eg: "/callers" )
	 * @param {Object} [config.auth] - Auth data for hub
	 */
	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof2(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var sgSocketClient = __webpack_require__(1036);
	var ActorValidator = __webpack_require__(1064);

	var _require = __webpack_require__(130);

	var EventEmitter = _require.EventEmitter;

	var _require2 = __webpack_require__(96);

	var ReservedEvents = _require2.ReservedEvents;
	var RemoteEvents = _require2.RemoteEvents;
	var JOIN = RemoteEvents.JOIN;
	var LEAVE = RemoteEvents.LEAVE;
	var PERFORM = RemoteEvents.PERFORM;
	var SPEC = RemoteEvents.SPEC;
	var DESPEC = RemoteEvents.DESPEC;
	var PIPE = RemoteEvents.PIPE;
	var ERROR = ReservedEvents.ERROR;

	var ActorAccess = __webpack_require__(1060);
	var co = __webpack_require__(79);
	var assert = __webpack_require__(59);
	var sgQueue = __webpack_require__(1010);
	var formatUrl = __webpack_require__(1080).format;

	var _require3 = __webpack_require__(361);

	var HubUrls = _require3.HubUrls;

	var argx = __webpack_require__(646);

	var _require4 = __webpack_require__(104);

	var get = _require4.get;

	var _require5 = __webpack_require__(1029);

	var parse = _require5.parse;
	var format = _require5.format;

	var authorize = __webpack_require__(1061);

	var _connectQueue = sgQueue();

	var injectTypes = function injectTypes(data) {
	  var _format = format(data);

	  var payload = _format.payload;
	  var types = _format.meta;

	  return Object.assign(payload, { meta: { types: types } });
	};

	/** @lends SugoCaller */

	var SugoCaller = function (_EventEmitter) {
	  _inherits(SugoCaller, _EventEmitter);

	  function SugoCaller(url) {
	    var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    _classCallCheck(this, SugoCaller);

	    var args = argx(arguments);
	    url = args.shift('string');
	    config = args.shift('object') || {};

	    if (!url) {
	      url = SugoCaller.urlFromConfig(config);
	    }

	    assert.ok(url, 'URL is required.');

	    var _this = _possibleConstructorReturn(this, (SugoCaller.__proto__ || Object.getPrototypeOf(SugoCaller)).call(this));

	    var s = _this;
	    var _config = config;
	    var _config$multiplex = _config.multiplex;
	    var multiplex = _config$multiplex === undefined ? true : _config$multiplex;
	    var _config$auth = _config.auth;
	    var auth = _config$auth === undefined ? false : _config$auth;

	    Object.assign(s, {
	      url: url, auth: auth, multiplex: multiplex
	    });
	    s.validator = new ActorValidator();
	    s.sockets = {};
	    s.accesses = {};

	    s.onError = function (err) {
	      return s.emit(err) || Promise.reject(err);
	    };
	    return _this;
	  }

	  /**
	   * Connect to actor
	   * @method connect
	   * @param {string} key - Key of actor
	   * @returns {Promise.<Object>} - Actor accessor
	   */

	  _createClass(SugoCaller, [{
	    key: 'connect',
	    value: function connect(key) {
	      var s = this;
	      var doConnect = function doConnect() {
	        return co(regeneratorRuntime.mark(function _callee2() {
	          var access, bundle;
	          return regeneratorRuntime.wrap(function _callee2$(_context2) {
	            while (1) {
	              switch (_context2.prev = _context2.next) {
	                case 0:
	                  if (!s.accesses[key]) {
	                    _context2.next = 2;
	                    break;
	                  }

	                  throw new Error('Already connected to: ' + key);

	                case 2:
	                  _context2.next = 4;
	                  return s.actorAccess(key);

	                case 4:
	                  access = _context2.sent;

	                  s.accesses[key] = access;

	                  bundle = access.bundle;

	                  Object.assign(bundle, {
	                    disconnect: function disconnect() {
	                      return co(regeneratorRuntime.mark(function _callee() {
	                        var pipeListeners, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _module, socket;

	                        return regeneratorRuntime.wrap(function _callee$(_context) {
	                          while (1) {
	                            switch (_context.prev = _context.next) {
	                              case 0:
	                                pipeListeners = access.pipeListeners;
	                                _iteratorNormalCompletion = true;
	                                _didIteratorError = false;
	                                _iteratorError = undefined;
	                                _context.prev = 4;

	                                for (_iterator = Object.keys(pipeListeners)[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                                  _module = _step.value;

	                                  delete pipeListeners[_module];
	                                }
	                                _context.next = 12;
	                                break;

	                              case 8:
	                                _context.prev = 8;
	                                _context.t0 = _context['catch'](4);
	                                _didIteratorError = true;
	                                _iteratorError = _context.t0;

	                              case 12:
	                                _context.prev = 12;
	                                _context.prev = 13;

	                                if (!_iteratorNormalCompletion && _iterator.return) {
	                                  _iterator.return();
	                                }

	                              case 15:
	                                _context.prev = 15;

	                                if (!_didIteratorError) {
	                                  _context.next = 18;
	                                  break;
	                                }

	                                throw _iteratorError;

	                              case 18:
	                                return _context.finish(15);

	                              case 19:
	                                return _context.finish(12);

	                              case 20:
	                                socket = s.sockets[key];
	                                _context.next = 23;
	                                return socket.call(LEAVE, { key: key });

	                              case 23:
	                                delete s.accesses[key];
	                                socket.close();
	                                _context.next = 27;
	                                return socket.waitToDisconnect();

	                              case 27:
	                                delete s.sockets[key];

	                              case 28:
	                              case 'end':
	                                return _context.stop();
	                            }
	                          }
	                        }, _callee, this, [[4, 8, 12, 20], [13,, 15, 19]]);
	                      }));
	                    }
	                  });
	                  return _context2.abrupt('return', bundle);

	                case 9:
	                case 'end':
	                  return _context2.stop();
	              }
	            }
	          }, _callee2, this);
	        })).catch(function (err) {
	          var socket = s.sockets[key];
	          if (socket) {
	            socket.call(LEAVE, { key: key });
	            socket.close();
	          }
	          delete s.accesses[key];
	          delete s.sockets[key];
	          return Promise.reject(err);
	        });
	      };

	      var connectQueue = SugoCaller.connectQueue;

	      return connectQueue.push(doConnect);
	    }

	    /**
	     * Disconnect from cloud server
	     * @method disconnect
	     * @param {string} key - Key of actor to connect
	     * @returns {Promise}
	     */

	  }, {
	    key: 'disconnect',
	    value: function disconnect(key) {
	      var s = this;
	      return co(regeneratorRuntime.mark(function _callee3() {
	        var _access, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _key, _access2;

	        return regeneratorRuntime.wrap(function _callee3$(_context3) {
	          while (1) {
	            switch (_context3.prev = _context3.next) {
	              case 0:
	                if (!key) {
	                  _context3.next = 9;
	                  break;
	                }

	                _access = s.accesses[key];

	                if (_access) {
	                  _context3.next = 4;
	                  break;
	                }

	                throw new Error('Not connected to: ' + key);

	              case 4:
	                _context3.next = 6;
	                return _access.bundle.disconnect();

	              case 6:
	                delete s.accesses[key];
	                _context3.next = 37;
	                break;

	              case 9:
	                _iteratorNormalCompletion2 = true;
	                _didIteratorError2 = false;
	                _iteratorError2 = undefined;
	                _context3.prev = 12;
	                _iterator2 = Object.keys(s.accesses)[Symbol.iterator]();

	              case 14:
	                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
	                  _context3.next = 22;
	                  break;
	                }

	                _key = _step2.value;
	                _access2 = s.accesses[_key];
	                _context3.next = 19;
	                return _access2.bundle.disconnect();

	              case 19:
	                _iteratorNormalCompletion2 = true;
	                _context3.next = 14;
	                break;

	              case 22:
	                _context3.next = 28;
	                break;

	              case 24:
	                _context3.prev = 24;
	                _context3.t0 = _context3['catch'](12);
	                _didIteratorError2 = true;
	                _iteratorError2 = _context3.t0;

	              case 28:
	                _context3.prev = 28;
	                _context3.prev = 29;

	                if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                  _iterator2.return();
	                }

	              case 31:
	                _context3.prev = 31;

	                if (!_didIteratorError2) {
	                  _context3.next = 34;
	                  break;
	                }

	                throw _iteratorError2;

	              case 34:
	                return _context3.finish(31);

	              case 35:
	                return _context3.finish(28);

	              case 36:
	                s.accesses = {};

	              case 37:
	              case 'end':
	                return _context3.stop();
	            }
	          }
	        }, _callee3, this, [[12, 24, 28, 36], [29,, 31, 35]]);
	      }));
	    }
	  }, {
	    key: 'actorAccess',
	    value: function actorAccess(key) {
	      var s = this;
	      var auth = s.auth;
	      var url = s.url;
	      var multiplex = s.multiplex;
	      var validator = s.validator;

	      return co(regeneratorRuntime.mark(function _callee4() {
	        var socket, _ref, payload, specs, vError, connector, access;

	        return regeneratorRuntime.wrap(function _callee4$(_context4) {
	          while (1) {
	            switch (_context4.prev = _context4.next) {
	              case 0:
	                socket = sgSocketClient(url, { multiplex: multiplex });

	                s.sockets[key] = socket;
	                socket.on(ERROR, function (err) {
	                  socket.close();
	                  throw err;
	                });

	                if (!auth) {
	                  _context4.next = 12;
	                  break;
	                }

	                _context4.prev = 4;
	                _context4.next = 7;
	                return authorize(socket, auth);

	              case 7:
	                _context4.next = 12;
	                break;

	              case 9:
	                _context4.prev = 9;
	                _context4.t0 = _context4['catch'](4);
	                throw new Error('[SUGO-Caller] Authentication failed: ' + _context4.t0.message + ' ( url: ' + JSON.stringify(url) + ', auth: ' + JSON.stringify(auth) + ' )');

	              case 12:
	                _context4.next = 14;
	                return socket.waitToConnect();

	              case 14:
	                _context4.next = 16;
	                return socket.call(JOIN, { key: key });

	              case 16:
	                _ref = _context4.sent;
	                payload = _ref.payload;
	                specs = payload.specs;
	                vError = s.validator.validateInterfaceSpecs(specs);

	                if (!vError) {
	                  _context4.next = 23;
	                  break;
	                }

	                delete s.sockets[key];
	                throw vError;

	              case 23:
	                connector = s.newConnector(key);

	                socket.on(PIPE, function (piped) {
	                  var pipeListeners = access.pipeListeners;

	                  var listeners = (pipeListeners[piped.module] || {})[piped.event] || [];
	                  var data = piped.data;
	                  var _piped$meta = piped.meta;
	                  var meta = _piped$meta === undefined ? {} : _piped$meta;
	                  var types = meta.types;

	                  if (types) {
	                    data = parse(data, types, {});
	                  }
	                  var _iteratorNormalCompletion3 = true;
	                  var _didIteratorError3 = false;
	                  var _iteratorError3 = undefined;

	                  try {
	                    for (var _iterator3 = listeners[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                      var listener = _step3.value;

	                      listener(data);
	                    }
	                  } catch (err) {
	                    _didIteratorError3 = true;
	                    _iteratorError3 = err;
	                  } finally {
	                    try {
	                      if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                        _iterator3.return();
	                      }
	                    } finally {
	                      if (_didIteratorError3) {
	                        throw _iteratorError3;
	                      }
	                    }
	                  }
	                });
	                socket.on(SPEC, function (_ref2) {
	                  var name = _ref2.name;
	                  var spec = _ref2.spec;

	                  access.registerSpecs(_defineProperty({}, name, spec), connector);
	                });
	                socket.on(DESPEC, function (_ref3) {
	                  var name = _ref3.name;

	                  access.deregisterSpecs(name);
	                });

	                access = new ActorAccess({
	                  specs: specs,
	                  validator: validator,
	                  connector: connector
	                });

	                Object.assign(access, { pipeListeners: {} });

	                return _context4.abrupt('return', access);

	              case 30:
	              case 'end':
	                return _context4.stop();
	            }
	          }
	        }, _callee4, this, [[4, 9]]);
	      }));
	    }
	  }, {
	    key: 'newConnector',
	    value: function newConnector(key) {
	      var s = this;

	      return {
	        invoke: co.wrap(regeneratorRuntime.mark(function invokeMethod(module, method) {
	          var params = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

	          var isFunc, i, param, socket, performData, _ref4, payload, _ref4$meta, meta;

	          return regeneratorRuntime.wrap(function invokeMethod$(_context5) {
	            while (1) {
	              switch (_context5.prev = _context5.next) {
	                case 0:
	                  isFunc = function isFunc(param) {
	                    return typeof param === 'function';
	                  };

	                  for (i = 0; i < params.length; i++) {
	                    param = params[i];

	                    if (isFunc(param)) {
	                      console.warn('[SUGO-Caller] Passing function is not supported. Please check the params passed to ' + '`' + module + '.' + method + '()' + '`');
	                      params[i] = Object.assign({}, param);
	                    }
	                  }
	                  socket = s.sockets[key];

	                  s.assertConnection(key);
	                  performData = injectTypes({ key: key, method: method, params: params, module: module });
	                  _context5.next = 7;
	                  return socket.call(PERFORM, performData);

	                case 7:
	                  _ref4 = _context5.sent;
	                  payload = _ref4.payload;
	                  _ref4$meta = _ref4.meta;
	                  meta = _ref4$meta === undefined ? {} : _ref4$meta;

	                  if (meta.types) {
	                    payload = parse(payload, meta.types);
	                  }
	                  return _context5.abrupt('return', payload);

	                case 13:
	                case 'end':
	                  return _context5.stop();
	              }
	            }
	          }, invokeMethod, this);
	        })),
	        fire: co.wrap(regeneratorRuntime.mark(function fireEvent(module, event, data) {
	          var socket, isObject, _ref5, payload, types;

	          return regeneratorRuntime.wrap(function fireEvent$(_context6) {
	            while (1) {
	              switch (_context6.prev = _context6.next) {
	                case 0:
	                  socket = s.sockets[key];

	                  s.assertConnection(key);
	                  isObject = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object';
	                  _ref5 = isObject ? parse(data) : { payload: data };
	                  payload = _ref5.payload;
	                  types = _ref5.meta;

	                  socket.emit(PIPE, { key: key, event: event, data: payload, module: module, meta: { types: types } });

	                case 7:
	                case 'end':
	                  return _context6.stop();
	              }
	            }
	          }, fireEvent, this);
	        })),
	        listen: co.wrap(regeneratorRuntime.mark(function registerListener(module, event, listener) {
	          var access, pipeListeners;
	          return regeneratorRuntime.wrap(function registerListener$(_context7) {
	            while (1) {
	              switch (_context7.prev = _context7.next) {
	                case 0:
	                  access = s.accesses[key];

	                  s.assertConnection(key);
	                  pipeListeners = access.pipeListeners;

	                  pipeListeners[module] = pipeListeners[module] || {};
	                  pipeListeners[module][event] = (pipeListeners[module][event] || []).concat(listener);

	                case 5:
	                case 'end':
	                  return _context7.stop();
	              }
	            }
	          }, registerListener, this);
	        })),
	        delisten: co.wrap(regeneratorRuntime.mark(function deregisterListener(module, event, listener) {
	          var access, pipeListeners;
	          return regeneratorRuntime.wrap(function deregisterListener$(_context8) {
	            while (1) {
	              switch (_context8.prev = _context8.next) {
	                case 0:
	                  access = s.accesses[key];

	                  s.assertConnection(key);
	                  pipeListeners = access.pipeListeners;

	                  if (pipeListeners[module][event]) {
	                    _context8.next = 5;
	                    break;
	                  }

	                  return _context8.abrupt('return');

	                case 5:
	                  pipeListeners[module][event] = pipeListeners[module][event].filter(function (filterling) {
	                    return filterling !== listener;
	                  });

	                case 6:
	                case 'end':
	                  return _context8.stop();
	              }
	            }
	          }, deregisterListener, this);
	        }))
	      };
	    }
	  }, {
	    key: 'assertConnection',
	    value: function assertConnection(key) {
	      var s = this;
	      if (!s.sockets[key]) {
	        throw new Error('Not connected!!');
	      }
	    }
	  }], [{
	    key: 'urlFromConfig',
	    value: function urlFromConfig(config) {
	      var _config$protocol = config.protocol;
	      var protocol = _config$protocol === undefined ? get('location.protocol') || 'http' : _config$protocol;
	      var _config$host = config.host;
	      var host = _config$host === undefined ? undefined : _config$host;
	      var _config$port = config.port;
	      var port = _config$port === undefined ? get('location.port') || 80 : _config$port;
	      var _config$hostname = config.hostname;
	      var hostname = _config$hostname === undefined ? get('location.hostname') || 'localhost' : _config$hostname;
	      var _config$pathname = config.pathname;
	      var pathname = _config$pathname === undefined ? HubUrls.CALLER_URL : _config$pathname;

	      return formatUrl({
	        protocol: protocol,
	        host: host,
	        port: port,
	        hostname: hostname,
	        pathname: pathname
	      });
	    }
	  }, {
	    key: 'connectQueue',
	    get: function get() {
	      return _connectQueue;
	    }
	  }]);

	  return SugoCaller;
	}(EventEmitter);

	module.exports = SugoCaller;

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Constant variables for SUGOS
	 * @module sugo-constants
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get ActorEvents() {
	    return d(__webpack_require__(1065));
	  },
	  get CallerEvents() {
	    return d(__webpack_require__(1066));
	  },
	  get HubUrls() {
	    return d(__webpack_require__(1067));
	  },
	  get ReservedNames() {
	    return d(__webpack_require__(1068));
	  }
	};

/***/ },
/* 362 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * Check if `obj` is an object.
	 *
	 * @param {Object} obj
	 * @return {Boolean}
	 * @api private
	 */

	function isObject(obj) {
	  return null !== obj && 'object' === (typeof obj === 'undefined' ? 'undefined' : _typeof(obj));
	}

	module.exports = isObject;

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Multiply vectors
	 * @memberof module:veccal/lib
	 * @function multiply
	 * @param {...number[]} - Vectors to add.
	 * @throws Length mismatch error.
	 * @returns {number[]} - Added vector.
	 */

	'use strict';

	var _operate = __webpack_require__(219);

	function _multiplyOperation(val1, val2) {
	  return val1 * val2;
	}

	/** @lends multiply */
	function multiply(vector1, vector2) {
	  var result = vector1;
	  var len = arguments.length;
	  for (var i = 1; i < len; i++) {
	    result = _operate(result, arguments[i], _multiplyOperation);
	  }
	  return result;
	}

	module.exports = multiply;

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Get size of vector
	 * @memberof module:veccal/lib
	 * @function size
	 * @param {number[]} - Vector to get size.
	 * @returns {number} - Size of vector.
	 */

	'use strict';

	var multiply = __webpack_require__(363);
	var numcal = __webpack_require__(56);

	/** @lends size */
	function size(vector) {
	  var size2 = multiply(vector, vector);
	  return Math.sqrt(numcal.sum(size2));
	}

	module.exports = size;

/***/ },
/* 365 */
/***/ function(module, exports) {

	'use strict';

	var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),
	    length = 64,
	    map = {},
	    seed = 0,
	    i = 0,
	    prev;

	/**
	 * Return a string representing the specified number.
	 *
	 * @param {Number} num The number to convert.
	 * @returns {String} The string representation of the number.
	 * @api public
	 */
	function encode(num) {
	  var encoded = '';

	  do {
	    encoded = alphabet[num % length] + encoded;
	    num = Math.floor(num / length);
	  } while (num > 0);

	  return encoded;
	}

	/**
	 * Return the integer value specified by the given string.
	 *
	 * @param {String} str The string to convert.
	 * @returns {Number} The integer value represented by the string.
	 * @api public
	 */
	function decode(str) {
	  var decoded = 0;

	  for (i = 0; i < str.length; i++) {
	    decoded = decoded * length + map[str.charAt(i)];
	  }

	  return decoded;
	}

	/**
	 * Yeast: A tiny growing id generator.
	 *
	 * @returns {String} A unique id.
	 * @api public
	 */
	function yeast() {
	  var now = encode(+new Date());

	  if (now !== prev) return seed = 0, prev = now;
	  return now + '.' + encode(seed++);
	}

	//
	// Map each character to its index.
	//
	for (; i < length; i++) {
	  map[alphabet[i]] = i;
	} //
	// Expose the `yeast`, `encode` and `decode` functions.
	//
	yeast.encode = encode;
	yeast.decode = decode;
	module.exports = yeast;

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Set alpha value
	 * @function alpha
	 * @param {string} color - Color value.
	 * @param {number} Alpha value. 0.00 to 1.00
	 * @returns {string}
	 */
	'use strict';

	var parse = __webpack_require__(82);

	/** @lends alpha */
	function alpha(color, alpha) {
	  color = parse(color);
	  return color.alpha(alpha).rgbaString();
	}

	module.exports = alpha;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Darken color
	 * @function darken
	 * @param {string} color - Color value.
	 * @param {number} Amount value. 0.00 to 1.00
	 * @returns {string}
	 */
	'use strict';

	var parse = __webpack_require__(82);

	/** @lends darken */
	function darken(color, amount) {
	  color = parse(color);
	  return color.darken(amount).rgbaString();
	}

	module.exports = darken;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Detect light or not
	 * @function isLight
	 * @param {string} color - Color value
	 * @returns {boolean}
	 */
	'use strict';

	var isDark = __webpack_require__(221);
	function isLight(color) {
	  return !isDark(color);
	}

	module.exports = isLight;

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * mix colors
	 * @function mix
	 * @param {string} color1 - Color value.
	 * @param {string} color2 - Color value.
	 * @returns {string}
	 */
	'use strict';

	var parse = __webpack_require__(82);

	/** @lends mix */
	function mix(color1, color2) {
	  return parse(color1).mix(parse(color2)).rgbaString();
	}

	module.exports = mix;

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * rotate color
	 * @function rotate
	 * @param {string} color - Color value.
	 * @param {number} degree to rotate. 0 to 360
	 * @returns {string}
	 */
	'use strict';

	var parse = __webpack_require__(82);

	/** @lends rotate */
	function rotate(color, degree) {
	  color = parse(color);
	  return color.hue(color.hue() + Number(degree)).rgbaString();
	}

	module.exports = rotate;

/***/ },
/* 371 */
/***/ function(module, exports) {

	'use strict';

	module.exports = after;

	function after(count, callback, err_cb) {
	    var bail = false;
	    err_cb = err_cb || noop;
	    proxy.count = count;

	    return count === 0 ? callback() : proxy;

	    function proxy(err, result) {
	        if (proxy.count <= 0) {
	            throw new Error('after called too many times');
	        }
	        --proxy.count;

	        // after first error, rest are passed to err_cb
	        if (err) {
	            bail = true;
	            callback(err);
	            // future error callbacks will go to error handler
	            callback = err_cb;
	        } else if (proxy.count === 0 && !bail) {
	            callback(null, result);
	        }
	    }
	}

	function noop() {}

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for accordion components.
	 * @class ApAccordion
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApAccordion */
	var ApAccordion = _react2.default.createClass({
	  displayName: 'ApAccordion',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Is open or not */
	    open: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {
	      innerHeight: 1200
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-accordion', {
	        'ap-accordion-closed': !props.open
	      }), style: { maxHeight: state.innerHeight } }, _react2.default.createElement('div', { className: 'ap-accordion-inner',
	      ref: function ref(inner) {
	        return s.registerInner(inner);
	      } }, props.children));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    window.addEventListener('resize', s.handleResize);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    s.setState({
	      innerHeight: s.getInnerHeight()
	    });
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    window.removeEventListener('resize', s.handleResize);
	  },

	  // ------------------
	  // Helpers
	  // ------------------

	  handleResize: function handleResize() {
	    var s = this;
	    s.setState({
	      innerHeight: s.getInnerHeight()
	    });
	  },
	  getInnerHeight: function getInnerHeight() {
	    var s = this;
	    var inner = s.inner;

	    return inner.offsetHeight;
	  },

	  // ------------------
	  // Custom
	  // ---------
	  // ---------
	  inner: null,

	  registerInner: function registerInner(inner) {
	    var s = this;
	    s.inner = inner;
	  }
	});

	exports.default = ApAccordion;

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Body for accordion.
	 * @class ApAccordionArrow
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApAccordionArrow */
	var ApAccordionArrow = _react2.default.createClass({
	  displayName: 'ApAccordionArrow',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    icon: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      icon: 'fa fa-chevron-down'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: 'ap-accordion-arrow' }, _react2.default.createElement('i', { className: (0, _classnames2.default)('ap-accordion-arrow-icon', props.icon) }));
	  }
	});

	exports.default = ApAccordionArrow;

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Body for accordion.
	 * @class ApAccordionBody
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApAccordionBody */
	var ApAccordionBody = _react2.default.createClass({
	  displayName: 'ApAccordionBody',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-accordion-body', props.className) }, props.children);
	  }
	});

	exports.default = ApAccordionBody;

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Header for accordion.
	 * @class ApAccordionHeader
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApAccordionHeader */
	var ApAccordionHeader = _react2.default.createClass({
	  displayName: 'ApAccordionHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    onToggle: _react.PropTypes.func,
	    busyDuration: _react.PropTypes.number
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      busy: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      onToggle: null,
	      busyDuration: 500
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactTouchable.ApTouchable, { onTap: s.handleTap }, _react2.default.createElement('div', { className: 'ap-accordion-header' }, props.children));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;

	    if (s.state.busyTimer) {
	      clearTimeout(s.state.busyTimer);
	    }
	  },

	  // ------------------
	  // Helper
	  // ------------------

	  handleTap: function handleTap() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    if (state.busy) {
	      return; // Prevent double tap.
	    }
	    s.setState({
	      busy: true,
	      busyTimer: setTimeout(function () {
	        s.setState({
	          busy: false,
	          busyTimer: null
	        });
	      }, props.busyDuration)
	    });

	    if (props.onToggle) {
	      props.onToggle();
	    }
	  }
	});

	exports.default = ApAccordionHeader;

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApAccordion.
	 * @class ApAccordionStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApAccordionStyle */
	var ApAccordionStyle = function (_Component) {
	  _inherits(ApAccordionStyle, _Component);

	  function ApAccordionStyle() {
	    _classCallCheck(this, ApAccordionStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApAccordionStyle).apply(this, arguments));
	  }

	  _createClass(ApAccordionStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApAccordionStyle$sty = ApAccordionStyle.styleData(props);

	      var all = _ApAccordionStyle$sty.all;
	      var small = _ApAccordionStyle$sty.small;
	      var medium = _ApAccordionStyle$sty.medium;
	      var large = _ApAccordionStyle$sty.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApAccordionStyle;
	}(_react.Component);

	Object.assign(ApAccordionStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    headerHeight: _react.PropTypes.number,
	    animationDuration: _react.PropTypes.number,
	    borderRadius: _react.PropTypes.number,
	    borderColor: _react.PropTypes.string
	  },

	  defaultProps: {
	    style: {},
	    headerHeight: 44,
	    animationDuration: 300,
	    borderRadius: 4,
	    borderColor: '#AAA'
	  },

	  styleData: function styleData(config) {
	    var headerHeight = config.headerHeight;
	    var animationDuration = config.animationDuration;
	    var borderRadius = config.borderRadius;
	    var borderColor = config.borderColor;

	    return {
	      all: {
	        '.ap-accordion': {
	          position: 'relative',
	          overflow: 'hidden',
	          transition: 'max-height ' + animationDuration + 'ms',
	          border: '1px solid ' + borderColor,
	          background: 'white',
	          boxSizing: 'border-box',
	          borderRadius: borderRadius + 'px'
	        },
	        '.ap-accordion-header': {
	          padding: '0 8px',
	          lineHeight: headerHeight + 'px',
	          height: headerHeight + 1 + 'px',
	          cursor: 'pointer',
	          boxSizing: 'border-box',
	          margin: '-1px',
	          borderRadius: '0 0 ' + borderRadius + 'px ' + borderRadius + 'px',
	          border: '1px solid ' + borderColor
	        },
	        '.ap-accordion-header:hover': {
	          opacity: 0.9
	        },
	        '.ap-accordion-header:active': {
	          opacity: 0.66
	        },
	        '.ap-accordion-body': {
	          padding: '8px'
	        },
	        '.ap-accordion-arrow': {
	          display: 'inline-block',
	          marginRight: '2px',
	          transform: 'rotate(0deg)',
	          transition: 'transform ' + animationDuration + 'ms'
	        },
	        '.ap-accordion-arrow-icon': {},
	        '.ap-accordion-closed': {
	          maxHeight: headerHeight + 'px !important'
	        },
	        '.ap-accordion-closed .ap-accordion-arrow': {
	          transform: 'rotate(-90deg)'
	        }
	      }
	    };
	  }
	});

	exports.default = ApAccordionStyle;

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for accordion components.
	 * @module apeman-react-accordion
	 * @version 4.0.7
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApAccordion = exports.ApAccordionStyle = exports.ApAccordionHeader = exports.ApAccordionBody = exports.ApAccordionArrow = undefined;

	var _ap_accordion_arrow = __webpack_require__(373);

	var _ap_accordion_arrow2 = _interopRequireDefault(_ap_accordion_arrow);

	var _ap_accordion_body = __webpack_require__(374);

	var _ap_accordion_body2 = _interopRequireDefault(_ap_accordion_body);

	var _ap_accordion_header = __webpack_require__(375);

	var _ap_accordion_header2 = _interopRequireDefault(_ap_accordion_header);

	var _ap_accordion_style = __webpack_require__(376);

	var _ap_accordion_style2 = _interopRequireDefault(_ap_accordion_style);

	var _ap_accordion = __webpack_require__(372);

	var _ap_accordion2 = _interopRequireDefault(_ap_accordion);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApAccordionArrow = _ap_accordion_arrow2.default;
	exports.ApAccordionBody = _ap_accordion_body2.default;
	exports.ApAccordionHeader = _ap_accordion_header2.default;
	exports.ApAccordionStyle = _ap_accordion_style2.default;
	exports.ApAccordion = _ap_accordion2.default;

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for article components.
	 * @class ApArticle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApArticle */
	var ApArticle = _react2.default.createClass({
	  displayName: 'ApArticle',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('article', { className: (0, _classnames2.default)('ap-article', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApArticle;

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApArticle.
	 * @class ApArticleStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApArticleStyle */
	var ApArticleStyle = _react2.default.createClass({
	  displayName: 'ApArticleStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-article': {
	            padding: '16px 0'
	          },
	          '.ap-selectable-article-content': {
	            display: 'none'
	          },
	          '.ap-selectable-article-header': {
	            display: 'flex',
	            alignItems: 'center'
	          },
	          '.ap-selectable-article-header .ap-label': {
	            padding: '4px 8px 4px 0'
	          },
	          '.ap-selectable-article-body': {
	            padding: '8px 0',
	            boxSizing: 'border-box'
	          },
	          '.ap-selectable-article-alt': {
	            display: 'block',
	            textAlign: 'center',
	            opacity: 0.3,
	            padding: '16px 8px'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApArticleStyle$style = ApArticleStyle.styleData(props);

	    var all = _ApArticleStyle$style.all;
	    var small = _ApArticleStyle$style.small;
	    var medium = _ApArticleStyle$style.medium;
	    var large = _ApArticleStyle$style.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApArticleStyle;

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Article with selections
	 * @class ApSelectableArticle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactStyle = __webpack_require__(4);

	var _apemanReactSelect = __webpack_require__(240);

	var _apemanReactLabel = __webpack_require__(148);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	/** @lends ApSelectableArticle */
	var ApSelectableArticle = _react2.default.createClass({
	  displayName: 'ApSelectableArticle',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Label */
	    label: _react.PropTypes.string,
	    /** Article id */
	    id: _react.PropTypes.string,
	    /** Name of select */
	    name: _react.PropTypes.string,
	    /** Value of select */
	    value: _react.PropTypes.string,
	    /** Placeholder of select */
	    placeholder: _react.PropTypes.string,
	    /** Select options */
	    options: _react.PropTypes.object,
	    /** Alt messages */
	    alt: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {
	    Content: _react2.default.createClass({
	      displayName: 'Content',

	      propTypes: {
	        /** Select option value */
	        contentFor: _react.PropTypes.string.isRequired
	      },
	      render: function render() {
	        var s = this;
	        var props = s.props;

	        var className = (0, _classnames2.default)('ap-selectable-article-content', 'ap-selectable-article-content-' + props.contentFor);

	        return _react2.default.createElement('div', { className: className }, props.children);
	      }
	    })
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var label = props.label;
	    var value = props.value;
	    var alt = props.alt;
	    var _props$id = props.id;
	    var id = _props$id === undefined ? 'ap-selectable-article-' + s.uuid : _props$id;

	    var select = Object.keys(_apemanReactSelect.ApSelect.propTypes).reduce(function (select, name) {
	      return Object.assign(select, _defineProperty({}, name, props[name]));
	    }, {});
	    select.id = id + '-select';
	    return _react2.default.createElement('article', { className: (0, _classnames2.default)('ap-selectable-article', props.className),
	      id: id,
	      style: Object.assign({}, props.style) }, _react2.default.createElement(_apemanReactStyle.ApStyle, { className: 'ap-selectable-article-dynamic-style'
	    }, '#' + id + ' .ap-selectable-article-content-' + value + ' { display: block; }'), _react2.default.createElement('div', { className: 'ap-selectable-article-header' }, _react2.default.createElement(_apemanReactLabel.ApLabel, { htmlFor: select.id }, value ? label : null), _react2.default.createElement(_apemanReactSelect.ApSelect, select)), _react2.default.createElement('div', { className: 'ap-selectable-article-body' }, value ? null : _react2.default.createElement('div', { className: 'ap-selectable-article-alt' }, alt), props.children));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.uuid = _uuid2.default.v4();
	  }

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApSelectableArticle;

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for article components.
	 * @module apeman-react-article
	 * @version 3.0.5
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSelectableArticle = exports.ApArticle = exports.ApArticleStyle = undefined;

	var _ap_article_style = __webpack_require__(379);

	var _ap_article_style2 = _interopRequireDefault(_ap_article_style);

	var _ap_article = __webpack_require__(378);

	var _ap_article2 = _interopRequireDefault(_ap_article);

	var _ap_selectable_article = __webpack_require__(380);

	var _ap_selectable_article2 = _interopRequireDefault(_ap_selectable_article);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApArticleStyle = _ap_article_style2.default;
	exports.ApArticle = _ap_article2.default;
	exports.ApSelectableArticle = _ap_selectable_article2.default;

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Aside component.
	 * @class ApAside
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApAside */
	var ApAside = _react2.default.createClass({
	  displayName: 'ApAside',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('aside', { className: (0, _classnames2.default)('ap-aside', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApAside;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApAside.
	 * @class ApAsideStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApAsideStyle */
	var ApAsideStyle = _react2.default.createClass({
	  displayName: 'ApAsideStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-aside': {
	            display: 'block',
	            width: '100%',
	            boxSizing: 'border-box',
	            padding: '4px 8px',
	            border: '1px solid #F0F0F0',
	            background: backgroundColor
	          },
	          '.aside-container': {
	            position: 'relative'
	          }
	        },
	        small: {
	          '.ap-aside': {
	            position: 'absolute',
	            right: 0,
	            top: 0,
	            width: 260,
	            zIndex: 4
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApAsideStyle$styleDa = ApAsideStyle.styleData(props);

	    var all = _ApAsideStyle$styleDa.all;
	    var small = _ApAsideStyle$styleDa.small;
	    var medium = _ApAsideStyle$styleDa.medium;
	    var large = _ApAsideStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApAsideStyle;

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for aside components
	 * @module apeman-react-aside
	 * @version 4.0.0
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApAside = exports.ApAsideStyle = undefined;

	var _ap_aside_style = __webpack_require__(383);

	var _ap_aside_style2 = _interopRequireDefault(_ap_aside_style);

	var _ap_aside = __webpack_require__(382);

	var _ap_aside2 = _interopRequireDefault(_ap_aside);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApAsideStyle = _ap_aside_style2.default;
	exports.ApAside = _ap_aside2.default;

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for body component.
	 * @class ApBody
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApBody */
	var ApBody = _react2.default.createClass({
	  displayName: 'ApBody',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('body', _extends({}, props, {
	      className: (0, _classnames2.default)('ap-body', props.className) }), props.children);
	  }
	});

	exports.default = ApBody;

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApBody.
	 * @class ApBodyStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApBodyStyle */
	var ApBodyStyle = _react2.default.createClass({
	  displayName: 'ApBodyStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    color: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      color: '#555'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var color = config.color;

	      return {
	        all: {
	          '.ap-body': {
	            margin: 0,
	            padding: 0,
	            fontFamily: 'ヒラギノ角ゴ ProN W3, Hiragino Kaku Gothic ProN, メイリオ, Meiryo, sans-serif',
	            color: '' + color
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApBodyStyle$styleDat = ApBodyStyle.styleData(props);

	    var all = _ApBodyStyle$styleDat.all;
	    var small = _ApBodyStyle$styleDat.small;
	    var medium = _ApBodyStyle$styleDat.medium;
	    var large = _ApBodyStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApBodyStyle;

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for body component.
	 * @module apeman-react-body
	 * @version 2.0.12
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApBody = exports.ApBodyStyle = undefined;

	var _ap_body_style = __webpack_require__(386);

	var _ap_body_style2 = _interopRequireDefault(_ap_body_style);

	var _ap_body = __webpack_require__(385);

	var _ap_body2 = _interopRequireDefault(_ap_body);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApBodyStyle = _ap_body_style2.default;
	exports.ApBody = _ap_body2.default;

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Big button component.
	 * @class ApBigButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_button = __webpack_require__(84);

	var _ap_button2 = _interopRequireDefault(_ap_button);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApBigButton */
	var ApBigButton = _react2.default.createClass({
	  displayName: 'ApBigButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    disabled: _react.PropTypes.bool,
	    onTap: _react.PropTypes.func,
	    text: _react.PropTypes.string,
	    size: _react.PropTypes.number
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      disabled: false,
	      onTap: null,
	      text: null,
	      size: 94
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var size = props.size;

	    var style = Object.assign({
	      width: size, height: size
	    }, props.style);
	    return _react2.default.createElement(_ap_button2.default, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-big-button', props.className),
	      wide: false,
	      style: style
	    }), _react2.default.createElement('span', { className: 'ap-big-button-text' }, props.text), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApBigButton;

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Button group component.
	 * @class ApButtonGroup
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApButtonGroup */
	var ApButtonGroup = _react2.default.createClass({
	  displayName: 'ApButtonGroup',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Centered */
	    centered: _react.PropTypes.bool
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-button-group', {
	      'ap-button-group-centered': props.centered
	    }, props.className);
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, props.style)
	    }, props.children);
	  }
	});

	exports.default = ApButtonGroup;

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApButton.
	 * @class ApButtonStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApButtonStyle */
	var ApButtonStyle = _react2.default.createClass({
	  displayName: 'ApButtonStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string,
	    backgroundColor: _react.PropTypes.string,
	    dangerColor: _react.PropTypes.string,
	    disabledColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      dangerColor: _apemanReactStyle.ApStyle.DEFAULT_DANGER_COLOR,
	      disabledColor: '#AAA'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;
	      var dangerColor = config.dangerColor;
	      var disabledColor = config.disabledColor;

	      return {
	        all: {
	          '.ap-button': {
	            display: 'inline-block',
	            boxSizing: 'border-box',
	            padding: '0.5em 1em',
	            position: 'relative',
	            textAlign: 'center',
	            borderRadius: '2px',
	            margin: '4px',
	            color: '' + highlightColor,
	            border: '1px solid ' + highlightColor,
	            background: '' + backgroundColor,
	            WebkitUserSelect: 'none',
	            MozUserSelect: 'none',
	            MsUserSelect: 'none',
	            UserSelect: 'none',
	            whiteSpace: 'nowrap'
	          },
	          '.ap-big-button': {
	            borderRadius: '50%',
	            display: 'inline-flex',
	            alignItems: 'center',
	            justifyContent: 'center',
	            borderWidth: '4px',
	            padding: 0,
	            textAlign: 'center',
	            boxShadow: '2px 2px 4px rgba(0,0,0,0.2)',
	            whiteSpace: 'normal'
	          },
	          '.ap-big-button:active': {
	            boxShadow: 'none'
	          },
	          '.ap-big-button .ap-button-spinner': {
	            borderRadius: '50%'
	          },
	          '.ap-button > *': {
	            pointerEvents: 'none'
	          },
	          '.ap-button:hover': {
	            cursor: 'pointer',
	            opacity: 0.9
	          },
	          '.ap-button:active': {
	            boxShadow: '1px 1px 2px rgba(0,0,0,0.1) inset',
	            opacity: 0.8
	          },
	          '.ap-button.ap-button-disabled,.ap-button.ap-button-disabled:hover,.ap-button.ap-button-disabled:active': {
	            cursor: 'default',
	            boxShadow: 'none',
	            color: '' + disabledColor,
	            borderColor: '' + disabledColor,
	            backgroundColor: '#F0F0F0',
	            pointerEvents: 'none',
	            opacity: 1
	          },
	          '.ap-button.ap-button-spinning,.ap-button.ap-button-spinning:hover,.ap-button.ap-button-spinning:active': {
	            cursor: 'default',
	            boxShadow: 'none',
	            pointerEvents: 'none',
	            opacity: 1
	          },
	          '.ap-button-primary': {
	            color: 'white',
	            background: '' + highlightColor
	          },
	          '.ap-button-primary .ap-button-spinner': {
	            color: '' + highlightColor
	          },
	          '.ap-button-danger': {
	            color: 'white',
	            background: '' + dangerColor
	          },
	          '.ap-button-wide': {
	            width: '100%',
	            boxSizing: 'border-box',
	            maxWidth: '240px',
	            marginLeft: 0,
	            marginRight: 0
	          },
	          '.ap-icon-button': {
	            textAlign: 'center',
	            display: 'inline-block',
	            justifyContent: 'inherit',
	            flexDirection: 'column',
	            alignItems: 'center'
	          },
	          '.ap-icon-button-simple': {
	            border: 'none',
	            background: 'transparent'
	          },
	          '.ap-icon-button-simple:active': {
	            boxShadow: 'none',
	            opacity: '0.8'
	          },
	          '.ap-icon-button-simple .ap-icon-button-icon': {
	            fontSize: 'inherit'
	          },
	          '.ap-icon-button-icon': {
	            margin: '2px 0',
	            display: 'block',
	            fontSize: '2em'
	          },
	          '.ap-icon-button-text': {
	            display: 'block',
	            fontSize: '0.66em',
	            padding: '2px 0'
	          },
	          '.ap-icon-button-row': {
	            display: 'flex',
	            maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	            margin: '0 auto'
	          },
	          '.ap-icon-button-row .ap-button': {
	            display: 'block',
	            width: '100%',
	            whiteSpace: 'normal'
	          },
	          '.ap-cell-button': {
	            textAlign: 'center',
	            background: 'transparent',
	            lineHeight: '1em',
	            fontSize: '14px',
	            margin: 0,
	            borderRadius: 0,
	            boxSizing: 'border-box'
	          },
	          '.ap-cell-button-aligner': {
	            opacity: 0,
	            display: 'inline-block',
	            width: '1px',
	            marginRight: '-1px',
	            boxSizing: 'border-box',
	            padding: '8px 0',
	            verticalAlign: 'middle'
	          },
	          '.ap-cell-button-text': {
	            display: 'inline-block',
	            verticalAlign: 'middle'
	          },
	          '.ap-cell-button-row': {
	            display: 'flex',
	            maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	            width: '100%',
	            margin: '8px auto'
	          },
	          '.ap-cell-button-row .ap-cell-button': {
	            borderRightColor: 'transparent',
	            borderBottomColor: 'transparent',
	            width: '100%'
	          },
	          '.ap-cell-button-row .ap-cell-button:first-child': {
	            borderLeftColor: 'transparent'
	          },
	          '.ap-cell-button-row .ap-button': {
	            display: 'block',
	            width: '100%'
	          },
	          '.ap-next-button,.ap-prev-button': {
	            padding: '0.25em 1em'
	          },
	          '.ap-next-button-icon': {
	            marginLeft: '4px',
	            marginRight: 0
	          },
	          '.ap-prev-button-icon': {
	            marginLeft: 0,
	            marginRight: '4px'
	          },
	          '.ap-button-hidden': {
	            display: 'none !important'
	          },
	          '.ap-button-simple': {
	            border: 'none',
	            background: 'transparent'
	          },
	          '.ap-button-simple:active': {
	            boxShadow: 'none',
	            opacity: '0.8'
	          },
	          '.ap-button-group': {
	            display: 'inline-flex',
	            alignItems: 'center',
	            justifyContent: 'center'
	          },
	          '.ap-button-group-centered': {
	            textAlign: 'center'
	          },
	          '.ap-button-spinner': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            zIndex: 8,
	            background: _apemanReactStyle.ApStyle.COVER_BACKGROUND,
	            color: _apemanReactStyle.ApStyle.COVER_COLOR
	          }
	        },
	        small: {},
	        medium: {},
	        large: {}
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApButtonStyle$styleD = ApButtonStyle.styleData(props);

	    var all = _ApButtonStyle$styleD.all;
	    var small = _ApButtonStyle$styleD.small;
	    var medium = _ApButtonStyle$styleD.medium;
	    var large = _ApButtonStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApButtonStyle;

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Cell button component.
	 * @class ApCellButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_button = __webpack_require__(84);

	var _ap_button2 = _interopRequireDefault(_ap_button);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCellButton */
	var ApCellButton = _react2.default.createClass({
	  displayName: 'ApCellButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    disabled: _react.PropTypes.bool,
	    onTap: _react.PropTypes.func,
	    text: _react.PropTypes.string
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      disabled: false,
	      onTap: null,
	      text: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_ap_button2.default, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-cell-button', props.className),
	      wide: false
	    }), _react2.default.createElement('span', { className: 'ap-cell-button-aligner' }, ' '), _react2.default.createElement('span', { className: 'ap-cell-button-text' }, props.text));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApCellButton;

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Row for Cell buttons.
	 * @class ApCellButtonRow
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCellButtonRow */
	var ApCellButtonRow = _react2.default.createClass({
	  displayName: 'ApCellButtonRow',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-cell-button-row', props.className) }, props.children);
	  }
	});

	exports.default = ApCellButtonRow;

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Icon button component.
	 * @class ApIconButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	var _ap_button = __webpack_require__(84);

	var _ap_button2 = _interopRequireDefault(_ap_button);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApIconButton */
	var ApIconButton = _react2.default.createClass({
	  displayName: 'ApIconButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    icon: _react.PropTypes.string,
	    text: _react.PropTypes.string,
	    simple: _react.PropTypes.bool
	  },

	  statics: {
	    /**
	     * Create a icon button.
	     * @param {string} text - Text
	     * @param {string} icon - Icon class
	     * @param {function} onTap - Tap callback
	     * @param {Object} props - Other props.
	     * @returns {Object} - React element.
	     */
	    createButton: function createButton(text, icon, onTap, props) {
	      return _react2.default.createElement(ApIconButton, _extends({ text: text,
	        icon: icon,
	        onTap: onTap
	      }, props));
	    }
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      icon: null,
	      text: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-icon-button', {
	      'ap-icon-button-simple': !!props.simple
	    }, props.className);
	    var buttonProps = (0, _asobj.clone)(props, {
	      without: ['icon', 'text']
	    });
	    return _react2.default.createElement(_ap_button2.default, _extends({}, buttonProps, {
	      className: className,
	      wide: false
	    }), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-icon-button-icon', props.icon, {}) }), props.text ? _react2.default.createElement('span', { className: 'ap-icon-button-text' }, props.text) : null);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApIconButton;

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Row for Icon buttons.
	 * @class ApIconButtonRow
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApIconButtonRow */
	var ApIconButtonRow = _react2.default.createClass({
	  displayName: 'ApIconButtonRow',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-icon-button-row', props.className) }, props.children);
	  }
	});

	exports.default = ApIconButtonRow;

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Next button component.
	 * @class ApNextButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_button = __webpack_require__(84);

	var _ap_button2 = _interopRequireDefault(_ap_button);

	var _apemanReactIcon = __webpack_require__(20);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApNextButton */
	var ApNextButton = _react2.default.createClass({
	  displayName: 'ApNextButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    disabled: _react.PropTypes.bool,
	    onTap: _react.PropTypes.func,
	    text: _react.PropTypes.string,
	    size: _react.PropTypes.number,
	    icon: _react.PropTypes.string
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      disabled: false,
	      onTap: null,
	      text: null,
	      icon: 'fa fa-caret-right'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_ap_button2.default, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-next-button', props.className),
	      wide: false,
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement('span', { className: 'ap-next-button-text' }, props.text), props.children, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-next-button-icon', props.icon) }));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApNextButton;

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Prev button component.
	 * @class ApPrevButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_button = __webpack_require__(84);

	var _ap_button2 = _interopRequireDefault(_ap_button);

	var _apemanReactIcon = __webpack_require__(20);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApPrevButton */
	var ApPrevButton = _react2.default.createClass({
	  displayName: 'ApPrevButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    disabled: _react.PropTypes.bool,
	    onTap: _react.PropTypes.func,
	    text: _react.PropTypes.string,
	    size: _react.PropTypes.number,
	    icon: _react.PropTypes.string
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      disabled: false,
	      onTap: null,
	      text: null,
	      icon: 'fa fa-caret-left'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_ap_button2.default, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-prev-button', props.className),
	      wide: false,
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-prev-button-icon', props.icon) }), _react2.default.createElement('span', { className: 'ap-prev-button-text' }, props.text), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApPrevButton;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Captcha component.
	 * @class ApCaptcha
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	var _apemanReactImage = __webpack_require__(68);

	var _apemanReactSpinner = __webpack_require__(29);

	var _apemanReactTouchable = __webpack_require__(9);

	var _breact = __webpack_require__(90);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApCaptcha */
	var ApCaptcha = function (_Component) {
	  _inherits(ApCaptcha, _Component);

	  function ApCaptcha(props) {
	    _classCallCheck(this, ApCaptcha);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ApCaptcha).call(this, props));

	    var s = _this;
	    (0, _breact.autobind)(s);
	    return _this;
	  }

	  _createClass(ApCaptcha, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-captcha', props.className),
	        style: Object.assign({}, props.style) }, _react2.default.createElement('div', null, _react2.default.createElement(_apemanReactSpinner.ApSpinner, { className: 'ap-captcha-spinner',
	        enabled: props.spinning,
	        theme: props.spinnerTheme
	      }), _react2.default.createElement(_apemanReactImage.ApImage, { className: 'ap-captcha-image',
	        scale: 'fit',
	        src: props.src,
	        width: props.imageWidth,
	        height: props.imageHeight,
	        onLoad: s.handleImageLoad,
	        onError: s.handleImageError,
	        alt: ''
	      })), _react2.default.createElement('div', null, _react2.default.createElement('a', { className: 'ap-captcha-refresh-button' }, _react2.default.createElement(_apemanReactTouchable.ApTouchable, { onTap: s.handleTap }, _react2.default.createElement('span', null, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-captcha-refresh-icon', props.refreshIcon, {
	          'fa-spin': props.spinning
	        }) }), _react2.default.createElement('span', null, props.refreshText))))));
	    }

	    // ------------------
	    // Custom
	    // ------------------

	  }, {
	    key: 'handleTap',
	    value: function handleTap() {
	      var s = this;
	      var props = s.props;

	      if (props.onRefresh) {
	        props.onRefresh();
	      }
	    }
	  }, {
	    key: 'handleImageLoad',
	    value: function handleImageLoad(ev) {
	      var s = this;
	      var props = s.props;

	      if (props.onImageLoad) {
	        props.onImageLoad(ev);
	      }
	    }
	  }, {
	    key: 'handleImageError',
	    value: function handleImageError(err) {
	      var s = this;
	      var props = s.props;

	      if (props.onImageError) {
	        props.onImageError(err);
	      }
	    }
	  }]);

	  return ApCaptcha;
	}(_react.Component);

	Object.assign(_react.Component, {
	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    /** Image source url */
	    src: _react.PropTypes.string,
	    /** Handler for refresh */
	    onRefresh: _react.PropTypes.func,
	    refreshIcon: _react.PropTypes.string,
	    refreshText: _react.PropTypes.string,
	    imageWidth: _react.PropTypes.number,
	    imageHeight: _react.PropTypes.number,
	    onImageLoad: _react.PropTypes.func,
	    onImageError: _react.PropTypes.func,
	    spinning: _react.PropTypes.bool,
	    spinnerTheme: _react.PropTypes.string
	  },

	  defaultProps: {
	    src: null,
	    onRefresh: null,
	    refreshIcon: 'fa fa-refresh',
	    refreshText: '',
	    imageWidth: 240,
	    imageHeight: 94,
	    onImageLoad: null,
	    onImageError: null,
	    spinning: false,
	    spinnerTheme: _apemanReactSpinner.ApSpinner.DEFAULT_THEME
	  }

	});

	exports.default = ApCaptcha;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApCaptcha.
	 * @class ApCaptchaStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApCaptchaStyle */
	var ApCaptchaStyle = function (_Component) {
	  _inherits(ApCaptchaStyle, _Component);

	  function ApCaptchaStyle() {
	    _classCallCheck(this, ApCaptchaStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApCaptchaStyle).apply(this, arguments));
	  }

	  _createClass(ApCaptchaStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApCaptchaStyle$style = ApCaptchaStyle.styleData(props);

	      var all = _ApCaptchaStyle$style.all;
	      var small = _ApCaptchaStyle$style.small;
	      var medium = _ApCaptchaStyle$style.medium;
	      var large = _ApCaptchaStyle$style.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApCaptchaStyle;
	}(_react.Component);

	Object.assign(_react.Component, {
	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  defaultProps: {
	    style: {}
	  },
	  styleData: function styleData(config) {
	    return {
	      all: {
	        '.ap-captcha': {
	          display: 'block',
	          position: 'relative',
	          background: '#FAFAFA',
	          padding: '8px',
	          boxSizing: 'border-box',
	          textAlign: 'center'
	        },
	        '.ap-captcha-image': {
	          background: 'white',
	          border: '1px solid #E0E0E0'
	        },
	        '.ap-captcha-image .ap-image-spinner': {
	          background: 'transparent'
	        },
	        '.ap-captcha-refresh-button': {
	          display: 'block',
	          textAlign: 'right',
	          cursor: 'pointer',
	          padding: '4px 8px',
	          position: 'absolute',
	          fontSize: '12px',
	          right: 0,
	          bottom: 0,
	          background: 'rgba(255,255,255,0.9)'
	        },
	        '.ap-captcha-refresh-button:active': {
	          opacity: 0.8
	        },
	        '.ap-captcha-spinner': {
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          right: 0,
	          bottom: 0,
	          zIndex: 4,
	          background: 'rgba(255,255,255,0.9)',
	          color: '#CCC'
	        }
	      }
	    };
	  }
	});

	exports.default = ApCaptchaStyle;

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SVG captcha.
	 * DO NOT use svg base captcha in production, since it may be parsable by bots.
	 * You need to convert to bitmap like png beforehand.
	 * @class ApCaptchaSvg
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _randomval = __webpack_require__(924);

	var _randomval2 = _interopRequireDefault(_randomval);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApCaptchaSvg */
	var ApCaptchaSvg = function (_Component) {
	  _inherits(ApCaptchaSvg, _Component);

	  function ApCaptchaSvg() {
	    _classCallCheck(this, ApCaptchaSvg);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApCaptchaSvg).apply(this, arguments));
	  }

	  _createClass(ApCaptchaSvg, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var color = '#555';

	      var width = props.width;
	      var height = props.height;

	      var backgrounds = [0, 1, 2, 3].map(function (val, i, _ref) {
	        var length = _ref.length;

	        var margin = width * 0.2;
	        var rate = (i + 0.5) / length;
	        return s._stripeBlock(rate, color, {
	          key: 'bg-' + i,
	          width: parseInt(width / length + margin * 2),
	          height: parseInt(height + margin * 2),
	          x: parseInt(width * rate - margin),
	          y: parseInt(0 - margin)
	        });
	      });

	      var texts = props.text.split('').map(function (letter, i, letters) {
	        var indices = [0, 1, 2, 3, 4, 5];
	        var real = _randomval2.default.randomInt(0, indices.length - 1);
	        var texts = indices.map(function (j) {
	          var rate = i / letters.length;
	          var key = 'letter-' + i + '-' + j;
	          if (j === real) {
	            return s.renderLetter(letter, rate, {
	              key: key,
	              fill: color
	            });
	          } else {
	            return s.renderLetter(s._dummyLetter(), rate, {
	              key: key,
	              fill: 'rgba(255,255,255,' + 0.01 * _randomval2.default.randomInt(0, 30) + ')'
	            });
	          }
	        });
	        return _react2.default.createElement('g', { key: 'letter-group-' + i }, texts);
	      });
	      return _react2.default.createElement('svg', { version: props.version,
	        width: width,
	        height: height,
	        xmlns: props.xmlns,
	        viewBox: '0 0 ' + width + ' ' + height
	      }, _react2.default.createElement('g', null, backgrounds), _react2.default.createElement('g', null, texts));
	    }

	    // --------------------
	    // Specs
	    // --------------------

	  }, {
	    key: 'renderLetter',
	    value: function renderLetter(letter, rate, textProps) {
	      var s = this;
	      var props = s.props;

	      var padding = 16;

	      var w = props.width - padding * 2;
	      var h = props.height;

	      var moveRange = h / 20;
	      var move = _randomval2.default.randomInt.bind(_randomval2.default, moveRange * -1, moveRange);

	      var fontSize = h * 0.8;
	      var x = padding + w * rate + fontSize / 4;
	      var y = fontSize;
	      var rotateRange = 40;
	      var rotate = _randomval2.default.randomInt(-rotateRange, rotateRange);

	      return _react2.default.createElement('text', _extends({ x: parseInt(x),
	        y: parseInt(y),
	        fontSize: parseInt(fontSize),
	        transform: 'translate(' + move() + ', ' + move() + ') rotate(' + parseInt(rotate) + ', ' + parseInt(x) + ', ' + parseInt(y) + ')'
	      }, textProps), letter);
	    }
	  }, {
	    key: '_dummyLetter',
	    value: function _dummyLetter() {
	      var letters = '1234567890abcdefg';
	      var len = letters.length;
	      return letters[_randomval2.default.randomInt(0, len - 1)];
	    }
	  }, {
	    key: '_stripeBlock',
	    value: function _stripeBlock(rate, color, blockProps) {
	      var s = this;
	      var props = s.props;

	      var rotate = _randomval2.default.randomInt(-90, 90);

	      var lines = [];
	      var lineWidth = 1;
	      var w = blockProps.width;
	      var h = blockProps.height;

	      var left = w * -0.5;
	      var right = w * 1.5;

	      for (var x = left; x < right; x += lineWidth * 6) {
	        lines.push(_react2.default.createElement('line', { x1: parseInt(x),
	          y1: parseInt(0),
	          x2: parseInt(x),
	          y2: parseInt(h),
	          key: 'line-' + x,
	          stroke: color
	        }));
	      }

	      return _react2.default.createElement('svg', blockProps, _react2.default.createElement('g', {
	        transform: 'scale(1.3) rotate(' + parseInt(rotate) + ', ' + parseInt(blockProps.width / 2) + ', ' + parseInt(blockProps.height / 2) + ')' }, lines));
	    }
	  }]);

	  return ApCaptchaSvg;
	}(_react.Component);

	Object.assign(ApCaptchaSvg, {
	  // --------------------
	  // Specs
	  // --------------------

	  propsTypes: {
	    version: _react.PropTypes.string,
	    text: _react.PropTypes.string.isRequired,
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number
	  },

	  defaultProps: {
	    version: '1.1',
	    xmlns: 'http://www.w3.org/2000/svg',
	    text: '',
	    width: 256,
	    height: 92
	  }
	});

	exports.default = ApCaptchaSvg;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for card components
	 * @class ApCard
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactImage = __webpack_require__(68);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCard */
	var ApCard = _react2.default.createClass({
	  displayName: 'ApCard',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Source of image */
	    imgSrc: _react.PropTypes.string,
	    /** Alt text of image */
	    imgAlt: _react.PropTypes.string,
	    /** Scale policy of image */
	    imgScale: _react.PropTypes.string,
	    /** Width of image */
	    imgWidth: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    /** Height of image */
	    imgHeight: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),

	    /** Title text */
	    title: _react.PropTypes.string,
	    /** Content text */
	    text: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      imgScale: 'fit',
	      imgWidth: 128,
	      imgHeight: 'auto'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactTouchable.ApTouchable, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-card', {
	        'ap-card-tappable': !!props.onTap
	      }, props.className),
	      style: Object.assign({}, props.style) }), _react2.default.createElement('div', { className: 'ap-card-column ap-card-column-0' }, s._renderImage(props.imgSrc, props.imgAlt, props.imgScale, props.imgWidth, props.imgHeight)), _react2.default.createElement('div', { className: 'ap-card-column' }, s._renderTitle(props.title), s._renderText(props.text), props.children));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderImage: function _renderImage(src, alt, scale, width, height) {
	    if (!src) {
	      return null;
	    }
	    var props = { src: src, alt: alt, scale: scale, width: width, height: height };
	    return _react2.default.createElement(_apemanReactImage.ApImage, _extends({}, props, {
	      className: 'ap-card-image'
	    }));
	  },
	  _renderTitle: function _renderTitle(title) {
	    if (!title) {
	      return null;
	    }
	    return _react2.default.createElement('h3', { className: 'ap-card-title' }, title);
	  },
	  _renderText: function _renderText(text) {
	    if (!text) {
	      return null;
	    }
	    return _react2.default.createElement('p', { className: 'ap-card-text' }, text);
	  }
	});

	exports.default = ApCard;

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Group components
	 * @class ApCardGroup
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactImage = __webpack_require__(68);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCardGroup */
	var ApCardGroup = _react2.default.createClass({
	  displayName: 'ApCardGroup',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Source of image */
	    imgSrc: _react.PropTypes.string,
	    /** Alt text of image */
	    imgAlt: _react.PropTypes.string,
	    /** Scale policy of image */
	    imgScale: _react.PropTypes.string,
	    /** Width of image */
	    imgWidth: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    /** Height of image */
	    imgHeight: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),

	    /** Title text */
	    title: _react.PropTypes.string,
	    /** Content text */
	    text: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      imgScale: 'fit',
	      imgWidth: 128,
	      imgHeight: 'auto'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', _extends({}, props, {
	      className: (0, _classnames2.default)('ap-card-group', {}),
	      style: Object.assign({}, props.style) }), props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApCardGroup;

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApCard.
	 * @class ApCardStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCardStyle */
	var ApCardStyle = _react2.default.createClass({
	  displayName: 'ApCardStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-card': {
	            display: 'flex',
	            borderRadius: '2px',
	            boxSizing: 'border-box',
	            padding: '4px',
	            boxShadow: '2px 2px 4px rgba(0,0,0,0.33)',
	            backgroundColor: backgroundColor,
	            maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH + 'px',
	            border: '1px solid #D4D4D4',
	            margin: '16px 8px',
	            flexWrap: 'wrap'
	          },
	          '.ap-card-tappable:hover': {
	            cursor: 'pointer'
	          },
	          '.ap-card-tappable:active': {
	            boxShadow: 'none'
	          },
	          '.ap-card-image': {
	            margin: '4px auto',
	            maxWidth: '100%',
	            overflow: 'hidden',
	            boxSizing: 'border-box',
	            padding: '0 4px'
	          },
	          '.ap-card-column': {
	            display: 'block',
	            width: '100%'
	          },
	          '.ap-card-column-0': {
	            flexBasis: 0
	          },
	          '.ap-card-title': {
	            padding: '4px',
	            margin: 0
	          },
	          '.ap-card-text': {
	            padding: '4px',
	            margin: 0
	          },
	          '.ap-card-group': {
	            display: 'flex',
	            flexWrap: 'wrap',
	            justifyContent: 'space-around'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApCardStyle$styleDat = ApCardStyle.styleData(props);

	    var all = _ApCardStyle$styleDat.all;
	    var small = _ApCardStyle$styleDat.small;
	    var medium = _ApCardStyle$styleDat.medium;
	    var large = _ApCardStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApCardStyle;

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for card components
	 * @module apeman-react-card
	 * @version 2.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApCard = exports.ApCardStyle = exports.ApCardGroup = undefined;

	var _ap_card_group = __webpack_require__(401);

	var _ap_card_group2 = _interopRequireDefault(_ap_card_group);

	var _ap_card_style = __webpack_require__(402);

	var _ap_card_style2 = _interopRequireDefault(_ap_card_style);

	var _ap_card = __webpack_require__(400);

	var _ap_card2 = _interopRequireDefault(_ap_card);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApCardGroup = _ap_card_group2.default;
	exports.ApCardStyle = _ap_card_style2.default;
	exports.ApCard = _ap_card2.default;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Catalog component
	 * @class ApCatalog
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCatalog */
	var ApCatalog = _react2.default.createClass({
	    displayName: 'ApCatalog',

	    // --------------------
	    // Specs
	    // --------------------

	    propTypes: {},

	    mixins: [],

	    statics: {},

	    getInitialState: function getInitialState() {
	        return {};
	    },
	    getDefaultProps: function getDefaultProps() {
	        return {};
	    },
	    render: function render() {
	        var s = this;
	        var state = s.state;
	        var props = s.props;

	        return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-catalog', props.className),
	            style: Object.assign({}, props.style) }, _react2.default.createElement('div', { className: 'ap-catalog-inner' }, props.children));
	    }
	});

	exports.default = ApCatalog;

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Catalog item
	 * @class ApCatalogItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCatalogItem */
	var ApCatalogItem = _react2.default.createClass({
	  displayName: 'ApCatalogItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-catalog-item', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApCatalogItem;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Detail of a catalog item
	 * @class ApCatalogItemDetail
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCatalogItemDetail */
	var ApCatalogItemDetail = _react2.default.createClass({
	  displayName: 'ApCatalogItemDetail',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    open: _react.PropTypes.bool,
	    at: _react.PropTypes.oneOf(['TOP', 'CENTER', 'LEFT', 'RIGHT', 'BOTTOM'])
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      open: false,
	      at: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var at = String(props.at || null).toUpperCase();

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-catalog-item-detail', {
	        'ap-catalog-item-detail-open': props.open,
	        'ap-catalog-item-detail-at-left': at === 'LEFT',
	        'ap-catalog-item-detail-at-top': at === 'TOP',
	        'ap-catalog-item-detail-at-right': at === 'RIGHT',
	        'ap-catalog-item-detail-at-bottom': at === 'BOTTOM'
	      }, props.className),
	      style: Object.assign({}, props.style) }, props.open ? props.children : null);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApCatalogItemDetail;

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Summary of a catalog item
	 * @class ApCatalogItemSummary
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCatalogItemSummary */
	var ApCatalogItemSummary = _react2.default.createClass({
	  displayName: 'ApCatalogItemSummary',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-catalog-item-summary', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    return true;
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    var s = this;
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    var s = this;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	  }

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApCatalogItemSummary; // Dummy for doc parser

	exports.default = (0, _apemanReactTouchable.withTouch)(ApCatalogItemSummary);

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApCatalog.
	 * @class ApCatalogStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApCatalogStyle */
	var ApCatalogStyle = _react2.default.createClass({
	  displayName: 'ApCatalogStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      transitionDuration: 500
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;
	      var transitionDuration = config.transitionDuration;

	      return {
	        all: {
	          '.ap-catalog': {
	            display: 'block',
	            margin: '0 auto'
	          },
	          '.ap-catalog-inner': {
	            display: 'flex',
	            flexFlow: 'row wrap',
	            justifyContent: 'flex-start'
	          },
	          '.ap-menu-inner-end': {
	            flex: 'auto',
	            display: 'inline-block',
	            width: '0px',
	            opacity: 0
	          },
	          '.ap-catalog-item': {
	            display: 'block'
	          },
	          '.ap-catalog-item-summary': {
	            padding: '8px 16px',
	            border: '1px solid #AAA',
	            margin: '-1px'
	          },
	          '.ap-catalog-item-summary:hover': {
	            cursor: 'pointer'
	          },
	          '.ap-catalog-item-summary:active': {
	            opacity: '0.8'
	          },
	          '.ap-catalog-item-detail': {
	            display: 'none',
	            position: 'fixed',
	            left: 0,
	            top: 0,
	            width: '100%',
	            height: '100%',
	            zIndex: 8,
	            background: 'white',
	            padding: '16px 32px',
	            boxSizing: 'border-box'
	          },
	          '.ap-catalog-item-detail-at-left': {
	            left: '-100%'
	          },
	          '.ap-catalog-item-detail-at-top': {
	            top: '-100%'
	          },
	          '.ap-catalog-item-detail-at-right': {
	            left: '100%'
	          },
	          '.ap-catalog-item-detail-at-bottom': {
	            top: '100%'
	          },
	          '.ap-catalog-item-detail-open': {
	            display: 'block',
	            transition: 'left ' + transitionDuration + 'ms, top ' + transitionDuration + 'ms'
	          }

	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApCatalogStyle$style = ApCatalogStyle.styleData(props);

	    var all = _ApCatalogStyle$style.all;
	    var small = _ApCatalogStyle$style.small;
	    var medium = _ApCatalogStyle$style.medium;
	    var large = _ApCatalogStyle$style.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApCatalogStyle;

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for catalog components
	 * @module apeman-react-catalog
	 * @version 4.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApCatalog = exports.ApCatalogStyle = exports.ApCatalogItem = exports.ApCatalogItemSummary = exports.ApCatalogItemDetail = undefined;

	var _ap_catalog_item_detail = __webpack_require__(406);

	var _ap_catalog_item_detail2 = _interopRequireDefault(_ap_catalog_item_detail);

	var _ap_catalog_item_summary = __webpack_require__(407);

	var _ap_catalog_item_summary2 = _interopRequireDefault(_ap_catalog_item_summary);

	var _ap_catalog_item = __webpack_require__(405);

	var _ap_catalog_item2 = _interopRequireDefault(_ap_catalog_item);

	var _ap_catalog_style = __webpack_require__(408);

	var _ap_catalog_style2 = _interopRequireDefault(_ap_catalog_style);

	var _ap_catalog = __webpack_require__(404);

	var _ap_catalog2 = _interopRequireDefault(_ap_catalog);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApCatalogItemDetail = _ap_catalog_item_detail2.default;
	exports.ApCatalogItemSummary = _ap_catalog_item_summary2.default;
	exports.ApCatalogItem = _ap_catalog_item2.default;
	exports.ApCatalogStyle = _ap_catalog_style2.default;
	exports.ApCatalog = _ap_catalog2.default;

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for chat components.
	 * @class ApChat
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApChat */
	var ApChat = _react2.default.createClass({
	  displayName: 'ApChat',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-chat', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    return true;
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    var s = this;
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    var s = this;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	  }

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApChat;

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Chat item
	 * @class ApChatItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function formatDate(date) {
	  if (!date) {
	    return '';
	  }
	  return String(date);
	}

	/** @lends ApChatItem */
	var ApChatItem = _react2.default.createClass({
	  displayName: 'ApChatItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Balloon text */
	    text: _react.PropTypes.string,
	    /** Align direction */
	    align: _react.PropTypes.oneOf(['left', 'right']),
	    /** Info texts */
	    info: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.string])
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      text: null,
	      align: 'left',
	      info: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-chat-item', 'ap-chat-item-align-' + props.align, {}, props.className),
	      style: Object.assign({}, props.style) }, s._renderBalloon([].concat(props.text)), s._renderInfo(props.info), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    return true;
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    var s = this;
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    var s = this;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderInfo: function _renderInfo(info) {
	    var s = this;
	    if (!info) {
	      return null;
	    }
	    info = [].concat(info);
	    return _react2.default.createElement('span', { className: 'ap-chat-item-info' }, info.map(function (info) {
	      return _react2.default.createElement('span', { key: info }, info);
	    }));
	  },
	  _renderBalloon: function _renderBalloon(text) {
	    var s = this;
	    if (!text) {
	      return null;
	    }
	    return _react2.default.createElement('span', { className: 'ap-chat-item-balloon' }, _react2.default.createElement('span', { className: 'ap-chat-item-balloon-arrow' }), _react2.default.createElement('span', { className: 'ap-chat-item-balloon-content' }, text));
	  }
	});

	exports.default = ApChatItem;

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApChat.
	 * @class ApChatStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApChatStyle */
	var ApChatStyle = _react2.default.createClass({
	  displayName: 'ApChatStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      var arrowSize = 6;

	      var arrowPosition = arrowSize / 2 * -1 + 1.2;
	      return {
	        all: {
	          '.ap-chat': {},
	          '.ap-chat-item': {
	            display: 'flex',
	            justifyContent: 'flex-start',
	            flexDirection: 'row'
	          },
	          '.ap-chat-item-align-left': {},
	          '.ap-chat-item-align-right': {
	            flexDirection: 'row-reverse'
	          },
	          '.ap-chat-item-balloon': {
	            display: 'block',
	            maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	            fontSize: 'smaller',
	            margin: '8px 0',
	            position: 'relative'
	          },
	          '.ap-chat-item-balloon-content': {
	            position: 'relative',
	            zIndex: 2,
	            background: backgroundColor,
	            borderRadius: '16px',
	            padding: '4px 8px',
	            display: 'block',
	            width: '100%',
	            boxSizing: 'border-box'
	          },
	          '.ap-chat-item-balloon-arrow': {
	            position: 'absolute',
	            boxSizing: 'border-box',
	            width: arrowSize,
	            height: arrowSize,
	            overflow: 'hidden',
	            display: 'inline-block',
	            transform: 'skewY(30deg)',
	            transformOrigin: '50% 50%',
	            borderRadius: '0 0 0 100%',
	            top: 4,
	            background: backgroundColor,
	            left: arrowPosition,
	            zIndex: 2
	          },
	          '.ap-chat-item-align-right .ap-chat-item-balloon-arrow': {
	            borderRadius: '0 0 100% 0',
	            right: arrowPosition,
	            transform: 'skewY(-30deg)',
	            left: 'auto'
	          },
	          '.ap-chat-item-info': {
	            fontSize: 'x-small',
	            boxSizing: 'border-box',
	            padding: '8px 4px',
	            opacity: 0.5,
	            display: 'inline-flex',
	            flexDirection: 'column',
	            justifyContent: 'flex-start'
	          },
	          '.ap-chat-item-align-right .ap-chat-item-info': {
	            alignItems: 'flex-end'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApChatStyle$styleDat = ApChatStyle.styleData(props);

	    var all = _ApChatStyle$styleDat.all;
	    var small = _ApChatStyle$styleDat.small;
	    var medium = _ApChatStyle$styleDat.medium;
	    var large = _ApChatStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApChatStyle;

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for chat components.
	 * @module apeman-react-chat
	 * @version 2.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApChat = exports.ApChatStyle = exports.ApChatItem = undefined;

	var _ap_chat_item = __webpack_require__(411);

	var _ap_chat_item2 = _interopRequireDefault(_ap_chat_item);

	var _ap_chat_style = __webpack_require__(412);

	var _ap_chat_style2 = _interopRequireDefault(_ap_chat_style);

	var _ap_chat = __webpack_require__(410);

	var _ap_chat2 = _interopRequireDefault(_ap_chat);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApChatItem = _ap_chat_item2.default;
	exports.ApChatStyle = _ap_chat_style2.default;
	exports.ApChat = _ap_chat2.default;

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Checkbox component.
	 * @class ApCheckbox
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _ap_checkbox = __webpack_require__(223);

	var _ap_checkbox2 = _interopRequireDefault(_ap_checkbox);

	var _breact = __webpack_require__(90);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApCheckboxGroup */
	var ApCheckboxGroup = function (_Component) {
	  _inherits(ApCheckboxGroup, _Component);

	  function ApCheckboxGroup(props) {
	    _classCallCheck(this, ApCheckboxGroup);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ApCheckboxGroup).call(this, props));

	    var s = _this;
	    s.uuid = _uuid2.default.v4();
	    (0, _breact.autobind)(s);
	    return _this;
	  }

	  _createClass(ApCheckboxGroup, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;
	      var _props$prefix = props.prefix;
	      var prefix = _props$prefix === undefined ? s.uuid : _props$prefix;
	      var name = props.name;
	      var options = props.options;
	      var checked = props.checked;
	      var icon = props.icon;
	      var checkedIcon = props.checkedIcon;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-checkbox-group', props.className) }, Object.keys(options || {}).map(function (value) {
	        return _react2.default.createElement(_ap_checkbox2.default, { key: value,
	          name: name,
	          value: value,
	          id: prefix + '-' + value,
	          checked: !!checked[value],
	          title: options[value],
	          icon: icon,
	          checkedIcon: checkedIcon,
	          onChange: s.handleChange
	        });
	      }));
	    }

	    // --------------------
	    // Handle
	    // --------------------

	  }, {
	    key: 'handleChange',
	    value: function handleChange(e) {
	      var s = this;
	      var props = s.props;

	      if (props.onChange) {
	        props.onChange(e);
	      }
	    }
	  }]);

	  return ApCheckboxGroup;
	}(_react.Component);

	Object.assign(ApCheckboxGroup, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Document id prefix */
	    prefix: _react.PropTypes.string,
	    /** Name of checkbox input */
	    name: _react.PropTypes.string.isRequired,
	    /** Value and label titles */
	    options: _react.PropTypes.object.isRequired,
	    /** Checked state for each values */
	    checked: _react.PropTypes.object.isRequired,
	    /** Handle for change event */
	    onChange: _react.PropTypes.func,
	    /** Icon class name for normal state */
	    icon: _react.PropTypes.string,
	    /** Icon class name for checked state */
	    checkedIcon: _react.PropTypes.string
	  },

	  defaultProps: {
	    prefix: null,
	    name: null,
	    title: '',
	    checked: {},
	    options: {},
	    onChange: null,
	    icon: _ap_checkbox2.default.DEFAULT_ICON,
	    checkedIcon: _ap_checkbox2.default.DEFAULT_CHECKED_ICON
	  }

	});

	exports.default = ApCheckboxGroup;

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApCheckbox.
	 * @class ApCheckboxStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApCheckboxStyle */
	var ApCheckboxStyle = function (_Component) {
	  _inherits(ApCheckboxStyle, _Component);

	  function ApCheckboxStyle() {
	    _classCallCheck(this, ApCheckboxStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApCheckboxStyle).apply(this, arguments));
	  }

	  _createClass(ApCheckboxStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApCheckboxStyle$styl = ApCheckboxStyle.styleData(props);

	      var all = _ApCheckboxStyle$styl.all;
	      var small = _ApCheckboxStyle$styl.small;
	      var medium = _ApCheckboxStyle$styl.medium;
	      var large = _ApCheckboxStyle$styl.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApCheckboxStyle;
	}(_react.Component);

	Object.assign(ApCheckboxStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },

	  defaultProps: {
	    style: {},
	    highlightColor: '#38E'
	  },
	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;

	    return {
	      all: {
	        '.ap-checkbox': {
	          display: 'inline-block',
	          padding: '0 4px',
	          cursor: 'pointer',
	          position: 'relative'
	        },
	        '.ap-checkbox:hover': {
	          opacity: 0.9
	        },
	        '.ap-checkbox:active': {
	          opacity: 0.75
	        },
	        '.ap-checkbox-input': {
	          display: 'inline-block',
	          padding: '0 2px',
	          position: 'relative',
	          top: '-2px',
	          opacity: 0,
	          zIndex: 8
	        },
	        '.ap-checkbox-title': {},
	        '.ap-checkbox-icon': {
	          position: 'absolute',
	          left: 2,
	          top: 0,
	          bottom: 0,
	          display: 'inline-flex',
	          justifyContent: 'center',
	          alignItems: 'center'
	        },
	        '.ap-checkbox:hover .ap-checkbox-icon': {
	          color: '' + highlightColor
	        },
	        '.ap-checkbox:active .ap-checkbox-icon': {
	          opacity: 0.5
	        },
	        '.ap-checkbox-icon-checked': {
	          color: '' + highlightColor
	        }
	      },
	      small: {},
	      medium: {},
	      large: {}
	    };
	  }
	});

	exports.default = ApCheckboxStyle;

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for container component.
	 * @class ApContainer
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApContainer */
	var ApContainer = _react2.default.createClass({
	  displayName: 'ApContainer',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Has relative position */
	    relative: _react.PropTypes.bool,
	    /** With centered style */
	    centered: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      relative: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-container', {
	        'ap-container-relative': !!props.relative,
	        'ap-container-centered': !!props.centered
	      }, props.className) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApContainer;

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApContainer.
	 * @class ApContainerStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApContainerStyle */
	var ApContainerStyle = _react2.default.createClass({
	  displayName: 'ApContainerStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    width: _react.PropTypes.number
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      width: _apemanReactStyle.ApStyle.CONTAINER_WIDTH
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var width = config.width;

	      return {
	        all: {
	          '.ap-container': {
	            maxWidth: width + 'px',
	            margin: '0 auto',
	            display: 'block',
	            padding: 0
	          },
	          '.ap-container-relative': {
	            position: 'relative'
	          },
	          '.ap-container-centered': {
	            margin: '0 auto',
	            textAlign: 'center'
	          }
	        },
	        small: {},
	        medium: {},
	        large: {}
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApContainerStyle$sty = ApContainerStyle.styleData(props);

	    var all = _ApContainerStyle$sty.all;
	    var small = _ApContainerStyle$sty.small;
	    var medium = _ApContainerStyle$sty.medium;
	    var large = _ApContainerStyle$sty.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApContainerStyle;

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for developer tools.
	 * @class ApDevtool
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _stringcase = __webpack_require__(97);

	var _stringcase2 = _interopRequireDefault(_stringcase);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactButton = __webpack_require__(17);

	var _asenv = __webpack_require__(261);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _apemanReactDraggable = __webpack_require__(113);

	var _bwindow = __webpack_require__(104);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApDevtool */
	var ApDevtool = _react2.default.createClass({
	  displayName: 'ApDevtool',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Version string of the application */
	    version: _react.PropTypes.string,
	    /** Information object */
	    info: _react.PropTypes.object,
	    /** Action handlers */
	    actions: _react.PropTypes.object
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    var isClientSide = !!(0, _bwindow.get)('window');
	    return {
	      enabled: isClientSide && !(0, _asenv.isProduction)(),
	      open: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      version: null,
	      info: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var layouts = s.layouts;

	    if (!state.enabled) {
	      return null;
	    }

	    return _react2.default.createElement(_apemanReactDraggable.ApDraggable, { className: (0, _classnames2.default)('ap-devtool', {
	        'ap-devtool-open': state.open,
	        'ap-devtool-closed': !state.open
	      }, props.className),
	      onTap: s.handleTap,
	      style: Object.assign(layouts.draggable, props.style)
	    }, _react2.default.createElement('div', { className: 'ap-devtool-title' }, 'Devtool'), _react2.default.createElement('div', { className: 'ap-devtool-display' }, _react2.default.createElement('div', { className: 'ap-devtool-closed-handle' }), _react2.default.createElement('div', { className: 'ap-devtool-inner', ref: function ref(inner) {
	        return s.registerInner(inner);
	      } }, s._renderCaption(window.location.origin, (0, _asenv.getEnv)()), s._renderInfo(props.info || {}), s._renderActions(props.actions || {}), _react2.default.createElement('div', null, props.children))));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // For ApLayoutMixin
	  // ------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      draggable: {
	        width: 'auto',
	        height: 'auto'
	      }
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var state = s.state;

	    if (!state.enabled) {
	      return {};
	    }
	    var inner = s.inner;

	    var PADDING = 8;
	    var rect = inner.getBoundingClientRect();
	    return {
	      draggable: {
	        width: rect.width + PADDING,
	        height: rect.height + PADDING
	      }
	    };
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  registerInner: function registerInner(inner) {
	    var s = this;
	    s.inner = inner;
	  },
	  handleTap: function handleTap(e) {
	    var s = this;
	    var byActionButton = e.target && e.target.classList.contains('ap-devtool-action-button');
	    if (byActionButton) {
	      return;
	    }
	    s.setState({
	      open: !s.state.open
	    });
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _renderCaption: function _renderCaption(host, NODE_ENV) {
	    var s = this;
	    var props = s.props;

	    var version = props.version;
	    if (version && !/^v/.test(version)) {
	      version = 'v' + version;
	    }
	    return _react2.default.createElement('div', { className: 'ap-devtool-caption' }, _react2.default.createElement('div', null, _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-devtool-env-label', 'ap-devtool-env-label-' + _stringcase2.default.spinalcase(NODE_ENV)) }, NODE_ENV), _react2.default.createElement('span', { className: '' }, ' '), _react2.default.createElement('span', { className: 'ap-devtool-version-label' }, '(', version, ')')), _react2.default.createElement('div', null, _react2.default.createElement('span', null, host)));
	  },
	  _renderInfo: function _renderInfo(info) {
	    var s = this;
	    var rows = Object.keys(info).filter(function (name) {
	      return info[name] !== null;
	    }).filter(function (name) {
	      return info[name] !== undefined;
	    }).map(function (name) {
	      return _react2.default.createElement('tr', { className: 'ap-devtool-info-row',
	        key: 'ap-devtool-info-row-' + name }, _react2.default.createElement('th', { className: 'ap-devtool-cell' }, name), _react2.default.createElement('td', { className: (0, _classnames2.default)('ap-devtool-cell', {
	          'ap-devtool-numeric': typeof info[name] === 'number'
	        }) }, info[name]));
	    });
	    if (!rows.length) {
	      return null;
	    }
	    return _react2.default.createElement('table', { className: 'ap-devtool-info-table' }, _react2.default.createElement('tbody', null, rows));
	  },
	  _renderActions: function _renderActions(actions) {
	    var names = Object.keys(actions || {});
	    if (!names.length) {
	      return null;
	    }
	    return _react2.default.createElement('div', { className: 'ap-devtool-actions' }, names.map(function (name) {
	      return _react2.default.createElement(_apemanReactButton.ApButton, { className: 'ap-devtool-action-button',
	        onTap: actions[name],
	        key: name }, name);
	    }));
	  }
	});

	exports.default = ApDevtool;

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApDevtool.
	 * @class ApDevtoolStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApDevtoolStyle */
	var ApDevtoolStyle = _react2.default.createClass({
	  displayName: 'ApDevtoolStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      baseColor: 'rgba(0,0,0,0.8)'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var baseColor = config.baseColor;

	      var textColor = '#AAA';
	      var duration = '400ms';
	      var shadowColor = 'rgba(0,0,0,0.33)';
	      var closeSize = 36;
	      var closeMargin = 16;
	      return {
	        all: {
	          '.ap-devtool': {
	            display: 'block',
	            boxShadow: '4px 4px 8px 4px ' + shadowColor,
	            color: '' + textColor,
	            position: 'absolute',
	            fontSize: '12px',
	            right: '84px',
	            bottom: '64px',
	            zIndex: 9999,
	            cursor: 'pointer',
	            boxSizing: 'border-box',
	            background: 'transparent',
	            border: 'none',
	            transition: 'width ' + duration + ', height ' + duration,
	            overflow: 'visible'
	          },
	          '.ap-devtool-title': {
	            display: 'inline-block',
	            borderRadius: '2px',
	            position: 'absolute',
	            color: '#888',
	            textShadow: '2px 2px 4px rgba(0,0,0,0.5)',
	            left: 0,
	            fontSize: '9px',
	            top: '-14px',
	            right: 0,
	            textAlign: 'center'
	          },
	          '.ap-devtool-display': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            backgroundColor: '' + baseColor,
	            border: '1px solid rgba(0,0,0,0.8)',
	            overflow: 'hidden'
	          },
	          '.ap-devtool:hover': {
	            opacity: '0.98'
	          },
	          '.ap-devtool:active': {
	            opacity: '1'
	          },
	          '.ap-devtool-closed': {
	            height: closeSize + 'px !important',
	            width: closeSize + 'px !important',
	            borderRadius: closeSize / 2 + 'px !important'
	          },
	          '.ap-devtool-closed .ap-devtool-display': {
	            borderRadius: closeSize / 2 + 'px !important'
	          },
	          '.ap-devtool-closed-handle': {
	            position: 'absolute',
	            left: -closeMargin,
	            right: -closeMargin,
	            top: -closeMargin,
	            bottom: -closeMargin,
	            display: 'none'
	          },
	          '.ap-devtool-closed .ap-devtool-closed-handle': {
	            display: 'block'
	          },
	          '.ap-devtool-open': {},
	          '.ap-devtool-inner': {
	            minWidth: '192px',
	            minHeight: '40px',
	            padding: '4px 8px'
	          },
	          '.ap-devtool-caption': {
	            color: '#CCC'
	          },
	          '.ap-devtool-env-label': {
	            display: 'inline-block'
	          },
	          '.ap-devtool-env-label-undefined': {
	            color: '#FAA'
	          },
	          '.ap-devtool-env-label-development': {
	            color: '#AAF'
	          },
	          '.ap-devtool-env-label-test': {
	            color: '#FFA'
	          },
	          '.ap-devtool-cell': {
	            padding: '2px 4px',
	            border: '1px solid #555'
	          },
	          'th.ap-devtool-cell': {
	            textAlign: 'left',
	            fontWeight: 'normal',
	            width: '1px'
	          },
	          '.ap-devtool-version-label': {
	            display: 'inline-block'
	          },
	          '.ap-devtool-at-label': {
	            display: 'inline-block',
	            margin: '0 1px'

	          },
	          'td.ap-devtool-cell': {
	            textAlign: 'right',
	            color: '#CCC'
	          },
	          '.ap-devtool-cell:first-child': {
	            borderLeft: 'none'
	          },
	          '.ap-devtool-cell:last-child': {
	            borderRight: 'none'
	          },
	          '.ap-devtool-numeric': {
	            textAlign: 'right'
	          },
	          '.ap-devtool-info-table': {
	            borderCollapse: 'collapse',
	            color: '#888',
	            fontSize: '10px',
	            width: '100%',
	            padding: '4px',
	            margin: '4px 0',
	            boxSizing: 'border-box'
	          },
	          '.ap-devtool-info-row:first-child .ap-devtool-cell': {
	            borderTop: 'none'
	          },
	          '.ap-devtool-info-row:last-child .ap-devtool-cell': {
	            borderBottom: 'none'
	          },
	          '.ap-devtool-actions': {
	            display: 'flex',
	            flexWrap: 'wrap',
	            margin: '4px 0',
	            padding: '4px 0'
	          },
	          '.ap-devtool-action-button': {
	            color: 'white',
	            borderColor: 'white',
	            borderRadius: '50%',
	            width: '36px',
	            height: '36px',
	            display: 'inline-flex',
	            justifyContent: 'center',
	            alignItems: 'center',
	            fontSize: '7px',
	            textAlign: 'center',
	            margin: '2px',
	            backgroundColor: 'transparent'
	          },
	          '.ap-devtool-action-button:hover': {
	            backgroundColor: 'rgba(255,255,255,0.1)'
	          },
	          '.ap-devtool-action-button:active': {
	            backgroundColor: 'rgba(255,255,255,0.3)'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApDevtoolStyle$style = ApDevtoolStyle.styleData(props);

	    var all = _ApDevtoolStyle$style.all;
	    var small = _ApDevtoolStyle$style.small;
	    var medium = _ApDevtoolStyle$style.medium;
	    var large = _ApDevtoolStyle$style.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApDevtoolStyle;

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for developer tools.
	 * @module apeman-react-devtool
	 * @version 3.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApDevtool = exports.ApDevtoolStyle = undefined;

	var _ap_devtool_style = __webpack_require__(419);

	var _ap_devtool_style2 = _interopRequireDefault(_ap_devtool_style);

	var _ap_devtool = __webpack_require__(418);

	var _ap_devtool2 = _interopRequireDefault(_ap_devtool);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApDevtoolStyle = _ap_devtool_style2.default;
	exports.ApDevtool = _ap_devtool2.default;

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Dialog to confirm.
	 * @class ApConfirmDialog
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactCheckbox = __webpack_require__(224);

	var _apemanReactButton = __webpack_require__(17);

	var _ap_dialog = __webpack_require__(144);

	var _ap_dialog2 = _interopRequireDefault(_ap_dialog);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** lends ApConfirmDialog */
	var ApConfirmDialog = _react2.default.createClass({
	  displayName: 'ApConfirmDialog',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    present: _react.PropTypes.bool.isRequired,
	    /** Handler for submit event */
	    onSubmit: _react.PropTypes.func,
	    /** Handler for cancel event */
	    onCancel: _react.PropTypes.func,
	    /** Dialog title */
	    title: _react.PropTypes.string,
	    /** Dialog message */
	    message: _react.PropTypes.string,
	    /** Id of checkbox */
	    checkboxId: _react.PropTypes.string,
	    /** Name of checkbox */
	    checkboxName: _react.PropTypes.string,
	    /** Label text of checkbox */
	    checkboxText: _react.PropTypes.string,
	    /** Errot text when not checked */
	    errorText: _react.PropTypes.string,
	    /** Submit button text */
	    submitText: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      checked: false,
	      errored: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    var id = _uuid2.default.v4().replace(/\-/g, '');
	    return {
	      onSubmit: null,
	      onCancel: null,
	      checkboxId: 'ap-confirm-dialog-checkbox-' + id,
	      checkboxName: 'ap-confirm-check-' + id,
	      checkboxText: null,
	      submitText: 'submit',
	      errorText: 'Needs check before submit.',
	      message: 'Once destroyed, there is no going back. Please be certain.'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    if (!props.present) {
	      return null;
	    }
	    return _react2.default.createElement(_ap_dialog2.default, _extends({ className: (0, _classnames2.default)('ap-confirm-dialog', props.className),
	      style: Object.assign({}, props.style),
	      onClose: s.handleCancel
	    }, props), _react2.default.createElement('p', { className: 'ap-confirm-dialog-message' }, props.message), _react2.default.createElement('div', null, props.children), _react2.default.createElement('div', { className: 'ap-confirm-dialog-control' }, s.renderError(state.errored), s.renderCheckbox(state.checked), s.renderSubmitButton(state.checked)));
	  },
	  toggleCheckbox: function toggleCheckbox() {
	    var s = this;
	    var state = s.state;
	    s.setState({
	      checked: !state.checked,
	      errored: false
	    });
	  },
	  handleSubmit: function handleSubmit(e) {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    if (!state.checked) {
	      s.setState({
	        errored: true
	      });
	      return;
	    }
	    s.setState({
	      errored: false
	    });
	    if (props.onSubmit) {
	      props.onSubmit(e);
	    }
	  },
	  handleCancel: function handleCancel(e) {
	    var s = this;
	    var props = s.props;

	    s.setState({ errored: false });
	    if (props.onCancel) {
	      props.onCancel(e);
	    }
	  },

	  // ------------------
	  // Private
	  // ------------------
	  renderError: function renderError(errored) {
	    var s = this;
	    var props = s.props;

	    if (!errored) {
	      return null;
	    }
	    return _react2.default.createElement('div', { className: 'ap-confirm-dialog-err' }, _react2.default.createElement('span', null, props.errorText));
	  },
	  renderCheckbox: function renderCheckbox(checked) {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', null, _react2.default.createElement(_apemanReactCheckbox.ApCheckbox, { className: 'ap-confirm-dialog-checkbox',
	      checked: checked,
	      name: props.checkboxName,
	      id: props.checkboxId,
	      title: props.checkboxText,
	      onChange: s.toggleCheckbox,
	      value: 'YES'

	    }));
	  },
	  renderSubmitButton: function renderSubmitButton(checked) {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactButton.ApButton, { onTap: s.handleSubmit,
	      disabled: false,
	      primary: true,
	      className: (0, _classnames2.default)('ap-confirm-dialog-button', {
	        'ap-confirm-dialog-button-disabled': !checked
	      }) }, _react2.default.createElement('span', { className: 'ap-confirm-dialog-button-text' }, props.submitText));
	  }
	});

	exports.default = ApConfirmDialog;

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApConfirmDialog.
	 * @class ApConfirmDialogStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApConfirmDialogStyle */
	var ApConfirmDialogStyle = function (_Component) {
	  _inherits(ApConfirmDialogStyle, _Component);

	  function ApConfirmDialogStyle() {
	    _classCallCheck(this, ApConfirmDialogStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApConfirmDialogStyle).apply(this, arguments));
	  }

	  _createClass(ApConfirmDialogStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApConfirmDialogStyle = ApConfirmDialogStyle.styleData(props);

	      var all = _ApConfirmDialogStyle.all;
	      var small = _ApConfirmDialogStyle.small;
	      var medium = _ApConfirmDialogStyle.medium;
	      var large = _ApConfirmDialogStyle.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApConfirmDialogStyle;
	}(_react.Component);

	Object.assign(ApConfirmDialogStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    buttonHeight: _react.PropTypes.number,
	    highlightColor: _react.PropTypes.string
	  },

	  defaultProps: {
	    style: {},
	    buttonHeight: 32,
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    errorColor: _apemanReactStyle.ApStyle.ERROR_COLOR
	  },
	  styleData: function styleData(config) {
	    var buttonHeight = config.buttonHeight;
	    var highlightColor = config.highlightColor;
	    var errorColor = config.errorColor;

	    var checkboxHeight = 32;
	    return {
	      all: {
	        '.ap-confirm-dialog .ap-dialog-body': {
	          paddingBottom: buttonHeight + 8 + 'px',
	          textAlign: 'center'
	        },
	        '.ap-confirm-dialog .ap-dialog-close-button-icon': {},
	        '.ap-confirm-dialog-control': {
	          display: 'block',
	          textAlign: 'center',
	          position: 'relative',
	          left: 0,
	          right: 0,
	          bottom: 0,
	          backgroundColor: 'rgba(255,255,255,0.9)',
	          padding: '16px 0'
	        },
	        '.ap-confirm-dialog-button': {
	          display: 'inline-block',
	          width: '80%',
	          textAlign: 'center',
	          border: '1px solid #EEE',
	          margin: '0 auto',
	          background: '' + highlightColor,
	          color: 'white',
	          boxSizing: 'border-box',
	          maxWidth: '320px'
	        },
	        '.ap-confirm-dialog-button-disabled, .ap-confirm-dialog-button-disabled:hover, .ap-confirm-dialog-button-disabled:active': {
	          cursor: 'default',
	          boxShadow: 'none',
	          color: '#888',
	          borderColor: '#888',
	          backgroundColor: '#F0F0F0'
	        },
	        '.ap-confirm-dialog-checkbox': {
	          margin: '8px auto',
	          lineHeight: checkboxHeight + 'px',
	          textAlign: 'left'
	        },
	        '.ap-confirm-dialog-checkbox i:before': {
	          lineHeight: checkboxHeight + 'px'
	        },
	        '.ap-confirm-dialog-message': {
	          fontSize: 'smaller',
	          padding: '16px 0'
	        },
	        '.ap-confirm-dialog-err': {
	          fontSize: 'smaller',
	          textAlign: 'center',
	          color: '' + errorColor,
	          fontStyle: 'italic'
	        }
	      },
	      small: {},
	      medium: {},
	      large: {}
	    };
	  }
	});

	exports.default = ApConfirmDialogStyle;

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApDialog.
	 * @class ApDialogStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApDialogStyle */
	var ApDialogStyle = function (_Component) {
	  _inherits(ApDialogStyle, _Component);

	  function ApDialogStyle() {
	    _classCallCheck(this, ApDialogStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDialogStyle).apply(this, arguments));
	  }

	  _createClass(ApDialogStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApDialogStyle$styleD = ApDialogStyle.styleData(props);

	      var all = _ApDialogStyle$styleD.all;
	      var small = _ApDialogStyle$styleD.small;
	      var medium = _ApDialogStyle$styleD.medium;
	      var large = _ApDialogStyle$styleD.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApDialogStyle;
	}(_react.Component);

	Object.assign(ApDialogStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    headerHeight: _react.PropTypes.number
	  },

	  defaultProps: {
	    style: {},
	    headerHeight: 44
	  },
	  styleData: function styleData(config) {
	    var CONTENT_WIDTH = _apemanReactStyle.ApStyle.CONTENT_WIDTH;
	    var headerHeight = config.headerHeight;
	    var backgroundColor = config.backgroundColor;

	    return {
	      all: {
	        '.ap-dialog': {
	          display: 'none',
	          backgroundColor: 'transparent',
	          position: 'fixed',
	          left: 0,
	          right: 0,
	          bottom: 0,
	          top: 0,
	          zIndex: 99
	        },
	        '.ap-dialog-back': {
	          backgroundColor: 'rgba(0,0,0,0.33)',
	          position: 'absolute',
	          left: 0,
	          right: 0,
	          bottom: 0,
	          top: 0,
	          zIndex: 1
	        },
	        '.ap-dialog-back-inner': {
	          width: '100%',
	          height: '100%',
	          boxSizing: 'border-box',
	          display: 'block'
	        },
	        '.ap-dialog-present': {
	          display: 'block'
	        },
	        '.ap-dialog-inner': {
	          height: '100%',
	          width: '100%',
	          boxSizing: 'border-box',
	          position: 'relative',
	          padding: '36px 24px',
	          zIndex: 4,
	          justifyContent: 'center',
	          flexDirection: 'column'
	        },
	        '.ap-dialog-content': {
	          overflow: 'auto',
	          zIndex: 8,
	          margin: '0 auto',
	          height: 'auto',
	          backgroundColor: '#FFF',
	          border: '1px solid #DDD',
	          borderRadius: '8px',
	          minHeight: '240px',
	          maxWidth: CONTENT_WIDTH,
	          width: '100%',
	          boxSizing: 'border-box',
	          position: 'relative',
	          boxShadow: '2px 2px 2px rgba(0,0,0,0.3)'
	        },
	        '.ap-dialog-title': {
	          lineHeight: headerHeight + 'px',
	          margin: 0,
	          padding: 0,
	          fontWeight: 'normal'
	        },
	        '.ap-dialog-close-button': {
	          position: 'absolute',
	          top: 0,
	          right: 0,
	          padding: '0 16px',
	          fontSize: '16px',
	          lineHeight: headerHeight + 'px',
	          display: 'inline-block',
	          cursor: 'pointer',
	          zIndex: 44
	        },
	        '.ap-dialog-close-button:hover': {
	          opacity: 0.9
	        },
	        '.ap-dialog-close-button:active': {
	          opacity: 0.6
	        },
	        '.ap-dialog-close-button-icon': {
	          lineHeight: headerHeight + 'px'
	        },
	        '.ap-dialog-header': {
	          display: 'block',
	          position: 'absolute',
	          zIndex: 2,
	          textAlign: 'center',
	          top: 0,
	          left: 0,
	          right: 0,
	          height: headerHeight + 'px',
	          lineHeight: headerHeight + 'px',
	          boxSizing: 'border-box',
	          borderBottom: '1px solid #F5F5F5',
	          backgroundColor: 'rgba(255,255,255,0.9)'
	        },
	        '.ap-dialog-body': {
	          padding: headerHeight + 8 + 'px 16px 8px',
	          boxSizing: 'border-box',
	          maxHeight: '100%',
	          height: 'auto',
	          width: '100%',
	          overflow: 'auto'
	        },
	        '.ap-dialog-fix': {
	          overflow: 'hidden !important'
	        },
	        '.ap-dialog-spinner': {
	          position: 'absolute',
	          background: '' + _apemanReactStyle.ApStyle.COVER_BACKGROUND,
	          left: 0,
	          top: 0,
	          right: 0,
	          bottom: 0,
	          zIndex: 99
	        }
	      },
	      small: {},
	      medium: {},
	      large: {}
	    };
	  }
	});

	exports.default = ApDialogStyle;

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApYesnoDialog.
	 * @class ApYesnoDialogStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApYesnoDialogStyle */
	var ApYesnoDialogStyle = function (_Component) {
	  _inherits(ApYesnoDialogStyle, _Component);

	  function ApYesnoDialogStyle() {
	    _classCallCheck(this, ApYesnoDialogStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApYesnoDialogStyle).apply(this, arguments));
	  }

	  _createClass(ApYesnoDialogStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApYesnoDialogStyle$s = ApYesnoDialogStyle.styleData(props);

	      var all = _ApYesnoDialogStyle$s.all;
	      var small = _ApYesnoDialogStyle$s.small;
	      var medium = _ApYesnoDialogStyle$s.medium;
	      var large = _ApYesnoDialogStyle$s.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApYesnoDialogStyle;
	}(_react.Component);

	Object.assign(ApYesnoDialogStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    buttonHeight: _react.PropTypes.number,
	    highlightColor: _react.PropTypes.string
	  },
	  defaultProps: {
	    style: {},
	    buttonHeight: 40,
	    borderColor: '#D0D0D0',
	    highlightColor: '#38E'
	  },
	  styleData: function styleData(config) {
	    var buttonHeight = config.buttonHeight;
	    var borderColor = config.borderColor;
	    var highlightColor = config.highlightColor;

	    return {
	      all: {
	        '.ap-yesno-dialog .ap-dialog-body': {
	          paddingBottom: buttonHeight + 8 + 'px'
	        },
	        '.ap-yesno-dialog .ap-dialog-close-button-icon': {
	          display: 'none'
	        },
	        '.ap-yesno-dialog-control': {
	          display: 'flex',
	          position: 'absolute',
	          left: 0,
	          right: 0,
	          bottom: 0,
	          boxSizing: 'border-box',
	          overflowX: 'hidden',
	          justifyContent: 'flex-end',
	          padding: '0 8px',
	          backgroundColor: 'rgba(255,255,255,0.9)'
	        },
	        '.ap-yesno-dialog-button': {
	          display: 'block',
	          maxWidth: '50%',
	          textAlign: 'center',
	          margin: '0 -1px',
	          color: '' + highlightColor
	        },
	        '.ap-yesno-dialog-button .ap-touchable': {
	          padding: '4px 16px'
	        },
	        '.ap-yesno-dialog-button-text': {
	          display: 'inline-block',
	          width: '100%',
	          boxSizing: 'border-box',
	          lineHeight: buttonHeight + 'px'
	        },
	        '.ap-yesno-dialog-button:hover': {
	          cursor: 'pointer',
	          opacity: 0.9
	        },
	        '.ap-yesno-dialog-button:active': {
	          opacity: 0.6
	        }
	      },
	      small: {},
	      medium: {},
	      large: {}
	    };
	  }
	});

	exports.default = ApYesnoDialogStyle;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for dialog component.
	 * @module apeman-react-dialog
	 * @version 3.1.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApYesnoDialog = exports.ApYesnoDialogStyle = exports.ApDialog = exports.ApDialogStyle = exports.ApDialogHeader = exports.ApDialogBody = exports.ApConfirmDialog = exports.ApConfirmDialogStyle = exports.withDialog = undefined;

	var _with_dialog = __webpack_require__(426);

	var _with_dialog2 = _interopRequireDefault(_with_dialog);

	var _ap_confirm_dialog_style = __webpack_require__(422);

	var _ap_confirm_dialog_style2 = _interopRequireDefault(_ap_confirm_dialog_style);

	var _ap_confirm_dialog = __webpack_require__(421);

	var _ap_confirm_dialog2 = _interopRequireDefault(_ap_confirm_dialog);

	var _ap_dialog_body = __webpack_require__(225);

	var _ap_dialog_body2 = _interopRequireDefault(_ap_dialog_body);

	var _ap_dialog_header = __webpack_require__(226);

	var _ap_dialog_header2 = _interopRequireDefault(_ap_dialog_header);

	var _ap_dialog_style = __webpack_require__(423);

	var _ap_dialog_style2 = _interopRequireDefault(_ap_dialog_style);

	var _ap_dialog = __webpack_require__(144);

	var _ap_dialog2 = _interopRequireDefault(_ap_dialog);

	var _ap_yesno_dialog_style = __webpack_require__(424);

	var _ap_yesno_dialog_style2 = _interopRequireDefault(_ap_yesno_dialog_style);

	var _ap_yesno_dialog = __webpack_require__(227);

	var _ap_yesno_dialog2 = _interopRequireDefault(_ap_yesno_dialog);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.withDialog = _with_dialog2.default;
	exports.ApConfirmDialogStyle = _ap_confirm_dialog_style2.default;
	exports.ApConfirmDialog = _ap_confirm_dialog2.default;
	exports.ApDialogBody = _ap_dialog_body2.default;
	exports.ApDialogHeader = _ap_dialog_header2.default;
	exports.ApDialogStyle = _ap_dialog_style2.default;
	exports.ApDialog = _ap_dialog2.default;
	exports.ApYesnoDialogStyle = _ap_yesno_dialog_style2.default;
	exports.ApYesnoDialog = _ap_yesno_dialog2.default;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function withDialog
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _breact = __webpack_require__(90);

	var _asobj = __webpack_require__(8);

	var _ap_yesno_dialog = __webpack_require__(227);

	var _ap_yesno_dialog2 = _interopRequireDefault(_ap_yesno_dialog);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function withDialog(Component) {
	  return (0, _breact.wrap)(Component, {
	    getInitialState: function getInitialState() {
	      return {
	        dialog: null
	      };
	    },
	    render: function render() {
	      var s = this;
	      var props = s.props;
	      var state = s.state;
	      var dialog = state.dialog;

	      var componentProps = (0, _asobj.clone)(props, {
	        without: []
	      });
	      return _react2.default.createElement(Component, _extends({}, componentProps, {
	        askYesNoWithDialog: s.askYesNo,
	        dialog: dialog
	      }));
	    },

	    // --------------------
	    // Custom
	    // --------------------
	    askYesNo: function askYesNo(_ref) {
	      var title = _ref.title;
	      var text = _ref.text;
	      var yesText = _ref.yesText;
	      var noText = _ref.noText;
	      var closeIcon = _ref.closeIcon;

	      var s = this;
	      return new Promise(function (resolve, reject) {
	        var dialog = _react2.default.createElement(_ap_yesno_dialog2.default, _extends({ title: title, yesText: yesText, noText: noText, closeIcon: closeIcon }, {
	          present: true,
	          onYes: function onYes() {
	            return resolve(true);
	          },
	          onNo: function onNo() {
	            return resolve(false);
	          },
	          onClose: function onClose() {
	            return resolve();
	          }
	        }), text, ' ');
	        s.setState({ dialog: dialog });
	      }).then(function (answer) {
	        s.setState({ dialog: null });
	        return answer;
	      }).catch(function (err) {
	        s.setState({ dialog: null });
	        return Promise.reject(err);
	      });
	    }
	  });
	}

	exports.default = withDialog;

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for done components.
	 * @class ApDone
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactButton = __webpack_require__(17);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApDone */
	var ApDone = function (_Component) {
	  _inherits(ApDone, _Component);

	  function ApDone() {
	    _classCallCheck(this, ApDone);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDone).apply(this, arguments));
	  }

	  _createClass(ApDone, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-done', props.className),
	        style: Object.assign({}, props.style) }, _react2.default.createElement('p', { className: 'ap-done-message' }, props.message), props.children, _react2.default.createElement('div', { className: 'ap-done-button-container' }, _react2.default.createElement(ApDone.Button, { text: props.subActionText,
	        action: props.onSubAction
	      }), _react2.default.createElement(ApDone.Button, { text: props.actionText,
	        action: props.onAction,
	        primary: true
	      })), _react2.default.createElement('div', null, _react2.default.createElement(ApDone.Link, { text: props.linkText,
	        href: props.linkHref
	      })));
	    }

	    // --------------------
	    // Lifecycle
	    // --------------------

	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApDone;
	}(_react.Component);

	Object.assign(ApDone, {

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Done message string */
	    message: _react.PropTypes.string,
	    /** Action button text */
	    actionText: _react.PropTypes.string,
	    /** Handler for action */
	    onAction: _react.PropTypes.func,
	    /** Sub action button text */
	    subActionText: _react.PropTypes.string,
	    /** Handler for sub action */
	    onSubAction: _react.PropTypes.func,
	    /** Link url */
	    link: _react.PropTypes.string,
	    /** Text of link */
	    linkText: _react.PropTypes.string
	  },

	  defaultProps: {
	    message: null,
	    actionText: null,
	    onAction: null,
	    subActionText: null,
	    onSubAction: null,
	    linkHref: null,
	    linkText: null
	  },

	  Button: function Button(_ref) {
	    var text = _ref.text;
	    var action = _ref.action;
	    var primary = _ref.primary;

	    if (!text) {
	      return null;
	    }
	    return _react2.default.createElement(_apemanReactButton.ApButton, { className: 'ap-done-button',
	      onTap: action,
	      primary: primary
	    }, text);
	  },
	  Link: function Link(_ref2) {
	    var text = _ref2.text;
	    var href = _ref2.href;

	    if (!text) {
	      return null;
	    }
	    return _react2.default.createElement('a', { href: href, className: 'ap-done-link' }, text);
	  }
	});

	exports.default = ApDone;

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApDone.
	 * @class ApDoneStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApDoneStyle */
	var ApDoneStyle = function (_Component) {
	  _inherits(ApDoneStyle, _Component);

	  function ApDoneStyle() {
	    _classCallCheck(this, ApDoneStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDoneStyle).apply(this, arguments));
	  }

	  _createClass(ApDoneStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApDoneStyle$styleDat = ApDoneStyle.styleData(props);

	      var all = _ApDoneStyle$styleDat.all;
	      var small = _ApDoneStyle$styleDat.small;
	      var medium = _ApDoneStyle$styleDat.medium;
	      var large = _ApDoneStyle$styleDat.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApDoneStyle;
	}(_react.Component);

	Object.assign(ApDoneStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },

	  defaultProps: {
	    style: {},
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	  },
	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;
	    var backgroundColor = config.backgroundColor;

	    return {
	      all: {
	        '.ap-done': {
	          textAlign: 'center'
	        },
	        '.ap-done-button-container': {
	          display: 'flex',
	          justifyContent: 'center',
	          alignItems: 'center'
	        },
	        '.ap-done-button': {
	          fontSize: '11px',
	          padding: '4px 16px'
	        },
	        '.ap-done-link': {
	          display: 'inline-block',
	          padding: '8px 16px',
	          color: '' + highlightColor,
	          textDecoration: 'underline',
	          fontSize: '14px'
	        },
	        '.ap-done-link:hover': {},
	        '.ap-done-link:active': {
	          opacity: '0.8'
	        }
	      }

	    };
	  }
	});

	exports.default = ApDoneStyle;

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for done components.
	 * @module apeman-react-done
	 * @version 3.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApDone = exports.ApDoneStyle = undefined;

	var _ap_done_style = __webpack_require__(428);

	var _ap_done_style2 = _interopRequireDefault(_ap_done_style);

	var _ap_done = __webpack_require__(427);

	var _ap_done2 = _interopRequireDefault(_ap_done);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApDoneStyle = _ap_done_style2.default;
	exports.ApDone = _ap_done2.default;

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for draggable component.
	 * @augments ApComponent
	 * @class ApDraggable
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _slicedToArray = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
	      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;_e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }return _arr;
	  }return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if (Symbol.iterator in Object(arr)) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _numcal = __webpack_require__(56);

	var _numcal2 = _interopRequireDefault(_numcal);

	var _rangecal = __webpack_require__(187);

	var _rangecal2 = _interopRequireDefault(_rangecal);

	var _veccal = __webpack_require__(1086);

	var _veccal2 = _interopRequireDefault(_veccal);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var directions = ['HORIZONTAL', 'LEFT', 'RIGHT', 'VERTICAL', 'UP', 'DOWN', 'NONE', 'ALL'];
	var MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
	var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;
	var DEFAULT_TRANSITION_DURATION = 80;

	/** @lends ApDraggable */
	var ApDraggable = _react2.default.createClass({
	  displayName: 'ApDraggable',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Handler for drag start */
	    onStart: _react.PropTypes.func,
	    /** Handler for drag move */
	    onMove: _react.PropTypes.func,
	    /** Handler for drag stop */
	    onStop: _react.PropTypes.func,
	    shouldMove: _react.PropTypes.func,
	    /** Move direction */
	    direction: _react.PropTypes.oneOf(directions),
	    x: _react.PropTypes.number,
	    minX: _react.PropTypes.number,
	    maxX: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    minY: _react.PropTypes.number,
	    maxY: _react.PropTypes.number
	  },

	  statics: {
	    enums: {
	      directions: directions
	    },
	    movement: function movement(cx, cy, base, direction) {
	      var _veccal$subtract = _veccal2.default.subtract([cx, cy], [base.x, base.y]);

	      var _veccal$subtract2 = _slicedToArray(_veccal$subtract, 2);

	      var x = _veccal$subtract2[0];
	      var y = _veccal$subtract2[1];

	      switch (direction) {
	        case 'HORIZONTAL':
	        case 'LEFT':
	        case 'RIGHT':
	          y = 0;
	          break;
	        case 'VERTICAL':
	        case 'UP':
	        case 'DOWN':
	          x = 0;
	          break;
	        case 'NONE':
	          x = 0;
	          y = 0;
	          break;
	        default:
	          break;
	      }
	      return [x, y];
	    }
	  },

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    return {
	      dragging: false,
	      base: {
	        x: 0,
	        y: 0
	      },
	      move: {
	        x: props.x || 0,
	        y: props.y || 0
	      }
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      direction: 'ALL',
	      shouldMove: function shouldMove() {
	        return true;
	      },

	      minX: MIN_SAFE_INTEGER,
	      maxX: MAX_SAFE_INTEGER,
	      minY: MIN_SAFE_INTEGER,
	      maxY: MAX_SAFE_INTEGER
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    var className = (0, _classnames2.default)('ap-draggable', {
	      'ap-draggable-dragging': state.dragging
	    }, props.className);
	    return _react2.default.createElement(_apemanReactTouchable.ApTouchable, _extends({}, props, {
	      className: className,
	      onPanStart: s.handlePanStart,
	      onPan: s.handlePanMove,
	      onPanEnd: s.handlePanEnd,
	      panThreshold: 1,
	      onPanCancel: s.handlePanCancel,
	      panDirection: props.direction
	    }), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var state = s.state;
	    var x = nextProps.x;
	    var y = nextProps.y;

	    var hasX = typeof x !== 'undefined';
	    var hasY = typeof y !== 'undefined';
	    var changed = hasX || hasY;
	    if (changed) {
	      x = hasX ? x : state.move.x;
	      y = hasY ? y : state.move.y;
	      s.setState({
	        move: {
	          x: x,
	          y: y
	        }
	      });
	      s.applyTransform(x, y);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;

	    if (s._dragApplyTimer) {
	      clearTimeout(s._dragApplyTimer);
	    }
	  },

	  // ------------------
	  // Helper
	  // ------------------

	  handlePanStart: function handlePanStart(e) {
	    var s = this;
	    var center = e.center;

	    s.dragStart(center.x, center.y);
	  },
	  handlePanMove: function handlePanMove(e) {
	    var s = this;
	    var center = e.center;

	    s.dragMove(center.x, center.y);
	  },
	  handlePanEnd: function handlePanEnd(e) {
	    var s = this;
	    var center = e.center;

	    s.dragEnd(center.x, center.y);
	  },
	  handlePanCancel: function handlePanCancel(e) {
	    var s = this;
	    var center = e.center;

	    s.dragEnd(center.x, center.y);
	  },
	  dragStart: function dragStart(cx, cy) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    if (state.dragging) {
	      return;
	    }
	    clearTimeout(s._dragApplyTimer);
	    var base = state.move;
	    var move = _veccal2.default.subtract([cx, cy], [base.x, base.y]);

	    var _move = _slicedToArray(move, 2);

	    var x = _move[0];
	    var y = _move[1];

	    s.setState({
	      dragging: true,
	      base: { x: x, y: y },
	      move: { x: 0, y: 0 }
	    });
	    if (props.onStart) {
	      props.onStart.call(s, s.createEvent(x, y));
	    }
	  },
	  dragMove: function dragMove(cx, cy) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    if (!state.dragging) {
	      return;
	    }

	    var _ApDraggable$movement = ApDraggable.movement(cx, cy, state.base, props.direction);

	    var _ApDraggable$movement2 = _slicedToArray(_ApDraggable$movement, 2);

	    var x = _ApDraggable$movement2[0];
	    var y = _ApDraggable$movement2[1];

	    if (props.shouldMove) {
	      var skip = !props.shouldMove({ x: x, y: y });
	      if (skip) {
	        return;
	      }
	    }
	    var fromLastTime = new Date() - s._lastDragMoveDate;
	    var delay = _numcal2.default.max(DEFAULT_TRANSITION_DURATION - fromLastTime, 0);
	    clearTimeout(s._dragApplyTimer);
	    s._dragApplyTimer = setTimeout(function () {
	      s.applyTransform(x, y);
	      s.setState({
	        dragging: true,
	        move: { x: x, y: y }
	      });
	      s._lastDragMoveDate = new Date();
	    }, delay);

	    if (props.onMove) {
	      var event = s.createEvent(x, y);
	      props.onMove.call(s, event);
	    }
	  },
	  dragEnd: function dragEnd(cx, cy) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    if (!state.dragging) {
	      return;
	    }
	    clearTimeout(s._dragApplyTimer);

	    var _ApDraggable$movement3 = ApDraggable.movement(cx, cy, state.base, props.direction);

	    var _ApDraggable$movement4 = _slicedToArray(_ApDraggable$movement3, 2);

	    var x = _ApDraggable$movement4[0];
	    var y = _ApDraggable$movement4[1];

	    s.setState({
	      dragging: false
	    });
	    if (props.onStop) {
	      props.onStop.call(s, s.createEvent(x, y));
	    }
	  },
	  applyTransform: function applyTransform(x, y) {
	    var s = this;
	    var props = s.props;
	    var minX = props.minX;
	    var maxX = props.maxX;
	    var minY = props.minY;
	    var maxY = props.maxY;

	    var elm = _reactDom2.default.findDOMNode(s);
	    x = parseInt(_rangecal2.default.round(minX, maxX, x));
	    y = parseInt(_rangecal2.default.round(minY, maxY, y));
	    var transform = 'translate(' + x + 'px, ' + y + 'px)';
	    var duplicate = s._transform === transform;
	    if (duplicate) {
	      return;
	    }
	    s._transform = transform;
	    elm.style.transform = transform;
	  },
	  createEvent: function createEvent(x, y) {
	    var s = this;
	    return new CustomEvent('ap:drag', {
	      detail: {
	        x: x,
	        y: y,
	        ref: s
	      }
	    });
	  },

	  _lastDragMoveDate: new Date(),
	  _dragApplyTimer: -1
	});

	exports.default = ApDraggable;

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApDraggable.
	 * @augments ApStyle
	 * @class ApDraggableStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var DEFAULT_TRANSITION_DURATION = 80;

	/** @lends ApDraggableStyle */
	var ApDraggableStyle = _react2.default.createClass({
	  displayName: 'ApDraggableStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-draggable': {
	            cursor: '-webkit-grab',
	            transition: 'transform ' + DEFAULT_TRANSITION_DURATION + 'ms'
	          },
	          '.ap-draggable:active': {
	            cursor: '-webkit-grabbing'
	          },
	          '.ap-draggable.ap-draggable-dragging': {
	            boxShadow: '1px 1px 2px rgba(0,0,0,0.25)'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApDraggableStyle$sty = ApDraggableStyle.styleData(props);

	    var all = _ApDraggableStyle$sty.all;
	    var small = _ApDraggableStyle$sty.small;
	    var medium = _ApDraggableStyle$sty.medium;
	    var large = _ApDraggableStyle$sty.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApDraggableStyle;

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Dropdown component
	 * @class ApDropdown
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApDropdown = undefined;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactSpinner = __webpack_require__(29);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApDropdown */
	var ApDropdown = _react2.default.createClass({
	  displayName: 'ApDropdown',

	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    /** Icon class name for open state */
	    openIcon: _react.PropTypes.string,
	    /** Icon class name for closed state */
	    closedIcon: _react.PropTypes.string,
	    /** Open or not */
	    open: _react.PropTypes.bool.isRequired,
	    /** Handler for tap event */
	    onTap: _react.PropTypes.func.isRequired
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      open: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      openIcon: 'ion ion-chevron-up',
	      closedIcon: 'ion ion-chevron-down'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var layouts = s.layouts;

	    var className = (0, _classnames2.default)('ap-dropdown', {
	      'ap-dropdown-open': props.open,
	      'ap-dropdown-closed': !props.open
	    }, props.className);
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, props.style) }, props.spinner, _react2.default.createElement('div', { className: 'ap-dropdown-button-wrap' }, _react2.default.createElement(_apemanReactButton.ApButton, { className: 'ap-dropdown-button', onTap: s.handleButtonTap }, props.title, _react2.default.createElement('i', { className: (0, _classnames2.default)('ap-dropdown-icon', props.open ? props.openIcon : props.closedIcon) }))), _react2.default.createElement('div', { className: 'ap-dropdown-content', style: layouts.content }, _react2.default.createElement('div', { className: 'ap-dropdown-content-inner',
	      ref: function ref(inner) {
	        return s.registerContentInner(inner);
	      } }, props.children)));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.layout();
	  },

	  // ------------------
	  // For ApLayoutMixin
	  // ------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      content: null
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var contentInner = s.contentInner;

	    var contentRect = contentInner.getBoundingClientRect();
	    return {
	      content: {
	        height: contentRect.height
	      }
	    };
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  contentInner: null,

	  registerContentInner: function registerContentInner(contentInner) {
	    var s = this;
	    s.contentInner = contentInner;
	  },
	  handleButtonTap: function handleButtonTap(e) {
	    var s = this;
	    var props = s.props;

	    props.onTap(e);
	  }
	});

	exports.ApDropdown = ApDropdown;
	exports.default = (0, _apemanReactTouchable.withOutside)((0, _apemanReactSpinner.withSpin)(ApDropdown));

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Drop down item component
	 * @class ApDropdownItem
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApDropdownItem = undefined;

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApDropdownItem */
	var ApDropdownItem = function (_Component) {
	  _inherits(ApDropdownItem, _Component);

	  function ApDropdownItem() {
	    _classCallCheck(this, ApDropdownItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDropdownItem).apply(this, arguments));
	  }

	  _createClass(ApDropdownItem, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('a', { className: (0, _classnames2.default)('ap-dropdown-item', props.className),
	        style: Object.assign({}, props.style) }, props.children);
	    }
	  }]);

	  return ApDropdownItem;
	}(_react.Component);

	Object.assign(ApDropdownItem, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {}
	});

	exports.ApDropdownItem = ApDropdownItem;
	exports.default = (0, _apemanReactTouchable.withTouch)(ApDropdownItem);

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApDropdown.
	 * @class ApDropdownStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApDropdownStyle */
	var ApDropdownStyle = function (_Component) {
	  _inherits(ApDropdownStyle, _Component);

	  function ApDropdownStyle() {
	    _classCallCheck(this, ApDropdownStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApDropdownStyle).apply(this, arguments));
	  }

	  _createClass(ApDropdownStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApDropdownStyle$styl = ApDropdownStyle.styleData(props);

	      var all = _ApDropdownStyle$styl.all;
	      var small = _ApDropdownStyle$styl.small;
	      var medium = _ApDropdownStyle$styl.medium;
	      var large = _ApDropdownStyle$styl.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApDropdownStyle;
	}(_react.Component);

	Object.assign(ApDropdownStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },

	  defaultProps: {
	    style: {},
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	  },

	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;
	    var backgroundColor = config.backgroundColor;

	    var duration = '400ms';
	    var buttonHeight = 44;
	    return {
	      all: {
	        '.ap-dropdown': {
	          position: 'relative',
	          boxSizing: 'border-box',
	          display: 'inline-block'
	        },
	        '.ap-dropdown-content': {
	          position: 'absolute',
	          boxSizing: 'border-box',
	          overflow: 'hidden',
	          transition: 'width ' + duration + ', height ' + duration,
	          top: buttonHeight + 'px',
	          left: 0,
	          background: 'rgba(255,255,255,0.95)',
	          width: '100%',
	          maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	          border: '1px solid #EEE',
	          zIndex: 99
	        },
	        '.ap-dropdown-content-inner': {
	          minWidth: '192px',
	          minHeight: '40px'
	        },
	        '.ap-dropdown-open .ap-dropdown-content': {},
	        '.ap-dropdown-closed .ap-dropdown-content': {
	          height: '0 !important',
	          border: 'none'
	        },

	        '.ap-dropdown-button-wrap': {
	          position: 'relative'
	        },
	        '.ap-dropdown-button': {
	          margin: 0,
	          padding: '0 8px',
	          boxSizing: 'border-box',
	          verticalAlign: 'middle',
	          border: 'none',
	          color: 'inherit',
	          lineHeight: buttonHeight + 'px',
	          height: buttonHeight + 'px',
	          backgroundColor: 'transparent',
	          display: 'inline-flex',
	          justifyContent: 'center',
	          alignItems: 'center'
	        },
	        '.ap-dropdown-button-aligner': {
	          height: '100%',
	          width: '1px',
	          verticalAlign: 'middle'
	        },
	        '.ap-dropdown-item': {
	          display: 'block',
	          boxSizing: 'border-box',
	          textDecoration: 'none',
	          padding: '4px 8px',
	          lineHeight: '36px',
	          borderBottom: '1px solid #F0F0F0'
	        },
	        '.ap-dropdown-item:hover': {
	          cursor: 'pointer',
	          background: '#FAFAFA'
	        },
	        '.ap-dropdown-item:active': {
	          background: '#F0F0F0'
	        },
	        '.ap-dropdown-icon': {
	          display: 'inline-block',
	          margin: '0 8px',
	          fontSize: '12px'
	        },
	        '.ap-dropdown-spinner-cover': {
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          right: 0,
	          bottom: 0,
	          textAlign: 'center',
	          boxSizing: 'border-box',
	          padding: '16px 32px',
	          background: 'rgba(255, 255, 255, 0.75)',
	          border: '1px solid rgba(255, 255, 255, 0.9)',
	          zIndex: 101,
	          color: '#888'
	        }
	      }
	    };
	  }
	});

	exports.default = ApDropdownStyle;

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form field.
	 * @class ApField
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApField */
	var ApField = function (_Component) {
	  _inherits(ApField, _Component);

	  function ApField() {
	    _classCallCheck(this, ApField);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApField).apply(this, arguments));
	  }

	  _createClass(ApField, [{
	    key: 'render',

	    // --------------------
	    // Specs
	    // --------------------
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-field', props.className, {
	          'ap-field-align-center': props.center
	        }),
	        style: Object.assign({}, props.style) }, _react2.default.createElement('div', { className: 'ap-field-inner' }, props.children));
	    }
	  }]);

	  return ApField;
	}(_react.Component);

	Object.assign(ApField, {
	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    center: _react.PropTypes.bool
	  },

	  defaultProps: {
	    center: false
	  }
	});

	exports.default = ApField;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Label of form field.
	 * @class ApFieldLabel
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactLabel = __webpack_require__(148);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApFieldLabel */
	var ApFieldLabel = function (_Component) {
	  _inherits(ApFieldLabel, _Component);

	  function ApFieldLabel() {
	    _classCallCheck(this, ApFieldLabel);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApFieldLabel).apply(this, arguments));
	  }

	  _createClass(ApFieldLabel, [{
	    key: 'render',

	    // --------------------
	    // Specs
	    // --------------------
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement(_apemanReactLabel.ApLabel, _extends({}, props, {
	        className: (0, _classnames2.default)('ap-field-label', props.className),
	        htmlFor: props.htmlFor }), _react2.default.createElement('span', { className: 'ap-field-label-inner' }, props.children));
	    }

	    // --------------------
	    // Lifecycle
	    // --------------------

	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApFieldLabel;
	}(_react.Component);

	Object.assign(ApFieldLabel, {
	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    htmlFor: _react.PropTypes.string
	  },

	  defaultProps: {
	    htmlFor: null
	  }
	});

	exports.default = ApFieldLabel;

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Legend of form field.
	 * @class ApFieldLegend
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApFieldLegend */
	var ApFieldLegend = function (_Component) {
	  _inherits(ApFieldLegend, _Component);

	  function ApFieldLegend() {
	    _classCallCheck(this, ApFieldLegend);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApFieldLegend).apply(this, arguments));
	  }

	  _createClass(ApFieldLegend, [{
	    key: 'render',

	    // --------------------
	    // Specs
	    // --------------------
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('legend', _extends({}, props, {
	        className: (0, _classnames2.default)('ap-field-legend', props.className) }), props.children);
	    }

	    // --------------------
	    // Lifecycle
	    // --------------------

	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApFieldLegend;
	}(_react.Component);

	Object.assign(ApFieldLegend, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  defaultProps: {}
	});

	exports.default = ApFieldLegend;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Set of form field.
	 * @class ApFieldSet
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApFieldSet */
	var ApFieldSet = function (_Component) {
	  _inherits(ApFieldSet, _Component);

	  function ApFieldSet() {
	    _classCallCheck(this, ApFieldSet);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApFieldSet).apply(this, arguments));
	  }

	  _createClass(ApFieldSet, [{
	    key: 'render',

	    // --------------------
	    // Specs
	    // --------------------
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('fieldset', { id: props.id,
	        className: (0, _classnames2.default)('ap-field-set', {
	          'ap-field-set-plain': props.plain
	        }, props.className) }, props.children);
	    }
	  }]);

	  return ApFieldSet;
	}(_react.Component);

	Object.assign(ApFieldSet, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    plain: _react.PropTypes.bool
	  }
	});

	exports.default = ApFieldSet;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApField.
	 * @class ApFieldStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApFieldStyle */
	var ApFieldStyle = function (_Component) {
	  _inherits(ApFieldStyle, _Component);

	  function ApFieldStyle() {
	    _classCallCheck(this, ApFieldStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApFieldStyle).apply(this, arguments));
	  }

	  _createClass(ApFieldStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApFieldStyle$styleDa = ApFieldStyle.styleData(props);

	      var all = _ApFieldStyle$styleDa.all;
	      var small = _ApFieldStyle$styleDa.small;
	      var medium = _ApFieldStyle$styleDa.medium;
	      var large = _ApFieldStyle$styleDa.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApFieldStyle;
	}(_react.Component);

	Object.assign(ApFieldStyle, {
	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  defaultProps: {
	    style: {}
	  },
	  styleData: function styleData(config) {
	    var hPadding = 8;
	    return {
	      all: {
	        '.ap-field': {
	          display: 'block',
	          margin: '4px 0'
	        },
	        '.ap-field-inner': {
	          display: 'block',
	          maxWidth: '480px'
	        },
	        '.ap-field-label': {
	          display: 'block',
	          fontSize: '14px',
	          minWidth: 96,
	          padding: 0,
	          margin: 0,
	          textAlign: 'left',
	          boxSizing: 'border-box'
	        },
	        '.ap-field-label-inner': {
	          display: 'block',
	          fontSize: '12px',
	          padding: '4px ' + hPadding + 'px 0',
	          color: '#888',
	          boxSizing: 'border-box'
	        },
	        '.ap-field-value': {
	          display: 'block',
	          width: '100%',
	          padding: '0 ' + hPadding + 'px',
	          boxSizing: 'border-box'
	        },
	        '.ap-field-value .ap-text-wrap, .ap-field-value .ap-password-wrap': {
	          margin: 0
	        },
	        '.ap-field-value .ap-text, .ap-field-value .ap-password': {
	          width: '100%',
	          boxSizing: 'border-box',
	          margin: '2px 0'
	        },
	        '.ap-field-set': {
	          borderStyle: 'solid',
	          borderRadius: '2px'
	        },
	        '.ap-field-set-plain': {
	          border: 'none',
	          padding: 0,
	          margin: 0
	        },
	        '.ap-field-legend': {
	          padding: '0 4px'
	        },
	        '.ap-field-align-center .ap-field-inner': {
	          textAlign: 'center',
	          display: 'block'
	        }
	      },
	      small: {
	        '.ap-field-inner': {
	          display: 'flex',
	          alignItems: 'center'
	        },
	        '.ap-field-label': {
	          display: 'inline-block',
	          padding: 0,
	          margin: 0
	        },
	        '.ap-field-label-inner': {
	          display: 'inline-block',
	          minWidth: '48px',
	          fontSize: 'inherit',
	          padding: '8px ' + hPadding + 'px'
	        },
	        '.ap-field-value': {
	          verticalAlign: 'middle',
	          padding: '4px 0'
	        }
	      }
	    };
	  }
	});

	exports.default = ApFieldStyle;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Value of form field.
	 * @class ApFieldValue
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApFieldValue*/
	var ApFieldValue = function (_Component) {
	  _inherits(ApFieldValue, _Component);

	  function ApFieldValue() {
	    _classCallCheck(this, ApFieldValue);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApFieldValue).apply(this, arguments));
	  }

	  _createClass(ApFieldValue, [{
	    key: 'render',

	    // --------------------
	    // Specs
	    // --------------------
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-field-value', props.className)
	      }, props.children);
	    }
	  }]);

	  return ApFieldValue;
	}(_react.Component);

	Object.assign(ApFieldValue, {
	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {},
	  defaultProps: {}
	});

	exports.default = ApFieldValue;

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for footer component.
	 * @class ApFooter
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApFooter */
	var ApFooter = _react2.default.createClass({
	  displayName: 'ApFooter',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('footer', { className: (0, _classnames2.default)('ap-footer', props.className) }, props.children);
	  }
	});

	exports.default = ApFooter;

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApFooter.
	 * @class ApFooterStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApFooterStyle */
	var ApFooterStyle = _react2.default.createClass({
	  displayName: 'ApFooterStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-footer': {
	            display: 'block',
	            padding: '24px'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApFooterStyle$styleD = ApFooterStyle.styleData(props);

	    var all = _ApFooterStyle$styleD.all;
	    var small = _ApFooterStyle$styleD.small;
	    var medium = _ApFooterStyle$styleD.medium;
	    var large = _ApFooterStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApFooterStyle;

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for footer component.
	 * @module apeman-react-footer
	 * @version 3.0.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApFooter = exports.ApFooterStyle = undefined;

	var _ap_footer_style = __webpack_require__(442);

	var _ap_footer_style2 = _interopRequireDefault(_ap_footer_style);

	var _ap_footer = __webpack_require__(441);

	var _ap_footer2 = _interopRequireDefault(_ap_footer);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApFooterStyle = _ap_footer_style2.default;
	exports.ApFooter = _ap_footer2.default;

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form component
	 * @class ApForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactSpinner = __webpack_require__(29);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApForm */
	var ApForm = _react2.default.createClass({
	  displayName: 'ApForm',

	  // --------------------
	  // Specs
	  // --------------------

	  mixins: [],

	  statics: {
	    messageOfError: function messageOfError(error) {
	      if (!error) {
	        return null;
	      }
	      if (typeof error === 'string') {
	        return error;
	      }
	      return String(error.message || error.msg || error);
	    },

	    /**
	     * Render errors.
	     * @param {Object} errors - Error messages
	     * @param {Object} [options] - Optional settings.
	     * @param {string[]} options.skip - Names to skip.
	     * @returns {element}
	     */
	    renderErrors: function renderErrors(errors, options) {
	      if (!errors) {
	        return null;
	      }
	      options = options || {};
	      var skip = [].concat(options.skip || []);
	      return _react2.default.createElement('span', { className: 'ap-form-errors' }, Object.keys(errors || {}).filter(function (name) {
	        return !~skip.indexOf(name);
	      }).map(function (name) {
	        return _react2.default.createElement('span', { key: name,
	          className: (0, _classnames2.default)('ap-form-error-message', 'ap-form-error-message-visible', 'ap-form-error-message-' + name) }, ApForm.messageOfError(errors[name]));
	      }));
	    }
	  },

	  propTypes: {
	    errors: _react.PropTypes.object,
	    spinning: _react.PropTypes.bool,
	    spinner: _react.PropTypes.string,
	    centered: _react.PropTypes.bool,
	    onEnterKeyPress: _react.PropTypes.func
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      errors: null,
	      spinning: false,
	      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME,
	      centered: false,
	      onEnterKeyPress: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-form', props.className, {
	      'ap-form-spinning': props.spinning,
	      'ap-form-centered': props.centered
	    });
	    return _react2.default.createElement('form', { onKeyPress: s.handleKeyPress,
	      className: className }, s._renderSpinner(), _react2.default.createElement('input', { type: 'text',
	      name: 'ap_form_dummy',
	      disabled: true,
	      value: undefined,
	      placeholder: 'This is a dummy input to prevent submit on enter',
	      className: 'ap-form-dummy-input' }), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var props = s.props;

	    s.markErrors(props.errors);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;

	    s.unmarkErrors();
	    s.markErrors(nextProps.errors);
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  /**
	   * Mark error style and messages.
	   * @param {object} errors - Form errors.
	   */
	  markErrors: function markErrors(errors) {
	    var s = this;
	    var elm = _reactDom2.default.findDOMNode(s);
	    Object.keys(errors || {}).forEach(function (name) {
	      var inputs = elm.querySelectorAll('[name=\'' + name + '\']');
	      for (var i = 0; i < inputs.length; i++) {
	        inputs[i].classList.add('ap-form-errored');
	      }
	      var message = elm.querySelector('.ap-form-error-message-' + name);
	      if (!message) {
	        message = document.createElement('div');
	        message.classList.add('ap-form-error-message');
	        message.classList.add('ap-form-error-message-' + name);
	        s._insertMessage(message, inputs[0]);
	      }
	      message.innerHTML = [].concat(errors[name]).map(function (error) {
	        return ApForm.messageOfError(error);
	      }).filter(function (message) {
	        return !!message;
	      }).join('<br/>');
	      if (message.innerHTML.length > 0) {
	        message.classList.add('ap-form-error-message-visible');
	      } else {
	        message.classList.remove('ap-form-error-message-visible');
	      }
	    });
	  },

	  /**
	   * Unmark error style and messages.
	   */
	  unmarkErrors: function unmarkErrors() {
	    var s = this;
	    var elm = _reactDom2.default.findDOMNode(s);
	    var errored = elm.querySelectorAll('.ap-form-errored');
	    for (var i = 0; i < errored.length; i++) {
	      errored[i].classList.remove('ap-form-errored');
	    }
	    var messages = elm.querySelectorAll('.ap-form-error-message');
	    for (var _i = 0; _i < messages.length; _i++) {
	      messages[_i].innerHTML = '';
	    }
	  },

	  /**
	   * Handle key press event.
	   * @param {object} e - Event
	   */
	  handleKeyPress: function handleKeyPress(e) {
	    var s = this;
	    var props = s.props;

	    var isEnter = e.charCode === 13;
	    if (isEnter) {
	      if (props.onEnterKeyPress) {
	        props.onEnterKeyPress(e);
	      }
	    }
	    if (props.onKeyPress) {
	      props.onKeyPress(e);
	    }
	  },

	  // ------------------
	  // Private
	  // ------------------
	  _renderSpinner: function _renderSpinner() {
	    var s = this;
	    var props = s.props;

	    if (!props.spinning) {
	      return null;
	    }
	    return _react2.default.createElement('div', { className: 'ap-form-spinner-cover' }, _react2.default.createElement(_apemanReactSpinner.ApSpinner, { theme: props.spinner,
	      className: 'ap-form-spinner',
	      enabled: true }));
	  },
	  _insertMessage: function _insertMessage(message, element) {
	    var s = this;
	    var parentElement = element && element.parentElement;

	    if (!parentElement) {
	      return;
	    }

	    if (s._isFieldValue(parentElement.parentElement)) {
	      return s._insertMessage(message, parentElement);
	    }
	    parentElement.insertBefore(message, element);
	  },
	  _isFieldValue: function _isFieldValue(element) {
	    return element && element.classList.contains('ap-field-value');
	  }
	});

	exports.default = ApForm;

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApForm.
	 * @class ApFormStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApFormStyle */
	var ApFormStyle = _react2.default.createClass({
	  displayName: 'ApFormStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    maxWidth: _react.PropTypes.number
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      errorColor: '#E11',
	      errorBackgroundColor: '#FFF0F0'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var errorColor = config.errorColor;
	      var errorBackgroundColor = config.errorBackgroundColor;

	      return {
	        all: {
	          '.ap-form': {
	            position: 'relative',
	            margin: 0
	          },
	          '.ap-form-centered': {
	            margin: '8px auto',
	            maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH
	          },
	          '.ap-form-spinner-cover': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            textAlign: 'center',
	            boxSizing: 'border-box',
	            padding: '16px 32px',
	            background: '' + _apemanReactStyle.ApStyle.COVER_BACKGROUND,
	            border: '1px solid rgba(255, 255, 255, 0.9)',
	            zIndex: 8,
	            color: '#888'
	          },
	          '.ap-form .ap-form-errored': {
	            border: '1px solid ' + errorColor,
	            background: '' + errorBackgroundColor
	          },
	          '.ap-form-error-message': {
	            color: '' + errorColor,
	            fontSize: '9px',
	            fontStyle: 'italic',
	            padding: '4px 0 0',
	            display: 'none'
	          },
	          '.ap-form-error-message-visible': {
	            display: 'block'
	          },
	          '.ap-form-dummy-input': {
	            visibility: 'hidden',
	            zIndex: -999,
	            display: 'none',
	            width: 0,
	            height: 0,
	            opacity: 0
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApFormStyle$styleDat = ApFormStyle.styleData(props);

	    var all = _ApFormStyle$styleDat.all;
	    var small = _ApFormStyle$styleDat.small;
	    var medium = _ApFormStyle$styleDat.medium;
	    var large = _ApFormStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApFormStyle;

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApFrame.
	 * @class ApFrameStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _acolor = __webpack_require__(27);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApFrameStyle */
	var ApFrameStyle = _react2.default.createClass({
	  displayName: 'ApFrameStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;

	      return {
	        all: {
	          '.ap-frame': {
	            position: 'relative'
	          },
	          '.ap-frame-full': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            boxSizing: 'border-box',
	            overflow: 'hidden'
	          },
	          '.ap-frame-spinner': {
	            width: '100%',
	            height: '100%',
	            position: 'absolute',
	            textAlign: 'center',
	            boxSizing: 'content-box',
	            zIndex: 4,
	            background: _apemanReactStyle.ApStyle.COVER_BACKGROUND,
	            color: _apemanReactStyle.ApStyle.COVER_COLOR
	          },
	          '.ap-frame-frame': {
	            width: '100%',
	            height: '100%',
	            boxSizing: 'content-box'
	          },
	          '.ap-markable-frame': {
	            position: 'relative',
	            overflow: 'auto'
	          },
	          '.ap-markable-frame-markable-item': {
	            position: 'absolute',
	            background: highlightColor,
	            opacity: '0.75',
	            boxSizing: 'border-box',
	            border: '2px solid ' + (0, _acolor.mix)(highlightColor, '#000'),
	            boxShadow: '4px 4px 8px rgba(0,0,0,0.5)',
	            display: 'flex',
	            justifyContent: 'center',
	            alignItems: 'center'
	          }
	        },
	        small: {},
	        medium: {},
	        large: {}
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApFrameStyle$styleDa = ApFrameStyle.styleData(props);

	    var all = _ApFrameStyle$styleDa.all;
	    var small = _ApFrameStyle$styleDa.small;
	    var medium = _ApFrameStyle$styleDa.medium;
	    var large = _ApFrameStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApFrameStyle;

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * iframe components with marker.
	 * @class ApMarkableFrame
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _ap_frame = __webpack_require__(228);

	var _ap_frame2 = _interopRequireDefault(_ap_frame);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	var markerKey = function markerKey(selector, i) {
	  return [selector, i].join('-');
	};

	/** @lends ApMarkableFrame */
	var ApMarkableFrame = _react2.default.createClass({
	  displayName: 'ApMarkableFrame',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Selector for detectable elements */
	    detectableSelector: _react.PropTypes.string,
	    /** Handler for detection */
	    onDetect: _react.PropTypes.func,
	    /** Selector for highlight */
	    highlightSelector: _react.PropTypes.string,
	    /** Handler for tap on markable */
	    onMarkableTap: _react.PropTypes.func,
	    /** Handler for hover-in on markable */
	    onMarkableHoverIn: _react.PropTypes.func,
	    /** Handler for hover-out on markable */
	    onMarkableHoverOut: _react.PropTypes.func
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    return {
	      detected: null,
	      highlighted: null
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var detected = state.detected;

	    var className = (0, _classnames2.default)('ap-frame', 'ap-markable-frame', props.className);
	    return _react2.default.createElement(_ap_frame2.default, _extends({}, props, {
	      className: className,
	      onLoad: s.handleLoad }), Object.keys(detected || {}).map(function (selector) {
	      return s._renderMarkable(selector, detected[selector] || []);
	    }));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var props = s.props;

	    var highlightChanged = props.highlightSelector !== nextProps.highlightSelector;
	    if (highlightChanged) {
	      var highlighted = s.queryMarkables(props.highlightSelector);
	      s.setState({ highlighted: highlighted });
	      s.layout();
	    }
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  handleLoad: function handleLoad(e) {
	    var s = this;
	    var props = s.props;

	    s.iframe = e.target;

	    if (props.onLoad) {
	      props.onLoad(e);
	    }

	    var markables = s.queryMarkables(props.detectableSelector);
	    s.setState({ detected: markables });
	    if (props.onDetect) {
	      props.onDetect({ markables: markables });
	    }
	  },
	  getContentBody: function getContentBody() {
	    var s = this;
	    var iframe = s.iframe;

	    if (!iframe) {
	      return null;
	    }
	    var contentDocument = iframe.contentDocument || iframe.contentWindow && iframe.contentWindow.document;
	    if (!contentDocument) {
	      return null;
	    }
	    return contentDocument.body;
	  },
	  queryMarkables: function queryMarkables(selector) {
	    var s = this;
	    var body = s.getContentBody();
	    if (!body) {
	      return null;
	    }
	    if (!selector) {
	      return null;
	    }
	    return (selector || '').split(',').map(function (selector) {
	      return selector.trim();
	    }).reduce(function (items, selector) {
	      return Object.assign(items, _defineProperty({}, selector, [].concat(_toConsumableArray(body.querySelectorAll(selector)))));
	    }, {});
	  },

	  // ------------------
	  // For ApLayoutMixin
	  // ------------------
	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      markables: {}
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    var markables = {};
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = Object.keys(state.detected || {})[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var selector = _step.value;

	        var elms = state.detected[selector];
	        for (var i = 0; i < elms.length; i++) {
	          var elm = elms[i];
	          var key = markerKey(selector, i);

	          var _elm$getBoundingClien = elm.getBoundingClientRect();

	          var top = _elm$getBoundingClien.top;
	          var left = _elm$getBoundingClien.left;
	          var width = _elm$getBoundingClien.width;
	          var height = _elm$getBoundingClien.height;

	          markables[key] = { top: top, left: left, width: width, height: height };
	        }
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    return {
	      markables: markables
	    };
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _renderMarkable: function _renderMarkable(selector, elms) {
	    var s = this;
	    var layouts = s.layouts;

	    return _react2.default.createElement('div', { className: 'ap-markable-frame-markable',
	      'data-ap-markable-slector': selector,
	      key: selector }, elms.map(function (elm, i) {
	      var key = markerKey(selector, i);
	      var style = layouts.markables[key];
	      return _react2.default.createElement('div', { className: 'ap-markable-frame-markable-item',
	        'data-ap-markable-key': key,
	        key: key,
	        style: style
	      });
	    }));
	  }
	});

	exports.default = ApMarkableFrame;

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for iframe components.
	 * @module apeman-react-frame
	 * @version 3.0.5
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApMarkableFrame = exports.ApFrame = exports.ApFrameStyle = undefined;

	var _ap_frame_style = __webpack_require__(446);

	var _ap_frame_style2 = _interopRequireDefault(_ap_frame_style);

	var _ap_frame = __webpack_require__(228);

	var _ap_frame2 = _interopRequireDefault(_ap_frame);

	var _ap_markable_frame = __webpack_require__(447);

	var _ap_markable_frame2 = _interopRequireDefault(_ap_markable_frame);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApFrameStyle = _ap_frame_style2.default;
	exports.ApFrame = _ap_frame2.default;
	exports.ApMarkableFrame = _ap_markable_frame2.default;

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Grid component.
	 * @class ApGrid
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactScroll = __webpack_require__(237);

	var _apemanReactMixinLayout = __webpack_require__(39);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApGrid */
	var ApGrid = _react2.default.createClass({
	  displayName: 'ApGrid',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    selectedIndex: _react.PropTypes.number,
	    detail: _react.PropTypes.node,
	    animationDuration: _react.PropTypes.number
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      selectedIndex: -1,
	      indexOfDetail: -1,
	      indexOfClosingDetail: -1
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      selectedIndex: -1,
	      detail: null,
	      animationDuration: 300
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var children = _react2.default.Children.toArray(props.children);
	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-grid', props.className),
	      style: Object.assign({}, props.style),
	      ref: function ref(grid) {
	        return s.handleGridMount(grid);
	      }
	    }, children.map(function (item, i) {
	      return [s._renderItemWrap(item, i), s._renderDetailWrap(item, i)];
	    }, []).reduce(function (a, b) {
	      return [].concat(a, b);
	    }, []));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;

	    s.itemWraps = [];
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var props = s.props;
	    var selectedIndex = props.selectedIndex;

	    s.setState({
	      selectedIndex: selectedIndex,
	      indexOfDetail: s.findIndexOfDetail(selectedIndex),
	      indexOfClosingDetail: -1
	    });
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;
	    var selectedIndex = nextProps.selectedIndex;

	    clearTimeout(s._closeTimer);

	    var selectChanged = props.selectedIndex !== selectedIndex;
	    if (selectChanged) {
	      clearTimeout(s._closeTimer);
	      s.setState({
	        selectedIndex: selectedIndex,
	        indexOfClosingDetail: state.indexOfDetail,
	        indexOfDetail: s.findIndexOfDetail(selectedIndex)
	      });
	      s._closeTimer = setTimeout(function () {
	        s.setState({ indexOfClosingDetail: -1 });
	      }, props.animationDuration);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  handleGridMount: function handleGridMount(grid, i) {
	    var s = this;
	    s.gird = grid;
	  },
	  handleItemWrapMount: function handleItemWrapMount(itemWrap, i) {
	    var s = this;
	    s.itemWraps[i] = itemWrap;
	  },
	  handleDetailWrapInnerMount: function handleDetailWrapInnerMount(detailWrapInner) {
	    var s = this;
	    s.detailWrapInner = detailWrapInner;
	  },
	  findIndexOfDetail: function findIndexOfDetail(start) {
	    if (start === -1) {
	      return -1;
	    }
	    var s = this;
	    var itemWraps = s.itemWraps;

	    for (var i = start; i < itemWraps.length - 1; i++) {
	      var current = itemWraps[i];
	      var next = itemWraps[i + 1];
	      if (current && next) {
	        var rowChanged = current.getBoundingClientRect().top + 10 < next.getBoundingClientRect().top;
	        if (rowChanged) {
	          return i;
	        }
	      }
	    }
	    return itemWraps.filter(function (itemWrap) {
	      return !!itemWrap;
	    }).length - 1;
	  },

	  // ------------------
	  // For ApLayoutMixin
	  // ------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      detailWrap: {
	        maxHeight: 800,
	        height: 'auto'
	      }
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var detailWrapInner = s.detailWrapInner;

	    return {
	      detailWrap: {
	        maxHeight: window.innerHeight,
	        height: detailWrapInner && detailWrapInner.getBoundingClientRect().height || null
	      }
	    };
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _renderItemWrap: function _renderItemWrap(item, i) {
	    if (!item) {
	      return null;
	    }
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var selected = props.selectedIndex === i;
	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-grid-item-wrap', {
	        'ap-grid-item-wrap-selected': selected
	      }),
	      ref: function ref(wrap) {
	        return s.handleItemWrapMount(wrap, i);
	      },
	      key: 'item-wrap-' + i
	    }, item, selected ? _react2.default.createElement('span', { className: 'ap-grid-item-arrow' }) : null);
	  },
	  _renderDetailWrap: function _renderDetailWrap(item, i) {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var layouts = s.layouts;

	    var open = state.indexOfDetail === i;
	    var closing = state.indexOfClosingDetail === i;
	    return _react2.default.createElement(_apemanReactScroll.ApScroll, { className: (0, _classnames2.default)('ap-grid-detail-wrap', {
	        'ap-grid-detail-wrap-active': open || closing,
	        'ap-grid-detail-wrap-closed': !open
	      }),
	      disableMouseWheel: true,
	      style: layouts.detailWrap,
	      key: 'detail-wrap-' + i
	    }, _react2.default.createElement('div', { className: 'ap-grid-detail-wrap-inner',
	      ref: function ref(wrapInner) {
	        return s.handleDetailWrapInnerMount(wrapInner);
	      } }, props.detail));
	  },

	  _closeTimer: -1

	});

	exports.default = ApGrid;

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Item of grid.
	 * @class ApGridItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApGridItem */
	var ApGridItem = _react2.default.createClass({
	  displayName: 'ApGridItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Item title text */
	    title: _react.PropTypes.string,
	    /** Item context text */
	    text: _react.PropTypes.string,
	    /** Item width */
	    width: _react.PropTypes.number,
	    /** item height */
	    height: _react.PropTypes.number,
	    /** Selected or not */
	    selected: _react.PropTypes.bool
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      title: null,
	      text: null,
	      width: null,
	      height: null,
	      selected: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var width = props.width;
	    var height = props.height;

	    var className = (0, _classnames2.default)('ap-grid-item', {
	      'ap-grid-item-selected': props.selected
	    }, props.className);

	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({
	        width: width, height: height
	      }, props.style) }, s._renderTitle(props.title), s._renderText(props.text), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    var s = this;
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    var s = this;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderTitle: function _renderTitle(title) {
	    if (!title) {
	      return null;
	    }
	    return _react2.default.createElement('h5', { className: 'ap-grid-item-title' }, title);
	  },
	  _renderText: function _renderText(text) {
	    if (!text) {
	      return null;
	    }
	    return _react2.default.createElement('p', { className: 'ap-grid-item-text' }, text);
	  }
	});

	exports.default = ApGridItem;
	exports.default = (0, _apemanReactTouchable.withTouch)(ApGridItem, {
	  // ------------------
	  // For ApTouchMixin
	  // ------------------

	  getTouchData: function getTouchData() {
	    var s = this;
	    return s.props.data;
	  }
	});

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApGrid.
	 * @class ApGridStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApGridStyle */
	var ApGridStyle = _react2.default.createClass({
	  displayName: 'ApGridStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    itemSize: _react.PropTypes.number,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      itemSize: 82,
	      detailColor: '#444',
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;
	      var itemSize = config.itemSize;

	      var itemMargin = 8;
	      var duration = 400;
	      var arrowSize = itemMargin * 3;
	      return {
	        all: {
	          '.ap-grid': {
	            display: 'flex',
	            flexFlow: 'row wrap',
	            justifyContent: 'space-around',
	            margin: '0 auto'
	          },
	          '.ap-grid-item-wrap': {
	            display: 'inline-block',
	            margin: 0,
	            padding: 0,
	            position: 'relative'
	          },
	          '.ap-grid-item-arrow': {
	            position: 'absolute',
	            bottom: itemMargin - arrowSize + 'px',
	            width: arrowSize + 'px',
	            height: arrowSize + 'px',
	            transform: 'rotate(-45deg)',
	            right: '50%',
	            borderRadius: '0 0 0 100%',
	            transformOrigin: 'top right',
	            display: 'inline-block',
	            background: '' + highlightColor
	          },
	          '.ap-grid-detail-wrap': {
	            display: 'block',
	            width: 0,
	            transition: 'height ' + duration + 'ms, max-height ' + duration + 'ms',
	            padding: 0,
	            margin: 0,
	            zIndex: 4,
	            boxSizing: 'border-box',
	            background: '' + highlightColor,
	            color: 'white'
	          },
	          '.ap-grid-detail-wrap-active': {
	            width: '100%'
	          },
	          '.ap-grid-detail-wrap-closed': {
	            maxHeight: arrowSize + 'px !important',
	            height: 0
	          },
	          '.ap-grid-item': {
	            display: 'inline-flex',
	            textAlign: 'center',
	            width: itemSize + 'px',
	            height: itemSize + 'px',
	            border: '2px solid #CCC',
	            backgroundColor: '#FFF',
	            backgroundSize: 'cover',
	            justifyContent: 'flex-start',
	            alignItems: 'center',
	            flexDirection: 'column',
	            overflow: 'hidden',
	            padding: itemMargin + 'px',
	            borderRadius: '4px',
	            margin: 8
	          },
	          '.ap-grid-item:hover': {
	            background: '#FAFAFA',
	            cursor: 'pointer'
	          },
	          '.ap-grid-item-title': {
	            padding: 0,
	            margin: '4px 0',
	            fontSize: 'larger'
	          },
	          '.ap-grid-item-text': {
	            lineHeight: '1em',
	            fontSize: 'smaller',
	            margin: 0
	          },
	          '.ap-grid-item-wrap-selected .ap-grid-item': {
	            border: '2px solid ' + highlightColor
	          },
	          '.ap-grid-item-wrap-selected .ap-grid-item:hover,.ap-grid-item-wrap-selected .ap-grid-item:active': {
	            border: '2px solid ' + highlightColor
	          }
	        }

	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApGridStyle$styleDat = ApGridStyle.styleData(props);

	    var all = _ApGridStyle$styleDat.all;
	    var small = _ApGridStyle$styleDat.small;
	    var medium = _ApGridStyle$styleDat.medium;
	    var large = _ApGridStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApGridStyle;

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for grid display.
	 * @module apeman-react-grid
	 * @version 3.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApGrid = exports.ApGridStyle = exports.ApGridItem = undefined;

	var _ap_grid_item = __webpack_require__(450);

	var _ap_grid_item2 = _interopRequireDefault(_ap_grid_item);

	var _ap_grid_style = __webpack_require__(451);

	var _ap_grid_style2 = _interopRequireDefault(_ap_grid_style);

	var _ap_grid = __webpack_require__(449);

	var _ap_grid2 = _interopRequireDefault(_ap_grid);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApGridItem = _ap_grid_item2.default;
	exports.ApGridStyle = _ap_grid_style2.default;
	exports.ApGrid = _ap_grid2.default;

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * Handy react components of apeman.
	 * @namespace apemanReactHandy
	 * @property {function} ApSignStyle - ApSignStyle component from "apeman-react-sign" module.
	 * @property {function} ApSigninForm - ApSigninForm component from "apeman-react-sign" module.
	 * @property {function} ApSignmodForm - ApSignmodForm component from "apeman-react-sign" module.
	 * @property {function} ApSignupForm - ApSignupForm component from "apeman-react-sign" module.
	 * @property {function} ApResignLeadForm - ApResignLeadForm component from "apeman-react-resign" module.
	 * @property {function} ApResignReasonForm - ApResignReasonForm component from "apeman-react-resign" module.
	 * @property {function} ApResignStyle - ApResignStyle component from "apeman-react-resign" module.
	 * @property {function} ApRecoverResetForm - ApRecoverResetForm component from "apeman-react-recover" module.
	 * @property {function} ApRecoverSendForm - ApRecoverSendForm component from "apeman-react-recover" module.
	 * @property {function} ApRecoverStyle - ApRecoverStyle component from "apeman-react-recover" module.
	 * @property {function} ApProfileDataForm - ApProfileDataForm component from "apeman-react-profile" module.
	 * @property {function} ApProfileLeadForm - ApProfileLeadForm component from "apeman-react-profile" module.
	 * @property {function} ApProfileStyle - ApProfileStyle component from "apeman-react-profile" module.
	*/

	'use strict';

	var apemanReactSign = __webpack_require__(577);
	var apemanReactResign = __webpack_require__(559);
	var apemanReactRecover = __webpack_require__(554);
	var apemanReactProfile = __webpack_require__(544);
	// --------------------------
	// apeman-react-sign
	// --------------------------

	exports.ApSignStyle = apemanReactSign.ApSignStyle;
	exports.ApSigninForm = apemanReactSign.ApSigninForm;
	exports.ApSignmodForm = apemanReactSign.ApSignmodForm;
	exports.ApSignupForm = apemanReactSign.ApSignupForm;

	// --------------------------
	// apeman-react-resign
	// --------------------------

	exports.ApResignLeadForm = apemanReactResign.ApResignLeadForm;
	exports.ApResignReasonForm = apemanReactResign.ApResignReasonForm;
	exports.ApResignStyle = apemanReactResign.ApResignStyle;

	// --------------------------
	// apeman-react-recover
	// --------------------------

	exports.ApRecoverResetForm = apemanReactRecover.ApRecoverResetForm;
	exports.ApRecoverSendForm = apemanReactRecover.ApRecoverSendForm;
	exports.ApRecoverStyle = apemanReactRecover.ApRecoverStyle;

	// --------------------------
	// apeman-react-profile
	// --------------------------

	exports.ApProfileDataForm = apemanReactProfile.ApProfileDataForm;
	exports.ApProfileLeadForm = apemanReactProfile.ApProfileLeadForm;
	exports.ApProfileStyle = apemanReactProfile.ApProfileStyle;

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for head component.
	 * @class ApHead
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _stringcase = __webpack_require__(97);

	var _stringcase2 = _interopRequireDefault(_stringcase);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHead */
	var ApHead = _react2.default.createClass({
	  displayName: 'ApHead',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** CharSet */
	    charSet: _react.PropTypes.string,
	    /** Document Title */
	    title: _react.PropTypes.string,
	    /** Favicon */
	    icon: _react.PropTypes.string,
	    /** Meta data */
	    meta: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.object), _react.PropTypes.object]),
	    /** Micro data settings */
	    itemProps: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.object), _react.PropTypes.object]),
	    /** CSS file urls */
	    css: _react.PropTypes.array,
	    /** JS file urls */
	    js: _react.PropTypes.array,
	    /** Version string */
	    version: _react.PropTypes.string,
	    /** Querystring key for version */
	    versionKey: _react.PropTypes.string,
	    /** Global variables */
	    globals: _react.PropTypes.object,
	    /** View port settings */
	    viewPort: _react.PropTypes.object,
	    /** Base url */
	    base: _react.PropTypes.string,
	    /** Target of base url. '_blank', '_parent', '_self', '_top' or frame name */
	    baseTarget: _react.PropTypes.string,
	    /** Path of manifest.json */
	    manifest: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {
	    renderBase: function renderBase(base, target) {
	      if (!base) {
	        return null;
	      }
	      return _react2.default.createElement('base', { href: base, target: target });
	    },
	    renderCharset: function renderCharset(charSet) {
	      if (!charSet) {
	        return null;
	      }
	      return _react2.default.createElement('meta', { className: 'ap-head-meta', charSet: charSet });
	    },
	    renderTitle: function renderTitle(title) {
	      if (!title) {
	        return null;
	      }
	      return _react2.default.createElement('title', { className: 'ap-head-title' }, title);
	    },
	    renderIcon: function renderIcon(url, query) {
	      if (!url) {
	        return null;
	      }
	      return _react2.default.createElement('link', { rel: 'icon', href: ApHead._addQuery(url, query) });
	    },
	    renderMetaValues: function renderMetaValues(values) {
	      if (!values) {
	        return null;
	      }
	      return [].concat(values).map(function (values, i) {
	        return Object.keys(values).map(function (name, j) {
	          return _react2.default.createElement('meta', { name: name,
	            content: values[name],
	            key: 'meta-' + i + '-' + j });
	        });
	      }).reduce(function (a, b) {
	        return [].concat(a, b);
	      }, []);
	    },
	    renderItemProps: function renderItemProps(values) {
	      if (!values) {
	        return null;
	      }
	      return [].concat(values).map(function (values, i) {
	        return Object.keys(values).map(function (name, j) {
	          return _react2.default.createElement('meta', { itemProp: name,
	            content: values[name],
	            key: 'item-prop' + i + '-' + j });
	        });
	      }).reduce(function (a, b) {
	        return [].concat(a, b);
	      }, []);
	    },
	    renderCss: function renderCss(urls, query) {
	      if (!urls) {
	        return null;
	      }
	      return [].concat(urls).map(function (url, i) {
	        return _react2.default.createElement('link', { rel: 'stylesheet',
	          type: 'text/css',
	          key: 'css-' + i + '-' + url,
	          href: ApHead._addQuery(url, query) });
	      });
	    },
	    renderJs: function renderJs(urls, query) {
	      if (!urls) {
	        return null;
	      }
	      return [].concat(urls).map(function (url, i) {
	        return _react2.default.createElement('script', { type: 'text/javascript',
	          key: 'js-' + i + '-' + url,
	          src: ApHead._addQuery(url, query) });
	      });
	    },
	    renderGlobals: function renderGlobals(values) {
	      var _stringify = function _stringify(data) {
	        return data ? JSON.stringify(data || {}) : 'null';
	      };

	      return Object.keys(values || {}).map(function (key, i) {
	        return _react2.default.createElement('script', { type: 'text/javascript',
	          key: 'global-' + i + '-' + key,
	          dangerouslySetInnerHTML: { __html: 'window.' + key + '=' + _stringify(values[key]) } });
	      });
	    },
	    renderViewPort: function renderViewPort(values) {
	      var content = Object.keys(values || {}).map(function (key) {
	        return [_stringcase2.default.spinalcase(key), values[key]].join('=');
	      }).join(',');
	      return _react2.default.createElement('meta', { name: 'viewport', content: content });
	    },
	    renderManifest: function renderManifest(value) {
	      if (!value) {
	        return null;
	      }
	      return _react2.default.createElement('link', { rel: 'manifest', href: value });
	    },
	    _addQuery: function _addQuery(url, query) {
	      var joiner = /\?/.test(url) ? '&' : '?';
	      return [url, query].join(joiner);
	    }
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      charSet: 'utf-8',
	      version: 'unknown',
	      versionKey: 'v',
	      viewPort: {
	        width: 'device-width',
	        initialScale: '1.0'
	      },
	      base: null,
	      baseTarget: undefined
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var query = [props.versionKey, props.version].join('=');
	    return _react2.default.createElement('head', { className: 'ap-head' }, ApHead.renderBase(props.base, props.baseTarget), ApHead.renderCharset(props.charSet), ApHead.renderTitle(props.title), ApHead.renderMetaValues(props.meta), ApHead.renderItemProps(props.itemProps), ApHead.renderIcon(props.icon, query), ApHead.renderGlobals(props.globals), ApHead.renderCss(props.css, query), ApHead.renderViewPort(props.viewPort), ApHead.renderManifest(props.manifest), ApHead.renderJs(props.js, query), props.children);
	  }
	});

	exports.default = ApHead;

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for head component.
	 * @module apeman-react-head
	 * @version 3.1.7
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApHead = undefined;

	var _ap_head = __webpack_require__(454);

	var _ap_head2 = _interopRequireDefault(_ap_head);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApHead = _ap_head2.default;

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for header components.
	 * @class ApHeader
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactMixinResize = __webpack_require__(232);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHeader */
	var ApHeader = _react2.default.createClass({
	  displayName: 'ApHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [_apemanReactMixinResize.ApResizeMixin],

	  getInitialState: function getInitialState() {
	    return {
	      headerHeight: 'auto'
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: 'ap-header-space',
	      style: { minHeight: state.headerHeight } }, _react2.default.createElement('header', { className: (0, _classnames2.default)('ap-header', props.className),
	      style: Object.assign({}, props.style),
	      ref: function ref(header) {
	        s.header = header;
	      } }, _react2.default.createElement('div', { className: 'ap-header-back' }), props.children));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.resizeHeader();
	  },
	  windowDidResize: function windowDidResize() {
	    var s = this;
	    s.resizeHeader();
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  resizeHeader: function resizeHeader() {
	    var s = this;
	    var header = s.header;

	    if (!header) {
	      return;
	    }

	    var _header$getBoundingCl = header.getBoundingClientRect();

	    var height = _header$getBoundingCl.height;

	    s.setState({
	      headerHeight: height
	    });
	  }

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApHeader; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withOutside)(ApHeader);

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Dropdown for header
	 * @class ApHeaderDropdown
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactDropdown = __webpack_require__(145);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHeaderDropdown */
	var ApHeaderDropdown = _react2.default.createClass({
	  displayName: 'ApHeaderDropdown',

	  // --------------------
	  // Specs
	  // --------------------

	  mixins: [],

	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactDropdown.ApDropdown, _extends({ className: (0, _classnames2.default)('ap-header-dropdown', props.className)
	    }, props), props.children);
	  }
	});

	exports.default = ApHeaderDropdown;

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Dropdown item for header
	 * @class ApHeaderDropdownItem
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactDropdown = __webpack_require__(145);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHeaderDropdownItem */
	var ApHeaderDropdownItem = _react2.default.createClass({
	  displayName: 'ApHeaderDropdownItem',

	  // --------------------
	  // Specs
	  // --------------------

	  statics: {
	    /**
	     * Create
	     * @param {string} label - Label oth the item.
	     * @param {function}  onTap - Handle for on tap
	     * @param {object} props - Property values.
	     * @returns {object} - ApHeaderTabItem element.
	     */
	    createItem: function createItem(label, onTap, props) {
	      return _react2.default.createElement(ApHeaderDropdownItem, _extends({}, props, {
	        onTap: onTap
	      }), label);
	    }
	  },

	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactDropdown.ApDropdownItem, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-header-dropdown-item', props.className)
	    }), props.children);
	  }
	});

	exports.default = ApHeaderDropdownItem;

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Logo for header.
	 * @class ApHeaderLogo
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHeaderLogo */
	var ApHeaderLogo = _react2.default.createClass({
	  displayName: 'ApHeaderLogo',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    href: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      href: '/'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('h1', { className: (0, _classnames2.default)('ap-header-logo', props.className) }, _react2.default.createElement('a', { className: 'ap-header-logo-link', href: props.href }, props.children));
	  }
	});

	exports.default = ApHeaderLogo;

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * menu for header.
	 * @class ApHeaderMenu
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApHeaderMenu */
	var ApHeaderMenu = function (_Component) {
	  _inherits(ApHeaderMenu, _Component);

	  function ApHeaderMenu() {
	    _classCallCheck(this, ApHeaderMenu);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApHeaderMenu).apply(this, arguments));
	  }

	  _createClass(ApHeaderMenu, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-header-menu', props.className) }, props.children);
	    }
	  }]);

	  return ApHeaderMenu;
	}(_react.Component);

	Object.assign(ApHeaderMenu, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  defaultProps: {}
	});

	exports.default = ApHeaderMenu;

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * menu for header.
	 * @class ApHeaderMenuItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHeaderMenuItem */
	var ApHeaderMenuItem = _react2.default.createClass({
	  displayName: 'ApHeaderMenuItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  statics: {
	    /**
	     * Create an props.
	     * @param {string} label - Label oth the item.
	     * @param {function} onTap - Callback for on tap.
	     * @param {object} props - Property values.
	     * @returns {object} - ApHeaderMenu element.
	     */
	    createItem: function createItem(label, onTap, props) {
	      return _react2.default.createElement(ApHeaderMenuItem, _extends({ onTap: onTap }, props), label);
	    },

	    /**
	     * Create a primary button item.
	     * @param {string} label - Label oth the item.
	     * @param {function} onTap - Callback for on tap.
	     * @param {object} props - Property values.
	     * @returns {object} - ApHeaderMenu element.
	     */
	    createPrimaryItem: function createPrimaryItem(label, onTap, props) {
	      return ApHeaderMenuItem.createItem(label, onTap, Object.assign({}, props, { primary: true }));
	    }
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactButton.ApButton, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-header-menu-item', props.className)
	    }), props.children);
	  }
	});

	exports.default = ApHeaderMenuItem;

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApHeader.
	 * @class ApHeaderStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _acolor = __webpack_require__(27);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApHeaderStyle */
	var ApHeaderStyle = function (_Component) {
	  _inherits(ApHeaderStyle, _Component);

	  function ApHeaderStyle() {
	    _classCallCheck(this, ApHeaderStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApHeaderStyle).apply(this, arguments));
	  }

	  _createClass(ApHeaderStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApHeaderStyle$styleD = ApHeaderStyle.styleData(props);

	      var all = _ApHeaderStyle$styleD.all;
	      var small = _ApHeaderStyle$styleD.small;
	      var medium = _ApHeaderStyle$styleD.medium;
	      var large = _ApHeaderStyle$styleD.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApHeaderStyle;
	}(_react.Component);

	Object.assign(ApHeaderStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    height: _react.PropTypes.number,
	    color: _react.PropTypes.string,
	    backgroundColor: _react.PropTypes.string,
	    highlightColor: _react.PropTypes.string,
	    highlightHeight: _react.PropTypes.number,
	    tabHeight: _react.PropTypes.number
	  },
	  defaultProps: {
	    style: {},
	    height: 44,
	    tabHeight: 36,
	    color: '#555555',
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	    borderColor: '#F0F0F0',
	    highlightHeight: 2
	  },

	  styleData: function styleData(config) {
	    var color = config.color;
	    var backgroundColor = config.backgroundColor;
	    var highlightColor = config.highlightColor;
	    var borderColor = config.borderColor;
	    var height = config.height;
	    var highlightHeight = config.highlightHeight;
	    var tabHeight = config.tabHeight;

	    return {
	      all: {
	        '.ap-header-space': {
	          display: 'block',
	          position: 'relative',
	          width: '100%',
	          height: height + 'px',
	          padding: 0,
	          margin: 0,
	          boxSizing: 'border-box'
	        },
	        '.ap-header': {
	          position: 'fixed',
	          left: 0,
	          top: 0,
	          height: 'auto',
	          textAlign: 'left',
	          boxSizing: 'border-box',
	          width: '100%',
	          background: '' + (0, _acolor.alpha)(backgroundColor, 0.9),
	          zIndex: 9
	        },
	        '.ap-header-back': {
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          right: 0,
	          zIndex: -1,
	          height: height + 'px',
	          borderBottom: '1px solid ' + borderColor
	        },
	        '.ap-header-logo': {
	          padding: 0,
	          margin: 0,
	          display: 'inline-block',
	          fontWeight: 100,
	          lineHeight: height + 'px',
	          fontSize: parseInt(height * 2 / 3) + 'px',
	          maxWidth: '100%'
	        },
	        '.ap-header-logo .ap-header-logo-link,.ap-header-logo .ap-header-logo-link:link': {
	          display: 'inline-block',
	          padding: '0 2px',
	          cursor: 'default',
	          color: '' + color,
	          lineHeight: height + 'px',
	          maxWidth: '100%',
	          textDecoration: 'none',
	          wordWrap: 'break-word'
	        },
	        '.ap-header-logo .ap-header-logo-link:hover': {
	          textDecoration: 'none'
	        },
	        '.ap-header-logo .ap-header-logo-link:active': {
	          opacity: 0.8,
	          textDecoration: 'none'
	        },
	        '.ap-header-tab-wrap': {
	          display: 'block',
	          padding: 0,
	          margin: 0,
	          borderBottom: '1px solid ' + borderColor
	        },
	        '.ap-header-tab': {
	          display: 'flex',
	          boxSizing: 'border-box',
	          fontSize: '14px',
	          color: '#888',
	          height: tabHeight + 'px',
	          lineHeight: tabHeight + 'px',
	          background: 'transparent'
	        },
	        '.ap-header-tab-item': {
	          flex: 1,
	          padding: '0 8px',
	          textAlign: 'center',
	          boxSizing: 'border-box',
	          cursor: 'pointer',
	          display: 'inline-block',
	          textDecoration: 'none',
	          height: tabHeight + 'px',
	          borderColor: 'transparent',
	          borderBottomWidth: highlightHeight + 'px'
	        },
	        '.ap-header-tab-item:hover': {
	          textDecoration: 'none'
	        },
	        '.ap-header-tab-item:active': {
	          color: '' + highlightColor,
	          borderColor: 'transparent',
	          opacity: 0.66
	        },
	        '.ap-header-tab-item-selected,.ap-header-tab-item-selected:hover,.ap-header-tab-item-selected:active': {
	          color: '' + highlightColor,
	          borderColor: 'transparent transparent ' + highlightColor
	        },
	        '.ap-header-menu': {
	          position: 'relative',
	          float: 'right',
	          padding: '0px'
	        },
	        '.ap-header-menu-item': {
	          padding: '0 8px',
	          margin: '4px 8px',
	          fontSize: '12px',
	          verticalAlign: 'middle',
	          height: height - 8 + 'px',
	          lineHeight: height - 8 + 'px'
	        },
	        '.ap-header-dropdown': {
	          float: 'right',
	          position: 'static'
	        },
	        '.ap-header-dropdown .ap-dropdown-content': {
	          left: 'auto',
	          right: 0
	        },
	        '.ap-header-dropdown-item': {}
	      },
	      small: {
	        '.ap-header-logo': {
	          float: 'left'
	        },
	        '.ap-header-tab': {
	          display: 'inline-block',
	          margin: '0 16px',
	          padding: '0 8px',
	          height: height + 'px',
	          lineHeight: height + 'px'
	        },

	        '.ap-header-tab-item': {
	          flex: 'initial',
	          height: height + 'px',
	          padding: '0 16px'
	        },
	        '.ap-header-back': {
	          borderBottom: 'none'
	        }
	      }
	    };
	  }
	});

	exports.default = ApHeaderStyle;

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tab for header.
	 * @class ApHeaderTab
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTab = __webpack_require__(150);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHeaderTab */
	var ApHeaderTab = _react2.default.createClass({
	  displayName: 'ApHeaderTab',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('nav', { className: 'ap-header-tab-wrap' }, _react2.default.createElement(_apemanReactTab.ApTab, { className: (0, _classnames2.default)('ap-header-tab', props.className) }, props.children));
	  }
	});

	exports.default = ApHeaderTab;

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tab item for header.
	 * @class ApHeaderTabItem
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTab = __webpack_require__(150);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApHeaderTabItem */
	var ApHeaderTabItem = function (_Component) {
	  _inherits(ApHeaderTabItem, _Component);

	  function ApHeaderTabItem() {
	    _classCallCheck(this, ApHeaderTabItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApHeaderTabItem).apply(this, arguments));
	  }

	  _createClass(ApHeaderTabItem, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var className = (0, _classnames2.default)('ap-header-tab-item', props.className, {
	        'ap-header-tab-item-selected': !!props.selected
	      });
	      return _react2.default.createElement(_apemanReactTab.ApTabItem, _extends({}, props, {
	        className: className
	      }), props.children);
	    }
	  }]);

	  return ApHeaderTabItem;
	}(_react.Component);

	Object.assign(ApHeaderTabItem, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    selected: _react.PropTypes.bool
	  },

	  /**
	   * Create
	   * @param {string} label - Label oth the item.
	   * @param {string} href - Tab href
	   * @param {object} props - Property values.
	   * @returns {object} - ApHeaderTabItem element.
	   */
	  createItem: function createItem(label, href, props) {
	    return _react2.default.createElement(ApHeaderTabItem, _extends({ href: href
	    }, props), label);
	  },

	  defaultProps: {
	    selected: false
	  }

	});

	exports.default = ApHeaderTabItem;

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for header components.
	 * @module apeman-react-header
	 * @version 3.0.8
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApHeader = exports.ApHeaderTab = exports.ApHeaderTabItem = exports.ApHeaderStyle = exports.ApHeaderMenu = exports.ApHeaderMenuItem = exports.ApHeaderLogo = exports.ApHeaderDropdown = exports.ApHeaderDropdownItem = undefined;

	var _ap_header_dropdown_item = __webpack_require__(458);

	var _ap_header_dropdown_item2 = _interopRequireDefault(_ap_header_dropdown_item);

	var _ap_header_dropdown = __webpack_require__(457);

	var _ap_header_dropdown2 = _interopRequireDefault(_ap_header_dropdown);

	var _ap_header_logo = __webpack_require__(459);

	var _ap_header_logo2 = _interopRequireDefault(_ap_header_logo);

	var _ap_header_menu_item = __webpack_require__(461);

	var _ap_header_menu_item2 = _interopRequireDefault(_ap_header_menu_item);

	var _ap_header_menu = __webpack_require__(460);

	var _ap_header_menu2 = _interopRequireDefault(_ap_header_menu);

	var _ap_header_style = __webpack_require__(462);

	var _ap_header_style2 = _interopRequireDefault(_ap_header_style);

	var _ap_header_tab_item = __webpack_require__(464);

	var _ap_header_tab_item2 = _interopRequireDefault(_ap_header_tab_item);

	var _ap_header_tab = __webpack_require__(463);

	var _ap_header_tab2 = _interopRequireDefault(_ap_header_tab);

	var _ap_header = __webpack_require__(456);

	var _ap_header2 = _interopRequireDefault(_ap_header);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApHeaderDropdownItem = _ap_header_dropdown_item2.default;
	exports.ApHeaderDropdown = _ap_header_dropdown2.default;
	exports.ApHeaderLogo = _ap_header_logo2.default;
	exports.ApHeaderMenuItem = _ap_header_menu_item2.default;
	exports.ApHeaderMenu = _ap_header_menu2.default;
	exports.ApHeaderStyle = _ap_header_style2.default;
	exports.ApHeaderTabItem = _ap_header_tab_item2.default;
	exports.ApHeaderTab = _ap_header_tab2.default;
	exports.ApHeader = _ap_header2.default;

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for html component.
	 * @class ApHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHtml */
	var ApHtml = _react2.default.createClass({
	  displayName: 'ApHtml',
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('html', _extends({}, props, {
	      className: (0, _classnames2.default)('ap-html', props.className) }), props.children);
	  }
	});

	exports.default = ApHtml;

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApHtml.
	 * @class ApHtmlStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApHtmlStyle */
	var ApHtmlStyle = _react2.default.createClass({
	  displayName: 'ApHtmlStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-html': {
	            padding: 0,
	            margin: 0
	          }
	        }

	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApHtmlStyle$styleDat = ApHtmlStyle.styleData(props);

	    var all = _ApHtmlStyle$styleDat.all;
	    var small = _ApHtmlStyle$styleDat.small;
	    var medium = _ApHtmlStyle$styleDat.medium;
	    var large = _ApHtmlStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApHtmlStyle;

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for html component.
	 * @module apeman-react-html
	 * @version 3.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApHtml = exports.ApHtmlStyle = undefined;

	var _ap_html_style = __webpack_require__(467);

	var _ap_html_style2 = _interopRequireDefault(_ap_html_style);

	var _ap_html = __webpack_require__(466);

	var _ap_html2 = _interopRequireDefault(_ap_html);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApHtmlStyle = _ap_html_style2.default;
	exports.ApHtml = _ap_html2.default;

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Icon for font awesome.
	 * @class ApFaIcon
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_icon = __webpack_require__(146);

	var _ap_icon2 = _interopRequireDefault(_ap_icon);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApFaIcon */
	var ApFaIcon = _react2.default.createClass({
	  displayName: 'ApFaIcon',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    type: _react.PropTypes.string.isRequired
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      type: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_ap_icon2.default, { className: (0, _classnames2.default)('ap-fa-icon', 'fa', props.className, 'fa-' + props.type),
	      style: Object.assign({}, props.style) });
	  }
	});

	exports.default = ApFaIcon;

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApIcon.
	 * @class ApIconStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApIconStyle */
	var ApIconStyle = _react2.default.createClass({
	  displayName: 'ApIconStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-icon': {
	            display: 'inline-block',
	            margin: '0 2px'
	          }
	        },
	        small: {},
	        medium: {},
	        large: {}
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApIconStyle$styleDat = ApIconStyle.styleData(props);

	    var all = _ApIconStyle$styleDat.all;
	    var small = _ApIconStyle$styleDat.small;
	    var medium = _ApIconStyle$styleDat.medium;
	    var large = _ApIconStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApIconStyle;

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Icon for font awesome.
	 * @class ApIonIcon
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_icon = __webpack_require__(146);

	var _ap_icon2 = _interopRequireDefault(_ap_icon);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApIonIcon */
	var ApIonIcon = _react2.default.createClass({
	  displayName: 'ApIonIcon',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    type: _react.PropTypes.string.isRequired
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      type: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_ap_icon2.default, { className: (0, _classnames2.default)('ap-ion-icon', 'ion', props.className, 'ion-' + props.type),
	      style: Object.assign({}, props.style) });
	  }
	});

	exports.default = ApIonIcon;

/***/ },
/* 472 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var FONT_AWESOME_CDN = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.css';
	var ICON_ICONS_CDN = 'https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css';

	exports.FONT_AWESOME_CDN = FONT_AWESOME_CDN;
	exports.ICON_ICONS_CDN = ICON_ICONS_CDN;
	exports.default = {
	  FONT_AWESOME_CDN: FONT_AWESOME_CDN,
	  ICON_ICONS_CDN: ICON_ICONS_CDN
	};

/***/ },
/* 473 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var FA_TYPES = 'glass,music,search,envelope-o,heart,star,star-o,user,film,th-large,th,th-list,check,remove,close,times,search-plus,search-minus,power-off,signal,gear,cog,trash-o,home,file-o,clock-o,road,download,arrow-circle-o-down,arrow-circle-o-up,inbox,play-circle-o,rotate-right,repeat,refresh,list-alt,lock,flag,headphones,volume-off,volume-down,volume-up,qrcode,barcode,tag,tags,book,bookmark,print,camera,font,bold,italic,text-height,text-width,align-left,align-center,align-right,align-justify,list,dedent,outdent,indent,video-camera,photo,image,picture-o,pencil,map-marker,adjust,tint,edit,pencil-square-o,share-square-o,check-square-o,arrows,step-backward,fast-backward,backward,play,pause,stop,forward,fast-forward,step-forward,eject,chevron-left,chevron-right,plus-circle,minus-circle,times-circle,check-circle,question-circle,info-circle,crosshairs,times-circle-o,check-circle-o,ban,arrow-left,arrow-right,arrow-up,arrow-down,mail-forward,share,expand,compress,plus,minus,asterisk,exclamation-circle,gift,leaf,fire,eye,eye-slash,warning,exclamation-triangle,plane,calendar,random,comment,magnet,chevron-up,chevron-down,retweet,shopping-cart,folder,folder-open,arrows-v,arrows-h,bar-chart-o,bar-chart,twitter-square,facebook-square,camera-retro,key,gears,cogs,comments,thumbs-o-up,thumbs-o-down,star-half,heart-o,sign-out,linkedin-square,thumb-tack,external-link,sign-in,trophy,github-square,upload,lemon-o,phone,square-o,bookmark-o,phone-square,twitter,facebook-f,facebook,github,unlock,credit-card,feed,rss,hdd-o,bullhorn,bell,certificate,hand-o-right,hand-o-left,hand-o-up,hand-o-down,arrow-circle-left,arrow-circle-right,arrow-circle-up,arrow-circle-down,globe,wrench,tasks,filter,briefcase,arrows-alt,group,users,chain,link,cloud,flask,cut,scissors,copy,files-o,paperclip,save,floppy-o,square,navicon,reorder,bars,list-ul,list-ol,strikethrough,underline,table,magic,truck,pinterest,pinterest-square,google-plus-square,google-plus,money,caret-down,caret-up,caret-left,caret-right,columns,unsorted,sort,sort-down,sort-desc,sort-up,sort-asc,envelope,linkedin,rotate-left,undo,legal,gavel,dashboard,tachometer,comment-o,comments-o,flash,bolt,sitemap,umbrella,paste,clipboard,lightbulb-o,exchange,cloud-download,cloud-upload,user-md,stethoscope,suitcase,bell-o,coffee,cutlery,file-text-o,building-o,hospital-o,ambulance,medkit,fighter-jet,beer,h-square,plus-square,angle-double-left,angle-double-right,angle-double-up,angle-double-down,angle-left,angle-right,angle-up,angle-down,desktop,laptop,tablet,mobile-phone,mobile,circle-o,quote-left,quote-right,spinner,circle,mail-reply,reply,github-alt,folder-o,folder-open-o,smile-o,frown-o,meh-o,gamepad,keyboard-o,flag-o,flag-checkered,terminal,code,mail-reply-all,reply-all,star-half-empty,star-half-full,star-half-o,location-arrow,crop,code-fork,unlink,chain-broken,question,info,exclamation,superscript,subscript,eraser,puzzle-piece,microphone,microphone-slash,shield,calendar-o,fire-extinguisher,rocket,maxcdn,chevron-circle-left,chevron-circle-right,chevron-circle-up,chevron-circle-down,html5,css3,anchor,unlock-alt,bullseye,ellipsis-h,ellipsis-v,rss-square,play-circle,ticket,minus-square,minus-square-o,level-up,level-down,check-square,pencil-square,external-link-square,share-square,compass,toggle-down,caret-square-o-down,toggle-up,caret-square-o-up,toggle-right,caret-square-o-right,euro,eur,gbp,dollar,usd,rupee,inr,cny,rmb,yen,jpy,ruble,rouble,rub,won,krw,bitcoin,btc,file,file-text,sort-alpha-asc,sort-alpha-desc,sort-amount-asc,sort-amount-desc,sort-numeric-asc,sort-numeric-desc,thumbs-up,thumbs-down,youtube-square,youtube,xing,xing-square,youtube-play,dropbox,stack-overflow,instagram,flickr,adn,bitbucket,bitbucket-square,tumblr,tumblr-square,long-arrow-down,long-arrow-up,long-arrow-left,long-arrow-right,apple,windows,android,linux,dribbble,skype,foursquare,trello,female,male,gittip,gratipay,sun-o,moon-o,archive,bug,vk,weibo,renren,pagelines,stack-exchange,arrow-circle-o-right,arrow-circle-o-left,toggle-left,caret-square-o-left,dot-circle-o,wheelchair,vimeo-square,turkish-lira,try,plus-square-o,space-shuttle,slack,envelope-square,wordpress,openid,institution,bank,university,mortar-board,graduation-cap,yahoo,google,reddit,reddit-square,stumbleupon-circle,stumbleupon,delicious,digg,pied-piper-pp,pied-piper-alt,drupal,joomla,language,fax,building,child,paw,spoon,cube,cubes,behance,behance-square,steam,steam-square,recycle,automobile,car,cab,taxi,tree,spotify,deviantart,soundcloud,database,file-pdf-o,file-word-o,file-excel-o,file-powerpoint-o,file-photo-o,file-picture-o,file-image-o,file-zip-o,file-archive-o,file-sound-o,file-audio-o,file-movie-o,file-video-o,file-code-o,vine,codepen,jsfiddle,life-bouy,life-buoy,life-saver,support,life-ring,circle-o-notch,ra,resistance,rebel,ge,empire,git-square,git,y-combinator-square,yc-square,hacker-news,tencent-weibo,qq,wechat,weixin,send,paper-plane,send-o,paper-plane-o,history,circle-thin,header,paragraph,sliders,share-alt,share-alt-square,bomb,soccer-ball-o,futbol-o,tty,binoculars,plug,slideshare,twitch,yelp,newspaper-o,wifi,calculator,paypal,google-wallet,cc-visa,cc-mastercard,cc-discover,cc-amex,cc-paypal,cc-stripe,bell-slash,bell-slash-o,trash,copyright,at,eyedropper,paint-brush,birthday-cake,area-chart,pie-chart,line-chart,lastfm,lastfm-square,toggle-off,toggle-on,bicycle,bus,ioxhost,angellist,cc,shekel,sheqel,ils,meanpath,buysellads,connectdevelop,dashcube,forumbee,leanpub,sellsy,shirtsinbulk,simplybuilt,skyatlas,cart-plus,cart-arrow-down,diamond,ship,user-secret,motorcycle,street-view,heartbeat,venus,mars,mercury,intersex,transgender,transgender-alt,venus-double,mars-double,venus-mars,mars-stroke,mars-stroke-v,mars-stroke-h,neuter,genderless,facebook-official,pinterest-p,whatsapp,server,user-plus,user-times,hotel,bed,viacoin,train,subway,medium,yc,y-combinator,optin-monster,opencart,expeditedssl,battery-4,battery-full,battery-3,battery-three-quarters,battery-2,battery-half,battery-1,battery-quarter,battery-0,battery-empty,mouse-pointer,i-cursor,object-group,object-ungroup,sticky-note,sticky-note-o,cc-jcb,cc-diners-club,clone,balance-scale,hourglass-o,hourglass-1,hourglass-start,hourglass-2,hourglass-half,hourglass-3,hourglass-end,hourglass,hand-grab-o,hand-rock-o,hand-stop-o,hand-paper-o,hand-scissors-o,hand-lizard-o,hand-spock-o,hand-pointer-o,hand-peace-o,trademark,registered,creative-commons,gg,gg-circle,tripadvisor,odnoklassniki,odnoklassniki-square,get-pocket,wikipedia-w,safari,chrome,firefox,opera,internet-explorer,tv,television,contao,500px,amazon,calendar-plus-o,calendar-minus-o,calendar-times-o,calendar-check-o,industry,map-pin,map-signs,map-o,map,commenting,commenting-o,houzz,vimeo,black-tie,fonticons,reddit-alien,edge,credit-card-alt,codiepie,modx,fort-awesome,usb,product-hunt,mixcloud,scribd,pause-circle,pause-circle-o,stop-circle,stop-circle-o,shopping-bag,shopping-basket,hashtag,bluetooth,bluetooth-b,percent,gitlab,wpbeginner,wpforms,envira,universal-access,wheelchair-alt,question-circle-o,blind,audio-description,volume-control-phone,braille,assistive-listening-systems,asl-interpreting,american-sign-language-interpreting,deafness,hard-of-hearing,deaf,glide,glide-g,signing,sign-language,low-vision,viadeo,viadeo-square,snapchat,snapchat-ghost,snapchat-square,pied-piper,first-order,yoast,themeisle,google-plus-circle,google-plus-official,fa,font-awesome';
	var ION_TYPES = 'alert,alert-circled,android-add,android-add-circle,android-alarm-clock,android-alert,android-apps,android-archive,android-arrow-back,android-arrow-down,android-arrow-dropdown,android-arrow-dropdown-circle,android-arrow-dropleft,android-arrow-dropleft-circle,android-arrow-dropright,android-arrow-dropright-circle,android-arrow-dropup,android-arrow-dropup-circle,android-arrow-forward,android-arrow-up,android-attach,android-bar,android-bicycle,android-boat,android-bookmark,android-bulb,android-bus,android-calendar,android-call,android-camera,android-cancel,android-car,android-cart,android-chat,android-checkbox,android-checkbox-blank,android-checkbox-outline,android-checkbox-outline-blank,android-checkmark-circle,android-clipboard,android-close,android-cloud,android-cloud-circle,android-cloud-done,android-cloud-outline,android-color-palette,android-compass,android-contact,android-contacts,android-contract,android-create,android-delete,android-desktop,android-document,android-done,android-done-all,android-download,android-drafts,android-exit,android-expand,android-favorite,android-favorite-outline,android-film,android-folder,android-folder-open,android-funnel,android-globe,android-hand,android-hangout,android-happy,android-home,android-image,android-laptop,android-list,android-locate,android-lock,android-mail,android-map,android-menu,android-microphone,android-microphone-off,android-more-horizontal,android-more-vertical,android-navigate,android-notifications,android-notifications-none,android-notifications-off,android-open,android-options,android-people,android-person,android-person-add,android-phone-landscape,android-phone-portrait,android-pin,android-plane,android-playstore,android-print,android-radio-button-off,android-radio-button-on,android-refresh,android-remove,android-remove-circle,android-restaurant,android-sad,android-search,android-send,android-settings,android-share,android-share-alt,android-star,android-star-half,android-star-outline,android-stopwatch,android-subway,android-sunny,android-sync,android-textsms,android-time,android-train,android-unlock,android-upload,android-volume-down,android-volume-mute,android-volume-off,android-volume-up,android-walk,android-warning,android-watch,android-wifi,aperture,archive,arrow-down-a,arrow-down-b,arrow-down-c,arrow-expand,arrow-graph-down-left,arrow-graph-down-right,arrow-graph-up-left,arrow-graph-up-right,arrow-left-a,arrow-left-b,arrow-left-c,arrow-move,arrow-resize,arrow-return-left,arrow-return-right,arrow-right-a,arrow-right-b,arrow-right-c,arrow-shrink,arrow-swap,arrow-up-a,arrow-up-b,arrow-up-c,asterisk,at,backspace,backspace-outline,bag,battery-charging,battery-empty,battery-full,battery-half,battery-low,beaker,beer,bluetooth,bonfire,bookmark,bowtie,briefcase,bug,calculator,calendar,camera,card,cash,chatbox,chatbox-working,chatboxes,chatbubble,chatbubble-working,chatbubbles,checkmark,checkmark-circled,checkmark-round,chevron-down,chevron-left,chevron-right,chevron-up,clipboard,clock,close,close-circled,close-round,closed-captioning,cloud,code,code-download,code-working,coffee,compass,compose,connection-bars,contrast,crop,cube,disc,document,document-text,drag,earth,easel,edit,egg,eject,email,email-unread,erlenmeyer-flask,erlenmeyer-flask-bubbles,eye,eye-disabled,female,filing,film-marker,fireball,flag,flame,flash,flash-off,folder,fork,fork-repo,forward,funnel,gear-a,gear-b,grid,hammer,happy,happy-outline,headphone,heart,heart-broken,help,help-buoy,help-circled,home,icecream,image,images,information,information-circled,ionic,ios-alarm,ios-alarm-outline,ios-albums,ios-albums-outline,ios-americanfootball,ios-americanfootball-outline,ios-analytics,ios-analytics-outline,ios-arrow-back,ios-arrow-down,ios-arrow-forward,ios-arrow-left,ios-arrow-right,ios-arrow-thin-down,ios-arrow-thin-left,ios-arrow-thin-right,ios-arrow-thin-up,ios-arrow-up,ios-at,ios-at-outline,ios-barcode,ios-barcode-outline,ios-baseball,ios-baseball-outline,ios-basketball,ios-basketball-outline,ios-bell,ios-bell-outline,ios-body,ios-body-outline,ios-bolt,ios-bolt-outline,ios-book,ios-book-outline,ios-bookmarks,ios-bookmarks-outline,ios-box,ios-box-outline,ios-briefcase,ios-briefcase-outline,ios-browsers,ios-browsers-outline,ios-calculator,ios-calculator-outline,ios-calendar,ios-calendar-outline,ios-camera,ios-camera-outline,ios-cart,ios-cart-outline,ios-chatboxes,ios-chatboxes-outline,ios-chatbubble,ios-chatbubble-outline,ios-checkmark,ios-checkmark-empty,ios-checkmark-outline,ios-circle-filled,ios-circle-outline,ios-clock,ios-clock-outline,ios-close,ios-close-empty,ios-close-outline,ios-cloud,ios-cloud-download,ios-cloud-download-outline,ios-cloud-outline,ios-cloud-upload,ios-cloud-upload-outline,ios-cloudy,ios-cloudy-night,ios-cloudy-night-outline,ios-cloudy-outline,ios-cog,ios-cog-outline,ios-color-filter,ios-color-filter-outline,ios-color-wand,ios-color-wand-outline,ios-compose,ios-compose-outline,ios-contact,ios-contact-outline,ios-copy,ios-copy-outline,ios-crop,ios-crop-strong,ios-download,ios-download-outline,ios-drag,ios-email,ios-email-outline,ios-eye,ios-eye-outline,ios-fastforward,ios-fastforward-outline,ios-filing,ios-filing-outline,ios-film,ios-film-outline,ios-flag,ios-flag-outline,ios-flame,ios-flame-outline,ios-flask,ios-flask-outline,ios-flower,ios-flower-outline,ios-folder,ios-folder-outline,ios-football,ios-football-outline,ios-game-controller-a,ios-game-controller-a-outline,ios-game-controller-b,ios-game-controller-b-outline,ios-gear,ios-gear-outline,ios-glasses,ios-glasses-outline,ios-grid-view,ios-grid-view-outline,ios-heart,ios-heart-outline,ios-help,ios-help-empty,ios-help-outline,ios-home,ios-home-outline,ios-infinite,ios-infinite-outline,ios-information,ios-information-empty,ios-information-outline,ios-ionic-outline,ios-keypad,ios-keypad-outline,ios-lightbulb,ios-lightbulb-outline,ios-list,ios-list-outline,ios-location,ios-location-outline,ios-locked,ios-locked-outline,ios-loop,ios-loop-strong,ios-medical,ios-medical-outline,ios-medkit,ios-medkit-outline,ios-mic,ios-mic-off,ios-mic-outline,ios-minus,ios-minus-empty,ios-minus-outline,ios-monitor,ios-monitor-outline,ios-moon,ios-moon-outline,ios-more,ios-more-outline,ios-musical-note,ios-musical-notes,ios-navigate,ios-navigate-outline,ios-nutrition,ios-nutrition-outline,ios-paper,ios-paper-outline,ios-paperplane,ios-paperplane-outline,ios-partlysunny,ios-partlysunny-outline,ios-pause,ios-pause-outline,ios-paw,ios-paw-outline,ios-people,ios-people-outline,ios-person,ios-person-outline,ios-personadd,ios-personadd-outline,ios-photos,ios-photos-outline,ios-pie,ios-pie-outline,ios-pint,ios-pint-outline,ios-play,ios-play-outline,ios-plus,ios-plus-empty,ios-plus-outline,ios-pricetag,ios-pricetag-outline,ios-pricetags,ios-pricetags-outline,ios-printer,ios-printer-outline,ios-pulse,ios-pulse-strong,ios-rainy,ios-rainy-outline,ios-recording,ios-recording-outline,ios-redo,ios-redo-outline,ios-refresh,ios-refresh-empty,ios-refresh-outline,ios-reload,ios-reverse-camera,ios-reverse-camera-outline,ios-rewind,ios-rewind-outline,ios-rose,ios-rose-outline,ios-search,ios-search-strong,ios-settings,ios-settings-strong,ios-shuffle,ios-shuffle-strong,ios-skipbackward,ios-skipbackward-outline,ios-skipforward,ios-skipforward-outline,ios-snowy,ios-speedometer,ios-speedometer-outline,ios-star,ios-star-half,ios-star-outline,ios-stopwatch,ios-stopwatch-outline,ios-sunny,ios-sunny-outline,ios-telephone,ios-telephone-outline,ios-tennisball,ios-tennisball-outline,ios-thunderstorm,ios-thunderstorm-outline,ios-time,ios-time-outline,ios-timer,ios-timer-outline,ios-toggle,ios-toggle-outline,ios-trash,ios-trash-outline,ios-undo,ios-undo-outline,ios-unlocked,ios-unlocked-outline,ios-upload,ios-upload-outline,ios-videocam,ios-videocam-outline,ios-volume-high,ios-volume-low,ios-wineglass,ios-wineglass-outline,ios-world,ios-world-outline,ipad,iphone,ipod,jet,key,knife,laptop,leaf,levels,lightbulb,link,load-a,load-b,load-c,load-d,location,lock-combination,locked,log-in,log-out,loop,magnet,male,man,map,medkit,merge,mic-a,mic-b,mic-c,minus,minus-circled,minus-round,model-s,monitor,more,mouse,music-note,navicon,navicon-round,navigate,network,no-smoking,nuclear,outlet,paintbrush,paintbucket,paper-airplane,paperclip,pause,person,person-add,person-stalker,pie-graph,pin,pinpoint,pizza,plane,planet,play,playstation,plus,plus-circled,plus-round,podium,pound,power,pricetag,pricetags,printer,pull-request,qr-scanner,quote,radio-waves,record,refresh,reply,reply-all,ribbon-a,ribbon-b,sad,sad-outline,scissors,search,settings,share,shuffle,skip-backward,skip-forward,social-android,social-android-outline,social-angular,social-angular-outline,social-apple,social-apple-outline,social-bitcoin,social-bitcoin-outline,social-buffer,social-buffer-outline,social-chrome,social-chrome-outline,social-codepen,social-codepen-outline,social-css3,social-css3-outline,social-designernews,social-designernews-outline,social-dribbble,social-dribbble-outline,social-dropbox,social-dropbox-outline,social-euro,social-euro-outline,social-facebook,social-facebook-outline,social-foursquare,social-foursquare-outline,social-freebsd-devil,social-github,social-github-outline,social-google,social-google-outline,social-googleplus,social-googleplus-outline,social-hackernews,social-hackernews-outline,social-html5,social-html5-outline,social-instagram,social-instagram-outline,social-javascript,social-javascript-outline,social-linkedin,social-linkedin-outline,social-markdown,social-nodejs,social-octocat,social-pinterest,social-pinterest-outline,social-python,social-reddit,social-reddit-outline,social-rss,social-rss-outline,social-sass,social-skype,social-skype-outline,social-snapchat,social-snapchat-outline,social-tumblr,social-tumblr-outline,social-tux,social-twitch,social-twitch-outline,social-twitter,social-twitter-outline,social-usd,social-usd-outline,social-vimeo,social-vimeo-outline,social-whatsapp,social-whatsapp-outline,social-windows,social-windows-outline,social-wordpress,social-wordpress-outline,social-yahoo,social-yahoo-outline,social-yen,social-yen-outline,social-youtube,social-youtube-outline,soup-can,soup-can-outline,speakerphone,speedometer,spoon,star,stats-bars,steam,stop,thermometer,thumbsdown,thumbsup,toggle,toggle-filled,transgender,trash-a,trash-b,trophy,tshirt,tshirt-outline,umbrella,university,unlocked,upload,usb,videocamera,volume-high,volume-low,volume-medium,volume-mute,wand,waterdrop,wifi,wineglass,woman,wrench,xbox';

	exports.FA_TYPES = FA_TYPES;
	exports.ION_TYPES = ION_TYPES;
	exports.default = {
	  FA_TYPES: FA_TYPES, ION_TYPES: ION_TYPES
	};

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for image component.
	 * @class ApImage
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _numcal = __webpack_require__(56);

	var _numcal2 = _interopRequireDefault(_numcal);

	var _scaled_size = __webpack_require__(476);

	var _scaled_size2 = _interopRequireDefault(_scaled_size);

	var _apemanReactSpinner = __webpack_require__(29);

	var _apemanReactMixinPure = __webpack_require__(28);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApImage */
	var ApImage = _react2.default.createClass({
	  displayName: 'ApImage',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Image scaling policy */
	    scale: _react.PropTypes.oneOf(['fit', 'fill', 'none']),
	    /** Image width */
	    width: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    /** Image height */
	    height: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    /** Image src string */
	    src: _react.PropTypes.string,
	    /** Alt test */
	    alt: _react.PropTypes.string,
	    /** Them of spinner */
	    spinnerTheme: _react.PropTypes.string,
	    /** Handler on image load */
	    onLoad: _react.PropTypes.func,
	    /** Handler on image error. */
	    onError: _react.PropTypes.func
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {
	    scaledSize: _scaled_size2.default,
	    zeroIfNaN: function zeroIfNaN(value) {
	      return isNaN(value) ? 0 : value;
	    },
	    nullIfNaN: function nullIfNaN(value) {
	      return isNaN(value) ? null : value;
	    }
	  },

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {
	      imgWidth: null,
	      imgHeight: null,
	      mounted: false,
	      ready: false,
	      loading: !!s.props.src,
	      error: null
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      scale: 'none',
	      width: 300,
	      height: 150,
	      src: null,
	      alt: 'NO IMAGE',
	      spinnerTheme: _apemanReactSpinner.ApSpinner.DEFAULT_THEME,
	      onLoad: null,
	      onError: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var size = {
	      width: props.width || null,
	      height: props.height || null
	    };

	    var mounted = state.mounted;
	    var error = state.error;
	    var ready = state.ready;
	    var loading = state.loading;

	    var className = (0, _classnames2.default)('ap-image', props.className, {
	      'ap-image-loading': props.src && loading,
	      'ap-image-ready': props.src && ready
	    });
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, size, props.style) }, mounted && error ? s._renderNotfound(size) : null, mounted && !error ? s._renderImg(size, mounted) : null, loading ? s._renderSpinner(size) : null);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.setState({
	      mounted: true
	    });
	    setTimeout(function () {
	      s.elm = _reactDom2.default.findDOMNode(s);
	      s.resizeImage();
	    }, 0);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var props = s.props;

	    var srcChanged = nextProps.src !== props.src;
	    if (srcChanged) {
	      s.setState({
	        ready: false,
	        loading: true,
	        error: null
	      });
	      setTimeout(function () {
	        return s.resizeImage();
	      }, 0);
	      return;
	    }
	    var widthChanged = nextProps.width !== props.width;
	    var heightChanged = nextProps.height !== props.height;
	    if (widthChanged || heightChanged) {
	      setTimeout(function () {
	        return s.resizeImage();
	      }, 0);
	    }
	  },

	  // ------------------
	  // Helper
	  // ------------------

	  handleLoad: function handleLoad(e) {
	    var s = this;
	    var props = s.props;
	    var _e$target = e.target;
	    var width = _e$target.width;
	    var height = _e$target.height;

	    setTimeout(function () {
	      return s.resizeImage(width, height);
	    }, 0);

	    if (props.onLoad) {
	      props.onLoad(e);
	    }
	  },
	  handleError: function handleError(e) {
	    var s = this;
	    var props = s.props;

	    s.setState({
	      error: e,
	      loading: false
	    });

	    if (props.onError) {
	      props.onError(e);
	    }
	  },
	  resizeImage: function resizeImage(imgContentWidth, imgContentHeight) {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var elm = s.elm;

	    imgContentWidth = imgContentWidth || state.imgContentWidth;
	    imgContentHeight = imgContentHeight || state.imgContentHeight;

	    var valid = imgContentWidth && imgContentHeight;
	    if (!valid) {
	      return;
	    }

	    var frameSize = {
	      width: elm.offsetWidth,
	      height: elm.offsetHeight
	    };
	    var contentSize = {
	      height: imgContentHeight,
	      width: imgContentWidth
	    };
	    var scaledSize = ApImage.scaledSize(contentSize, frameSize, props.scale);

	    s.setState({
	      imgContentWidth: imgContentWidth,
	      imgContentHeight: imgContentHeight,
	      imgWidth: scaledSize.width || imgContentWidth,
	      imgHeight: scaledSize.height || imgContentHeight,
	      ready: true,
	      loading: false
	    });
	  },

	  elm: null,

	  // ------------------
	  // Private
	  // ------------------
	  _renderImg: function _renderImg(size) {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var nullIfNaN = ApImage.nullIfNaN;
	    var zeroIfNaN = ApImage.zeroIfNaN;

	    var style = {
	      top: zeroIfNaN((size.height - state.imgHeight) / 2),
	      left: zeroIfNaN((size.width - state.imgWidth) / 2),
	      width: nullIfNaN(state.imgWidth),
	      height: nullIfNaN(state.imgHeight)
	    };
	    return _react2.default.createElement('img', { src: props.src,
	      alt: props.alt,
	      className: (0, _classnames2.default)('ap-image-content'),
	      style: style,
	      onLoad: s.handleLoad,
	      onError: s.handleError
	    });
	  },
	  _renderNotfound: function _renderNotfound(size) {
	    var s = this;
	    var props = s.props;

	    var style = {
	      lineHeight: size.height + 'px',
	      fontSize: _numcal2.default.min(size.height * 0.4, 18) + 'px'
	    };
	    return _react2.default.createElement('div', { className: 'ap-image-notfound',
	      style: style
	    }, props.alt);
	  },
	  _renderSpinner: function _renderSpinner(size) {
	    var s = this;
	    var props = s.props;
	    var width = size.width;
	    var height = size.height;

	    return _react2.default.createElement(_apemanReactSpinner.ApSpinner, { className: 'ap-image-spinner',
	      size: 'xx-large',
	      theme: props.spinnerTheme,
	      style: { width: width, height: height } });
	  }
	});

	exports.default = ApImage;

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApImage.
	 * @class ApImageStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApImageStyle */
	var ApImageStyle = function (_Component) {
	  _inherits(ApImageStyle, _Component);

	  function ApImageStyle() {
	    _classCallCheck(this, ApImageStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApImageStyle).apply(this, arguments));
	  }

	  _createClass(ApImageStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApImageStyle$styleDa = ApImageStyle.styleData(props);

	      var all = _ApImageStyle$styleDa.all;
	      var small = _ApImageStyle$styleDa.small;
	      var medium = _ApImageStyle$styleDa.medium;
	      var large = _ApImageStyle$styleDa.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApImageStyle;
	}(_react.Component);

	Object.assign(ApImageStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    backgroundColor: _react.PropTypes.string
	  },

	  defaultProps: {
	    style: {},
	    backgroundColor: '#DDD',
	    spinColor: 'rgba(255,255,255,0.5)'
	  },
	  styleData: function styleData(config) {
	    var backgroundColor = config.backgroundColor;
	    var spinColor = config.spinColor;

	    var transitionDuration = 100;
	    return {
	      all: {
	        '.ap-image': {
	          backgroundColor: '' + backgroundColor,
	          overflow: 'hidden',
	          textAlign: 'center',
	          display: 'inline-block',
	          position: 'relative'
	        },
	        '.ap-image img': {
	          opacity: 0,
	          transition: 'width ' + transitionDuration + 'ms, opacity ' + transitionDuration + 'ms'
	        },
	        '.ap-image-ready img': {
	          opacity: 1
	        },
	        '.ap-image-content': {
	          position: 'absolute',
	          display: 'inline-block'
	        },
	        '.ap-image-spinner': {
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          right: 0,
	          bottom: 0,
	          textAlign: 'center',
	          display: 'inline-flex',
	          zIndex: 8,
	          backgroundColor: 'rgba(0,0,0,0.1)',
	          color: '' + spinColor,
	          justifyContent: 'center',
	          alignItems: 'center'
	        },
	        '.ap-image-notfound': {
	          display: 'block',
	          textAlign: 'center',
	          color: 'rgba(0,0,0,0.1)',
	          fontFamily: 'monospace'
	        }
	      },
	      small: {},
	      medium: {},
	      large: {}
	    };
	  }
	});

	exports.default = ApImageStyle;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function scaledSize
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var numcal = __webpack_require__(56);

	/** @lends scaledSize */
	function scaledSize(contentSize, frameSize, policy) {
	  var cw = contentSize.width;
	  var ch = contentSize.height;
	  var fw = frameSize.width;
	  var fh = frameSize.height;

	  var wRate = numcal.min(1, fw / cw);
	  var hRate = numcal.min(1, fh / ch);

	  var sizeWithRate = function sizeWithRate(rate) {
	    return {
	      width: contentSize.width * rate,
	      height: contentSize.height * rate
	    };
	  };

	  switch (policy) {
	    case 'none':
	      return sizeWithRate(1);
	    case 'fit':
	      return sizeWithRate(numcal.min(wRate, hRate));
	    case 'fill':
	      return sizeWithRate(numcal.max(wRate, hRate));
	    default:
	      throw new Error('Unknown policy: ' + policy);
	  }
	}

	exports.default = scaledSize;

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Infor component.
	 * @class ApInfo
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApInfo */
	var ApInfo = _react2.default.createClass({
	  displayName: 'ApInfo',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    pullLeft: _react.PropTypes.bool,
	    pullRight: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-info', {
	        'ap-info-left': props.pullLeft,
	        'ap-info-right': props.pullRight
	      }, props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	  // --------------------
	  // Lifecycle
	  // --------------------
	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApInfo;

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Info body component.
	 * @class ApInfoBody
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApInfoBody */
	var ApInfoBody = _react2.default.createClass({
	  displayName: 'ApInfoBody',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-info-body', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApInfoBody;

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Info item with collapsible feature
	 * @class ApInfoCollapsibleItem
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _ap_info_item = __webpack_require__(147);

	var _ap_info_item2 = _interopRequireDefault(_ap_info_item);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var OPEN_ICON = _ap_info_item2.default.OPEN_ICON;
	var CLOSE_ICON = _ap_info_item2.default.CLOSE_ICON;

	/** @lends ApInfoCollapsibleItem */

	var ApInfoCollapsibleItem = _react2.default.createClass({
	  displayName: 'ApInfoCollapsibleItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Label text */
	    label: _react.PropTypes.string,
	    /** Value text */
	    value: _react.PropTypes.string,
	    /** Unit suffix */
	    unit: _react.PropTypes.string,
	    /** Callback for toggle */
	    onToggle: _react.PropTypes.func
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin, _apemanReactMixinLayout.ApLayoutMixin],

	  getInitialState: function getInitialState() {
	    return {
	      open: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var layouts = s.layouts;

	    var className = (0, _classnames2.default)('ap-info-collapsible-item', props.className);
	    var icon = state.open ? OPEN_ICON : CLOSE_ICON;
	    return _react2.default.createElement('div', { className: className }, _react2.default.createElement('div', { className: 'ap-info-collapsible-header' }, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-info-item-icon', 'ap-info-collapsible-icon', icon) }), _react2.default.createElement(_ap_info_item2.default, { label: props.label,
	      unit: props.unit,
	      value: props.value,
	      onTap: s.toggleCollapsing
	    })), _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-info-collapsible-wrap', {
	        'ap-info-collapsible-wrap-closed': !state.open
	      }), style: layouts.wrap }, _react2.default.createElement('div', { className: 'ap-info-collapsible-body',
	      ref: function ref(body) {
	        s.body = body;
	      }
	    }, props.children)));
	  },

	  // --------------------
	  // For ApLayoutMixin
	  // --------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      wrap: {
	        height: 'auto'
	      }
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var body = s.body;

	    var bodyRect = body && body.getBoundingClientRect();
	    return {
	      wrap: {
	        height: bodyRect && bodyRect.height
	      }
	    };
	  },

	  // --------------------
	  // Custom
	  // --------------------
	  toggleCollapsing: function toggleCollapsing(e) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    s.setState({
	      open: !state.open
	    });
	    if (props.onToggle) {
	      props.onToggle(e);
	    }
	  }
	});

	exports.default = ApInfoCollapsibleItem;

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Info item with disclosable feature
	 * @class ApInfoDisclosableItem
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _ap_info_item = __webpack_require__(147);

	var _ap_info_item2 = _interopRequireDefault(_ap_info_item);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var NEXT_ICON = _ap_info_item2.default.NEXT_ICON;
	var PREV_ICON = _ap_info_item2.default.PREV_ICON;

	/** @lends ApInfoDisclosableItem */

	var ApInfoDisclosableItem = _react2.default.createClass({
	  displayName: 'ApInfoDisclosableItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    label: _react.PropTypes.string,
	    value: _react.PropTypes.string,
	    unit: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin, _apemanReactMixinLayout.ApLayoutMixin],

	  getInitialState: function getInitialState() {
	    return {
	      open: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var layouts = s.layouts;

	    var className = (0, _classnames2.default)('ap-info-disclosable-item', props.className);
	    return _react2.default.createElement('div', { className: className }, _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-info-disclosable-wrap', {
	        'ap-info-disclosable-wrap-open': state.open
	      }),
	      style: state.open ? layouts.wrapOpen : layouts.wrapClosed
	    }, _react2.default.createElement('div', { className: 'ap-info-disclosable-summary',
	      ref: function ref(summary) {
	        s.summary = summary;
	      }
	    }, _react2.default.createElement('div', { ref: function ref(summaryInner) {
	        s.summaryInner = summaryInner;
	      } }, _react2.default.createElement(_ap_info_item2.default, { label: props.label,
	      unit: props.unit,
	      value: props.value,
	      icon: NEXT_ICON,
	      onTap: s.toggleDisclosable
	    }))), _react2.default.createElement('div', { className: 'ap-info-disclosable-detail',
	      ref: function ref(detail) {
	        s.detail = detail;
	      }
	    }, _react2.default.createElement(_apemanReactButton.ApIconButton, { className: 'ap-info-disclosable-back',
	      icon: (0, _classnames2.default)('ap-info-item-icon ap-info-disclosable-back-icon', PREV_ICON),
	      simple: true,
	      onTap: s.toggleDisclosable
	    }), _react2.default.createElement('div', { className: 'ap-info-disclosable-detail-inner',
	      ref: function ref(detailInner) {
	        s.detailInner = detailInner;
	      }
	    }, props.children))));
	  },

	  // --------------------
	  // For ApLayoutMixin
	  // --------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      wrapOpen: {
	        height: 'auto'
	      },
	      wrapClosed: {
	        height: 'auto'
	      }
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var summaryInner = s.summaryInner;
	    var detailInner = s.detailInner;

	    var summaryInnerRect = summaryInner && summaryInner.getBoundingClientRect();
	    var detailInnerRect = detailInner && detailInner.getBoundingClientRect();
	    return {
	      wrapOpen: {
	        height: detailInnerRect && detailInnerRect.height
	      },
	      wrapClosed: {
	        height: summaryInnerRect && summaryInnerRect.height
	      }
	    };
	  },

	  // --------------------
	  // Custom
	  // --------------------
	  toggleDisclosable: function toggleDisclosable() {
	    var s = this;
	    var state = s.state;

	    s.setState({
	      open: !state.open
	    });
	  }
	});

	exports.default = ApInfoDisclosableItem;

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Info header component.
	 * @class ApInfoHeader
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApInfoHeader */
	var ApInfoHeader = _react2.default.createClass({
	  displayName: 'ApInfoHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-info-header', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApInfoHeader;

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApInfo.
	 * @class ApInfoStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApInfoStyle */
	var ApInfoStyle = _react2.default.createClass({
	  displayName: 'ApInfoStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	      rowHeight: _apemanReactStyle.ApStyle.ROW_HEIGHT
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var rowHeight = config.rowHeight;
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;
	      var maxWidth = config.maxWidth;

	      var animationDuration = 600;
	      var iconColor = '#999';
	      return {
	        all: {
	          '.ap-info': {
	            boxSizing: 'border-box',
	            maxWidth: maxWidth,
	            margin: '0 auto'
	          },
	          '.ap-info-header': {
	            display: 'block',
	            fontSize: '9px',
	            padding: '2px 16px 1px',
	            verticalAlign: 'middle',
	            position: 'relative',
	            borderTop: '1px solid #F0F0F0',
	            borderBottom: '1px solid #F0F0F0',
	            marginBottom: '-1px',
	            color: '#999',
	            fontWeight: '100',
	            background: 'rgba(0, 0, 0, 0.01)'
	          },
	          '.ap-info-body': {
	            display: 'block',
	            margin: '0 8px -1px',
	            overflow: 'hidden'
	          },
	          '.ap-info-item': {
	            display: 'flex',
	            borderBottom: '1px solid #F0F0F0',
	            justifyContent: 'space-between',
	            minHeight: rowHeight + 'px',
	            padding: '4px 8px',
	            alignItems: 'center'
	          },
	          '.ap-info-collapsible-item': {
	            display: 'block'
	          },
	          '.ap-info-collapsible-header': {
	            display: 'flex',
	            alignItems: 'center',
	            width: '100%',
	            position: 'relative'
	          },
	          '.ap-info-collapsible-header .ap-info-item': {
	            width: '100%',
	            paddingLeft: '21px'
	          },
	          '.ap-info-collapsible-item .ap-info-collapsible-icon': {
	            pointerEvents: 'none',
	            marginLeft: '8px',
	            textAlign: 'center',
	            width: '8px',
	            top: 0,
	            left: 0,
	            bottom: 0,
	            display: 'inline-flex',
	            alignItems: 'center',
	            position: 'absolute'
	          },
	          '.ap-info-collapsible-wrap': {
	            overflow: 'hidden',
	            transition: 'height ' + animationDuration + 'ms',
	            height: 'auto',
	            boxSizing: 'border-box'
	          },
	          '.ap-info-collapsible-wrap .ap-info-collapsible-wrap': {
	            transition: 'none'
	          },
	          '.ap-info-collapsible-wrap-closed': {
	            height: '0 !important'
	          },
	          '.ap-info-collapsible-body': {
	            display: 'block'
	          },
	          '.ap-info-collapsible-body .ap-info': {
	            marginLeft: '20px'
	          },
	          '.ap-info-collapsible-body .ap-info .ap-info-body': {
	            marginRight: '0px'
	          },
	          '.ap-info-item-label': {
	            display: 'inline-block',
	            color: '#AAA',
	            verticalAlign: 'middle'
	          },
	          '.ap-info-item-value': {
	            display: 'inline-flex',
	            alignItems: 'center'
	          },
	          '.ap-info-item-value .ap-info-item-icon': {
	            marginLeft: '4px'
	          },
	          '.ap-info-item-value-text': {
	            verticalAlign: 'middle'
	          },
	          '.ap-info-item-tappable:hover': {
	            cursor: 'pointer'
	          },
	          '.ap-info-item-tappable:active': {
	            opacity: '0.8'
	          },
	          '.ap-info-item-icon': {
	            color: '' + iconColor
	          },
	          '.ap-info-item-link': {
	            textDecoration: 'underline',
	            marginLeft: '4px',
	            verticalAlign: 'middle',
	            display: 'inline-block',
	            color: '' + highlightColor
	          },
	          '.ap-info-left': {
	            marginLeft: 0
	          },
	          '.ap-info-right': {
	            marginRight: 0
	          },
	          '.ap-info-item-unit': {
	            fontSize: 'x-small',
	            verticalAlign: 'bottom',
	            display: 'inline-block',
	            fontWeight: 100,
	            marginLeft: '4px'
	          },
	          '.ap-info-disclosable-item': {
	            width: '100%',
	            boxSizing: 'border-box',
	            overflow: 'hidden'
	          },
	          '.ap-info-disclosable-wrap': {
	            width: '200%',
	            boxSizing: 'border-box',
	            transition: 'transform ' + animationDuration + 'ms, height ' + animationDuration + 'ms',
	            display: 'flex',
	            flexWrap: 'nowrap'
	          },
	          '.ap-info-disclosable-wrap-open': {
	            transform: 'translateX(-50%)'
	          },
	          '.ap-info-disclosable-summary': {
	            boxSizing: 'border-box',
	            width: '50%'
	          },
	          '.ap-info-disclosable-detail': {
	            boxSizing: 'border-box',
	            width: '50%',
	            display: 'flex',
	            alignItems: 'center',
	            position: 'relative'
	          },
	          '.ap-info-disclosable-back': {
	            padding: '0 16px',
	            fontSize: 'inherit',
	            height: '100%',
	            display: 'inline-flex',
	            alignItems: 'center',
	            justifyContent: 'center',
	            cursor: 'pointer',
	            position: 'absolute',
	            left: '-8px',
	            top: 0,
	            bottom: 0
	          },
	          '.ap-info-disclosable-detail-inner': {
	            width: '100%',
	            paddingLeft: '24px'
	          },
	          '.ap-info-disclosable-detail-inner .ap-info-body': {
	            marginLeft: 0
	          },
	          '.ap-info-disclosable-prev-icon': {}
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApInfoStyle$styleDat = ApInfoStyle.styleData(props);

	    var all = _ApInfoStyle$styleDat.all;
	    var small = _ApInfoStyle$styleDat.small;
	    var medium = _ApInfoStyle$styleDat.medium;
	    var large = _ApInfoStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApInfoStyle;

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for info components.
	 * @module apeman-react-info
	 * @version 3.0.5
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApInfo = exports.ApInfoStyle = exports.ApInfoItem = exports.ApInfoHeader = exports.ApInfoDisclosableItem = exports.ApInfoCollapsibleItem = exports.ApInfoBody = undefined;

	var _ap_info_body = __webpack_require__(478);

	var _ap_info_body2 = _interopRequireDefault(_ap_info_body);

	var _ap_info_collapsible_item = __webpack_require__(479);

	var _ap_info_collapsible_item2 = _interopRequireDefault(_ap_info_collapsible_item);

	var _ap_info_disclosable_item = __webpack_require__(480);

	var _ap_info_disclosable_item2 = _interopRequireDefault(_ap_info_disclosable_item);

	var _ap_info_header = __webpack_require__(481);

	var _ap_info_header2 = _interopRequireDefault(_ap_info_header);

	var _ap_info_item = __webpack_require__(147);

	var _ap_info_item2 = _interopRequireDefault(_ap_info_item);

	var _ap_info_style = __webpack_require__(482);

	var _ap_info_style2 = _interopRequireDefault(_ap_info_style);

	var _ap_info = __webpack_require__(477);

	var _ap_info2 = _interopRequireDefault(_ap_info);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApInfoBody = _ap_info_body2.default;
	exports.ApInfoCollapsibleItem = _ap_info_collapsible_item2.default;
	exports.ApInfoDisclosableItem = _ap_info_disclosable_item2.default;
	exports.ApInfoHeader = _ap_info_header2.default;
	exports.ApInfoItem = _ap_info_item2.default;
	exports.ApInfoStyle = _ap_info_style2.default;
	exports.ApInfo = _ap_info2.default;

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react components for jumbotron
	 * @class ApJumbotron
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _apemanReactImage = __webpack_require__(68);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApJumbotron */
	var ApJumbotron = _react2.default.createClass({
	  displayName: 'ApJumbotron',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Source url of image */
	    imgSrc: _react.PropTypes.string,
	    /** Alt text for image */
	    imgAlt: _react.PropTypes.string,
	    /** Image overlay color */
	    imgFilter: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      imgReady: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      imgSrc: null,
	      imgAlt: '',
	      imgFilter: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var layouts = s.layouts;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-jumbotron', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('div', { className: 'ap-jumbotron-img-container' }, _react2.default.createElement(_apemanReactImage.ApImage, { src: props.imgSrc,
	      alt: props.imgAlt,
	      width: layouts.image.width,
	      height: layouts.image.height,
	      onLoad: s.handleImgLoad,
	      onError: s.handleImgError,
	      scale: 'fill',
	      className: (0, _classnames2.default)('ap-jumbotron-img', {
	        'ap-jumbotron-img-ready': state.imgReady
	      }) }), _react2.default.createElement('div', { className: 'ap-jumbotron-filter',
	      style: {
	        backgroundColor: props.imgFilter
	      } })), _react2.default.createElement('div', { className: 'ap-jumbotron-inner' }, props.children));
	  },

	  // --------------------
	  // For ApLayoutMixin
	  // --------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      image: {}
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var node = _reactDom2.default.findDOMNode(s);
	    var rect = node.getBoundingClientRect();
	    return {
	      image: {
	        width: rect.width,
	        height: rect.height
	      }
	    };
	  },

	  // --------------------
	  // Custom
	  // --------------------

	  handleImgLoad: function handleImgLoad() {
	    var s = this;
	    s.setState({
	      imgReady: true
	    });
	  },
	  handleImgError: function handleImgError() {
	    var s = this;
	    s.setState({
	      imgReady: false
	    });
	  }
	});

	exports.default = ApJumbotron;

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApJumbotron.
	 * @class ApJumbotronStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _acolor = __webpack_require__(27);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApJumbotronStyle */
	var ApJumbotronStyle = function (_Component) {
	  _inherits(ApJumbotronStyle, _Component);

	  function ApJumbotronStyle() {
	    _classCallCheck(this, ApJumbotronStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApJumbotronStyle).apply(this, arguments));
	  }

	  _createClass(ApJumbotronStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApJumbotronStyle$sty = ApJumbotronStyle.styleData(props);

	      var all = _ApJumbotronStyle$sty.all;
	      var small = _ApJumbotronStyle$sty.small;
	      var medium = _ApJumbotronStyle$sty.medium;
	      var large = _ApJumbotronStyle$sty.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApJumbotronStyle;
	}(_react.Component);

	Object.assign(ApJumbotronStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string,
	    backgroundColor: _react.PropTypes.string,
	    titleSize: _react.PropTypes.number
	  },
	  defaultProps: {
	    style: {},
	    titleSize: 54,
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	  },
	  styleData: function styleData(config) {
	    var titleSize = config.titleSize;
	    var highlightColor = config.highlightColor;
	    var backgroundColor = config.backgroundColor;

	    return {
	      all: {
	        '.ap-jumbotron': {
	          display: 'block',
	          boxSizing: 'border-box',
	          width: '100%',
	          padding: '32px',
	          margin: '0 0 32px',
	          position: 'relative',
	          color: backgroundColor
	        },
	        '.ap-jumbotron-inner': {
	          position: 'relative'
	        },
	        '.ap-jumbotron .ap-image': {
	          backgroundColor: highlightColor
	        },
	        '.ap-jumbotron h1, .ap-jumbotron-title': {
	          fontSize: titleSize + 'px',
	          lineHeight: titleSize + 'px',
	          margin: '8px 0',
	          fontWeight: '100',
	          wordWrap: 'break-word'
	        },
	        '.ap-jumbotron p, .ap-jumbotron-text': {
	          margin: '4px 0'
	        },
	        '.ap-jumbotron-img-container': {
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          right: 0,
	          bottom: 0
	        },
	        '.ap-jumbotron-img': {
	          width: '100% !important',
	          height: '100% !important'
	        },
	        '.ap-jumbotron-img .ap-spinner': {
	          display: 'none'
	        },
	        '.ap-jumbotron-img .ap-image': {
	          opacity: 0.1,
	          transition: 'opacity 100ms'
	        },
	        '.ap-jumbotron-img-ready .ap-image': {
	          opacity: 1
	        },
	        '.ap-jumbotron-filter': {
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          right: 0,
	          bottom: 0,
	          pointerEvents: 'none',
	          backgroundColor: (0, _acolor.alpha)(highlightColor, 0.78)
	        }
	      },
	      small: {},
	      medium: {},
	      large: {}
	    };
	  }
	});

	exports.default = ApJumbotronStyle;

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Text of jumbotron
	 * @class ApJumbotronText
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApJumbotronText */
	var ApJumbotronText = function (_Component) {
	  _inherits(ApJumbotronText, _Component);

	  function ApJumbotronText() {
	    _classCallCheck(this, ApJumbotronText);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApJumbotronText).apply(this, arguments));
	  }

	  _createClass(ApJumbotronText, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('p', { className: (0, _classnames2.default)('ap-jumbotron-text', props.className),
	        style: Object.assign({}, props.style) }, props.children);
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApJumbotronText;
	}(_react.Component);

	Object.assign(ApJumbotronText, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {}
	});

	exports.default = ApJumbotronText;

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Title jumbotron
	 * @class ApJumbotronTitle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApJumbotronTitle */
	var ApJumbotronTitle = function (_Component) {
	  _inherits(ApJumbotronTitle, _Component);

	  function ApJumbotronTitle() {
	    _classCallCheck(this, ApJumbotronTitle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApJumbotronTitle).apply(this, arguments));
	  }

	  _createClass(ApJumbotronTitle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      return _react2.default.createElement('h1', { className: (0, _classnames2.default)('ap-jumbotron-title', props.className),
	        style: Object.assign({}, props.style) }, props.children);
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApJumbotronTitle;
	}(_react.Component);

	Object.assign(ApJumbotronTitle, {

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  defaultProps: {}
	});

	exports.default = ApJumbotronTitle;

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react components for jumbotron
	 * @module apeman-react-jumbotron
	 * @version 3.0.5
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApJumbotron = exports.ApJumbotronTitle = exports.ApJumbotronText = exports.ApJumbotronStyle = undefined;

	var _ap_jumbotron_style = __webpack_require__(485);

	var _ap_jumbotron_style2 = _interopRequireDefault(_ap_jumbotron_style);

	var _ap_jumbotron_text = __webpack_require__(486);

	var _ap_jumbotron_text2 = _interopRequireDefault(_ap_jumbotron_text);

	var _ap_jumbotron_title = __webpack_require__(487);

	var _ap_jumbotron_title2 = _interopRequireDefault(_ap_jumbotron_title);

	var _ap_jumbotron = __webpack_require__(484);

	var _ap_jumbotron2 = _interopRequireDefault(_ap_jumbotron);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApJumbotronStyle = _ap_jumbotron_style2.default;
	exports.ApJumbotronText = _ap_jumbotron_text2.default;
	exports.ApJumbotronTitle = _ap_jumbotron_title2.default;
	exports.ApJumbotron = _ap_jumbotron2.default;

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package label component.
	 * @class ApLabel
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactMixinPure = __webpack_require__(28);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApLabel */
	var ApLabel = _react2.default.createClass({
	  displayName: 'ApLabel',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    htmlFor: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      htmlFor: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var labelProps = (0, _asobj.clone)(props, {
	      without: 'hasTouch'
	    });
	    return _react2.default.createElement('label', _extends({}, labelProps, {
	      className: (0, _classnames2.default)('ap-label', props.className),
	      htmlFor: props.htmlFor
	    }), props.children);
	  },

	  // --------------------
	  // For ApTouchMixin
	  // --------------------
	  getTouchData: function getTouchData() {
	    var s = this;
	    var props = s.props;

	    return props.data;
	  }
	});

	exports.default = ApLabel; // Dummy export for duc parser

	exports.default = (0, _apemanReactTouchable.withTouch)(ApLabel);

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApLabel.
	 * @class ApLabelStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApLabelStyle */
	var ApLabelStyle = _react2.default.createClass({
	  displayName: 'ApLabelStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-label': {
	            display: 'inline-block',
	            padding: '4px 8px',
	            fontSize: '14px',
	            color: '#888'
	          }
	        },
	        small: {},
	        medium: {},
	        large: {}
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApLabelStyle$styleDa = ApLabelStyle.styleData(props);

	    var all = _ApLabelStyle$styleDa.all;
	    var small = _ApLabelStyle$styleDa.small;
	    var medium = _ApLabelStyle$styleDa.medium;
	    var large = _ApLabelStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApLabelStyle;

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for link list component.
	 * @class ApLinks
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApLinks */
	var ApLinks = _react2.default.createClass({
	  displayName: 'ApLinks',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    links: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func]),
	    plain: _react.PropTypes.bool,
	    righted: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      links: {},
	      plain: false,
	      righted: false

	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var links = props.links || {};
	    return _react2.default.createElement('ul', { className: (0, _classnames2.default)('ap-links', {
	        'ap-links-plain': props.plain,
	        'ap-links-righted': props.righted
	      }, props.className) }, Object.keys(links).map(function (key) {
	      return _react2.default.createElement('li', { className: 'ap-links-item',
	        key: 'ap-links-item-' + key }, s._renderAnchor(key, links[key]));
	    }));
	  },
	  _renderAnchor: function _renderAnchor(text, link) {
	    var s = this;
	    var href = null;
	    var onClick = null;
	    if (typeof link === 'function') {
	      return _react2.default.createElement('a', { href: 'javascript:void(0)',
	        onClick: link }, text);
	    } else {
	      return _react2.default.createElement('a', { href: link }, text);
	    }
	  }
	});

	exports.default = ApLinks;

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApLinks.
	 * @class ApLinksStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApLinksStyle */
	var ApLinksStyle = _react2.default.createClass({
	  displayName: 'ApLinksStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-links': {},
	          '.ap-links-item': {},
	          '.ap-links-item a': {
	            display: 'inline-block',
	            padding: '2px 8px'
	          },
	          '.ap-links-plain': {
	            listStyle: 'none',
	            padding: 0,
	            margin: 0
	          },
	          '.ap-links-plain a': {
	            textDecoration: 'underline',
	            color: '#AAA'
	          },
	          '.ap-links-righted': {
	            textAlign: 'right'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApLinksStyle$styleDa = ApLinksStyle.styleData(props);

	    var all = _ApLinksStyle$styleDa.all;
	    var small = _ApLinksStyle$styleDa.small;
	    var medium = _ApLinksStyle$styleDa.medium;
	    var large = _ApLinksStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApLinksStyle;

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for link list component.
	 * @module apeman-react-links
	 * @version 3.0.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApLinks = exports.ApLinksStyle = undefined;

	var _ap_links_style = __webpack_require__(492);

	var _ap_links_style2 = _interopRequireDefault(_ap_links_style);

	var _ap_links = __webpack_require__(491);

	var _ap_links2 = _interopRequireDefault(_ap_links);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApLinksStyle = _ap_links_style2.default;
	exports.ApLinks = _ap_links2.default;

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List component.
	 * @class ApList
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactSpinner = __webpack_require__(29);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApList */
	var ApList = _react2.default.createClass({
	  displayName: 'ApList',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Shows spin */
	    spinning: _react.PropTypes.bool,
	    /** Theme of spinner */
	    spinner: _react.PropTypes.string,
	    /** Min height of list */
	    minHeight: _react.PropTypes.number,
	    /** Mark as empty */
	    empty: _react.PropTypes.bool,
	    /** Alt text to show when empty */
	    alt: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      spinning: false,
	      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME,
	      minHeight: null,
	      empty: false,
	      alt: 'Not data found'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('ul', { className: (0, _classnames2.default)('ap-list', {
	        'ap-list-empty': !!props.empty
	      }, props.className),
	      style: Object.assign({
	        minHeight: props.minHeight
	      }, props.style) }, _react2.default.createElement(_apemanReactSpinner.ApSpinner, { enabled: props.spinning,
	      className: 'ap-list-spinner'
	    }), props.children, props.empty ? s._renderAlt(props.alt) : null);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderAlt: function _renderAlt(text) {
	    return _react2.default.createElement('div', { className: 'ap-list-alt' }, text);
	  }
	});

	exports.default = ApList;

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List bar component.
	 * @class ApListBar
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListBar */
	var ApListBar = _react2.default.createClass({
	  displayName: 'ApListBar',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-list-bar', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApListBar;

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List bar message component.
	 * @class ApListBarMessage
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListBarMessage */
	var ApListBarMessage = _react2.default.createClass({
	  displayName: 'ApListBarMessage',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-list-bar-message', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApListBarMessage;

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List body component.
	 * @class ApListBody
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListBody */
	var ApListBody = _react2.default.createClass({
	  displayName: 'ApListBody',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-list-body', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApListBody;

/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List footer component.
	 * @class ApListFooter
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactSpinner = __webpack_require__(29);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListFooter */
	var ApListFooter = _react2.default.createClass({
	  displayName: 'ApListFooter',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Show spinner */
	    spinning: _react.PropTypes.bool,
	    /** Spinner theme */
	    spinner: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      spinning: false,
	      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-list-footer', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement(_apemanReactSpinner.ApSpinner, { enabled: props.spinning,
	      className: 'ap-list-footer-spinner'
	    }), props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApListFooter;

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List header component.
	 * @class ApListHeader
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListHeader */
	var ApListHeader = _react2.default.createClass({
	  displayName: 'ApListHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-list-header', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApListHeader;

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * List item component.
	 * @class ApListItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	var _ap_list_item_icon = __webpack_require__(149);

	var _ap_list_item_icon2 = _interopRequireDefault(_ap_list_item_icon);

	var _ap_list_item_image = __webpack_require__(230);

	var _ap_list_item_image2 = _interopRequireDefault(_ap_list_item_image);

	var _ap_list_item_text = __webpack_require__(231);

	var _ap_list_item_text2 = _interopRequireDefault(_ap_list_item_text);

	var _ap_list_item_arrow_icon = __webpack_require__(229);

	var _ap_list_item_arrow_icon2 = _interopRequireDefault(_ap_list_item_arrow_icon);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListItem */
	var ApListItem = _react2.default.createClass({
	  displayName: 'ApListItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    disclosure: _react.PropTypes.bool,
	    imgSrc: _react.PropTypes.string,
	    imgAlt: _react.PropTypes.string,
	    imgWidth: _react.PropTypes.number,
	    /** Title of item */
	    title: _react.PropTypes.string,
	    /** Sub title of item */
	    subTitle: _react.PropTypes.string,
	    /** Item height */
	    height: _react.PropTypes.number,
	    /** Custom icon class */
	    icon: _react.PropTypes.string,
	    /** Data for events */
	    data: _react.PropTypes.object
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      disclosure: false,
	      imgSrc: null,
	      imgAlt: null,
	      imgWidth: 72,
	      title: null,
	      subTitle: null,
	      height: 48,
	      data: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var height = props.height;
	    var className = (0, _classnames2.default)('ap-list-item', props.className, {
	      'ap-list-item-tappable': props.hasTouch
	    });
	    var style = Object.assign({
	      height: height + 'px',
	      lineHeight: height + 'px'
	    }, props.style);
	    return _react2.default.createElement('li', { className: className,
	      style: style }, _react2.default.createElement('div', { className: 'ap-list-item-inner' }, _react2.default.createElement('span', { className: 'ap-list-item-aligner' }, ' '), s.renderImage(props.imgSrc, props.imgAlt, props.imgWidth), s.renderTitle(props.title, props.subTitle), props.children, s.renderIcon(props.icon), s.renderDisclosureIcon(props.disclosure)));
	  },
	  renderIcon: function renderIcon(icon) {
	    var s = this;
	    var props = s.props;

	    if (!icon) {
	      return null;
	    }
	    var style = {
	      lineHeight: props.height + 'px'
	    };
	    return _react2.default.createElement(_ap_list_item_icon2.default, { className: icon,
	      style: style });
	  },
	  renderDisclosureIcon: function renderDisclosureIcon(disclosure) {
	    var s = this;
	    var props = s.props;

	    if (!disclosure) {
	      return null;
	    }
	    var style = {
	      lineHeight: props.height + 'px'
	    };
	    return _react2.default.createElement(_ap_list_item_arrow_icon2.default, { className: 'ap-list-item-disclosure-icon',
	      style: style });
	  },
	  renderImage: function renderImage(imgSrc, imgAlt, imgWidth) {
	    var s = this;
	    var props = s.props;

	    if (imgSrc === null) {
	      return null;
	    }
	    return _react2.default.createElement(_ap_list_item_image2.default, { className: 'ap-list-item-sumbnail-image',
	      src: imgSrc,
	      alt: imgAlt,
	      height: props.height,
	      width: imgWidth });
	  },
	  renderTitle: function renderTitle(title, subTitle) {
	    var s = this;
	    var props = s.props;

	    if (title === null) {
	      return;
	    }
	    return _react2.default.createElement(_ap_list_item_text2.default, { className: 'ap-list-item-title-wrap' }, _react2.default.createElement('span', { className: 'ap-list-item-title' }, title), _react2.default.createElement('span', { className: 'ap-list-item-sub-title' }, subTitle));
	  }
	});

	exports.default = ApListItem; // Dummy export for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApListItem, {
	  getTouchData: function getTouchData() {
	    var s = this;
	    var props = s.props;

	    return props.data;
	  }
	});

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @class ApListMoreButton
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var ApListMoreButton = _react2.default.createClass({
	  displayName: 'ApListMoreButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    text: _react.PropTypes.string,
	    enabled: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      text: 'Load More',
	      enabled: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-list-more-button', {
	      'ap-list-more-button-enabled': props.enabled
	    }, props.className);
	    return _react2.default.createElement('a', { className: className,
	      style: Object.assign({}, props.style) }, props.text, props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  }
	});

	exports.default = ApListMoreButton; // Dummy export for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApListMoreButton);

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApList.
	 * @class ApListStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApListStyle */
	var ApListStyle = _react2.default.createClass({
	  displayName: 'ApListStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      borderColor: '#EEE',
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      headerColor: _apemanReactStyle.ApStyle.CAPTION_COLOR,
	      headerBorderColor: _apemanReactStyle.ApStyle.CAPTION_BORDER_COLOR,
	      rowHeight: _apemanReactStyle.ApStyle.ROW_HEIGHT
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var rowHeight = config.rowHeight;
	      var borderColor = config.borderColor;
	      var backgroundColor = config.backgroundColor;
	      var headerColor = config.headerColor;
	      var headerBorderColor = config.headerBorderColor;

	      return {
	        all: {
	          '.ap-list': {
	            display: 'block',
	            padding: 0,
	            margin: '8px 0',
	            listStyle: 'none',
	            position: 'relative',
	            minHeight: '48px'
	          },
	          '.ap-list-spinner': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            bottom: 0,
	            right: 0,
	            zIndex: 4,
	            backgroundColor: '' + _apemanReactStyle.ApStyle.COVER_BACKGROUND
	          },
	          '.ap-list-item': {
	            display: 'block',
	            borderBottom: '1px solid ' + borderColor,
	            minHeight: rowHeight + 'px',
	            padding: '0 4px'
	          },
	          '.ap-list-item-tappable': {
	            cursor: 'pointer'
	          },
	          '.ap-list-item-tappable:hover': {
	            backgroundColor: 'rgba(200,200,200,0.1)'
	          },
	          '.ap-list-item-tappable:active': {
	            opacity: '0.8'
	          },
	          '.ap-list-item-inner': {
	            display: 'flex',
	            alignContent: 'center',
	            justifyContent: 'flex-end'
	          },
	          '.ap-list-item-icon': {
	            padding: '0 4px'
	          },
	          '.ap-list-item-text': {
	            display: 'inline-block',
	            padding: '0 8px',
	            width: '100%'
	          },
	          '.ap-list-item-aligner': {
	            display: 'inline-block',
	            opacity: 0,
	            width: '1px',
	            overflow: 'hidden',
	            whiteSpace: 'pre',
	            color: 'transparent',
	            verticalAlign: 'middle'
	          },
	          '.ap-list-item-arrow-icon': {
	            color: '#AAA',
	            fontSize: '24px'
	          },
	          '.ap-list-item-sumbnail-image': {
	            marginLeft: '-4px'
	          },
	          '.ap-list-header': {
	            display: 'block',
	            fontSize: '9px',
	            padding: '2px 12px 1px',
	            verticalAlign: 'middle',
	            position: 'relative',
	            borderTop: '1px solid ' + headerBorderColor,
	            borderBottom: '1px solid ' + headerBorderColor,
	            marginBottom: '-1px',
	            color: '' + headerColor,
	            fontWeight: '100',
	            background: 'rgba(0, 0, 0, 0.01)'
	          },
	          '.ap-list-body': {
	            display: 'block',
	            margin: '0 0 -1px',
	            overflow: 'hidden'
	          },
	          '.ap-list-footer': {
	            display: 'block',
	            position: 'relative'
	          },
	          '.ap-list-footer-spinner': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            bottom: 0,
	            right: 0,
	            zIndex: 4,
	            backgroundColor: '' + _apemanReactStyle.ApStyle.COVER_BACKGROUND
	          },
	          '.ap-list-more-button': {
	            display: 'none',
	            textAlign: 'center',
	            padding: '16px 0',
	            fontSize: '11px',
	            color: '#888',
	            background: 'rgba(0, 0, 0, 0.01)',
	            borderTop: '1px solid ' + borderColor
	          },
	          '.ap-list-more-button:hover': {
	            cursor: 'pointer',
	            opacity: '0.9'
	          },
	          '.ap-list-more-button:active': {
	            cursor: 'pointer',
	            opacity: '0.66'
	          },
	          '.ap-list-more-button-enabled': {
	            display: 'block'
	          },
	          '.ap-list-item-title-wrap': {
	            display: 'inline-flex',
	            justifyContent: 'center',
	            flexDirection: 'column'
	          },
	          '.ap-list-item-title': {
	            display: 'block',
	            lineHeight: 'initial'
	          },
	          '.ap-list-item-sub-title': {
	            display: 'block',
	            fontSize: '9px',
	            lineHeight: 'initial',
	            color: '#AAA'
	          },
	          '.ap-list-empty .ap-list-body': {
	            background: '#F5F5F5'
	          },
	          '.ap-list-empty .ap-list-alt': {
	            display: 'block'
	          },
	          '.ap-list-alt': {
	            display: 'none',
	            textAlign: 'center',
	            padding: '32px 8px',
	            color: '#CCC'
	          },
	          '.ap-list-bar': {
	            display: 'flex',
	            margin: 0,
	            padding: '0 8px',
	            background: 'transparent',
	            justifyContent: 'space-between'
	          },
	          '.ap-list-bar .ap-form': {
	            margin: 0,
	            display: 'inline-flex',
	            alignItems: 'center'
	          },
	          '.ap-list-bar-message': {
	            lineHeight: '36px',
	            fontSize: 'smaller',
	            display: 'inline-block',
	            padding: '0 4px',
	            color: '#888'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApListStyle$styleDat = ApListStyle.styleData(props);

	    var all = _ApListStyle$styleDat.all;
	    var small = _ApListStyle$styleDat.small;
	    var medium = _ApListStyle$styleDat.medium;
	    var large = _ApListStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApListStyle;

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for list component.
	 * @module apeman-react-list
	 * @version 2.0.14
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApList = exports.ApListStyle = exports.ApListMoreButton = exports.ApListItem = exports.ApListItemText = exports.ApListItemImage = exports.ApListItemIcon = exports.ApListItemArrowIcon = exports.ApListHeader = exports.ApListFooter = exports.ApListBody = exports.ApListBar = exports.ApListBarMessage = undefined;

	var _ap_list_bar_message = __webpack_require__(496);

	var _ap_list_bar_message2 = _interopRequireDefault(_ap_list_bar_message);

	var _ap_list_bar = __webpack_require__(495);

	var _ap_list_bar2 = _interopRequireDefault(_ap_list_bar);

	var _ap_list_body = __webpack_require__(497);

	var _ap_list_body2 = _interopRequireDefault(_ap_list_body);

	var _ap_list_footer = __webpack_require__(498);

	var _ap_list_footer2 = _interopRequireDefault(_ap_list_footer);

	var _ap_list_header = __webpack_require__(499);

	var _ap_list_header2 = _interopRequireDefault(_ap_list_header);

	var _ap_list_item_arrow_icon = __webpack_require__(229);

	var _ap_list_item_arrow_icon2 = _interopRequireDefault(_ap_list_item_arrow_icon);

	var _ap_list_item_icon = __webpack_require__(149);

	var _ap_list_item_icon2 = _interopRequireDefault(_ap_list_item_icon);

	var _ap_list_item_image = __webpack_require__(230);

	var _ap_list_item_image2 = _interopRequireDefault(_ap_list_item_image);

	var _ap_list_item_text = __webpack_require__(231);

	var _ap_list_item_text2 = _interopRequireDefault(_ap_list_item_text);

	var _ap_list_item = __webpack_require__(500);

	var _ap_list_item2 = _interopRequireDefault(_ap_list_item);

	var _ap_list_more_button = __webpack_require__(501);

	var _ap_list_more_button2 = _interopRequireDefault(_ap_list_more_button);

	var _ap_list_style = __webpack_require__(502);

	var _ap_list_style2 = _interopRequireDefault(_ap_list_style);

	var _ap_list = __webpack_require__(494);

	var _ap_list2 = _interopRequireDefault(_ap_list);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApListBarMessage = _ap_list_bar_message2.default;
	exports.ApListBar = _ap_list_bar2.default;
	exports.ApListBody = _ap_list_body2.default;
	exports.ApListFooter = _ap_list_footer2.default;
	exports.ApListHeader = _ap_list_header2.default;
	exports.ApListItemArrowIcon = _ap_list_item_arrow_icon2.default;
	exports.ApListItemIcon = _ap_list_item_icon2.default;
	exports.ApListItemImage = _ap_list_item_image2.default;
	exports.ApListItemText = _ap_list_item_text2.default;
	exports.ApListItem = _ap_list_item2.default;
	exports.ApListMoreButton = _ap_list_more_button2.default;
	exports.ApListStyle = _ap_list_style2.default;
	exports.ApList = _ap_list2.default;

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for main component.
	 * @class ApMain
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApMain */
	var ApMain = _react2.default.createClass({
	  displayName: 'ApMain',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var mainProps = Object.assign({}, props);
	    return _react2.default.createElement('main', _extends({}, mainProps, {
	      className: (0, _classnames2.default)('ap-main', props.className) }), props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Helper
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApMain;

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApMain.
	 * @class ApMainStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApMainStyle */
	var ApMainStyle = _react2.default.createClass({
	  displayName: 'ApMainStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {}
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApMainStyle$styleDat = ApMainStyle.styleData(props);

	    var all = _ApMainStyle$styleDat.all;
	    var small = _ApMainStyle$styleDat.small;
	    var medium = _ApMainStyle$styleDat.medium;
	    var large = _ApMainStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApMainStyle;

/***/ },
/* 506 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for main component.
	 * @module apeman-react-main
	 * @version 1.1.11
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApMain = exports.ApMainStyle = undefined;

	var _ap_main_style = __webpack_require__(505);

	var _ap_main_style2 = _interopRequireDefault(_ap_main_style);

	var _ap_main = __webpack_require__(504);

	var _ap_main2 = _interopRequireDefault(_ap_main);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApMainStyle = _ap_main_style2.default;
	exports.ApMain = _ap_main2.default;

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for menu components
	 * @class ApMenu
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApMenu */
	var ApMenu = _react2.default.createClass({
	  displayName: 'ApMenu',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {
	    SIGNOUT_ICON: 'fa fa-sign-out',
	    ABOUT_ICON: 'fa fa-info-circle',
	    SUPPORT: 'fa fa-life-ring',
	    TAG: 'fa fa-tag',
	    SETTING: 'fa fa-cog'
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-menu', props.className);
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, props.style) }, props.children, _react2.default.createElement('span', { className: 'ap-menu-end' }));
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApMenu;

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Item for menu.
	 * @class ApMenuItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApMenuItem */
	var ApMenuItem = _react2.default.createClass({
	  displayName: 'ApMenuItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    hidden: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {
	    /**
	     * Create an item.
	     * @param {string} icon - Icon class name.
	     * @param {string} text - Text of item.
	     * @param {function} onTap - On tap.
	     * @param {object} props - Properties.
	     */
	    createItem: function createItem(icon, text, onTap, props) {
	      return _react2.default.createElement(ApMenuItem, _extends({ icon: icon,
	        text: text,
	        onTap: onTap
	      }, props));
	    }
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      hidden: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-menu-item', {
	      'ap-menu-item-hidden': props.hidden
	    }, props.className);
	    return _react2.default.createElement(_apemanReactButton.ApIconButton, _extends({}, props, {
	      className: className,
	      style: Object.assign({}, props.style)
	    }), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  }

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApMenuItem;

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApMenu.
	 * @class ApMenuStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApMenuStyle */
	var ApMenuStyle = _react2.default.createClass({
	  displayName: 'ApMenuStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-menu': {
	            display: 'flex',
	            flexFlow: 'row wrap',
	            justifyContent: 'flex-start',
	            maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH + 'px',
	            margin: '0 auto'
	          },
	          '.ap-menu-item': {
	            border: 'none',
	            backgroundColor: 'transparent',
	            minWidth: '86px',
	            textAlign: 'center',
	            color: 'inherit'
	          },
	          '.ap-menu-item-hidden': {
	            display: 'none !important'
	          },
	          '.ap-menu-item:hover': {
	            cursor: 'pointer',
	            opacity: 0.9
	          },
	          '.ap-menu-item:active': {
	            boxShadow: 'none',
	            opacity: 0.66
	          },
	          '.ap-menu-end': {
	            flex: 'auto',
	            display: 'inline-block',
	            width: '0px',
	            opacity: 0
	          }
	        },
	        small: {},
	        medium: {},
	        large: {}
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApMenuStyle$styleDat = ApMenuStyle.styleData(props);

	    var all = _ApMenuStyle$styleDat.all;
	    var small = _ApMenuStyle$styleDat.small;
	    var medium = _ApMenuStyle$styleDat.medium;
	    var large = _ApMenuStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApMenuStyle;

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for menu components
	 * @module apeman-react-menu
	 * @version 3.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApMenu = exports.ApMenuStyle = exports.ApMenuItem = undefined;

	var _ap_menu_item = __webpack_require__(508);

	var _ap_menu_item2 = _interopRequireDefault(_ap_menu_item);

	var _ap_menu_style = __webpack_require__(509);

	var _ap_menu_style2 = _interopRequireDefault(_ap_menu_style);

	var _ap_menu = __webpack_require__(507);

	var _ap_menu2 = _interopRequireDefault(_ap_menu);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApMenuItem = _ap_menu_item2.default;
	exports.ApMenuStyle = _ap_menu_style2.default;
	exports.ApMenu = _ap_menu2.default;

/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module ApFormMixin
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _defaults = __webpack_require__(871);

	var _defaults2 = _interopRequireDefault(_defaults);

	var _stringcase = __webpack_require__(97);

	var _stringcase2 = _interopRequireDefault(_stringcase);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	/** @lends ApFormMixin */
	var ApFormMixin = {

	  // --------------------
	  // Custom
	  // --------------------

	  $apFormMixin: true,

	  /**
	   * Handle change of form input
	   * @param {object} e - Input change event.
	   */
	  handleFormChange: function handleFormChange(e) {
	    var s = this;
	    var props = s.props;
	    var _e$target = e.target;
	    var name = _e$target.name;
	    var value = _e$target.value;

	    var values = Object.assign({}, props.formValues, _defineProperty({}, name, value));

	    if (props.onFormChange) {
	      e = e || {};
	      e.target = e.target || _reactDom2.default.findDOMNode(s);
	      e.form = values;
	      props.onFormChange(e);
	    }
	  },

	  /**
	   * Handle form submit.
	   * @param {object} e - Submit event.
	   */
	  handleFormSubmit: function handleFormSubmit(e) {
	    var s = this;
	    var props = s.props;

	    var values = props.formValues;
	    if (props.onFormSubmit) {
	      e = e || {};
	      e.target = e.target || _reactDom2.default.findDOMNode(s);
	      e.form = values;
	      props.onFormSubmit(e);
	    }
	  },

	  /**
	   * Handle form cancel.
	   * @param {object} e - Submit event.
	   */
	  handleFormCancel: function handleFormCancel(e) {
	    var s = this;
	    var props = s.props;

	    var values = props.formValues;
	    if (props.onFormCancel) {
	      e = e || {};
	      e.target = e.target || _reactDom2.default.findDOMNode(s);
	      e.form = values;
	      props.onFormCancel(e);
	    }
	  },

	  /**
	   * Get a form value.
	   * @param {string} name - Name of the value.
	   * @returns {*} - Value
	   */
	  getFormValue: function getFormValue(name) {
	    var s = this;
	    var values = s.getFormValues();
	    if (!values) {
	      return undefined;
	    }
	    return values && values[name];
	  },

	  /**
	   * Get form values.
	   * @returns {string}
	   */
	  getFormValues: function getFormValues() {
	    var s = this;
	    var formValues = s.props.formValues;

	    return s.formatFormValues(formValues || null);
	  },

	  /**
	   * Get a form id.
	   * @param {string} name
	   * @returns {string}
	   */
	  getFormId: function getFormId(name) {
	    var s = this;
	    var formPrefix = s.props.formPrefix;

	    return [formPrefix || 'ap-form', _stringcase2.default.spinalcase(name)].join('-');
	  },

	  /**
	   * Get a label
	   * @param {string} name
	   * @returns {string}
	   */
	  getFormLabel: function getFormLabel(name) {
	    var s = this;
	    var formLabels = s.props.formLabels;

	    var label = (formLabels || {})[name];
	    if (!label) {
	      console.warn('[ApFormMixin] Label not found with name: ' + name);
	      label = name;
	    }
	    return label;
	  },

	  /**
	   * Get a icon
	   * @param {string} name
	   * @returns {string}
	   */
	  getFormIcon: function getFormIcon(name) {
	    var s = this;
	    var formIcons = s.props.formIcons;

	    return (formIcons || {})[name];
	  },

	  /**
	   * Get a placeholder
	   * @param {string} name
	   * @returns {string}
	   */
	  getFormPlaceholder: function getFormPlaceholder(name) {
	    var s = this;
	    var formPlaceholders = s.props.formPlaceholders;

	    return (formPlaceholders || {})[name];
	  },

	  /**
	   * Get an image
	   * @param {string} name
	   * @returns {string}
	   */
	  getFormImage: function getFormImage(name) {
	    var s = this;
	    var formImages = s.props.formImages;

	    return (formImages || {})[name];
	  },

	  /**
	   * Get an action
	   * @param {string} name
	   * @returns {string}
	   */
	  getFormAction: function getFormAction(name) {
	    var s = this;
	    var formActions = s.props.formActions;

	    return (formActions || {})[name];
	  },

	  /**
	   * Wrap as form handler.
	   * @param {function} handler - A handler.
	   * @param {object} options - Optional setttings
	   * @returns {function}
	   */
	  asFormHandler: function asFormHandler(handler, options) {
	    var s = this;
	    options = options || {};
	    var key = options.key || 'default';
	    if (!handler) {
	      return null;
	    }
	    handler.apFormWraps = handler.apFormWraps || {};
	    handler.apFormWraps[key] = handler.apFormWraps[key] || function formWrap(e) {
	      e = Object.assign(e || {}, {
	        form: s.getFormValues()
	      }, options);
	      handler.call(s, e);
	    };
	    return handler.apFormWraps[key];
	  },

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    formValues: _react.PropTypes.object,
	    formLabels: _react.PropTypes.object,
	    formIcons: _react.PropTypes.object,
	    formImages: _react.PropTypes.object,
	    formActions: _react.PropTypes.object,
	    formPlaceholders: _react.PropTypes.object,
	    formPrefix: _react.PropTypes.string,
	    onFormChange: _react.PropTypes.func,
	    onFormSubmit: _react.PropTypes.func,
	    onFormCancel: _react.PropTypes.func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;

	    var noop = function noop(value) {
	      return value;
	    };
	    (0, _defaults2.default)(s, {
	      formatFormValues: noop
	    });
	  }
	};

	exports.default = ApFormMixin;

/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module ApLayoutMixin
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _deepEqual = __webpack_require__(129);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var LAYOUT_DELAY = 80;

	var ApLayoutEvent = function ApLayoutEvent(values) {
	  _classCallCheck(this, ApLayoutEvent);

	  var s = this;
	  Object.assign(s, values);
	};

	/** @lends ApLayoutMixin */

	var ApLayoutMixin = {

	  // --------------------
	  // Custom
	  // --------------------

	  $apLayoutMixin: true,

	  /**
	   * Do layout
	   * @param {boolean} [immediate] - Execute with no time
	   */
	  layout: function layout() {
	    var immediate = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

	    var s = this;
	    clearTimeout(s._layoutTimer);
	    s._layoutTimer = setTimeout(function () {
	      if (!s._readyToLayout) {
	        return;
	      }
	      var props = s.props;

	      var layouts = s.calcLayouts && s.calcLayouts();
	      var changed = !(0, _deepEqual2.default)(s.layouts, layouts);
	      if (changed) {
	        s.layouts = layouts;
	        s.forceUpdate();
	        if (props.onLayout) {
	          var event = new ApLayoutEvent({ layouts: layouts });
	          props.onLayout(event);
	        }
	      }
	    }, immediate ? 0 : LAYOUT_DELAY);
	  },

	  /**
	   * Layout data
	   */
	  layouts: {},

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Handler for layout event */
	    onLayout: _react.PropTypes.func
	  },

	  statics: {
	    ApLayoutEvent: ApLayoutEvent,
	    LAYOUT_DELAY: LAYOUT_DELAY
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	    if (s.getInitialLayouts) {
	      s.layouts = s.getInitialLayouts();
	    }
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    if (!s.calcLayouts) {
	      console.warn('[ApLayoutMixin] Should implement .calcLayouts()');
	    }
	    window.addEventListener('resize', s.layout);
	    s._readyToLayout = true;
	    s.layout(true);
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    s.layout();
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    s._readyToLayout = false;
	    clearTimeout(s._layoutTimer);
	    window.removeEventListener('resize', s.layout);
	    delete s._layoutTimer;
	  },

	  // --------------------
	  // Private
	  // --------------------

	  _readyToLayout: false
	};

	exports.default = ApLayoutMixin;

/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module ApDeepPureMixin
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var deepEqual = __webpack_require__(129);

	/** @lends ApPureMixin */
	var ApPureMixin = {

	  // --------------------
	  // Custom
	  // --------------------

	  $apDeepPureMixin: true,

	  // --------------------
	  // Specs
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !deepEqual(props, nextProps) || !deepEqual(state, nextState);
	  }
	};

	exports.default = ApPureMixin;

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module ApPureMixin
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var shallowEqual = __webpack_require__(132);

	/** @lends ApPureMixin */
	var ApPureMixin = {

	  // --------------------
	  // Custom
	  // --------------------

	  $apPureMixin: true,

	  // --------------------
	  // Specs
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !shallowEqual(props, nextProps) || !shallowEqual(state, nextState);
	  }
	};

	exports.default = ApPureMixin;

/***/ },
/* 515 */
/***/ function(module, exports) {

	/**
	 * @module ApResizeMixin
	 */
	'use strict';

	/** @lends ApResizeMixin */

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ApResizeMixin = {
	  // --------------------
	  // Custom
	  // --------------------

	  $apResizeMixin: true,

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;
	    if (s.windowDidResize) {
	      window.addEventListener('resize', s.windowDidResize);
	    } else {
	      console.warn('[ApResizeMixin] Should implement windowDidResize method.');
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    if (s.windowDidResize) {
	      window.removeEventListener('resize', s.windowDidResize);
	    }
	  }

	  // --------------------
	  // Private
	  // --------------------

	};

	exports.default = ApResizeMixin;

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module ApStackMixin
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	var INSETS_STATE_KEY = '_apStackInsets';

	/** @lends ApStackMixin */
	var ApStackMixin = {

	  // --------------------
	  // Custom
	  // --------------------

	  $apStackMixin: true,

	  // --------------------
	  // Lifecycle
	  // --------------------

	  /**
	   * Get insets of the stack.
	   * @returns {object}
	   */
	  getStackInsets: function getStackInsets() {
	    var s = this;
	    return s.state[INSETS_STATE_KEY] || {};
	  },

	  /**
	   * Set insets of the stack.
	   * @param {object} nextInsets - Insets to set.
	   */
	  setStackInsets: function setStackInsets(nextInsets) {
	    var s = this;
	    var insets = s.getStackInsets();
	    s.setState(_defineProperty({}, INSETS_STATE_KEY, Object.assign(insets, nextInsets)));
	  },

	  /**
	   * Bind stacker events.
	   * @param {Stacker} stacker - A stacker instance.
	   */
	  bindStacker: function bindStacker(stacker) {
	    var s = this;
	    s._addStackerListener(stacker, 'push', s.stackedViewDidPush);
	    s._addStackerListener(stacker, 'pop', s.stackedViewDidPop);
	  },

	  /**
	   * Unbind stacker events.
	   * @param {Stacker} stacker - A stacker instance.
	   */
	  unbindStacker: function unbindStacker(stacker) {
	    var s = this;
	    s._removeStackerListener(stacker, 'push', s.stackedViewDidPush);
	    s._removeStackerListener(stacker, 'pop', s.stackedViewDidPop);
	  },

	  /**
	   * Get width of scrollable content in the top view.
	   * @returns {number|null}
	   */
	  getStackedScrollWidth: function getStackedScrollWidth() {
	    var s = this;
	    var stacker = s.props.stacker;

	    var topView = stacker && stacker.topView();
	    if (!topView) {
	      return null;
	    }
	    var wrapElm = document && document.getElementById('view-wrap-' + topView.id);
	    if (!wrapElm) {
	      return null;
	    }
	    var bodyElm = wrapElm.querySelector('.ap-view-body');
	    if (!bodyElm) {
	      return null;
	    }
	    return bodyElm.scrollWidth || null;
	  },

	  // --------------------
	  // Specs
	  // --------------------

	  statics: {},

	  propTypes: {
	    stacker: _react.PropTypes.object.isRequired,
	    stackInsets: _react.PropTypes.object
	  },

	  getInitialState: function getInitialState() {
	    return _defineProperty({}, INSETS_STATE_KEY, {});
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	    var props = s.props;

	    s.bindStacker(props.stacker);
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var props = s.props;
	    var stackInsets = props.stackInsets;

	    if (stackInsets) {
	      s.setStackInsets(stackInsets);
	    }
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var props = s.props;
	    var stackInsets = nextProps.stackInsets;
	    var stacker = nextProps.stacker;

	    if (stackInsets) {
	      s.setStackInsets(stackInsets);
	    }
	    if (stacker) {
	      s.unbindStacker(props.stacker);
	      s.bindStacker(stacker);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    var props = s.props;

	    s.unbindStacker(props.stacker);
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _addStackerListener: function _addStackerListener(stacker, event, listner) {
	    var s = this;
	    if (listner && stacker) {
	      stacker.addListener(event, listner);
	    }
	  },
	  _removeStackerListener: function _removeStackerListener(stacker, event, listner) {
	    var s = this;
	    if (listner && stacker) {
	      stacker.removeListener(event, listner);
	    }
	  }
	};

	exports.default = ApStackMixin;

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for stack mixins
	 * @module apeman-react-mixin-stack
	 * @version 1.0.7
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApStackMixin = undefined;

	var _ap_stack_mixin = __webpack_require__(516);

	var _ap_stack_mixin2 = _interopRequireDefault(_ap_stack_mixin);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApStackMixin = _ap_stack_mixin2.default;

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module ApTouchMixin
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function createTouchHammer(node, props, getData) {
	  if (!node) {
	    return;
	  }
	  var Hammer = __webpack_require__(304);
	  var hammer = new Hammer(node, {
	    cssProps: {
	      userSelect: true
	    }
	  });
	  if (props.touchOptions) {
	    hammer.set(props.touchOptions);
	  }
	  Object.keys(ApTouchMixin.propTypes).filter(function (key) {
	    return !!props[key];
	  }).forEach(function (key) {
	    if (/^on/.test(key)) {
	      (function () {
	        var event = key.replace(/^on/, '').toLowerCase();
	        var handler = props[key];
	        hammer.on(event, function (e) {
	          e.data = getData(); // Set touching data.
	          handler(e);
	        });
	      })();
	    }
	    if (/Direction$/.test(key)) {
	      var gesture = key.replace(/Direction$/, '');
	      hammer.get(gesture).set({ direction: Hammer['DIRECTION_' + props[key]] });
	    }
	    if (/Threshold$/.test(key)) {
	      var threshold = key.replace(/Threshold$/, '');
	      hammer.get(threshold).set({ threshold: props[key] });
	    }
	  });
	  return hammer;
	}

	function destroyTouchHammer(hammer) {
	  if (!hammer) {
	    return;
	  }
	  hammer.stop();
	  hammer.destroy();
	}

	function supportsTouch(props) {
	  var touchableKey = Object.keys(ApTouchMixin.propTypes);
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;

	  try {
	    for (var _iterator = Object.keys(props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var key = _step.value;

	      var hit = !!~touchableKey.indexOf(key);
	      if (hit) {
	        return true;
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }

	  return false;
	}

	var touchEnums = {
	  directions: ['NONE', 'LEFT', 'RIGHT', 'UP', 'DOWN', 'HORIZONTAL', 'VERTICAL', 'ALL']
	};

	/** @lends ApTouchMixin */
	var ApTouchMixin = {

	  // --------------------
	  // Custom
	  // --------------------

	  $apTouchMixin: true,

	  touchHammer: null,

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    onTap: _react.PropTypes.func,
	    onDoubleTap: _react.PropTypes.func,
	    onPan: _react.PropTypes.func,
	    onPanStart: _react.PropTypes.func,
	    onPanMove: _react.PropTypes.func,
	    onPanEnd: _react.PropTypes.func,
	    onPanCancel: _react.PropTypes.func,
	    onSwipe: _react.PropTypes.func,
	    onPress: _react.PropTypes.func,
	    onPressUp: _react.PropTypes.func,
	    onPinch: _react.PropTypes.func,
	    onPinchStart: _react.PropTypes.func,
	    onPinchMove: _react.PropTypes.func,
	    onPinchEnd: _react.PropTypes.func,
	    onPinchCancel: _react.PropTypes.func,
	    onRotate: _react.PropTypes.func,
	    onRotateStart: _react.PropTypes.func,
	    onRotateMove: _react.PropTypes.func,
	    onRotateEnd: _react.PropTypes.func,
	    onRotateCancel: _react.PropTypes.func,
	    touchOptions: _react.PropTypes.object,
	    panThreshold: _react.PropTypes.number,
	    panDirection: _react.PropTypes.oneOf(touchEnums.directions),
	    swipeDirection: _react.PropTypes.oneOf(touchEnums.directions)
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	    s.getTouchData = s.getTouchData || function () {
	      return undefined;
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var touchable = supportsTouch(s.props);
	    var getData = function getData() {
	      return s.getTouchData();
	    };
	    if (touchable) {
	      s.touchHammer = createTouchHammer(_reactDom2.default.findDOMNode(s), s.props, getData);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    var hammer = s.touchHammer;
	    if (hammer) {
	      destroyTouchHammer(hammer);
	    }
	    delete s.touchHammer;
	  }

	  // --------------------
	  // Private
	  // --------------------

	  // ( Custom private method here )

	};

	exports.default = ApTouchMixin;

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for touch mixin
	 * @module apeman-react-mixin-touch
	 * @version 1.0.5
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApTouchMixin = undefined;

	var _ap_touch_mixin = __webpack_require__(518);

	var _ap_touch_mixin2 = _interopRequireDefault(_ap_touch_mixin);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApTouchMixin = _ap_touch_mixin2.default;

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react component for modal view stack
	 * @class ApModal
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _numcal = __webpack_require__(56);

	var _numcal2 = _interopRequireDefault(_numcal);

	var _apemanReactView = __webpack_require__(258);

	var _apemanReactStyle = __webpack_require__(4);

	var _apemanReactMixinStack = __webpack_require__(517);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	/** @lends ApModal */
	var ApModal = _react2.default.createClass({
	  displayName: 'ApModal',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Modal content width */
	    width: _react.PropTypes.number,
	    /** Modal content height */
	    height: _react.PropTypes.number
	  },

	  mixins: [_apemanReactMixinStack.ApStackMixin, _apemanReactMixinLayout.ApLayoutMixin],

	  statics: {
	    VERTICAL_PADDING: 16,
	    HORIZONTAL_PADDING: 32
	  },

	  getInitialState: function getInitialState() {
	    return {
	      killScrolling: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      width: null,
	      height: null,
	      uuid: _uuid2.default.v4()
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var uuid = props.uuid;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-modal', 'ap-modal-' + uuid, props.className, {
	        'ap-modal-active': s.hasStackedView()
	      }),
	      style: Object.assign({}, props.style) }, s._renderGlobalStyle(), s._renderLayoutStyle(), s._renderStack(), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.setState({ killScrolling: s.hasStackedView() });
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  hasStackedView: function hasStackedView() {
	    var s = this;
	    var stacker = s.props.stacker;

	    return stacker && !stacker.isEmpty();
	  },

	  // ------------------
	  // For ApLayoutMixin
	  // ------------------

	  getInitialLayouts: function getInitialLayouts() {
	    var vPadding = ApModal.VERTICAL_PADDING;
	    var hPadding = ApModal.HORIZONTAL_PADDING;

	    return {
	      inner: {
	        top: vPadding,
	        right: hPadding,
	        bottom: vPadding,
	        left: hPadding,
	        opacity: 0
	      }
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var vPadding = ApModal.VERTICAL_PADDING;
	    var hPadding = ApModal.HORIZONTAL_PADDING;

	    var s = this;
	    var props = s.props;
	    var _window = window;
	    var outerWidth = _window.outerWidth;
	    var outerHeight = _window.outerHeight;

	    var width = props.width || outerWidth;
	    var height = props.height || outerHeight;
	    var contentWidth = _numcal2.default.min(width, outerWidth, _apemanReactStyle.ApStyle.CONTAINER_WIDTH);
	    var contentHeight = _numcal2.default.min(height, outerHeight);
	    var hEdge = (outerWidth - contentWidth) / 2;
	    var vEdge = (outerHeight - contentHeight) / 2;
	    return {
	      inner: {
	        top: vEdge + vPadding,
	        right: hEdge + hPadding,
	        bottom: vEdge + vPadding,
	        left: hEdge + hPadding,
	        opacity: 1
	      }
	    };
	  },

	  // ------------------
	  // For ApStackMixin
	  // ------------------

	  stackedViewDidPush: function stackedViewDidPush(view) {
	    var s = this;
	    s.setState({ killScrolling: s.hasStackedView() });
	  },
	  stackedViewDidPop: function stackedViewDidPop(view) {
	    var s = this;
	    s.setState({ killScrolling: s.hasStackedView() });
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _renderLayoutStyle: function _renderLayoutStyle() {
	    var s = this;
	    var layouts = s.layouts;
	    var props = s.props;

	    var style = _defineProperty({}, '.ap-modal-' + props.uuid + ' .ap-view-stack-inner', layouts.inner);
	    return _react2.default.createElement(_apemanReactStyle.ApStyle, {
	      className: 'ap-modal-layout-style',
	      data: style });
	  },
	  _renderGlobalStyle: function _renderGlobalStyle() {
	    var s = this;
	    var state = s.state;

	    var killScrolling = !!state.killScrolling;
	    var style = {
	      'body,html': {
	        overflow: killScrolling ? 'hidden !important' : null
	      }
	    };
	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { scoped: false,
	      className: 'ap-modal-global-style',
	      data: style });
	  },
	  _renderStack: function _renderStack() {
	    var s = this;
	    var sate = s.sate;
	    var props = s.props;

	    var insets = s.getStackInsets();

	    return _react2.default.createElement(_apemanReactView.ApViewStack, { stacker: props.stacker,
	      insetTop: insets.top || 0,
	      insetRight: insets.right || 0,
	      insetLeft: insets.left || 0,
	      insetBottom: insets.bottom || 0
	    });
	  }
	});

	exports.default = ApModal;

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApModal.
	 * @class ApModalStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApModalStyle */
	var ApModalStyle = _react2.default.createClass({
	  displayName: 'ApModalStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-modal': {
	            lineHeight: '1em'
	          },
	          '.ap-modal .ap-view-stack': {
	            background: 'rgba(0,0,0,0.2)',
	            zIndex: 44
	          },
	          '.ap-modal .ap-view-stack .ap-view-stack-inner': {
	            transition: 'opacity 100ms'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApModalStyle$styleDa = ApModalStyle.styleData(props);

	    var all = _ApModalStyle$styleDa.all;
	    var small = _ApModalStyle$styleDa.small;
	    var medium = _ApModalStyle$styleDa.medium;
	    var large = _ApModalStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApModalStyle;

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react component for modal view stack
	 * @module apeman-react-modal
	 * @version 3.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApModal = exports.ApModalStyle = undefined;

	var _ap_modal_style = __webpack_require__(521);

	var _ap_modal_style2 = _interopRequireDefault(_ap_modal_style);

	var _ap_modal = __webpack_require__(520);

	var _ap_modal2 = _interopRequireDefault(_ap_modal);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApModalStyle = _ap_modal_style2.default;
	exports.ApModal = _ap_modal2.default;

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Note components.
	 * @class ApNote
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApNote */
	var ApNote = _react2.default.createClass({
	  displayName: 'ApNote',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('p', { className: (0, _classnames2.default)('ap-note', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApNote;

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApNote.
	 * @class ApNoteStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApNoteStyle */
	var ApNoteStyle = _react2.default.createClass({
	  displayName: 'ApNoteStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    color: _react.PropTypes.string,
	    maxWidth: _react.PropTypes.number
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      color: '#666',
	      maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var color = config.color;
	      var maxWidth = config.maxWidth;

	      return {
	        all: {
	          '.ap-note': {
	            fontSize: '12px',
	            color: '' + color,
	            maxWidth: maxWidth + 'px'
	          },
	          '.ap-note a:link, .ap-note a:visited': {
	            textDecoration: 'underline',
	            color: '' + color,
	            cursor: 'pointer'
	          },
	          '.ap-note a:link:active': {
	            opacity: 0.5
	          }

	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApNoteStyle$styleDat = ApNoteStyle.styleData(props);

	    var all = _ApNoteStyle$styleDat.all;
	    var small = _ApNoteStyle$styleDat.small;
	    var medium = _ApNoteStyle$styleDat.medium;
	    var large = _ApNoteStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApNoteStyle;

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for note components.
	 * @module apeman-react-note
	 * @version 3.0.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApNote = exports.ApNoteStyle = undefined;

	var _ap_note_style = __webpack_require__(524);

	var _ap_note_style2 = _interopRequireDefault(_ap_note_style);

	var _ap_note = __webpack_require__(523);

	var _ap_note2 = _interopRequireDefault(_ap_note);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApNoteStyle = _ap_note_style2.default;
	exports.ApNote = _ap_note2.default;

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Notice component
	 * @class ApNotice
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _apemanReactSpinner = __webpack_require__(29);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApNotice */
	var ApNotice = _react2.default.createClass({
	  displayName: 'ApNotice',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Show spinner */
	    spinning: _react.PropTypes.bool,
	    /** Spinner theme */
	    spinner: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {
	      height: 'auto'
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      spinning: false,
	      spinner: _apemanReactSpinner.ApSpinner.DEFAULT_THEME
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var layouts = s.layouts;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-notice', props.className),
	      style: Object.assign({}, layouts.notice, props.style) }, _react2.default.createElement(_apemanReactSpinner.ApSpinner, { className: 'ap-notice-spinner',
	      style: layouts.spinner,
	      enabled: props.spinning
	    }), _react2.default.createElement('div', { className: 'ap-notice-inner',
	      ref: 'inner' }, props.children));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // --------------------
	  // For ApLayoutMixin
	  // --------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      spinner: null,
	      notice: null
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var props = s.props;

	    var inner = _reactDom2.default.findDOMNode(s.refs['inner']);
	    var innerRect = inner.getBoundingClientRect();
	    return {
	      notice: {
	        height: innerRect.height
	      },
	      spinner: {
	        height: innerRect.height
	      }
	    };
	  }

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApNotice;

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Notice item component
	 * @class ApNoticeItem
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _stringcase = __webpack_require__(97);

	var _stringcase2 = _interopRequireDefault(_stringcase);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApNoticeItem */
	var ApNoticeItem = _react2.default.createClass({
	  displayName: 'ApNoticeItem',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Item text */
	    text: _react.PropTypes.string,
	    /** Action button text and handlers */
	    actions: _react.PropTypes.object,
	    /** Hide component */
	    hidden: _react.PropTypes.bool,
	    /** Information level */
	    level: _react.PropTypes.oneOf(['DEFAULT', 'INFO', 'WARN', 'ERROR'])
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      text: null,
	      actions: null,
	      hidden: false,
	      level: 'DEFAULT'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var text = props.text;
	    var hidden = props.hidden;
	    var actions = props.actions;
	    var level = props.level;

	    var buttons = Object.keys(actions || {}).map(function (title) {
	      return s._renderButton(title, actions[title], {
	        key: '' + title
	      });
	    });
	    var className = (0, _classnames2.default)('ap-notice-item', 'ap-notice-item-' + _stringcase2.default.spinalcase(String(level).toLowerCase()), {
	      'ap-notice-item-hidden': hidden
	    }, props.className);
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, props.style) }, _react2.default.createElement('div', { className: 'ap-notice-item-inner' }, _react2.default.createElement('span', null, text), _react2.default.createElement('span', null, props.children), _react2.default.createElement('span', { className: 'ap-notice-item-action' }, buttons)));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderButton: function _renderButton(title, handler, props) {
	    return _react2.default.createElement(_apemanReactButton.ApButton, _extends({}, props, {
	      onTap: handler,
	      className: 'ap-notice-item-button'
	    }), title);
	  }
	});

	exports.default = ApNoticeItem;

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApNotice.
	 * @class ApNoticeStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _style_constants = __webpack_require__(529);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApNoticeStyle */
	var ApNoticeStyle = _react2.default.createClass({
	  displayName: 'ApNoticeStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      normalColor: _apemanReactStyle.ApStyle.NORMAL_COLOR,
	      infoColor: _apemanReactStyle.ApStyle.INFO_COLOR,
	      warnColor: _apemanReactStyle.ApStyle.WARN_COLOR,
	      errorColor: _apemanReactStyle.ApStyle.ERROR_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;
	      var infoColor = config.infoColor;
	      var warnColor = config.warnColor;
	      var errorColor = config.errorColor;

	      var itemHeight = 32;
	      var vPadding = 4;
	      return {
	        all: {
	          '.ap-notice': {
	            display: 'block',
	            transition: 'height ' + _style_constants.TRANSITION_DURATION + 'ms',
	            overflow: 'hidden',
	            fontSize: '12px',
	            background: 'rgba(0,0,0,0.75)',
	            color: 'white',
	            position: 'relative'
	          },
	          '.ap-notice-spinner': {
	            position: 'absolute',
	            left: 0,
	            right: 0,
	            top: 0,
	            bottom: 0,
	            backgroundColor: 'rgba(255,255,255,0.5)',
	            color: '#DDD',
	            textAlign: 'center'
	          },
	          '.ap-notice-inner': {},
	          '.ap-notice-item-inner': {
	            display: 'flex',
	            width: '100%',
	            justifyContent: 'space-between',
	            alignItems: 'center',
	            boxSizing: 'border-box',
	            padding: vPadding + 'px 8px',
	            margin: '0 auto',
	            minHeight: itemHeight + vPadding * 2 + 'px'
	          },
	          '.ap-notice-item': {
	            display: 'block'
	          },
	          '.ap-notice-item-hidden': {
	            display: 'none !important'
	          },
	          '.ap-notice-item-action': {
	            whiteSpace: 'nowrap'
	          },
	          '.ap-notice-item-text': {
	            fontStyle: 'italic'
	          },
	          '.ap-notice-item-button': {
	            backgroundColor: 'transparent',
	            height: itemHeight + 'px',
	            padding: '0 8px',
	            margin: 0,
	            lineHeight: itemHeight + 'px',
	            border: 'none'
	          },
	          '.ap-notice-item-info .ap-notice-item-button': {
	            color: '' + infoColor
	          },
	          '.ap-notice-item-warn .ap-notice-item-button': {
	            color: '' + warnColor
	          },
	          '.ap-notice-item-error .ap-notice-item-button': {
	            color: '' + errorColor
	          },
	          '.ap-notice-item-aligner': {
	            display: 'inline-block',
	            verticalAlign: 'middle',
	            width: '1px',
	            marginRight: '-1px',
	            opacity: 0
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApNoticeStyle$styleD = ApNoticeStyle.styleData(props);

	    var all = _ApNoticeStyle$styleD.all;
	    var small = _ApNoticeStyle$styleD.small;
	    var medium = _ApNoticeStyle$styleD.medium;
	    var large = _ApNoticeStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApNoticeStyle;

/***/ },
/* 529 */
/***/ function(module, exports) {

	'use strict';

	exports.TRANSITION_DURATION = 300;

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for notice components
	 * @module apeman-react-notice
	 * @version 3.0.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApNotice = exports.ApNoticeStyle = exports.ApNoticeItem = undefined;

	var _ap_notice_item = __webpack_require__(527);

	var _ap_notice_item2 = _interopRequireDefault(_ap_notice_item);

	var _ap_notice_style = __webpack_require__(528);

	var _ap_notice_style2 = _interopRequireDefault(_ap_notice_style);

	var _ap_notice = __webpack_require__(526);

	var _ap_notice2 = _interopRequireDefault(_ap_notice);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApNoticeItem = _ap_notice_item2.default;
	exports.ApNoticeStyle = _ap_notice_style2.default;
	exports.ApNotice = _ap_notice2.default;

/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Page element.
	 * @class ApPage
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApPage */
	var ApPage = _react2.default.createClass({
	  displayName: 'ApPage',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-page', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApPage;

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Container element for page.
	 * @class ApPageContainer
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApPageContainer */
	var ApPageContainer = _react2.default.createClass({
	  displayName: 'ApPageContainer',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    id: _react.PropTypes.string.isRequired
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-page-container', props.className),
	      id: props.id,
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApPageContainer;

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApPage.
	 * @class ApPageStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApPageStyle */
	var ApPageStyle = _react2.default.createClass({
	  displayName: 'ApPageStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(conifg) {
	      return {
	        all: {
	          '.ap-page-container': {
	            display: 'block'
	          },
	          '.ap-page': {
	            display: 'block',
	            position: 'fixed',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            overflow: 'auto'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApPageStyle$styleDat = ApPageStyle.styleData(props);

	    var all = _ApPageStyle$styleDat.all;
	    var small = _ApPageStyle$styleDat.small;
	    var medium = _ApPageStyle$styleDat.medium;
	    var large = _ApPageStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApPageStyle;

/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for page components
	 * @module apeman-react-page
	 * @version 3.0.1
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApPage = exports.ApPageStyle = exports.ApPageContainer = undefined;

	var _ap_page_container = __webpack_require__(532);

	var _ap_page_container2 = _interopRequireDefault(_ap_page_container);

	var _ap_page_style = __webpack_require__(533);

	var _ap_page_style2 = _interopRequireDefault(_ap_page_style);

	var _ap_page = __webpack_require__(531);

	var _ap_page2 = _interopRequireDefault(_ap_page);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApPageContainer = _ap_page_container2.default;
	exports.ApPageStyle = _ap_page_style2.default;
	exports.ApPage = _ap_page2.default;

/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for pager components.
	 * @class ApPager
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _numcal = __webpack_require__(56);

	var _numcal2 = _interopRequireDefault(_numcal);

	var _ap_pager_item = __webpack_require__(233);

	var _ap_pager_item2 = _interopRequireDefault(_ap_pager_item);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApPager */
	var ApPager = function (_Component) {
	  _inherits(ApPager, _Component);

	  function ApPager() {
	    _classCallCheck(this, ApPager);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApPager).apply(this, arguments));
	  }

	  _createClass(ApPager, [{
	    key: 'render',

	    // --------------------
	    // Specs
	    // --------------------
	    value: function render() {
	      var s = this;
	      var state = s.state;
	      var props = s.props;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-pager', props.className),
	        style: Object.assign({}, props.style) }, s.renderItems(), props.children);
	    }

	    // --------------------
	    // Lifecycle
	    // --------------------

	    // ------------------
	    // Private
	    // ------------------

	  }, {
	    key: 'renderItems',
	    value: function renderItems() {
	      var s = this;
	      var props = s.props;
	      var page = props.page;
	      var size = props.size;
	      var total = props.total;
	      var onChange = props.onChange;

	      var items = [];

	      var min = 0;
	      var max = total - 1;
	      var sizeHalf = parseInt(size / 2);

	      var from = _numcal2.default.max(min, _numcal2.default.min(page - sizeHalf, max - size + 1));
	      var to = _numcal2.default.min(_numcal2.default.max(min + size - 1, page + sizeHalf), max);

	      var newItem = function newItem(index, title) {
	        return _react2.default.createElement(_ap_pager_item2.default, { key: [index, title].join('-'),
	          data: index,
	          title: title,
	          selected: index === page,
	          onTap: function onTap(_ref) {
	            var page = _ref.data;
	            return onChange({ page: page });
	          }
	        });
	      };

	      for (var index = from; index <= to; index++) {
	        items.push(newItem(index, String(index + 1)));
	      }

	      if (min < page) {
	        items.unshift(newItem(page - 1, '«'));
	      }
	      if (page < to) {
	        items.push(newItem(page + 1, '»'));
	      }
	      return items;
	    }
	  }]);

	  return ApPager;
	}(_react.Component);

	Object.assign(ApPager, {
	  propTypes: {
	    /** Total page count */
	    total: _react.PropTypes.number.isRequired,
	    /** Current page number */
	    page: _react.PropTypes.number.isRequired,
	    /** Number of items to show */
	    size: _react.PropTypes.number,
	    /** Handler for page change */
	    onChange: _react.PropTypes.func
	  },
	  defaultProps: function defaultProps() {
	    return {
	      size: 5,
	      page: -1,
	      total: -1
	    };
	  }
	});

	exports.default = ApPager;

/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApPager.
	 * @class ApPagerStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _acolor = __webpack_require__(27);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApPagerStyle */
	var ApPagerStyle = function (_Component) {
	  _inherits(ApPagerStyle, _Component);

	  function ApPagerStyle() {
	    _classCallCheck(this, ApPagerStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApPagerStyle).apply(this, arguments));
	  }

	  _createClass(ApPagerStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApPagerStyle$styleDa = ApPagerStyle.styleData(props);

	      var all = _ApPagerStyle$styleDa.all;
	      var small = _ApPagerStyle$styleDa.small;
	      var medium = _ApPagerStyle$styleDa.medium;
	      var large = _ApPagerStyle$styleDa.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApPagerStyle;
	}(_react.Component);

	Object.assign(ApPagerStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  defaultProps: {
	    style: {},
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	  },
	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;
	    var backgroundColor = config.backgroundColor;

	    var size = 24;

	    return {
	      all: {
	        '.ap-pager': {},
	        '.ap-pager-item': {
	          display: 'inline-block',
	          textAlign: 'center',
	          fontSize: '14px',
	          marginRight: '-1px',
	          color: '' + highlightColor,
	          border: '1px solid ' + highlightColor,
	          background: '' + backgroundColor
	        },
	        '.ap-pager-item-inner': {
	          display: 'inline-block',
	          padding: '4px',
	          width: size + 'px',
	          height: size + 'px',
	          lineHeight: size + 'px'
	        },
	        '.ap-pager-item:hover': {
	          textDecoration: 'underline',
	          cursor: 'pointer',
	          background: '' + (0, _acolor.mix)(highlightColor, 'white')
	        },
	        '.ap-pager-item:active': {
	          opacity: 0.9
	        },
	        '.ap-pager-item.ap-pager-item-selected, .ap-pager-item.ap-pager-item-selected:hover, .ap-pager-item.ap-pager-item-selected:active': {
	          cursor: 'default',
	          opacity: 1,
	          background: '' + highlightColor,
	          color: 'white'
	        }
	      }

	    };
	  }
	});

	exports.default = ApPagerStyle;

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for pager components.
	 * @module apeman-react-pager
	 * @version 2.0.3
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApPager = exports.ApPagerStyle = exports.ApPagerItem = undefined;

	var _ap_pager_item = __webpack_require__(233);

	var _ap_pager_item2 = _interopRequireDefault(_ap_pager_item);

	var _ap_pager_style = __webpack_require__(536);

	var _ap_pager_style2 = _interopRequireDefault(_ap_pager_style);

	var _ap_pager = __webpack_require__(535);

	var _ap_pager2 = _interopRequireDefault(_ap_pager);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApPagerItem = _ap_pager_item2.default;
	exports.ApPagerStyle = _ap_pager_style2.default;
	exports.ApPager = _ap_pager2.default;

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for password component.
	 * @class ApPassword
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var DEFAULT_SHOW_ICON = 'ion ion-eye';
	var DEFAULT_HIDE_ICON = 'ion ion-eye-disabled';

	/** @lends ApPassword */
	var ApPassword = _react2.default.createClass({
	  displayName: 'ApPassword',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Name of text input */
	    name: _react.PropTypes.string,
	    /** Value of password input */
	    value: _react.PropTypes.string,
	    /** Placeholder of password input */
	    placeholder: _react.PropTypes.string,
	    /** Icon class for show button */
	    showIcon: _react.PropTypes.string,
	    /** Icon class for hide icon */
	    hideIcon: _react.PropTypes.string
	  },

	  statics: {
	    DEFAULT_SHOW_ICON: DEFAULT_SHOW_ICON,
	    DEFAULT_HIDE_ICON: DEFAULT_HIDE_ICON
	  },

	  getInitialState: function getInitialState() {
	    return {
	      visible: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      name: '',
	      value: '',
	      placeholder: '',
	      showIcon: DEFAULT_SHOW_ICON,
	      hideIcon: DEFAULT_HIDE_ICON
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    var hasVal = !!props.value;
	    var type = state.visible ? 'text' : 'password';
	    var icon = state.visible ? props.hideIcon : props.showIcon;
	    var className = (0, _classnames2.default)('ap-password-wrap', {
	      'ap-password-wrap-empty': !hasVal
	    });
	    return _react2.default.createElement('span', { className: className }, _react2.default.createElement('input', { id: props.id,
	      name: props.name,
	      placeholder: props.placeholder,
	      onChange: props.onChange,
	      className: (0, _classnames2.default)('ap-password', props.className),
	      ref: function ref(input) {
	        s.input = input;
	      },
	      value: props.value,
	      type: type }), _react2.default.createElement('a', { className: 'ap-password-toggle-button', onClick: s.handleToggleTap }, _react2.default.createElement('span', { className: 'ap-password-toggle-aligner' }, ' '), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-password-toggle-icon', icon) })));
	  },

	  // --------------------
	  // Custom
	  // --------------------

	  handleToggleTap: function handleToggleTap(e) {
	    var s = this;
	    var state = s.state;

	    s.setState({
	      visible: !state.visible
	    });
	    _reactDom2.default.findDOMNode(s.input).focus();
	  }
	});

	exports.default = ApPassword;

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApPassword.
	 * @class ApPasswordStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApPasswordStyle */
	var ApPasswordStyle = _react2.default.createClass({
	  displayName: 'ApPasswordStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string,
	    maxWidth: _react.PropTypes.number
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var maxWidth = config.maxWidth;

	      return {
	        all: {
	          '.ap-password': {
	            display: 'block',
	            padding: '4px 8px',
	            border: '1px solid #AAA',
	            width: '100%',
	            maxWidth: maxWidth + 'px',
	            borderRadius: '2px',
	            boxSizing: 'border-box',
	            outlineColor: '' + highlightColor,
	            boxShadow: '1px 1px 1px rgba(0,0,0,.05) inset'
	          },
	          '.ap-password-wrap': {
	            position: 'relative',
	            width: '100%',
	            margin: '4px',
	            verticalAlign: 'middle',
	            maxWidth: maxWidth + 'px',
	            display: 'block'
	          },
	          '.ap-password-wrap-empty .ap-password-toggle-button': {
	            opacity: 0,
	            pointerEvents: 'none'
	          },
	          '.ap-password-toggle-button': {
	            position: 'absolute',
	            top: 0,
	            right: -4,
	            display: 'inline-flex',
	            alignItems: 'center',
	            padding: '0 8px',
	            bottom: 0,
	            cursor: 'pointer',
	            opacity: 0.8,
	            transition: 'opacity 200ms'
	          },
	          '.ap-password-toggle-button:hover': {
	            opacity: 1
	          },
	          '.ap-password-toggle-button:active': {
	            opacity: 0.9
	          },
	          '.ap-password-toggle-aligner': {
	            display: 'inline-block',
	            verticalAlign: 'middle',
	            width: '1px',
	            marginRight: '-1px',
	            height: '100%',
	            boxSizing: 'border-box',
	            opacity: 0
	          },
	          '.ap-password-toggle-icon': {
	            display: 'inline-block',
	            verticalAlign: 'middle'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApPasswordStyle$styl = ApPasswordStyle.styleData(props);

	    var all = _ApPasswordStyle$styl.all;
	    var small = _ApPasswordStyle$styl.small;
	    var medium = _ApPasswordStyle$styl.medium;
	    var large = _ApPasswordStyle$styl.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApPasswordStyle;

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for profile components.
	 * @class ApProfile
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApProfile */
	var ApProfile = _react2.default.createClass({
	  displayName: 'ApProfile',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-profile', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApProfile;

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form component for profile.
	 * @class ApProfileDataForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactField = __webpack_require__(46);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactMixinForm = __webpack_require__(51);

	var _apemanReactText = __webpack_require__(69);

	var _apemanReactUpload = __webpack_require__(255);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApProfileDataForm */
	var ApProfileDataForm = _react2.default.createClass({
	  displayName: 'ApProfileDataForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'profile-data',
	      formLabels: {
	        name: 'Display Name',
	        image: 'Profile Image',
	        submit: 'Save'
	      },
	      formPlaceholders: {
	        name: 'Full name for display'
	      }
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-profile-data-form', props.className),
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderNameField(), s._renderImageField(), s._renderSubmitField()), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  handleImageChange: function handleImageChange(e) {
	    var target = e.target;
	    var urls = e.urls;

	    var s = this;

	    s.handleFormChange({
	      target: {
	        name: target && target.name,
	        value: urls[0]
	      }
	    });
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _renderNameField: function _renderNameField() {
	    var name = 'name';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      placeholder: s.getFormPlaceholder(name),
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderImageField: function _renderImageField() {
	    var name = 'image';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactUpload.ApUpload, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      multiple: false,
	      accept: 'image/*',
	      onLoad: s.handleImageChange
	    })));
	  },
	  _renderSubmitField: function _renderSubmitField() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true,
	      className: 'ap-profile-data-form-button-field' }, _react2.default.createElement(_apemanReactButton.ApButton, { onTap: s.handleFormSubmit,
	      wide: true,
	      id: s.getFormId(name),
	      primary: true
	    }, s.getFormLabel(name)));
	  }
	});

	exports.default = ApProfileDataForm;

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form component for profile.
	 * @class ApProfileLeadForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactField = __webpack_require__(46);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactMixinForm = __webpack_require__(51);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApProfileLeadForm */
	var ApProfileLeadForm = _react2.default.createClass({
	  displayName: 'ApProfileLeadForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'profile-lead',
	      formLabels: {
	        message: 'Your profile is not registered yet.',
	        submit: 'Input Profile Now'
	      }
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-profile-lead-form', props.className),
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderMessageField(), s._renderSubmitField()));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderMessageField: function _renderMessageField() {
	    var name = 'message';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-profile-lead-form-message-field' }, _react2.default.createElement('div', { className: 'ap-profile-lead-form-message',
	      id: s.getFormId(name) }, s.getFormLabel(name)));
	  },
	  _renderSubmitField: function _renderSubmitField() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-profile-lead-form-button-field' }, _react2.default.createElement(_apemanReactButton.ApButton, { onTap: s.handleFormSubmit,
	      wide: true,
	      id: s.getFormId(name),
	      primary: false
	    }, s.getFormLabel(name)));
	  }
	});

	exports.default = ApProfileLeadForm;

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApProfile.
	 * @class ApProfileStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApProfileStyle */
	var ApProfileStyle = _react2.default.createClass({
	  displayName: 'ApProfileStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-profile': {},
	          '.ap-profile-lead-form-message': {
	            fontSize: '1em',
	            color: '#AAA',
	            padding: '32px 16px'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApProfileStyle$style = ApProfileStyle.styleData(props);

	    var all = _ApProfileStyle$style.all;
	    var small = _ApProfileStyle$style.small;
	    var medium = _ApProfileStyle$style.medium;
	    var large = _ApProfileStyle$style.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApProfileStyle;

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for profile components.
	 * @module apeman-react-profile
	 * @version 3.0.6
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApProfile = exports.ApProfileStyle = exports.ApProfileLeadForm = exports.ApProfileDataForm = undefined;

	var _ap_profile_data_form = __webpack_require__(541);

	var _ap_profile_data_form2 = _interopRequireDefault(_ap_profile_data_form);

	var _ap_profile_lead_form = __webpack_require__(542);

	var _ap_profile_lead_form2 = _interopRequireDefault(_ap_profile_lead_form);

	var _ap_profile_style = __webpack_require__(543);

	var _ap_profile_style2 = _interopRequireDefault(_ap_profile_style);

	var _ap_profile = __webpack_require__(540);

	var _ap_profile2 = _interopRequireDefault(_ap_profile);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApProfileDataForm = _ap_profile_data_form2.default;
	exports.ApProfileLeadForm = _ap_profile_lead_form2.default;
	exports.ApProfileStyle = _ap_profile_style2.default;
	exports.ApProfile = _ap_profile2.default;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Radio component.
	 * @class ApRadio
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _ap_radio = __webpack_require__(234);

	var _ap_radio2 = _interopRequireDefault(_ap_radio);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRadioGroup */
	var ApRadioGroup = _react2.default.createClass({
	  displayName: 'ApRadioGroup',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Document id prefix */
	    prefix: _react.PropTypes.string,
	    /** Name of Radio input */
	    name: _react.PropTypes.string.isRequired,
	    /** Value and label titles */
	    options: _react.PropTypes.object.isRequired,
	    /** Checked state for each values */
	    checked: _react.PropTypes.object.isRequired,
	    /** Handle for change event */
	    onChange: _react.PropTypes.func,
	    /** Icon class name for normal state */
	    icon: _react.PropTypes.string,
	    /** Icon class name for checked state */
	    checkedIcon: _react.PropTypes.string
	  },

	  mixins: [],

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      prefix: _uuid2.default.v4(),
	      name: null,
	      title: '',
	      checked: {},
	      options: {},
	      onChange: null,
	      icon: _ap_radio2.default.DEFAULT_ICON,
	      checkedIcon: _ap_radio2.default.DEFAULT_CHECKED_ICON
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var prefix = props.prefix;
	    var name = props.name;
	    var options = props.options;
	    var checked = props.checked;
	    var icon = props.icon;
	    var checkedIcon = props.checkedIcon;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-Radio-group', props.className) }, Object.keys(options || {}).map(function (value) {
	      return _react2.default.createElement(_ap_radio2.default, { key: value,
	        name: name,
	        value: value,
	        id: prefix + '-' + value,
	        checked: !!checked[value],
	        title: options[value],
	        icon: icon,
	        checkedIcon: checkedIcon,
	        onChange: s.handleChange
	      });
	    }));
	  },

	  // --------------------
	  // Handle
	  // --------------------

	  handleChange: function handleChange(e) {
	    var s = this;
	    var props = s.props;

	    if (props.onChange) {
	      props.onChange(e);
	    }
	  }
	});

	exports.default = ApRadioGroup;

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApRadio.
	 * @class ApRadioStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRadioStyle */
	var ApRadioStyle = _react2.default.createClass({
	  displayName: 'ApRadioStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      scope: false,
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;

	      return {
	        all: {
	          '.ap-radio': {
	            display: 'inline-block',
	            padding: '0 4px',
	            cursor: 'pointer',
	            position: 'relative'
	          },
	          '.ap-radio:hover': {
	            opacity: 0.9
	          },
	          '.ap-radio:active': {
	            opacity: 0.75
	          },
	          '.ap-radio-input': {
	            display: 'inline-block',
	            padding: '0 2px',
	            position: 'relative',
	            top: '-2px',
	            opacity: 0,
	            zIndex: 8
	          },
	          '.ap-radio-title': {
	            display: 'inline-block'
	          },
	          '.ap-radio-icon': {
	            position: 'absolute',
	            left: 2,
	            top: 0,
	            bottom: 0,
	            display: 'inline-flex',
	            justifyContent: 'center',
	            alignItems: 'center'
	          },
	          '.ap-radio:hover .ap-radio-icon': {
	            color: '' + highlightColor
	          },
	          '.ap-radio:active .ap-radio-icon': {
	            opacity: 0.5
	          },
	          '.ap-radio-icon-checked': {
	            color: '' + highlightColor
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApRadioStyle$styleDa = ApRadioStyle.styleData(props);

	    var all = _ApRadioStyle$styleDa.all;
	    var small = _ApRadioStyle$styleDa.small;
	    var medium = _ApRadioStyle$styleDa.medium;
	    var large = _ApRadioStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApRadioStyle;

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for radio component.
	 * @module apeman-react-radio
	 * @version 4.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApRadio = exports.ApRadioStyle = exports.ApRadioGroup = undefined;

	var _ap_radio_group = __webpack_require__(545);

	var _ap_radio_group2 = _interopRequireDefault(_ap_radio_group);

	var _ap_radio_style = __webpack_require__(546);

	var _ap_radio_style2 = _interopRequireDefault(_ap_radio_style);

	var _ap_radio = __webpack_require__(234);

	var _ap_radio2 = _interopRequireDefault(_ap_radio);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApRadioGroup = _ap_radio_group2.default;
	exports.ApRadioStyle = _ap_radio_style2.default;
	exports.ApRadio = _ap_radio2.default;

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Range input component.
	 * @class ApRange
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _chopcal = __webpack_require__(294);

	var _chopcal2 = _interopRequireDefault(_chopcal);

	var _rangecal = __webpack_require__(187);

	var _rangecal2 = _interopRequireDefault(_rangecal);

	var _ap_range_handle = __webpack_require__(235);

	var _ap_range_handle2 = _interopRequireDefault(_ap_range_handle);

	var _ap_range_label = __webpack_require__(236);

	var _ap_range_label2 = _interopRequireDefault(_ap_range_label);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRange */
	var ApRange = _react2.default.createClass({
	  displayName: 'ApRange',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Range from value */
	    from: _react.PropTypes.number,
	    /** Range to value */
	    to: _react.PropTypes.number,
	    /** Min value for range from  */
	    min: _react.PropTypes.number,
	    /** Max value for range to */
	    max: _react.PropTypes.number,
	    /** Step for value */
	    step: _react.PropTypes.number,
	    /** Handler for change */
	    onChange: _react.PropTypes.func,
	    barOnly: _react.PropTypes.bool
	  },

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    return {
	      minX: 0,
	      maxX: 1200,
	      fromX: 0,
	      toX: 1200,
	      fromValue: props.from,
	      toValue: props.to
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      from: 25,
	      to: 75,
	      min: 0,
	      max: 100,
	      step: 0.01,
	      barOnly: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-range', props.className) }, _react2.default.createElement('div', { className: 'ap-range-inner' }, s._renderLabel(props.min), _react2.default.createElement('div', { className: 'ap-range-bar-wrap' }, _react2.default.createElement(_apemanReactTouchable.ApTouchable, { onTap: s.rangeBarDidTap }, _react2.default.createElement('div', { className: 'ap-range-bar' }, _react2.default.createElement('div', { className: 'ap-range-bar-bg' }), _react2.default.createElement('div', { className: 'ap-range-bar-highlight',
	      style: { left: state.fromX, width: state.toX - state.fromX } }))), _react2.default.createElement(_ap_range_handle2.default, { onMove: s.rangeFromHandleDidMove,
	      shouldMove: s.shouldRangeFromHandleMove,
	      x: state.fromX,
	      minX: state.minX,
	      maxX: state.maxX,
	      className: 'ap-range-handle-from' }), _react2.default.createElement(_ap_range_handle2.default, { onMove: s.rangeToHandleDidMove,
	      shouldMove: s.shouldRangeToHandleMove,
	      x: state.toX,
	      minX: state.minX,
	      maxX: state.maxX,
	      className: 'ap-range-handle-to' })), s._renderLabel(props.max)));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;

	    window.addEventListener('resize', s.resizeRange);
	    s.resizeRange();
	    s.resetRangeValues();
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    s.resetRangeValues();
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    window.removeEventListener('resize', s.resizeRange);
	  },

	  // ------------------
	  // Helper
	  // ------------------

	  resizeRange: function resizeRange(e) {
	    var s = this;
	    var state = s.state;
	    var w = _reactDom2.default.findDOMNode(s).offsetWidth;
	    var minX = 0;
	    var maxX = w;
	    var fromRate = s._rateWithValue(state.fromValue);
	    var toRate = s._rateWithValue(state.toValue);
	    s.setState({
	      minX: minX,
	      maxX: maxX,
	      fromX: _rangecal2.default.value(minX, maxX, fromRate),
	      toX: _rangecal2.default.value(minX, maxX, toRate)
	    });
	  },
	  rangeBarDidTap: function rangeBarDidTap() {},
	  rangeFromHandleDidMove: function rangeFromHandleDidMove(e) {
	    var s = this;
	    var fromValue = s._valueWithX(e.detail.x);
	    s.setRangeValues(fromValue, s.state.toValue, true);
	  },
	  rangeToHandleDidMove: function rangeToHandleDidMove(e) {
	    var s = this;
	    var toValue = s._valueWithX(e.detail.x);
	    s.setRangeValues(s.state.fromValue, toValue, false);
	  },
	  shouldRangeFromHandleMove: function shouldRangeFromHandleMove() {
	    var s = this;
	    return true;
	  },
	  shouldRangeToHandleMove: function shouldRangeToHandleMove() {
	    var s = this;
	    return true;
	  },
	  resetRangeValues: function resetRangeValues() {
	    var s = this;
	    setTimeout(function () {
	      var state = s.state;
	      s.setRangeValues(state.fromValue, state.toValue, true);
	    }, 0);
	  },
	  setRangeValues: function setRangeValues(fromValue, toValue, forwarding) {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var minX = state.minX;
	    var maxX = state.maxX;

	    var step = props.step;
	    if (toValue < fromValue) {
	      if (forwarding) {
	        toValue = fromValue;
	      } else {
	        fromValue = toValue;
	      }
	    }

	    var fromRate = s._rateWithValue(fromValue);
	    var toRate = s._rateWithValue(toValue);

	    s.setState({
	      fromValue: fromValue,
	      toValue: toValue,
	      fromX: _rangecal2.default.value(minX, maxX, fromRate),
	      toX: _rangecal2.default.value(minX, maxX, toRate)
	    });

	    fromValue = _chopcal2.default.round(fromValue, step);
	    toValue = _chopcal2.default.round(toValue, step);

	    var duplicate = s._fromValue === fromValue && s._toValue === toValue;
	    if (duplicate) {
	      return;
	    }

	    s._fromValue = fromValue;
	    s._toValue = toValue;

	    if (props.onChange) {
	      props.onChange(fromValue, toValue, {
	        element: s
	      });
	    }
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _rateWithValue: function _rateWithValue(value) {
	    var s = this;
	    var _s$props = s.props;
	    var min = _s$props.min;
	    var max = _s$props.max;

	    value = _rangecal2.default.round(min, max, value);
	    return _chopcal2.default.round(_rangecal2.default.rate(min, max, value), 0.01);
	  },
	  _valueWithRate: function _valueWithRate(rate) {
	    var s = this;
	    var _s$props2 = s.props;
	    var min = _s$props2.min;
	    var max = _s$props2.max;

	    var value = _chopcal2.default.round(_rangecal2.default.value(min, max, rate), 0.01);
	    return _rangecal2.default.round(min, max, value);
	  },
	  _valueWithX: function _valueWithX(x) {
	    var s = this;
	    var _s$state = s.state;
	    var minX = _s$state.minX;
	    var maxX = _s$state.maxX;

	    var rate = _rangecal2.default.rate(minX, maxX, x + 2);
	    return s._valueWithRate(rate);
	  },
	  _renderLabel: function _renderLabel(value) {
	    var s = this;
	    var props = s.props;

	    if (props.barOnly) {
	      return null;
	    }
	    return _react2.default.createElement(_ap_range_label2.default, { value: value });
	  }
	});

	exports.default = ApRange;

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApRange.
	 * @class ApRangeStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRangeStyle */
	var ApRangeStyle = _react2.default.createClass({
	  displayName: 'ApRangeStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    handleSize: _react.PropTypes.number,
	    barHeight: _react.PropTypes.number,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      handleSize: 24,
	      barHeight: 4,
	      highlightColor: '#38E'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var handleSize = config.handleSize;
	      var barHeight = config.barHeight;
	      var highlightColor = config.highlightColor;

	      var barMargin = (handleSize - barHeight) / 2;
	      var handlePaddingRate = -20;

	      return {
	        all: {
	          '.ap-range': {
	            position: 'relative',
	            height: handleSize + 2 + 'px'
	          },
	          '.ap-range-inner': {
	            display: 'flex',
	            margin: '2px 0'
	          },
	          '.ap-range-bar-wrap': {
	            display: 'block',
	            position: 'relative',
	            width: '100%',
	            boxSizing: 'border-box'
	          },
	          '.ap-range-bar': {
	            position: 'absolute',
	            left: 0,
	            right: 0,
	            top: 0,
	            height: barHeight + barMargin * 2 + 'px'
	          },
	          '.ap-range-bar-bg': {
	            position: 'absolute',
	            top: barMargin,
	            left: 0,
	            right: 0,
	            height: barHeight + 'px',
	            borderRadius: barHeight / 2 + 'px',
	            border: '1px solid #BBB',
	            backgroundColor: '#CCC'
	          },
	          '.ap-range-bar-highlight': {
	            backgroundColor: '' + highlightColor,
	            top: barMargin - 1,
	            position: 'absolute',
	            height: barHeight + 2,
	            borderRadius: barHeight / 2,
	            border: '1px solid rgba(0,0,0,0.1)',
	            maxWidth: '100%'
	          },
	          '.ap-range-handle': {
	            position: 'absolute',
	            left: -handleSize / 2 + 'px',
	            top: 0,
	            display: 'inline-block',
	            cursor: '-webkit-grab'
	          },
	          '.ap-range-handle-area': {
	            position: 'absolute',
	            display: 'inline-block',
	            color: 'transparent',
	            opacity: 0,
	            left: handlePaddingRate + '%',
	            top: handlePaddingRate + '%',
	            right: handlePaddingRate + '%',
	            bottom: handlePaddingRate + '%'
	          },
	          '.ap-range-handle:active': {
	            cursor: '-webkit-grabbing',
	            backgroundColor: '#FCFCFC'
	          },
	          '.ap-range-handle-from': { left: -handleSize / 2 },
	          '.ap-range-handle-to': { left: -handleSize / 2 },
	          '.ap-range-handle-icon': {
	            width: handleSize,
	            height: handleSize,
	            borderRadius: 0,
	            display: 'inline-block',
	            backgroundColor: 'white',
	            border: '1px solid #D0D0D0',
	            boxShadow: '1px 1px 2px rgba(0,0,0,0.5)',
	            position: 'relative',
	            zIndex: 3
	          },
	          '.ap-range-handle-icon:hover': {
	            boxShadow: '1px 1px 3px rgba(0,0,0,0.5)'
	          },
	          '.ap-range-label': {
	            display: 'inline-block',
	            padding: '2px 4px',
	            textAlign: 'right',
	            minWidth: '24px',
	            fontSize: '14px',
	            lineHeight: handleSize + 'px',
	            boxSizing: 'border-box'
	          }
	        }

	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApRangeStyle$styleDa = ApRangeStyle.styleData(props);

	    var all = _ApRangeStyle$styleDa.all;
	    var small = _ApRangeStyle$styleDa.small;
	    var medium = _ApRangeStyle$styleDa.medium;
	    var large = _ApRangeStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApRangeStyle;

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for range input component.
	 * @module apeman-react-range
	 * @version 3.0.14
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApRange = exports.ApRangeStyle = exports.ApRangeLabel = exports.ApRangeHandle = undefined;

	var _ap_range_handle = __webpack_require__(235);

	var _ap_range_handle2 = _interopRequireDefault(_ap_range_handle);

	var _ap_range_label = __webpack_require__(236);

	var _ap_range_label2 = _interopRequireDefault(_ap_range_label);

	var _ap_range_style = __webpack_require__(549);

	var _ap_range_style2 = _interopRequireDefault(_ap_range_style);

	var _ap_range = __webpack_require__(548);

	var _ap_range2 = _interopRequireDefault(_ap_range);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApRangeHandle = _ap_range_handle2.default;
	exports.ApRangeLabel = _ap_range_label2.default;
	exports.ApRangeStyle = _ap_range_style2.default;
	exports.ApRange = _ap_range2.default;

/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form for sending recover email.
	 * @class ApRecoverSendForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactMixinForm = __webpack_require__(51);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactPassword = __webpack_require__(99);

	var _apemanReactField = __webpack_require__(46);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRecoverSendForm */
	var ApRecoverSendForm = _react2.default.createClass({
	  displayName: 'ApRecoverSendForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'recover-reset',
	      formLabels: {
	        submit: 'Save'
	      },
	      formPlaceholders: {
	        password: 'New Password'
	      }
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-recover-reset-form', props.className),
	      style: Object.assign({}, props.style)
	    }), s._renderFake(), s._renderMessage(), _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement('div', { className: 'ap-recover-oneline' }, _react2.default.createElement('span', { className: 'ap-recover-oneline-input' }, s._renderPassword()), s._renderSubmit())), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderMessage: function _renderMessage() {
	    var name = 'message';
	    var s = this;
	    var message = s.getFormLabel(name);
	    var className = (0, _classnames2.default)('ap-recover-reset-message', { 'ap-recover-reset-message-none': !message });
	    return _react2.default.createElement('p', { className: className, id: s.getFormId(name) }, message);
	  },
	  _renderFake: function _renderFake() {
	    return _react2.default.createElement('input', { type: 'text',
	      name: '_',
	      className: 'ap-recover-fake-input',
	      style: { display: 'none' } });
	  },
	  _renderPassword: function _renderPassword() {
	    var name = 'password';
	    var s = this;
	    return _react2.default.createElement(_apemanReactPassword.ApPassword, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange,
	      placeholder: s.getFormPlaceholder(name)
	    });
	  },
	  _renderSubmit: function _renderSubmit() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactButton.ApButton, { primary: true,
	      onTap: s.handleFormSubmit,
	      className: 'ap-recover-oneline-button' }, s.getFormLabel(name));
	  }
	});

	exports.default = ApRecoverSendForm;

/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form for sending recover email.
	 * @class ApRecoverSendForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactMixinForm = __webpack_require__(51);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactText = __webpack_require__(69);

	var _apemanReactField = __webpack_require__(46);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRecoverSendForm */
	var ApRecoverSendForm = _react2.default.createClass({
	  displayName: 'ApRecoverSendForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'recover-send',
	      formLabels: {
	        message: null,
	        submit: 'Send'
	      },
	      formPlaceholders: {
	        email: 'Email'
	      }
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-recover-send-form', props.className),
	      style: Object.assign({}, props.style)
	    }), s._renderFake(), s._renderMessage(), _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement('div', { className: 'ap-recover-oneline' }, _react2.default.createElement('span', { className: 'ap-recover-oneline-input' }, s._renderEmail()), s._renderSubmit())), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderFake: function _renderFake() {
	    return _react2.default.createElement('input', { type: 'text',
	      name: '_',
	      className: 'ap-recover-fake-input',
	      style: { display: 'none' } });
	  },
	  _renderMessage: function _renderMessage() {
	    var name = 'message';
	    var s = this;
	    var message = s.getFormLabel(name);
	    var className = (0, _classnames2.default)('ap-recover-send-message', {
	      'ap-recover-send-message-none': !message
	    });
	    return _react2.default.createElement('p', { className: className }, message);
	  },
	  _renderEmail: function _renderEmail() {
	    var name = 'email';
	    var s = this;
	    return _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange,
	      placeholder: s.getFormPlaceholder(name)
	    });
	  },
	  _renderSubmit: function _renderSubmit() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactButton.ApButton, { primary: true,
	      id: s.getFormId(name),
	      onTap: s.handleFormSubmit,
	      className: 'ap-recover-oneline-button' }, s.getFormLabel(name));
	  }
	});

	exports.default = ApRecoverSendForm;

/***/ },
/* 553 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApRecover.
	 * @class ApRecoverStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApRecoverStyle */
	var ApRecoverStyle = _react2.default.createClass({
	  displayName: 'ApRecoverStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      var lineHeight = 32;
	      var padding = 4;
	      var borderRadius = 4;
	      return {
	        all: {
	          '.ap-recover': {},

	          '.ap-recover-oneline': {
	            display: 'flex',
	            width: '100%',
	            boxSizing: 'border-box'
	          },
	          '.ap-recover-oneline .ap-text-wrap,.ap-recover-oneline .ap-password-wrap': {
	            margin: 0
	          },
	          '.ap-recover-oneline-input': {
	            width: '100%',
	            lineHeight: lineHeight + 'px',
	            boxSizing: 'border-box',
	            padding: 0
	          },
	          '.ap-recover-oneline-input input': {
	            lineHeight: lineHeight - padding * 2 + 'px',
	            padding: padding + 'px ' + padding * 2 + 'px',
	            boxSizing: 'border-box',
	            margin: 0,
	            borderRight: 'none',
	            borderRadius: borderRadius + 'px 0 0 ' + borderRadius + 'px'
	          },
	          '.ap-recover-oneline-button': {
	            width: '80px',
	            padding: '0 16px',
	            textAlign: 'center',
	            margin: 0,
	            lineHeight: lineHeight + 'px',
	            borderRadius: '0 ' + borderRadius + 'px ' + borderRadius + 'px 0'
	          },
	          '.ap-recover-fake-input': {
	            display: 'none !important'
	          },
	          '.ap-recover-send-message': {
	            display: 'block'
	          },
	          '.ap-recover-send-message-none': {
	            display: 'none'
	          },
	          '.ap-recover-reset-message': {
	            display: 'block'
	          },
	          '.ap-recover-reset-message-none': {
	            display: 'none'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApRecoverStyle$style = ApRecoverStyle.styleData(props);

	    var all = _ApRecoverStyle$style.all;
	    var small = _ApRecoverStyle$style.small;
	    var medium = _ApRecoverStyle$style.medium;
	    var large = _ApRecoverStyle$style.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApRecoverStyle;

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for recover procedure components.
	 * @module apeman-react-recover
	 * @version 4.0.5
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApRecoverStyle = exports.ApRecoverSendForm = exports.ApRecoverResetForm = undefined;

	var _ap_recover_reset_form = __webpack_require__(551);

	var _ap_recover_reset_form2 = _interopRequireDefault(_ap_recover_reset_form);

	var _ap_recover_send_form = __webpack_require__(552);

	var _ap_recover_send_form2 = _interopRequireDefault(_ap_recover_send_form);

	var _ap_recover_style = __webpack_require__(553);

	var _ap_recover_style2 = _interopRequireDefault(_ap_recover_style);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApRecoverResetForm = _ap_recover_reset_form2.default;
	exports.ApRecoverSendForm = _ap_recover_send_form2.default;
	exports.ApRecoverStyle = _ap_recover_style2.default;

/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for resign components
	 * @class ApResign
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApResign */
	var ApResign = _react2.default.createClass({
	  displayName: 'ApResign',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-resign', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApResign;

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form for resign lead.
	 * @class ApResignLeadForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactField = __webpack_require__(46);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactMixinForm = __webpack_require__(51);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApResignLeadForm */
	var ApResignLeadForm = _react2.default.createClass({
	  displayName: 'ApResignLeadForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'resign-lead',
	      formLabels: {
	        title: 'Are you sure ?',
	        message: 'Once delete the account, there is no going back.',
	        submit: 'Continue to withdraw',
	        cancel: 'Cancel'
	      }
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-resign-lead-form', props.className),
	      style: Object.assign({}, props.style),
	      centered: true
	    }), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderTitleField(), s._renderMessageField(), s._renderCustomFiled(props.children), s._renderSubmitField()));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderTitleField: function _renderTitleField(id, title) {
	    var name = 'title';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-lead-form-title-field' }, _react2.default.createElement('div', { className: 'ap-resign-lead-form-title',
	      id: s.getFormId(name) }, s.getFormLabel(name)));
	  },
	  _renderMessageField: function _renderMessageField() {
	    var name = 'message';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-lead-form-message-field' }, _react2.default.createElement('div', { className: 'ap-resign-lead-form-message',
	      id: s.getFormId(name) }, s.getFormLabel(name)));
	  },
	  _renderCustomFiled: function _renderCustomFiled(children) {
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-lead-form-custom-field' }, children);
	  },
	  _renderSubmitField: function _renderSubmitField() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-lead-form-button-field' }, _react2.default.createElement(_apemanReactButton.ApPrevButton, { onTap: s.handleFormCancel,
	      className: 'ap-resign-lead-form-cancel-button',
	      id: s.getFormId('cancel'),
	      primary: false
	    }, s.getFormLabel('cancel')), _react2.default.createElement(_apemanReactButton.ApNextButton, { onTap: s.handleFormSubmit,
	      className: 'ap-resign-lead-form-submit-button',
	      id: s.getFormId(name),
	      primary: false
	    }, s.getFormLabel(name)));
	  }
	});

	exports.default = ApResignLeadForm;

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form for resign reason.
	 * @class ApResignReasonForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactText = __webpack_require__(69);

	var _apemanReactField = __webpack_require__(46);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactMixinForm = __webpack_require__(51);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApResignReasonForm */
	var ApResignReasonForm = _react2.default.createClass({
	  displayName: 'ApResignReasonForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'resign-reason',
	      formLabels: {
	        title: 'Please tell us the reason.',
	        message: 'This information will be used to improve our Service.',
	        submit: 'Commit Withdrawal',
	        cancel: 'Back',
	        content: 'Reason'
	      }
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-resign-reason-form', props.className),
	      style: Object.assign({}, props.style),
	      centered: true
	    }), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderTitleField(), s._renderMessageField(), s._renderCustomFiled(props.children), s._renderContentField(), s._renderSubmitField()));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------
	  _renderTitleField: function _renderTitleField() {
	    var name = 'title';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-reason-form-title-field' }, _react2.default.createElement('div', { className: 'ap-resign-reason-form-title',
	      id: s.getFormId(name) }, s.getFormLabel(name)));
	  },
	  _renderMessageField: function _renderMessageField() {
	    var name = 'message';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-reason-form-message-field' }, _react2.default.createElement('div', { className: 'ap-resign-reason-form-message',
	      id: s.getFormId(name) }, s.getFormLabel(name)));
	  },
	  _renderCustomFiled: function _renderCustomFiled(children) {
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-reason-form-custom-field' }, children);
	  },
	  _renderContentField: function _renderContentField() {
	    var name = 'content';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-reason-form-text-field' }, _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      rows: 8 }));
	  },
	  _renderSubmitField: function _renderSubmitField() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-resign-reason-form-button-field' }, _react2.default.createElement(_apemanReactButton.ApPrevButton, { onTap: s.handleFormCancel,
	      className: 'ap-resign-reason-form-cancel-button',
	      id: s.getFormId('cancel'),
	      primary: false
	    }, s.getFormLabel('cancel')), _react2.default.createElement(_apemanReactButton.ApNextButton, { onTap: s.handleFormSubmit,
	      className: 'ap-resign-reason-form-submit-button',
	      id: s.getFormId(name),
	      primary: true
	    }, s.getFormLabel('submit')));
	  }
	});

	exports.default = ApResignReasonForm;

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApResign.
	 * @class ApResignStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApResignStyle */
	var ApResignStyle = _react2.default.createClass({
	  displayName: 'ApResignStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-resign': {},
	          '.ap-resign-lead-form-title': {
	            fontSize: '1.5em'
	          },
	          '.ap-resign-lead-form-message': {},
	          '.ap-resign-reason-form-title': {
	            fontSize: '1.5em'
	          },
	          '.ap-resign-reason-form-message': {},
	          '.ap-resign-lead-form-cancel-button .ap-prev-button-icon': {
	            display: 'none'
	          }
	        }

	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApResignStyle$styleD = ApResignStyle.styleData(props);

	    var all = _ApResignStyle$styleD.all;
	    var small = _ApResignStyle$styleD.small;
	    var medium = _ApResignStyle$styleD.medium;
	    var large = _ApResignStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApResignStyle;

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for resign components
	 * @module apeman-react-resign
	 * @version 4.0.6
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApResign = exports.ApResignStyle = exports.ApResignReasonForm = exports.ApResignLeadForm = undefined;

	var _ap_resign_lead_form = __webpack_require__(556);

	var _ap_resign_lead_form2 = _interopRequireDefault(_ap_resign_lead_form);

	var _ap_resign_reason_form = __webpack_require__(557);

	var _ap_resign_reason_form2 = _interopRequireDefault(_ap_resign_reason_form);

	var _ap_resign_style = __webpack_require__(558);

	var _ap_resign_style2 = _interopRequireDefault(_ap_resign_style);

	var _ap_resign = __webpack_require__(555);

	var _ap_resign2 = _interopRequireDefault(_ap_resign);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApResignLeadForm = _ap_resign_lead_form2.default;
	exports.ApResignReasonForm = _ap_resign_reason_form2.default;
	exports.ApResignStyle = _ap_resign_style2.default;
	exports.ApResign = _ap_resign2.default;

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for scroll components.
	 * @class ApScroll
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _apemanReactMixinResize = __webpack_require__(232);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var noop = function noop(e) {
	  return undefined;
	};

	/** @lends ApScroll */
	var ApScroll = _react2.default.createClass({
	  displayName: 'ApScroll',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    direction: _react.PropTypes.oneOf(['x', 'y', 'xy']),
	    showScrollbars: _react.PropTypes.bool,
	    disableMouseWheel: _react.PropTypes.bool,
	    iScrollRef: _react.PropTypes.func,
	    onScrollCancel: _react.PropTypes.func,
	    onScrollStart: _react.PropTypes.func,
	    onScroll: _react.PropTypes.func,
	    onScrollEnd: _react.PropTypes.func,
	    onFlick: _react.PropTypes.func
	  },

	  mixins: [_apemanReactMixinResize.ApResizeMixin],

	  statics: {
	    refreshIScroll: function refreshIScroll(iScroll, delay) {
	      var timer = setTimeout(function () {
	        if (iScroll) {
	          iScroll.refresh();
	        }
	      }, delay || 0);
	      return function () {
	        return clearTimeout(timer);
	      };
	    }
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      id: 'ap-scroll-' + _uuid2.default.v4(),
	      direction: 'y',
	      showScrollbars: false,
	      disableMouseWheel: false,
	      iScrollRef: noop,
	      onScrollCancel: noop,
	      onScrollStart: noop,
	      onScroll: noop,
	      onScrollEnd: noop,
	      onFlick: noop
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { id: props.id,
	      className: (0, _classnames2.default)('ap-scroll', props.className),
	      style: Object.assign({}, props.style)
	    }, props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var IScroll = __webpack_require__(906);
	    var s = this;
	    var props = s.props;
	    var direction = props.direction;
	    var iScrollRef = props.iScrollRef;

	    setTimeout(function () {
	      var isMounted = s.isMounted();
	      if (!isMounted) {
	        return;
	      }
	      var iScroll = new IScroll(_reactDom2.default.findDOMNode(s), {
	        mouseWheel: !props.disableMouseWheel,
	        probeType: 2,
	        showScrollbars: props.showScrollbars,
	        scrollX: /x/.test(direction),
	        scrollY: /y/.test(direction)
	      });
	      var listeners = s._getEventListeners();
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = Object.keys(listeners)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var event = _step.value;

	          iScroll.on(event, listeners[event]);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      s._iScroll = iScroll;

	      if (props.onIScrollInit) {
	        console.warn('[ApScroll] onIScrollInit is now deprecated. Use onIScrollInit instead.');
	        var _window = window;
	        var Event = _window.Event;

	        var e = new Event('ap:scroll:init');
	        props.onIScrollInit(Object.assign(e, { iScroll: iScroll }));
	      }

	      if (iScrollRef) {}
	      iScrollRef(iScroll);

	      s.refreshIScroll(10); // Make sure scroll works.
	    }, 0);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    var iScroll = s._iScroll;

	    if (s._cancelRefresh) {
	      s._cancelRefresh();
	    }
	    if (iScroll) {
	      var listeners = s._getEventListeners();
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;

	      try {
	        for (var _iterator2 = Object.keys(listeners)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var event = _step2.value;

	          iScroll.on(event, listeners[event]);
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }

	      iScroll.destroy();
	    }
	  },

	  // ------------------
	  // For ApResizeMixin
	  // ------------------

	  windowDidResize: function windowDidResize(e) {
	    var s = this;

	    s.refreshIScroll(0);
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  refreshIScroll: function refreshIScroll(delay) {
	    var s = this;
	    s._cancelRefresh = ApScroll.refreshIScroll(s._iScroll, delay);
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _iScroll: null,

	  _getEventListeners: function _getEventListeners() {
	    var s = this;
	    var props = s.props;

	    var listeners = {
	      'scrollCancel': props.onScrollCancel,
	      'scrollStart': props.onScrollStart,
	      'scroll': props.onScroll,
	      'scrollEnd': props.onScrollEnd,
	      'flick': props.onFlick
	    };
	    var _iteratorNormalCompletion3 = true;
	    var _didIteratorError3 = false;
	    var _iteratorError3 = undefined;

	    try {
	      for (var _iterator3 = Object.keys(listeners)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	        var event = _step3.value;

	        if (!listeners[event]) {
	          delete listeners[event];
	        }
	      }
	    } catch (err) {
	      _didIteratorError3 = true;
	      _iteratorError3 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion3 && _iterator3.return) {
	          _iterator3.return();
	        }
	      } finally {
	        if (_didIteratorError3) {
	          throw _iteratorError3;
	        }
	      }
	    }

	    return listeners;
	  },

	  _cancelRefresh: null

	});

	exports.default = ApScroll;

/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApScroll.
	 * @class ApScrollStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApScrollStyle */
	var ApScrollStyle = _react2.default.createClass({
	  displayName: 'ApScrollStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-scroll': {
	            overflow: 'hidden'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApScrollStyle$styleD = ApScrollStyle.styleData(props);

	    var all = _ApScrollStyle$styleD.all;
	    var small = _ApScrollStyle$styleD.small;
	    var medium = _ApScrollStyle$styleD.medium;
	    var large = _ApScrollStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApScrollStyle;

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for search components.
	 * @class ApSearch
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var DEFAULT_CLEAR_ICON = 'ion ion-close-round';
	var DEFAULT_SEARCH_ICON = 'ion ion-search';

	/** @lends ApSearch */
	var ApSearch = _react2.default.createClass({
	  displayName: 'ApSearch',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Name of search input */
	    name: _react.PropTypes.string,
	    /** Type of search input */
	    type: _react.PropTypes.string,
	    /** Value of search input */
	    value: _react.PropTypes.string,
	    /** Placeholder of search input */
	    placeholder: _react.PropTypes.string,
	    /** Icon class name of clear button */
	    clearIcon: _react.PropTypes.string,
	    /** Icon class name of search button */
	    searchIcon: _react.PropTypes.string,
	    /** Handler for clear event */
	    onClear: _react.PropTypes.func,
	    /** Open to input */
	    open: _react.PropTypes.bool,
	    /** Render with righted style */
	    righted: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {
	    DEFAULT_CLEAR_ICON: DEFAULT_CLEAR_ICON,
	    DEFAULT_SEARCH_ICON: DEFAULT_SEARCH_ICON
	  },

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    var hasVal = !!props.value;
	    return {
	      closed: !hasVal && !props.open
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      name: '',
	      type: 'text',
	      value: '',
	      placeholder: '',
	      clearIcon: DEFAULT_CLEAR_ICON,
	      searchIcon: DEFAULT_SEARCH_ICON,
	      onClear: null,
	      open: false,
	      righted: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var hasVal = !!props.value;
	    var className = (0, _classnames2.default)('ap-search-wrap', {
	      'ap-search-wrap-empty': !hasVal,
	      'ap-search-wrap-closed': !!state.closed,
	      'ap-search-wrap-righted': !!props.righted
	    });
	    return _react2.default.createElement('span', { className: className }, _react2.default.createElement('a', { className: 'ap-search-search-button', onClick: s.handleSearchTap }, _react2.default.createElement('span', { className: 'ap-search-aligner' }, ' '), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-search-search-icon', props.searchIcon) })), _react2.default.createElement('input', { className: (0, _classnames2.default)('ap-search', props.className),
	      ref: function ref(input) {
	        s.input = input;
	      },
	      id: props.id,
	      name: props.name,
	      placeholder: props.placeholder,
	      onChange: props.onChange,
	      type: props.type,
	      value: props.value || '' }), _react2.default.createElement('a', { className: 'ap-search-clear-button', onClick: s.handleClearTap }, _react2.default.createElement('span', { className: 'ap-search-aligner' }, ' '), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-search-clear-icon', props.clearIcon) })));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  handleSearchTap: function handleSearchTap(e) {
	    var s = this;
	    var state = s.state;

	    var closed = !state.closed;
	    s.setState({ closed: closed });
	    var node = _reactDom2.default.findDOMNode(s.input);
	    if (closed) {
	      node.blur();
	    } else {
	      node.focus();
	    }
	  },
	  handleClearTap: function handleClearTap(e) {
	    var s = this;
	    var onClear = s.props.onClear;

	    if (onClear) {
	      onClear(e);
	    }
	    var node = _reactDom2.default.findDOMNode(s.input);
	    node.focus();
	  }

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApSearch;

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApSearch.
	 * @class ApSearchStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSearchStyle */
	var ApSearchStyle = _react2.default.createClass({
	  displayName: 'ApSearchStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	      transition: 400
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var maxWidth = config.maxWidth;
	      var transition = config.transition;

	      var closedWidth = 24;
	      return {
	        all: {
	          '.ap-search': {
	            display: 'block',
	            padding: '4px 8px 4px 22px',
	            border: '1px solid #AAA',
	            width: '100%',
	            maxWidth: maxWidth + 'px',
	            borderRadius: '2px',
	            boxSizing: 'border-box',
	            outlineColor: '' + highlightColor,
	            boxShadow: '1px 1px 1px rgba(0,0,0,.05) inset',
	            transition: 'opacity ' + transition + 'ms',
	            transitionDelay: transition * 0.3 + 'ms'
	          },
	          '.ap-search-wrap': {
	            position: 'relative',
	            width: '100%',
	            margin: '4px',
	            verticalAlign: 'middle',
	            maxWidth: maxWidth + 'px',
	            display: 'block',
	            transition: 'width ' + transition + 'ms, max-width ' + transition + 'ms'
	          },
	          '.ap-search-wrap-empty .ap-search-clear-button': {
	            opacity: 0,
	            pointerEvents: 'none'
	          },
	          '.ap-search-search-button': {
	            position: 'absolute',
	            top: 0,
	            left: -4,
	            display: 'inline-flex',
	            alignItems: 'center',
	            padding: '0 8px',
	            bottom: 0,
	            cursor: 'pointer',
	            color: '#CCC',
	            zIndex: 4,
	            transition: 'color ' + transition + 'ms, transform ' + transition + 'ms',
	            transform: 'scale(1, 1)',
	            transformOrigin: '50% 50%'
	          },
	          '.ap-search-search-button:active': {
	            opacity: '0.9'
	          },
	          '.ap-search-search-icon': {
	            display: 'inline-block',
	            verticalAlign: 'middle'
	          },
	          '.ap-search-clear-button': {
	            position: 'absolute',
	            top: 0,
	            right: -4,
	            display: 'inline-flex',
	            alignItems: 'center',
	            padding: '0 8px',
	            bottom: 0,
	            cursor: 'pointer',
	            opacity: 0.8,
	            color: '#CCC'
	          },
	          '.ap-search-clear-button:hover': {
	            opacity: 0.99
	          },
	          '.ap-search-clear-button:active': {
	            opacity: 0.6
	          },
	          '.ap-search-aligner': {
	            display: 'inline-block',
	            verticalAlign: 'middle',
	            width: '1px',
	            marginRight: '-1px',
	            height: '100%',
	            boxSizing: 'border-box',
	            opacity: 0
	          },
	          '.ap-search-clear-icon': {
	            display: 'inline-block',
	            verticalAlign: 'middle',
	            fontSize: '11px',
	            padding: '2px'
	          },
	          '.ap-search-wrap-closed': {
	            width: closedWidth + 'px',
	            maxWidth: closedWidth + 'px'
	          },
	          '.ap-search-wrap-closed .ap-search-clear-icon': {
	            display: 'none'
	          },
	          '.ap-search-wrap-closed .ap-search': {
	            opacity: 0,
	            transitionDelay: 0
	          },
	          '.ap-search-wrap-closed .ap-search-search-button': {
	            color: '' + highlightColor,
	            transform: 'scale(1.2, 1.2)'
	          },
	          '.ap-search-wrap-closed .ap-search-search-button:hover': {
	            color: '' + highlightColor,
	            transform: 'scale(1.4, 1.4)'
	          },
	          '.ap-search-wrap-righted': {
	            margin: '0 0 0 auto'
	          }
	        }

	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApSearchStyle$styleD = ApSearchStyle.styleData(props);

	    var all = _ApSearchStyle$styleD.all;
	    var small = _ApSearchStyle$styleD.small;
	    var medium = _ApSearchStyle$styleD.medium;
	    var large = _ApSearchStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApSearchStyle;

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for search components.
	 * @module apeman-react-search
	 * @version 3.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSearch = exports.ApSearchStyle = undefined;

	var _ap_search_style = __webpack_require__(563);

	var _ap_search_style2 = _interopRequireDefault(_ap_search_style);

	var _ap_search = __webpack_require__(562);

	var _ap_search2 = _interopRequireDefault(_ap_search);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApSearchStyle = _ap_search_style2.default;
	exports.ApSearch = _ap_search2.default;

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Section component.
	 * @class ApSection
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSection */
	var ApSection = _react2.default.createClass({
	  displayName: 'ApSection',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    id: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      id: 'ap-section-' + _uuid2.default.v4()
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var id = props.id;

	    return _react2.default.createElement('section', { className: (0, _classnames2.default)('ap-section', props.className),
	      id: id,
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApSection;

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Body for a section.
	 * @class ApSectionBody
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSectionBody */
	var ApSectionBody = _react2.default.createClass({
	  displayName: 'ApSectionBody',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-section-body', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApSectionBody;

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Header for a section.
	 * @class ApSectionHeader
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var DEFAULT_ANCHOR_ICON = 'ion ion-link';

	/** @lends ApSectionHeader */
	var ApSectionHeader = _react2.default.createClass({
	  displayName: 'ApSectionHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Icon class name for anchor */
	    anchorIcon: _react.PropTypes.string,
	    /** Show anchor */
	    anchored: _react.PropTypes.bool,
	    /** Show line under header text */
	    lined: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {
	    DEFAULT_ANCHOR_ICON: DEFAULT_ANCHOR_ICON
	  },

	  getInitialState: function getInitialState() {
	    return {
	      anchorRef: null,
	      anchored: false,
	      lined: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      anchorIcon: DEFAULT_ANCHOR_ICON
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('h1', { className: (0, _classnames2.default)('ap-section-header', {
	        'ap-section-header-lined': props.lined
	      }, props.className),
	      style: Object.assign({}, props.style) }, s._renderAnchor(), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.setState({
	      anchorRef: s._detectAnchorRef()
	    });
	  },

	  // --------------------
	  // Private
	  // --------------------

	  _detectAnchorRef: function _detectAnchorRef() {
	    var s = this;

	    var elm = _reactDom2.default.findDOMNode(s);
	    while (elm) {
	      elm = elm.parentElement;
	      if (elm.id) {
	        return elm.id;
	      }
	    }
	    return null;
	  },
	  _renderAnchor: function _renderAnchor() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var ref = state.anchorRef || '';

	    return _react2.default.createElement('a', { href: '#' + ref,
	      className: (0, _classnames2.default)('ap-section-anchor', {
	        'ap-section-anchor-disabled': !props.anchored
	      }),
	      name: ref }, _react2.default.createElement('span', { className: 'ap-section-aligner' }, ' '), _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-section-anchor-icon', props.anchorIcon) }));
	  }
	});

	exports.default = ApSectionHeader;

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Button for a header section.
	 * @class ApSectionHeaderButton
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSectionHeaderButton */
	var ApSectionHeaderButton = _react2.default.createClass({
	  displayName: 'ApSectionHeaderButton',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    icon: _react.PropTypes.string,
	    text: _react.PropTypes.string
	  },

	  mixins: [],

	  statics: {
	    EDIT_ICON: 'fa fa-edit'
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      icon: null,
	      text: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-section-header-button', {
	      'ap-section-header-lined': props.lined
	    }, props.className);
	    return _react2.default.createElement('a', { id: props.id,
	      title: props.title,
	      name: props.name,
	      href: props.href,
	      className: className,
	      style: Object.assign({}, props.style)
	    }, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)(props.icon) }), _react2.default.createElement('span', { className: 'apeman-section-header-button-text' }, props.text), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  }

	  // --------------------
	  // Private
	  // --------------------

	});

	exports.default = ApSectionHeaderButton; // Dummy export for doc parser

	exports.default = (0, _apemanReactTouchable.withTouch)(ApSectionHeaderButton);

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApSection.
	 * @class ApSectionStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSectionStyle */
	var ApSectionStyle = _react2.default.createClass({
	  displayName: 'ApSectionStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      captionColor: _apemanReactStyle.ApStyle.CAPTION_COLOR,
	      captionBorderColor: _apemanReactStyle.ApStyle.CAPTION_BORDER_COLOR,
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var captionColor = config.captionColor;
	      var captionBorderColor = config.captionBorderColor;
	      var highlightColor = config.highlightColor;

	      var headerFontSize = 36;
	      var anchorWidth = 22;
	      return {
	        all: {
	          '.ap-section': {
	            display: 'block',
	            margin: '0 0 32px'
	          },
	          '.ap-section-header': {
	            display: 'block',
	            paddingBottom: '8px',
	            fontSize: headerFontSize + 'px',
	            lineHeight: headerFontSize + 'px',
	            margin: '0 0 16px',
	            position: 'relative',
	            fontWeight: 'normal'
	          },
	          '.ap-section-header-lined': {
	            fontSize: '14px',
	            borderBottom: '1px solid ' + captionBorderColor,
	            lineHeight: '16px',
	            padding: '0 4px',
	            marginBottom: '4px',
	            color: '' + captionColor
	          },
	          '.ap-section-header:hover .ap-section-anchor': {
	            opacity: 0.6
	          },
	          '.ap-section-header-button': {
	            display: 'inline-flex',
	            color: '' + highlightColor,
	            position: 'absolute',
	            right: 0,
	            top: 0,
	            bottom: 0,
	            padding: '0 4px',
	            justifyContent: 'center',
	            alignItems: 'center',
	            cursor: 'pointer'
	          },
	          '.ap-section-header-button:hover': {},
	          '.ap-section-header-button:active': {
	            opacity: 0.9
	          },
	          '.ap-section-anchor': {
	            cursor: 'pointer',
	            boxSizing: 'border-box',
	            position: 'absolute',
	            left: anchorWidth * -1 + 'px',
	            textAlign: 'center',
	            transition: 'opacity 300ms',
	            top: 0,
	            opacity: 0
	          },
	          '.ap-section-anchor-disabled': {
	            display: 'none !important'
	          },
	          '.ap-section-anchor:hover': {
	            opacity: 1
	          },
	          '.ap-section-anchor:active': {
	            opacity: 0.66
	          },
	          '.ap-section-aligner': {
	            display: 'inline-block',
	            overflow: 'hidden',
	            width: '1px',
	            marginRight: '-1px',
	            color: 'transparent',
	            opacity: 0,
	            verticalAlign: 'middle'
	          },
	          '.ap-section-anchor-icon': {
	            fontSize: '18px',
	            padding: '0 2px',
	            color: '#888',
	            lineHeight: headerFontSize + 'px'
	          },
	          '.ap-section-body': {}
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApSectionStyle$style = ApSectionStyle.styleData(props);

	    var all = _ApSectionStyle$style.all;
	    var small = _ApSectionStyle$style.small;
	    var medium = _ApSectionStyle$style.medium;
	    var large = _ApSectionStyle$style.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApSectionStyle;

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for section components.
	 * @module apeman-react-section
	 * @version 3.0.4
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSection = exports.ApSectionStyle = exports.ApSectionHeader = exports.ApSectionHeaderButton = exports.ApSectionBody = undefined;

	var _ap_section_body = __webpack_require__(566);

	var _ap_section_body2 = _interopRequireDefault(_ap_section_body);

	var _ap_section_header_button = __webpack_require__(568);

	var _ap_section_header_button2 = _interopRequireDefault(_ap_section_header_button);

	var _ap_section_header = __webpack_require__(567);

	var _ap_section_header2 = _interopRequireDefault(_ap_section_header);

	var _ap_section_style = __webpack_require__(569);

	var _ap_section_style2 = _interopRequireDefault(_ap_section_style);

	var _ap_section = __webpack_require__(565);

	var _ap_section2 = _interopRequireDefault(_ap_section);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApSectionBody = _ap_section_body2.default;
	exports.ApSectionHeaderButton = _ap_section_header_button2.default;
	exports.ApSectionHeader = _ap_section_header2.default;
	exports.ApSectionStyle = _ap_section_style2.default;
	exports.ApSection = _ap_section2.default;

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for select component.
	 * @class ApSelect
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_select_item = __webpack_require__(238);

	var _ap_select_item2 = _interopRequireDefault(_ap_select_item);

	var _ap_select_label = __webpack_require__(239);

	var _ap_select_label2 = _interopRequireDefault(_ap_select_label);

	var _numcal = __webpack_require__(56);

	var _numcal2 = _interopRequireDefault(_numcal);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSelect */
	var ApSelect = _react2.default.createClass({
	  displayName: 'ApSelect',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Options of select */
	    options: _react.PropTypes.object.isRequired,
	    /** Option elements to render */
	    optionElements: _react.PropTypes.object,
	    /** Name of select element */
	    name: _react.PropTypes.string,
	    /** Value of select element */
	    value: _react.PropTypes.string,
	    /** Allow multiple select */
	    multiple: _react.PropTypes.bool,
	    /** Handler for change event */
	    onChange: _react.PropTypes.func,
	    /** Icon to toggle select */
	    openIcon: _react.PropTypes.string,
	    /** Placeholder of select element */
	    placeholder: _react.PropTypes.string
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {
	      focused: false,
	      focusIndex: s.getIndexForValue(s.props.value)
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      optionElements: null,
	      value: '',
	      name: null,
	      multiple: false,
	      onChange: null,
	      openIcon: 'ion ion-arrow-down-b',
	      placeholder: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var layouts = s.layouts;
	    var options = props.options;
	    var optionElements = props.optionElements;

	    var values = s.getOptionValues();

	    var hasOption = options && Object.keys(options).length > 0;
	    if (!hasOption) {
	      return null;
	    }

	    var _option = function _option(value) {
	      return optionElements && optionElements[value] || options[value] || null;
	    };

	    return _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-select-wrap') }, _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-select-options-list', {
	        'ap-select-options-list-visible': state.focused
	      }), ref: function ref(list) {
	        return s.registerNode(list, 'list');
	      }
	    }, _react2.default.createElement('ul', { className: 'ap-select-options-list-inner',
	      style: layouts.listInner }, values.map(function (value, i) {
	      return _react2.default.createElement('li', { key: value,
	        value: value,
	        className: (0, _classnames2.default)('ap-select-options-list-item') }, _react2.default.createElement(_ap_select_item2.default, { onTap: s.handleItemTap,
	        data: value,
	        focused: state.focusIndex === i,
	        label: options[value]
	      }, _option(value) || null));
	    }))), _react2.default.createElement('select', { id: props.id,
	      name: props.name,
	      placeholder: props.placeholder,
	      onChange: props.onChange,
	      className: (0, _classnames2.default)('ap-select', props.className),
	      style: Object.assign({}, props.style),
	      onFocus: s.handleSelectFocus
	    }, values.map(function (value) {
	      return _react2.default.createElement('option', { key: value, value: value }, options[value]);
	    }), props.children), _react2.default.createElement('input', { type: 'text',
	      ref: function ref(text) {
	        return s.registerNode(text, 'text');
	      },
	      className: 'ap-select-dummy-text',
	      onKeyUp: s.handleKeyUp,
	      onKeyDown: s.handleKeyDown
	    }), _react2.default.createElement(_ap_select_label2.default, { value: _option(props.value),
	      placeholder: props.placeholder,
	      icon: props.openIcon,
	      onTap: s.handleLabelTap
	    }));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	    s.nodes = {};
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  moveFocusIndex: function moveFocusIndex(i) {
	    var s = this;
	    var state = s.state;

	    var values = s.getOptionValues();
	    var index = state.focusIndex + i;
	    var over = index === -1 || index === values.length;
	    if (over) {
	      return;
	    }
	    s.setState({
	      focusIndex: index
	    });
	  },
	  enterFocused: function enterFocused(e) {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    if (!state.focused) {
	      return;
	    }
	    var values = s.getOptionValues();
	    var value = values[state.focusIndex];
	    s.setState({
	      focused: false,
	      focusIndex: s.getIndexForValue(value)
	    });
	    e.target.value = value;
	    if (props.onChange) {
	      props.onChange(e);
	    }
	  },
	  getOptionValues: function getOptionValues() {
	    var s = this;
	    var props = s.props;

	    return Object.keys(props.options || {});
	  },
	  getIndexForValue: function getIndexForValue(value) {
	    var s = this;
	    return s.getOptionValues().indexOf(value);
	  },
	  registerNode: function registerNode(elm, name) {
	    var s = this;
	    s.nodes[name] = _reactDom2.default.findDOMNode(elm);
	  },

	  // --------------------
	  // Handle
	  // --------------------

	  handleLabelTap: function handleLabelTap(e) {
	    var s = this;
	    var state = s.state;
	    var text = s.nodes.text;

	    var focused = !state.focused;
	    if (focused) {
	      s.layout();
	      text.focus();
	    } else {
	      text.blur();
	    }
	    s.setState({
	      focused: focused,
	      focusIndex: s.getIndexForValue(s.props.value)
	    });
	  },
	  handleSelectFocus: function handleSelectFocus(e) {
	    var s = this;
	    s.setState({
	      focused: true
	    });
	  },
	  handleKeyDown: function handleKeyDown(e) {
	    var s = this;
	    var props = s.props;

	    if (!s.state.focused) {
	      s.setState({ focused: true });
	      return;
	    }
	    switch (e.keyCode) {
	      case 38:
	        // UP
	        s.moveFocusIndex(-1);
	        break;
	      case 40:
	        // DOWN
	        s.moveFocusIndex(+1);
	        break;
	      case 13:
	        // Enter
	        s.enterFocused(e);
	        break;
	      default:
	        break;
	    }
	    if (props.onKeyDown) {
	      props.onKeyDown(e);
	    }
	    e.preventDefault();
	    e.stopPropagation();
	  },
	  handleKeyUp: function handleKeyUp(e) {
	    var s = this;
	    var props = s.props;

	    if (props.onKeyUp) {
	      props.onKeyUp(e);
	    }
	    e.stopPropagation();
	  },
	  handleItemTap: function handleItemTap(e) {
	    var s = this;
	    var props = s.props;

	    Object.assign(e.target, {
	      value: e.target.value || e.data || null,
	      name: e.target.name || props.name
	    });
	    if (props.onChange) {
	      props.onChange(e);
	    }
	    s.setState({
	      focused: false,
	      focusIndex: s.getIndexForValue(s.props.value)
	    });
	  },

	  // ------------------
	  // ApOutsideMixin
	  // ------------------

	  outsideDidTap: function outsideDidTap(e) {
	    var s = this;
	    if (s.state.focused) {
	      s.setState({ focused: false });
	    }
	  },

	  // ------------------
	  // ApLayoutMixin
	  // ------------------

	  getInitialLayouts: function getInitialLayouts() {
	    return {
	      listInner: {
	        transform: 'initial'
	      }
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;
	    var _window = window;
	    var innerHeight = _window.innerHeight;
	    var innerWidth = _window.innerWidth;
	    var list = s.nodes.list;

	    if (!list) {
	      return {};
	    }
	    return {
	      listInner: s._listInnerLayout(list.getBoundingClientRect(), innerWidth, innerHeight)
	    };
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _listInnerLayout: function _listInnerLayout(rect, boundsWidth, boundsHeight) {
	    var x = _numcal2.default.min(boundsWidth - rect.right, 0);
	    var y = _numcal2.default.min(boundsHeight - rect.bottom, 0);

	    var maxHeight = _numcal2.default.min(boundsHeight, 280) + 'px';
	    return {
	      transform: 'translate(' + x + 'px, ' + y + 'px)',
	      maxHeight: maxHeight
	    };
	  }
	});

	exports.default = ApSelect; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withOutside)(ApSelect);

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApSelect.
	 * @class ApSelectStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _acolor = __webpack_require__(27);

	var _acolor2 = _interopRequireDefault(_acolor);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApSelectStyle */
	var ApSelectStyle = function (_Component) {
	  _inherits(ApSelectStyle, _Component);

	  function ApSelectStyle() {
	    _classCallCheck(this, ApSelectStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApSelectStyle).apply(this, arguments));
	  }

	  _createClass(ApSelectStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApSelectStyle$styleD = ApSelectStyle.styleData(props);

	      var all = _ApSelectStyle$styleD.all;
	      var small = _ApSelectStyle$styleD.small;
	      var medium = _ApSelectStyle$styleD.medium;
	      var large = _ApSelectStyle$styleD.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApSelectStyle;
	}(_react.Component);

	Object.assign(ApSelectStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string,
	    maxWidth: _react.PropTypes.number
	  },
	  defaultProps: {
	    style: {},
	    maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	  },

	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;
	    var maxWidth = config.maxWidth;
	    var backgroundColor = config.backgroundColor;

	    var minWidth = 240;
	    return {
	      all: {
	        '.ap-select-wrap': {
	          position: 'relative',
	          boxSizing: 'border-box',
	          display: 'inline-block'
	        },
	        '.ap-select,.ap-select-dummy-text': {
	          opacity: 0,
	          zIndex: -99,
	          position: 'absolute',
	          display: 'block',
	          width: 1,
	          height: 1,
	          overflow: 'hidden'
	        },
	        '.ap-select-options-list': {
	          padding: 0,
	          margin: 0,
	          zIndex: 24,
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          width: '100%',
	          display: 'none',
	          boxSizing: 'border-box',
	          background: 'transparent',
	          boxShadow: 'none',
	          border: 'none'
	        },
	        '.ap-select-options-list-inner': {
	          padding: 0,
	          margin: 0,
	          background: 'white',
	          border: '1px solid #F0F0F0',
	          boxShadow: '2px 2px 4px rgba(0,0,0,0.22)',
	          borderRadius: '2px',
	          width: '100%',
	          minWidth: minWidth + 'px',
	          overflow: 'auto'
	        },
	        '.ap-select-options-list-visible': {
	          display: 'block'
	        },
	        '.ap-select-options-list-item': {
	          display: 'block',
	          listStyle: 'none',
	          padding: 0,
	          margin: 0
	        },
	        '.ap-select-item': {
	          display: 'block',
	          padding: '4px 8px',
	          fontSize: 'smaller',
	          cursor: 'pointer',
	          whiteSpace: 'nowrap',
	          textOverflow: 'ellipsis',
	          overflow: 'hidden'
	        },
	        '.ap-select-item-focused, .ap-select-item-focused:hover, .ap-select-item-focused:active': {
	          textDecoration: 'none',
	          backgroundColor: '' + highlightColor,
	          color: 'white'
	        },
	        '.ap-select-item:hover': {
	          textDecoration: 'none',
	          backgroundColor: '' + _acolor2.default.alpha(highlightColor, 0.9),
	          color: 'white'
	        },
	        '.ap-select-item:active': {
	          opacity: '0.9'
	        },
	        '.ap-select-label': {
	          verticalAlign: 'middle',
	          display: 'inline-flex',
	          alignItems: 'center',
	          padding: '4px 2px 4px 8px',
	          color: 'inherit',
	          fontSize: 'smaller',
	          minHeight: '28px',
	          minWidth: minWidth + 'px',
	          maxWidth: maxWidth + 'px',
	          cursor: 'pointer',
	          background: 'white',
	          boxSizing: 'border-box',
	          borderRadius: '2px',
	          border: '1px solid #CCC',
	          justifyContent: 'space-between'
	        },
	        '.ap-select-label:hover': {
	          background: '#FAFAFA'
	        },
	        '.ap-select-label:active': {
	          background: '#F0F0F0'
	        },
	        '.ap-select-label-text': {
	          padding: '0 4px'
	        },
	        '.ap-select-label-placeholder': {
	          color: '#CCC'
	        }
	      }
	    };
	  }
	});

	exports.default = ApSelectStyle;

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApSign.
	 * @class ApSignStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSignStyle */
	var ApSignStyle = _react2.default.createClass({
	  displayName: 'ApSignStyle',

	  propTypes: {
	    style: _react.PropTypes.object
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {}
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-sign': {},
	          '.ap-signin-form': {
	            maxWidth: '396px'
	          },
	          '.ap-signin-form-button-field': {
	            margin: '8px 0',
	            padding: '0 8px'
	          },
	          '.ap-signin-form-menu-field': {
	            padding: '4px 8px'
	          },
	          '.ap-signin-form-menu-button-row': {
	            fontSize: '14px',
	            width: '100%',
	            margin: '8px 0'
	          },
	          '.ap-signin-form-action-button-row': {
	            padding: '0 4px'
	          },
	          '.ap-signin-form-action-button-row .ap-icon-button-text': {
	            fontSize: '11px'
	          },
	          '.ap-signup-form-button-field': {
	            margin: '8px 0',
	            padding: '0 8px'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApSignStyle$styleDat = ApSignStyle.styleData(props);

	    var all = _ApSignStyle$styleDat.all;
	    var small = _ApSignStyle$styleDat.small;
	    var medium = _ApSignStyle$styleDat.medium;
	    var large = _ApSignStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApSignStyle;

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form for signin
	 * @class ApSigninForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactMixinForm = __webpack_require__(51);

	var _apemanReactField = __webpack_require__(46);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactText = __webpack_require__(69);

	var _apemanReactPassword = __webpack_require__(99);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var noop = function noop(e) {
	  return console.log(e);
	};

	/** @lends ApSigninForm */
	var ApSigninForm = _react2.default.createClass({
	  displayName: 'ApSigninForm',

	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    /** Menu names */
	    menu: _react.PropTypes.arrayOf(_react.PropTypes.string),
	    /** Button names */
	    buttons: _react.PropTypes.arrayOf(_react.PropTypes.string)
	  },

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'signin',
	      formLabels: {
	        key: 'Username or Email',
	        password: 'Password',
	        submit: 'Sign In',
	        signup: 'Sign Up',
	        recover: 'Forget Password?',
	        twitter: 'Sign in with Twitter',
	        google: 'Sign in with Google',
	        facebook: 'Sign in with Facebook'
	      },
	      formActions: {
	        signup: noop,
	        recover: noop,
	        twitter: noop,
	        google: noop,
	        facebook: noop
	      },
	      formIcons: {
	        facebook: 'fa fa-facebook',
	        twitter: 'fa fa-twitter',
	        google: 'fa fa-google'
	      }
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-signin-form', props.className),
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderKeyField(), s._renderPasswordField(), s._renderSubmitField()), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderMenuField(props.menu)), s._renderButtonField(props.buttons), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderKeyField: function _renderKeyField() {
	    var name = 'key';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderPasswordField: function _renderPasswordField() {
	    var name = 'password';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactPassword.ApPassword, { id: s.getFormId(name),
	      value: s.getFormValue(name),
	      name: name,
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderSubmitField: function _renderSubmitField() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-signin-form-button-field' }, _react2.default.createElement(_apemanReactButton.ApButton, { onTap: s.handleFormSubmit,
	      wide: true,
	      id: s.getFormId(name),
	      primary: true
	    }, s.getFormLabel(name)));
	  },
	  _renderMenuField: function _renderMenuField(names) {
	    var s = this;
	    if (!names) {
	      return null;
	    }
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-signin-form-action-field' }, _react2.default.createElement(_apemanReactButton.ApCellButtonRow, { className: 'ap-signin-form-action-button-row' }, names.map(function (name) {
	      return _react2.default.createElement(_apemanReactButton.ApCellButton, { key: name,
	        onTap: s.asFormHandler(s.getFormAction(name)),
	        text: s.getFormLabel(name) });
	    })));
	  },
	  _renderButtonField: function _renderButtonField(names) {
	    var s = this;
	    if (!names) {
	      return null;
	    }
	    return _react2.default.createElement(_apemanReactField.ApField, { className: 'ap-signin-form-action-field' }, _react2.default.createElement(_apemanReactButton.ApIconButtonRow, { className: 'ap-signin-form-action-button-row' }, names.map(function (name) {
	      return _react2.default.createElement(_apemanReactButton.ApIconButton, { onTap: s.asFormHandler(s.getFormAction(name)),
	        key: name,
	        id: s.getFormId('action-' + name),
	        icon: s.getFormIcon(name),
	        text: s.getFormLabel(name) });
	    })));
	  }
	});

	exports.default = ApSigninForm;

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form for signin
	 * @class ApSigninForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _numcal = __webpack_require__(56);

	var _numcal2 = _interopRequireDefault(_numcal);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactMixinForm = __webpack_require__(51);

	var _apemanReactField = __webpack_require__(46);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactText = __webpack_require__(69);

	var _apemanReactPassword = __webpack_require__(99);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSigninForm */
	var ApSigninForm = _react2.default.createClass({
	  displayName: 'ApSigninForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    email: _react.PropTypes.bool,
	    password: _react.PropTypes.bool
	  },

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'signmod',
	      formLabels: {
	        email: 'Email',
	        password: 'Password',
	        submit: 'Update'
	      },
	      email: true,
	      password: true
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-signin-form', props.className),
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, props.email ? s._renderEmailField() : null, props.password ? s._renderPasswordField() : null), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderSubmitField()));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderEmailField: function _renderEmailField() {
	    var name = 'email';
	    var s = this;

	    return _react2.default.createElement(_apemanReactField.ApField, { className: 'ap-signmod-form-email-field' }, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderPasswordField: function _renderPasswordField() {
	    var name = 'password';
	    var s = this;

	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactPassword.ApPassword, { id: s.getFormId(name),
	      value: s.getFormValue(name),
	      name: name,
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderSubmitField: function _renderSubmitField() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-signmod-form-button-field' }, _react2.default.createElement(_apemanReactButton.ApButton, { id: s.getFormId(name),
	      onTap: s.handleFormSubmit,
	      wide: true,
	      primary: true
	    }, s.getFormLabel(name)));
	  }
	});

	exports.default = ApSigninForm;

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Form for signup
	 * @class ApSignupForm
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _numcal = __webpack_require__(56);

	var _numcal2 = _interopRequireDefault(_numcal);

	var _apemanReactForm = __webpack_require__(47);

	var _apemanReactMixinForm = __webpack_require__(51);

	var _apemanReactField = __webpack_require__(46);

	var _apemanReactButton = __webpack_require__(17);

	var _apemanReactText = __webpack_require__(69);

	var _apemanReactPassword = __webpack_require__(99);

	var _apemanReactCaptcha = __webpack_require__(222);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var noop = function noop(e) {
	  return console.log(e);
	};

	/** @lends ApSigninForm */
	var ApSigninForm = _react2.default.createClass({
	  displayName: 'ApSigninForm',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    captchaSpinning: _react.PropTypes.bool
	  },

	  mixins: [_apemanReactMixinForm.ApFormMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      formPrefix: 'signup',
	      formLabels: {
	        key: 'Username',
	        email: 'Email',
	        password: 'Password',
	        captcha: 'Captcha',
	        captchaRefresh: 'refresh',
	        submit: 'Sign Up'
	      },
	      formPlaceholders: {
	        captcha: '(Type numbers above)'
	      },
	      formImages: {
	        captcha: ''
	      },
	      formActions: {
	        captchaRefresh: noop
	      },
	      captchaSpinning: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return _react2.default.createElement(_apemanReactForm.ApForm, _extends({}, props, {
	      className: (0, _classnames2.default)('ap-signin-form', props.className),
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderKeyField(), s._renderEmailField(), s._renderPasswordField()), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderCaptchaField()), _react2.default.createElement(_apemanReactField.ApFieldSet, { plain: true }, s._renderButtonField()));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	  _renderKeyField: function _renderKeyField() {
	    var name = 'key';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderEmailField: function _renderEmailField() {
	    var name = 'email';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderPasswordField: function _renderPasswordField() {
	    var name = 'password';
	    var s = this;

	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactPassword.ApPassword, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange
	    })));
	  },
	  _renderCaptchaField: function _renderCaptchaField() {
	    var name = 'captcha';
	    var refreshName = 'captchaRefresh';
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactField.ApField, null, _react2.default.createElement(_apemanReactField.ApFieldLabel, { htmlFor: s.getFormId(name) }, s.getFormLabel(name)), _react2.default.createElement(_apemanReactField.ApFieldValue, null, _react2.default.createElement(_apemanReactCaptcha.ApCaptcha, { src: s.getFormImage(name),
	      spinning: props.captchaSpinning,
	      refreshText: s.getFormLabel(refreshName),
	      onRefresh: s.getFormAction(refreshName) }), _react2.default.createElement(_apemanReactText.ApText, { id: s.getFormId(name),
	      name: name,
	      value: s.getFormValue(name),
	      onChange: s.handleFormChange,
	      placeholder: s.getFormPlaceholder(name)
	    })));
	  },
	  _renderButtonField: function _renderButtonField() {
	    var name = 'submit';
	    var s = this;
	    return _react2.default.createElement(_apemanReactField.ApField, { center: true, className: 'ap-signup-form-button-field' }, _react2.default.createElement(_apemanReactButton.ApButton, { id: s.getFormId(name),
	      onTap: s.handleFormSubmit,
	      wide: true,
	      primary: true
	    }, s.getFormLabel(name)));
	  }
	});

	exports.default = ApSigninForm;

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for sign components
	 * @module apeman-react-sign
	 * @version 5.0.10
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSignupForm = exports.ApSignmodForm = exports.ApSigninForm = exports.ApSignStyle = undefined;

	var _ap_sign_style = __webpack_require__(573);

	var _ap_sign_style2 = _interopRequireDefault(_ap_sign_style);

	var _ap_signin_form = __webpack_require__(574);

	var _ap_signin_form2 = _interopRequireDefault(_ap_signin_form);

	var _ap_signmod_form = __webpack_require__(575);

	var _ap_signmod_form2 = _interopRequireDefault(_ap_signmod_form);

	var _ap_signup_form = __webpack_require__(576);

	var _ap_signup_form2 = _interopRequireDefault(_ap_signup_form);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApSignStyle = _ap_sign_style2.default;
	exports.ApSigninForm = _ap_signin_form2.default;
	exports.ApSignmodForm = _ap_signmod_form2.default;
	exports.ApSignupForm = _ap_signup_form2.default;

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Slider component.
	 * @class ApSlider
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _chopcal = __webpack_require__(294);

	var _chopcal2 = _interopRequireDefault(_chopcal);

	var _rangecal = __webpack_require__(187);

	var _rangecal2 = _interopRequireDefault(_rangecal);

	var _ap_slider_handle = __webpack_require__(241);

	var _ap_slider_handle2 = _interopRequireDefault(_ap_slider_handle);

	var _ap_slider_label = __webpack_require__(242);

	var _ap_slider_label2 = _interopRequireDefault(_ap_slider_label);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSlider */
	var ApSlider = _react2.default.createClass({
	  displayName: 'ApSlider',

	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {
	    initial: _react.PropTypes.number,
	    min: _react.PropTypes.number,
	    max: _react.PropTypes.number,
	    step: _react.PropTypes.number,
	    onChange: _react.PropTypes.func,
	    barOnly: _react.PropTypes.bool
	  },

	  statics: {},

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    return {
	      minX: 0,
	      maxX: 1200,
	      x: 0,
	      value: props.initial
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      initial: 50,
	      min: 0,
	      max: 100,
	      step: 0.01,
	      barOnly: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-slider', props.className) }, _react2.default.createElement('div', { className: 'ap-slider-inner' }, s._renderLabel(props.min), _react2.default.createElement('div', { className: 'ap-slider-bar-wrap' }, _react2.default.createElement(_apemanReactTouchable.ApTouchable, { onTap: s.sliderBarDidTap }, _react2.default.createElement('div', { className: 'ap-slider-bar',
	      ref: 'ap-slider-bar' }, _react2.default.createElement('div', { className: 'ap-slider-bar-bg' }), _react2.default.createElement('div', { className: 'ap-slider-bar-highlight', style: { left: 0, width: state.x } }))), _react2.default.createElement(_ap_slider_handle2.default, { onMove: s.sliderHandleDidMove,
	      shouldMove: s.shouldSliderHandleMove,
	      x: state.x,
	      minX: state.minX,
	      maxX: state.maxX,
	      ref: 'ap-slider-handle' })), s._renderLabel(props.max)));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;

	    window.addEventListener('resize', s.resizeSlider);
	    s.resizeSlider();
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    window.removeEventListener('resize', s.resizeSlider);
	  },

	  // ------------------
	  // Helper
	  // ------------------

	  resizeSlider: function resizeSlider(e) {
	    var s = this;
	    var w = _reactDom2.default.findDOMNode(s).offsetWidth;
	    var handle = _reactDom2.default.findDOMNode(s.refs['ap-slider-handle']);
	    var handleRadius = handle.offsetWidth / 2;
	    var minX = 0 - handleRadius;
	    var maxX = w - handleRadius;
	    var rate = s._rateWithValue(s.state.value);
	    s.setState({
	      minX: minX,
	      maxX: maxX,
	      x: _rangecal2.default.value(minX, maxX, rate)
	    });
	  },
	  sliderBarDidTap: function sliderBarDidTap(e) {
	    var s = this;
	    var state = s.state;
	    var node = _reactDom2.default.findDOMNode(s);
	    var left = node.offsetLeft;
	    var minX = state.minX;
	    var maxX = state.maxX;
	    var x = e.center.x - left;
	    var rate = _rangecal2.default.rate(minX, maxX, x);
	    var value = s._valueWithRate(rate);
	    s.setSliderValue(value);
	  },
	  sliderHandleDidMove: function sliderHandleDidMove(e) {
	    var s = this;
	    var state = s.state;
	    var minX = state.minX;
	    var maxX = state.maxX;

	    var x = e.detail.x;
	    var rate = _rangecal2.default.rate(minX, maxX, x + 2);
	    var value = s._valueWithRate(rate);
	    s.setSliderValue(value);
	  },
	  shouldSliderHandleMove: function shouldSliderHandleMove(p) {
	    var s = this;
	    return true;
	  },
	  setSliderValue: function setSliderValue(value) {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var step = props.step;
	    var duplicate = state.value === value;
	    if (duplicate) {
	      return;
	    }
	    var minX = state.minX;
	    var maxX = state.maxX;

	    var rate = s._rateWithValue(value);
	    s.setState({
	      value: value,
	      x: _rangecal2.default.value(minX, maxX, rate)
	    });

	    value = _chopcal2.default.round(value, step);

	    if (s._value === value) {
	      return;
	    }

	    s._value = value;

	    if (props.onChange) {
	      props.onChange(value, {
	        element: s
	      });
	    }
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _rateWithValue: function _rateWithValue(value) {
	    var s = this;
	    var props = s.props;
	    var min = props.min;
	    var max = props.max;

	    value = _rangecal2.default.round(min, max, value);
	    return _chopcal2.default.round(_rangecal2.default.rate(min, max, value), 0.01);
	  },
	  _valueWithRate: function _valueWithRate(rate) {
	    var s = this;
	    var props = s.props;
	    var min = props.min;
	    var max = props.max;

	    var value = _chopcal2.default.round(_rangecal2.default.value(min, max, rate), 0.01);
	    return _rangecal2.default.round(min, max, value);
	  },
	  _renderLabel: function _renderLabel(value) {
	    var s = this;
	    var props = s.props;

	    if (props.barOnly) {
	      return null;
	    }
	    return _react2.default.createElement(_ap_slider_label2.default, { value: value });
	  }
	});

	exports.default = ApSlider;

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApSlider.
	 * @class ApSliderStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSliderStyle */
	var ApSliderStyle = _react2.default.createClass({
	  displayName: 'ApSliderStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    handleSize: _react.PropTypes.number,
	    barHeight: _react.PropTypes.number,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      handleSize: 24,
	      barHeight: 4,
	      highlightColor: '#38E'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var handleSize = config.handleSize;
	      var barHeight = config.barHeight;
	      var highlightColor = config.highlightColor;

	      var sliderPadding = 6;
	      var handlePaddingRate = -20;
	      return {
	        all: {
	          '.ap-slider': {
	            position: 'relative',
	            height: handleSize + 2 + 'px'
	          },
	          '.ap-slider-inner': {
	            display: 'flex',
	            margin: '2px 0'
	          },
	          '.ap-slider-bar-wrap': {
	            display: 'block',
	            position: 'relative',
	            width: '100%',
	            boxSizing: 'border-box'
	          },
	          '.ap-slider-bar': {
	            position: 'absolute',
	            left: 0,
	            right: 0,
	            height: barHeight + sliderPadding + 'px',
	            top: handleSize / 2 - sliderPadding + 'px'
	          },
	          '.ap-slider-bar-bg': {
	            position: 'absolute',
	            left: 0,
	            top: sliderPadding + 'px',
	            right: 0,
	            height: barHeight + 'px',
	            borderRadius: barHeight / 2,
	            border: '1px solid #BBB',
	            backgroundColor: '#CCC'
	          },
	          '.ap-slider-bar-highlight': {
	            backgroundColor: highlightColor,
	            top: sliderPadding,
	            position: 'absolute',
	            height: barHeight,
	            borderRadius: barHeight / 2,
	            border: '1px solid rgba(0,0,0,0.1)',
	            maxWidth: '100%'
	          },
	          '.ap-slider-handle': {
	            position: 'relative',
	            display: 'inline-block',
	            cursor: '-webkit-grab'
	          },
	          '.ap-slider-handle-area': {
	            position: 'absolute',
	            display: 'inline-block',
	            color: 'transparent',
	            opacity: 0,
	            left: handlePaddingRate + '%',
	            top: handlePaddingRate + '%',
	            right: handlePaddingRate + '%',
	            bottom: handlePaddingRate + '%'
	          },
	          '.ap-slider-handle:active': {
	            cursor: '-webkit-grabbing',
	            backgroundColor: '#FCFCFC'
	          },
	          '.ap-slider-handle-icon': {
	            width: handleSize + 'px',
	            height: handleSize + 'px',
	            borderRadius: '50%',
	            display: 'inline-block',
	            backgroundColor: 'white',
	            border: '1px solid #DDD',
	            boxShadow: '1px 1px 2px rgba(0,0,0,0.5)',
	            position: 'relative',
	            zIndex: 3
	          },
	          '.ap-slider-handle-icon:hover': {
	            boxShadow: '1px 1px 3px rgba(0,0,0,0.5)'
	          },
	          '.ap-slider-label': {
	            display: 'inline-block',
	            padding: '2px 4px',
	            textAlign: 'right',
	            minWidth: '24px',
	            fontSize: '14px',
	            lineHeight: handleSize + 'px',
	            boxSizing: 'border-box'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApSliderStyle$styleD = ApSliderStyle.styleData(props);

	    var all = _ApSliderStyle$styleD.all;
	    var small = _ApSliderStyle$styleD.small;
	    var medium = _ApSliderStyle$styleD.medium;
	    var large = _ApSliderStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApSliderStyle;

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for slider component.
	 * @module apeman-react-slider
	 * @version 4.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApSlider = exports.ApSliderStyle = exports.ApSliderLabel = exports.ApSliderHandle = undefined;

	var _ap_slider_handle = __webpack_require__(241);

	var _ap_slider_handle2 = _interopRequireDefault(_ap_slider_handle);

	var _ap_slider_label = __webpack_require__(242);

	var _ap_slider_label2 = _interopRequireDefault(_ap_slider_label);

	var _ap_slider_style = __webpack_require__(579);

	var _ap_slider_style2 = _interopRequireDefault(_ap_slider_style);

	var _ap_slider = __webpack_require__(578);

	var _ap_slider2 = _interopRequireDefault(_ap_slider);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApSliderHandle = _ap_slider_handle2.default;
	exports.ApSliderLabel = _ap_slider_label2.default;
	exports.ApSliderStyle = _ap_slider_style2.default;
	exports.ApSlider = _ap_slider2.default;

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApSpinner.
	 * @class ApSpinnerStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApSpinnerStyle */
	var ApSpinnerStyle = function (_Component) {
	  _inherits(ApSpinnerStyle, _Component);

	  function ApSpinnerStyle() {
	    _classCallCheck(this, ApSpinnerStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApSpinnerStyle).apply(this, arguments));
	  }

	  _createClass(ApSpinnerStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApSpinnerStyle$style = ApSpinnerStyle.styleData(props);

	      var all = _ApSpinnerStyle$style.all;
	      var small = _ApSpinnerStyle$style.small;
	      var medium = _ApSpinnerStyle$style.medium;
	      var large = _ApSpinnerStyle$style.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApSpinnerStyle;
	}(_react.Component);

	Object.assign(ApSpinnerStyle, {
	  propTypes: {
	    type: _react.PropTypes.string,
	    style: _react.PropTypes.object
	  },
	  defaultProps: {
	    type: 'text/css',
	    style: {}
	  },
	  styleData: function styleData(config) {
	    return {
	      all: {
	        '.ap-spinner': {
	          textAlign: 'center',
	          display: 'none'
	        },
	        '.ap-spinner.ap-spinner-enabled': {
	          display: 'inline-flex',
	          justifyContent: 'center',
	          alignItems: 'center',
	          width: '100%',
	          height: '100%'
	        },
	        '.ap-spinner-icon': {
	          display: 'inline-block',
	          margin: '0 4px',
	          transition: 'opacity 100ms',
	          opacity: 1
	        },
	        '.ap-spinner-cover': {
	          position: 'absolute',
	          left: 0,
	          top: 0,
	          right: 0,
	          bottom: 0,
	          zIndex: 4,
	          justifyContent: 'center',
	          alignItems: 'center',
	          background: _apemanReactStyle.ApStyle.COVER_BACKGROUND,
	          color: _apemanReactStyle.ApStyle.COVER_COLOR
	        }
	      },
	      small: {},
	      medium: {},
	      large: {}
	    };
	  }
	});

	exports.default = ApSpinnerStyle;

/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Higher order component with spinner
	 * @function withSpin
	 * @param {function} Component - A component constructor
	 * @returns {function} - Wrapped component
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _breact = __webpack_require__(90);

	var _asobj = __webpack_require__(8);

	var _ap_spinner = __webpack_require__(243);

	var _ap_spinner2 = _interopRequireDefault(_ap_spinner);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends withSpin */
	function withSpin(Component) {
	  var propTypes = {
	    /** Show loading spinner */
	    spinning: _react.PropTypes.bool,
	    /** Theme of the spinner */
	    spinnerTheme: _react.PropTypes.string,
	    /** Size of spinner */
	    spinnerSize: _react.PropTypes.string,
	    /** Spinner instance */
	    spinner: _react.PropTypes.node
	  };
	  return (0, _breact.wrap)(Component, {
	    displayName: 'withSpin',

	    propTypes: propTypes,

	    getDefaultProps: function getDefaultProps() {
	      return {
	        spinning: false,
	        spinnerTheme: _ap_spinner2.default.DEFAULT_THEME,
	        spinnerSize: 'x-large',
	        spinner: undefined
	      };
	    },
	    render: function render() {
	      var s = this;
	      var props = s.props;
	      var spinnerTheme = props.spinnerTheme;
	      var spinnerSize = props.spinnerSize;
	      var spinning = props.spinning;
	      var _props$spinner = props.spinner;
	      var spinner = _props$spinner === undefined ? _react2.default.createElement(_ap_spinner2.default, { theme: spinnerTheme,
	        className: 'ap-spinner-cover',
	        size: spinnerSize,
	        enabled: spinning }) : _props$spinner;

	      var componentProps = (0, _asobj.clone)(props, {
	        without: Object.keys(propTypes)
	      });
	      return _react2.default.createElement(Component, _extends({}, componentProps, {
	        spinner: spinner
	      }), props.children);
	    }
	  });
	}

	exports.default = withSpin;

/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for style component.
	 * @class ApStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _server = __webpack_require__(188);

	var _server2 = _interopRequireDefault(_server);

	var _iftype = __webpack_require__(133);

	var _iftype2 = _interopRequireDefault(_iftype);

	var _os = __webpack_require__(184);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _style_constants = __webpack_require__(584);

	var _style_string = __webpack_require__(585);

	var _style_string2 = _interopRequireDefault(_style_string);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApStyle */
	var ApStyle = _react2.default.createClass({
	  displayName: 'ApStyle',

	  // --------------------
	  // Specifications
	  // --------------------
	  statics: {
	    stringifyStyle: function stringifyStyle(style) {
	      if (!style) {
	        return '';
	      }
	      var isString = _iftype2.default.isString(style);
	      return isString ? style : (0, _style_string2.default)(style);
	    },
	    stringifyMediaStyle: function stringifyMediaStyle(style, width) {
	      if (!style) {
	        return '';
	      }
	      return '@media (min-width: ' + width + 'px) { ' + ApStyle.stringifyStyle(style) + ' }';
	    },
	    styleContent: function styleContent(elm) {
	      return _server2.default.renderToStaticMarkup(elm).replace(/<style.*?>/, '').replace(/<\/style.*?>/, '');
	    },

	    DEFAULT_HIGHLIGHT_COLOR: '#38E',
	    DEFAULT_BACKGROUND_COLOR: '#FFF',
	    DEFAULT_DANGER_COLOR: '#B31818',
	    NORMAL_COLOR: '#555',
	    INFO_COLOR: '#0C843A',
	    WARN_COLOR: '#9C9C19',
	    ERROR_COLOR: '#B31818',
	    CAPTION_COLOR: '#999',
	    CAPTION_BORDER_COLOR: '#F0F0F0',
	    COVER_BACKGROUND: 'rgba(255,255,255,0.8)',
	    COVER_COLOR: '#CCC',
	    CONTENT_PADDING: 4,
	    CONTENT_WIDTH: 480,
	    ROW_HEIGHT: 32,
	    CONTAINER_WIDTH: 1024,

	    SMALL_MEDIA_BREAKPOINT: _style_constants.SMALL_MEDIA_BREAKPOINT,
	    MEDIUM_MEDIA_BREAKPOINT: _style_constants.MEDIUM_MEDIA_BREAKPOINT,
	    LARGE_MEDIA_BREAKPOINT: _style_constants.LARGE_MEDIA_BREAKPOINT
	  },
	  propTypes: {
	    data: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.objectOf(_react.PropTypes.object)]),
	    smallMediaData: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
	    mediumMediaData: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
	    largeMediaData: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
	    type: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      data: null,
	      smallMediaData: null,
	      mediumMediaData: null,
	      largeMediaData: null,
	      type: 'text/css'
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var styleString = s.getStyleString() || '';
	    var childrenString = s.getChildrenString() || '';
	    return _react2.default.createElement('style', { className: (0, _classnames2.default)('ap-style', props.className),
	      id: props.id || null,
	      type: props.type,
	      dangerouslySetInnerHTML: { __html: styleString + childrenString } });
	  },

	  // --------------------
	  // Specifications
	  // --------------------
	  getStyleString: function getStyleString() {
	    var s = this;
	    var props = s.props;
	    var data = props.data;
	    var smallMediaData = props.smallMediaData;
	    var mediumMediaData = props.mediumMediaData;
	    var largeMediaData = props.largeMediaData;

	    return [ApStyle.stringifyStyle(data), ApStyle.stringifyMediaStyle(smallMediaData, _style_constants.SMALL_MEDIA_BREAKPOINT), ApStyle.stringifyMediaStyle(mediumMediaData, _style_constants.MEDIUM_MEDIA_BREAKPOINT), ApStyle.stringifyMediaStyle(largeMediaData, _style_constants.LARGE_MEDIA_BREAKPOINT)].filter(Boolean).join(_os.EOL);
	  },
	  getChildrenString: function getChildrenString() {
	    var s = this;
	    var children = s.props.children;

	    if (!children) {
	      return null;
	    }
	    return [].concat(children).map(function (child) {
	      return child;
	    }).join(_os.EOL);
	  }
	});

	exports.default = ApStyle;

/***/ },
/* 584 */
/***/ function(module, exports) {

	/**
	 * Constants
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var SMALL_MEDIA_BREAKPOINT = 768;
	var MEDIUM_MEDIA_BREAKPOINT = 992;
	var LARGE_MEDIA_BREAKPOINT = 1200;

	exports.SMALL_MEDIA_BREAKPOINT = SMALL_MEDIA_BREAKPOINT;
	exports.MEDIUM_MEDIA_BREAKPOINT = MEDIUM_MEDIA_BREAKPOINT;
	exports.LARGE_MEDIA_BREAKPOINT = LARGE_MEDIA_BREAKPOINT;

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert react style object into css string.
	 * @function styleString
	 * @param {Object} data
	 * @returns {?string}
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var React = __webpack_require__(1);

	var _require = __webpack_require__(316);

	var createMarkupForStyles = _require.createMarkupForStyles;

	var _require2 = __webpack_require__(184);

	var EOL = _require2.EOL;

	/** @lends styleString */

	function styleString(data) {
	  return Object.keys(data).map(function (selector) {
	    if (!data[selector]) {
	      return null;
	    }
	    var style = createMarkupForStyles(data[selector], {
	      _currentElement: {
	        _owner: {
	          $tmp: selector,
	          getName: 'ApStyleTmp'
	        }
	      }
	    });
	    return [selector + '{', style, '}'].filter(Boolean).join(' ');
	  }).join(EOL);
	}

	exports.default = styleString;

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for switch components
	 * @class ApSwitch
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactTouchable = __webpack_require__(9);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSwitch */
	var ApSwitch = _react2.default.createClass({
	  displayName: 'ApSwitch',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Switch on or not */
	    on: _react.PropTypes.bool.isRequired,
	    /** Title text for on state */
	    onTitle: _react.PropTypes.string,
	    /** Title text for off state */
	    offTitle: _react.PropTypes.string,
	    /** Width of component */
	    width: _react.PropTypes.number
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      id: _uuid2.default.v4(),
	      on: false,
	      onTitle: '',
	      offTitle: ''
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var width = props.width;
	    var id = props.id;

	    var className = (0, _classnames2.default)('ap-switch', {
	      'ap-switch-on': props.on,
	      'ap-switch-off': !props.on
	    }, props.className);
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({ width: width }, props.style),
	      id: id
	    }, _react2.default.createElement('div', { className: 'ap-switch-inner' }, s.renderLabel(id + '-radio-off', 'ap-switch-on-label', props.onTitle), s.renderRadio(id + '-radio-off', 'off', !props.on), _react2.default.createElement('div', { className: 'ap-switch-handle' }), s.renderLabel(id + '-radio-on', 'ap-switch-off-label', props.offTitle), s.renderRadio(id + '-radio-on', 'on', !!props.on)), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  noop: function noop() {},

	  // ------------------
	  // Private
	  // ------------------

	  renderLabel: function renderLabel(htmlFor, className, title) {
	    var s = this;
	    return _react2.default.createElement('label', { htmlFor: htmlFor,
	      className: (0, _classnames2.default)('ap-switch-label', className) }, _react2.default.createElement('span', { className: 'ap-switch-label-text' }, title));
	  },
	  renderRadio: function renderRadio(id, value, checked) {
	    var s = this;
	    return _react2.default.createElement('input', { type: 'radio',
	      id: id,
	      value: value,
	      checked: checked,
	      onChange: s.noop,
	      className: 'ap-switch-radio' });
	  }
	});

	exports.default = ApSwitch; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApSwitch);

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApSwitch.
	 * @class ApSwitchStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApSwitchStyle */
	var ApSwitchStyle = _react2.default.createClass({
	  displayName: 'ApSwitchStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      borderColor: '#CCC'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;
	      var borderColor = config.borderColor;

	      var handleSize = 24;
	      var transition = 400;
	      var minWidth = handleSize * 1.5;
	      return {
	        all: {
	          '.ap-switch': {
	            display: 'inline-flex',
	            justifyContent: 'center',
	            alignItems: 'center',
	            cursor: 'pointer'
	          },
	          '.ap-switch-radio': {
	            display: 'none'
	          },
	          '.ap-switch-label': {
	            width: '100%',
	            height: '100%',
	            boxSizing: 'border-box',
	            textAlign: 'center',
	            fontSize: '14px',
	            whiteSpace: 'nowrap',
	            textOverflow: 'ellipsis',
	            overflow: 'hidden',
	            padding: 0,
	            flexGrow: 1,
	            flexShrink: 1,
	            cursor: 'pointer',
	            transition: 'width ' + transition + 'ms',
	            lineHeight: handleSize + 'px'
	          },
	          '.ap-switch-label-text': {
	            display: 'inline-block',
	            width: '100%',
	            padding: '0 8px',
	            boxSizing: 'border-box',
	            whiteSpace: 'nowrap',
	            overflow: 'hidden',
	            textOverflow: 'ellipsis',
	            minWidth: minWidth
	          },
	          '.ap-switch-on-label': {
	            background: highlightColor,
	            color: 'white',
	            borderRadius: handleSize / 2 + 'px 0 0 ' + handleSize / 2 + 'px',
	            marginRight: -1 * handleSize / 2
	          },
	          '.ap-switch-off-label': {
	            background: '#FAFAFA',
	            color: '#AAA',
	            borderRadius: '0 ' + handleSize / 2 + 'px ' + handleSize / 2 + 'px 0',
	            marginLeft: -1 * handleSize / 2
	          },
	          '.ap-switch-on .ap-switch-off-label': {
	            width: handleSize / 2 + 2 + 'px !important'
	          },
	          '.ap-switch-off .ap-switch-on-label': {
	            width: handleSize / 2 + 2 + 'px !important'
	          },
	          '.ap-switch-inner': {
	            display: 'inline-flex',
	            justifyContent: 'flex-start',
	            alignItems: 'center',
	            backgroundColor: backgroundColor,
	            height: handleSize,
	            borderRadius: handleSize / 2 + 1,
	            minWidth: minWidth,
	            border: '1px solid ' + borderColor,
	            overflow: 'hidden',
	            width: '100%'
	          },
	          '.ap-switch-handle': {
	            display: 'inline-block',
	            borderRadius: '50%',
	            width: handleSize,
	            height: handleSize,
	            backgroundColor: 'white',
	            border: '1px solid ' + borderColor,
	            flexGrow: 0,
	            flexShrink: 0,
	            position: 'relative',
	            zIndex: 4
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApSwitchStyle$styleD = ApSwitchStyle.styleData(props);

	    var all = _ApSwitchStyle$styleD.all;
	    var small = _ApSwitchStyle$styleD.small;
	    var medium = _ApSwitchStyle$styleD.medium;
	    var large = _ApSwitchStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApSwitchStyle;

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tab component.
	 * @class ApTab
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTab */
	var ApTab = _react2.default.createClass({
	  displayName: 'ApTab',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-tab', props.className) }, props.children);
	  }
	});

	exports.default = ApTab;

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Content of tab
	 * @class ApTabContent
	 */
	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTabContent */
	var ApTabContent = _react2.default.createClass({
	  displayName: 'ApTabContent',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** The tab is selected or not */
	    selected: _react.PropTypes.bool
	  },

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-tab-content', props.className, {
	      'ap-tab-content-selected': !!props.selected
	    });
	    var style = Object.assign({}, props.style);
	    return _react2.default.createElement('div', { className: className,
	      style: style
	    }, props.children);
	  }
	});

	module.exports = ApTabContent;

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Group of tab
	 * @class ApTabGroup
	 */
	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTabGroup */
	var ApTabGroup = _react2.default.createClass({
	  displayName: 'ApTabGroup',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-tab-group', props.className);
	    var style = Object.assign({}, props.style);
	    return _react2.default.createElement('div', { className: className,
	      style: style
	    }, props.children);
	  }
	});

	module.exports = ApTabGroup;

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Item of tab
	 * @class ApTabItem
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApTabItem */
	var ApTabItem = function (_Component) {
	  _inherits(ApTabItem, _Component);

	  function ApTabItem() {
	    _classCallCheck(this, ApTabItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApTabItem).apply(this, arguments));
	  }

	  _createClass(ApTabItem, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var className = (0, _classnames2.default)('ap-tab-item', props.className, {
	        'ap-tab-item-selected': !!props.selected
	      });
	      return _react2.default.createElement('a', { className: className,
	        href: props.href }, props.children);
	    }

	    // --------------------
	    // Lifecycle
	    // --------------------

	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      var s = this;
	      var props = s.props;
	      var state = s.state;

	      return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
	    }
	  }]);

	  return ApTabItem;
	}(_react.Component);

	Object.assign(ApTabItem, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** The tab is selected or not */
	    selected: _react.PropTypes.bool,
	    /** Href of anchor */
	    href: _react.PropTypes.string
	  },

	  defaultProps: {
	    selected: false,
	    href: null
	  }

	});

	exports.default = ApTabItem; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApTabItem);

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApTab.
	 * @class ApTabStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApTabStyle */
	var ApTabStyle = function (_Component) {
	  _inherits(ApTabStyle, _Component);

	  function ApTabStyle() {
	    _classCallCheck(this, ApTabStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApTabStyle).apply(this, arguments));
	  }

	  _createClass(ApTabStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApTabStyle$styleData = ApTabStyle.styleData(props);

	      var all = _ApTabStyle$styleData.all;
	      var small = _ApTabStyle$styleData.small;
	      var medium = _ApTabStyle$styleData.medium;
	      var large = _ApTabStyle$styleData.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApTabStyle;
	}(_react.Component);

	Object.assign(ApTabStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string,
	    backgroundColor: _react.PropTypes.string,
	    borderColor: _react.PropTypes.string
	  },

	  defaultProps: {
	    style: {},
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	    borderColor: '#888'
	  },
	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;
	    var borderColor = config.borderColor;
	    var backgroundColor = config.backgroundColor;

	    return {
	      all: {
	        '.ap-tab': {
	          display: 'flex'
	        },
	        '.ap-tab-item': {
	          display: 'inline-block',
	          flex: 1,
	          textAlign: 'center',
	          padding: '8px',
	          color: '#555',
	          border: '1px solid ' + borderColor,
	          marginRight: '-1px',
	          position: 'relative',
	          textDecoration: 'none'
	        },
	        '.ap-tab-item:hover': {
	          boxSizing: 'border-box',
	          cursor: 'pointer',
	          textDecoration: 'none'
	        },
	        '.ap-tab-item-selected': {
	          color: '' + highlightColor,
	          borderColor: '' + highlightColor,
	          zIndex: 2
	        },
	        '.ap-tab-item:active': {
	          color: '' + highlightColor,
	          borderColor: '' + highlightColor
	        },
	        '.ap-tab-group': {
	          display: 'block',
	          padding: '4px 0 0',
	          border: '1px solid ' + borderColor,
	          background: '#EEE'
	        },
	        '.ap-tab-content': {
	          display: 'none',
	          borderTop: '1px solid ' + borderColor,
	          marginTop: '-1px',
	          position: 'relative',
	          zIndex: 2,
	          padding: '4px 8px',
	          background: backgroundColor
	        },
	        '.ap-tab-content-selected': {
	          display: 'block'
	        },
	        '.ap-tab-group .ap-tab': {
	          margin: '4px 8px 0'
	        },
	        '.ap-tab-group .ap-tab-item': {
	          padding: '4px 0 2px',
	          borderBottom: 'none',
	          position: 'relative',
	          zIndex: 1,
	          color: '#888',
	          borderColor: 'transparent'
	        },
	        '.ap-tab-group .ap-tab-item-selected': {
	          zIndex: 3,
	          background: backgroundColor,
	          color: 'inherit',
	          borderColor: borderColor
	        }
	      }
	    };
	  }
	});

	exports.default = ApTabStyle;

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Table .
	 * @class ApTable
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTable */
	var ApTable = _react2.default.createClass({
	  displayName: 'ApTable',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('table', _extends({}, props, {
	      className: (0, _classnames2.default)('ap-table', props.className),
	      style: Object.assign({}, props.style) }), props.children);
	  }
	});

	exports.default = ApTable;

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Table body component
	 * @class ApTableBody
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTableBody */
	var ApTableBody = _react2.default.createClass({
	  displayName: 'ApTableBody',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('tbody', { className: (0, _classnames2.default)('ap-table-body', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApTableBody;

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Table data component
	 * @class ApTableData
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTableData */
	var ApTableData = _react2.default.createClass({
	  displayName: 'ApTableData',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('td', { className: (0, _classnames2.default)('ap-table-cell', 'ap-table-data', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApTableData;

/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Table foot component
	 * @class ApTableFoot
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTableFoot */
	var ApTableFoot = _react2.default.createClass({
	  displayName: 'ApTableFoot',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('thead', { className: (0, _classnames2.default)('ap-table-head', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApTableFoot;

/***/ },
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Table head component
	 * @class ApTableHead
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTableHead */
	var ApTableHead = _react2.default.createClass({
	  displayName: 'ApTableHead',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('thead', { className: (0, _classnames2.default)('ap-table-head', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApTableHead;

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Table header component
	 * @class ApTableHeader
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactTouchable = __webpack_require__(9);

	var _apemanReactIcon = __webpack_require__(20);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTableHeader */
	var ApTableHeader = _react2.default.createClass({
	  displayName: 'ApTableHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Icon class name */
	    icon: _react.PropTypes.string,
	    /** Handler for tap event */
	    onTap: _react.PropTypes.func
	  },

	  mixins: [_apemanReactMixinPure.ApPureMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-table-cell', 'ap-table-header', {
	      'ap-table-header-tappable': !!props.onTap
	    }, props.className);
	    return _react2.default.createElement('th', { className: className,
	      style: Object.assign({}, props.style) }, _react2.default.createElement(_apemanReactIcon.ApIcon, { className: (0, _classnames2.default)('ap-table-header-icon', props.icon) }), props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApTableHeader; // Dummy for doc

	exports.default = (0, _apemanReactTouchable.withTouch)(ApTableHeader);

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Table row component
	 * @class ApTableRow
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTableRow */
	var ApTableRow = _react2.default.createClass({
	  displayName: 'ApTableRow',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('tr', _extends({}, props, {
	      className: (0, _classnames2.default)('ap-table-row', props.className),
	      style: Object.assign({}, props.style) }), props.children);
	  }
	});

	exports.default = ApTableRow;

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApTable.
	 * @class ApTableStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTableStyle */
	var ApTableStyle = _react2.default.createClass({
	  displayName: 'ApTableStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      borderColor: '#CCC'
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;
	      var borderColor = config.borderColor;

	      return {
	        all: {
	          '.ap-table': {
	            borderCollapse: 'collapse',
	            width: '100%'
	          },
	          '.ap-table-cell': {
	            padding: '4px 8px',
	            border: '1px solid ' + borderColor
	          },
	          '.ap-table-cell:first-child': {
	            borderLeft: 'none'
	          },
	          '.ap-table-cell:last-child': {
	            borderRight: 'none'
	          },
	          '.ap-table-head .ap-table-row:first-child .ap-table-cell': {
	            borderTop: 'none'
	          },
	          '.ap-table-body:first-child .ap-table-cell': {
	            borderTop: 'none'
	          },
	          '.ap-table-body:last-child .ap-table-cell': {
	            borderBottom: 'none'
	          },
	          '.ap-table-foot:last-child .ap-table-cell': {
	            borderBottom: 'none'
	          },
	          '.ap-table-header-tappable': {
	            cursor: 'pointer'
	          },
	          '.ap-table-header-icon': {
	            float: 'right'
	          }
	        }

	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApTableStyle$styleDa = ApTableStyle.styleData(props);

	    var all = _ApTableStyle$styleDa.all;
	    var small = _ApTableStyle$styleDa.small;
	    var medium = _ApTableStyle$styleDa.medium;
	    var large = _ApTableStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApTableStyle;

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for table components.
	 * @module apeman-react-table
	 * @version 2.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApTable = exports.ApTableStyle = exports.ApTableRow = exports.ApTableHeader = exports.ApTableHead = exports.ApTableFoot = exports.ApTableData = exports.ApTableBody = undefined;

	var _ap_table_body = __webpack_require__(594);

	var _ap_table_body2 = _interopRequireDefault(_ap_table_body);

	var _ap_table_data = __webpack_require__(595);

	var _ap_table_data2 = _interopRequireDefault(_ap_table_data);

	var _ap_table_foot = __webpack_require__(596);

	var _ap_table_foot2 = _interopRequireDefault(_ap_table_foot);

	var _ap_table_head = __webpack_require__(597);

	var _ap_table_head2 = _interopRequireDefault(_ap_table_head);

	var _ap_table_header = __webpack_require__(598);

	var _ap_table_header2 = _interopRequireDefault(_ap_table_header);

	var _ap_table_row = __webpack_require__(599);

	var _ap_table_row2 = _interopRequireDefault(_ap_table_row);

	var _ap_table_style = __webpack_require__(600);

	var _ap_table_style2 = _interopRequireDefault(_ap_table_style);

	var _ap_table = __webpack_require__(593);

	var _ap_table2 = _interopRequireDefault(_ap_table);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApTableBody = _ap_table_body2.default;
	exports.ApTableData = _ap_table_data2.default;
	exports.ApTableFoot = _ap_table_foot2.default;
	exports.ApTableHead = _ap_table_head2.default;
	exports.ApTableHeader = _ap_table_header2.default;
	exports.ApTableRow = _ap_table_row2.default;
	exports.ApTableStyle = _ap_table_style2.default;
	exports.ApTable = _ap_table2.default;

/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tag components.
	 * @class ApTag
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTag */
	var ApTag = _react2.default.createClass({
	  displayName: 'ApTag',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-tag', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('span', { className: 'ap-tag-corner' }), _react2.default.createElement('span', { className: 'ap-tag-dot' }), _react2.default.createElement('span', { className: 'ap-tag-text' }), props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------
	  // ------------------
	  // Helper
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApTag;

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApTag.
	 * @class ApTagStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTagStyle */
	var ApTagStyle = _react2.default.createClass({
	  displayName: 'ApTagStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    height: _react.PropTypes.number
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      height: 16
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var height = config.height;

	      var dotSize = 4;
	      var backgroundColor = '#888';
	      return {
	        all: {
	          '.ap-tag': {
	            display: 'inline-block',
	            fontSize: '12px',
	            padding: '0px 4px 0 0',
	            margin: '0 8px 0 4px',
	            textAlign: 'center',
	            minWidth: '18px',
	            lineHeight: height + 'px',
	            color: 'white',
	            backgroundColor: '' + backgroundColor,
	            boxSizing: 'border-box',
	            position: 'relative'
	          },
	          '.ap-tag-corner': {
	            position: 'absolute',
	            display: 'inline-block',
	            width: '1px',
	            height: 0,
	            top: 0,
	            left: -height / 2 + 'px',
	            borderStyle: 'solid',
	            boxSizing: 'border-box',
	            borderWidth: height / 2 + 'px ' + height / 2 + 'px ' + height / 2 + 'px 0',
	            borderColor: 'transparent ' + backgroundColor + ' transparent transparent'
	          },
	          '.ap-tag-dot': {
	            display: 'inline-block',
	            background: 'white',
	            width: dotSize + 'px',
	            height: dotSize + 'px',
	            borderRadius: '50%',
	            verticalAlign: 'middle',
	            position: 'relative',
	            top: '-1px',
	            left: '-2px'
	          },
	          '.ap-tag-text': {
	            display: 'inline-block',
	            margin: '0 2px 0 0'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApTagStyle$styleData = ApTagStyle.styleData(props);

	    var all = _ApTagStyle$styleData.all;
	    var small = _ApTagStyle$styleData.small;
	    var medium = _ApTagStyle$styleData.medium;
	    var large = _ApTagStyle$styleData.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApTagStyle;

/***/ },
/* 604 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for tag components.
	 * @module apeman-react-tag
	 * @version 3.0.0
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApTag = exports.ApTagStyle = undefined;

	var _ap_tag_style = __webpack_require__(603);

	var _ap_tag_style2 = _interopRequireDefault(_ap_tag_style);

	var _ap_tag = __webpack_require__(602);

	var _ap_tag2 = _interopRequireDefault(_ap_tag);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApTagStyle = _ap_tag_style2.default;
	exports.ApTag = _ap_tag2.default;

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package text component.
	 * @class ApText
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApText */
	var ApText = function (_Component) {
	  _inherits(ApText, _Component);

	  // --------------------
	  // Specs
	  // --------------------
	  function ApText(props) {
	    _classCallCheck(this, ApText);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ApText).call(this, props));

	    var s = _this;
	    s.state = {
	      suggesting: false,
	      candidates: null,
	      selectedCandidate: null
	    };
	    var methodsToBind = ['handleFocus', 'handleKeyUp', 'handleChange', 'handleBlur', 'handleKeyDown', 'handleCandidate'];
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = methodsToBind[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var name = _step.value;

	        s[name] = s[name].bind(s);
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    return _this;
	  }

	  _createClass(ApText, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var state = s.state;
	      var props = s.props;
	      var id = props.id;
	      var name = props.name;
	      var placeholder = props.placeholder;
	      var autoFocus = props.autoFocus;
	      var className = props.className;
	      var value = props.value;

	      var hasVal = !!value;

	      var multiline = props.rows > 1;

	      var candidates = state.candidates;
	      var selectedCandidate = state.selectedCandidate;
	      var suggesting = state.suggesting;

	      var textHandlers = {
	        onFocus: s.handleFocus,
	        onKeyUp: s.handleKeyUp,
	        onChange: s.handleChange,
	        onBlur: s.handleBlur,
	        onKeyDown: s.handleKeyDown
	      };
	      var candidateHandlers = {
	        onClick: s.handleCandidate
	      };

	      return _react2.default.createElement('span', { className: (0, _classnames2.default)('ap-text-wrap', { 'ap-text-wrap-empty': !hasVal }) }, _react2.default.createElement(ApText.Text, _extends({ id: id, name: name, value: value, placeholder: placeholder, className: className, autoFocus: autoFocus, multiline: multiline }, {
	        handlers: textHandlers
	      })), _react2.default.createElement(ApText.CandidateList, _extends({ suggesting: suggesting, candidates: candidates, selectedCandidate: selectedCandidate, multiline: multiline }, {
	        handlers: candidateHandlers
	      })));
	    }

	    // --------------------
	    // Custom
	    // --------------------

	  }, {
	    key: 'handleCandidate',
	    value: function handleCandidate(e) {
	      var s = this;
	      var props = s.props;

	      e.target.value = e.target.value || e.target.dataset.value;
	      s.setState({ suggesting: false });
	      if (props.onChange) {
	        props.onChange(e);
	      }
	    }
	  }, {
	    key: 'handleFocus',
	    value: function handleFocus(e) {
	      var s = this;
	      var props = s.props;

	      s.setState({ suggesting: true });
	      s.updateCandidates();
	      if (props.onFocus) {
	        props.onFocus(e);
	      }
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(e) {
	      var s = this;
	      var props = s.props;

	      s.setState({ suggesting: true });
	      if (props.onChange) {
	        props.onChange(e);
	      }
	    }
	  }, {
	    key: 'handleBlur',
	    value: function handleBlur(e) {
	      var s = this;
	      var props = s.props;

	      if (props.onBlur) {
	        props.onBlur(e);
	      }
	    }
	  }, {
	    key: 'handleKeyUp',
	    value: function handleKeyUp(e) {
	      var s = this;
	      var props = s.props;

	      s.updateCandidates();
	      if (props.onKeyUp) {
	        props.onKeyUp(e);
	      }
	    }
	  }, {
	    key: 'handleKeyDown',
	    value: function handleKeyDown(e) {
	      var s = this;
	      var props = s.props;

	      switch (e.keyCode) {
	        case 38:
	          // UP
	          s.moveCandidateIndex(-1);
	          break;
	        case 40:
	          // DOWN
	          s.moveCandidateIndex(+1);
	          break;
	        case 13:
	          // Enter
	          s.enterCandidate();
	          break;
	        default:
	          s.setState({ suggesting: true });
	          break;
	      }
	      if (props.onKeyDown) {
	        props.onKeyDown(e);
	      }
	    }
	  }, {
	    key: 'moveCandidateIndex',
	    value: function moveCandidateIndex(amount) {
	      var s = this;
	      var _s$state = s.state;
	      var candidates = _s$state.candidates;
	      var selectedCandidate = _s$state.selectedCandidate;

	      if (!candidates) {
	        return;
	      }
	      var index = candidates.indexOf(selectedCandidate) + amount;
	      var over = index === -1 || index === candidates.length;
	      if (over) {
	        return;
	      }
	      s.setState({
	        selectedCandidate: candidates[index] || null
	      });
	    }
	  }, {
	    key: 'updateCandidates',
	    value: function updateCandidates() {
	      var s = this;
	      var props = s.props;
	      var value = props.value;

	      var candidates = (props.candidates || []).filter(function (candidate) {
	        return !!candidate;
	      }).map(function (candidate) {
	        return String(candidate).trim();
	      }).filter(function (candidate) {
	        return !value || candidate.match(value);
	      });

	      var hit = candidates.length === 1 && candidates[0] === value;
	      if (hit) {
	        candidates = null;
	      }
	      s.setState({ candidates: candidates });
	    }
	  }, {
	    key: 'enterCandidate',
	    value: function enterCandidate() {
	      var s = this;
	      var props = s.props;
	      var _s$state2 = s.state;
	      var candidates = _s$state2.candidates;
	      var selectedCandidate = _s$state2.selectedCandidate;

	      var valid = candidates && !!~candidates.indexOf(selectedCandidate);
	      if (valid) {
	        var target = { value: selectedCandidate };
	        if (props.onChange) {
	          props.onChange({ target: target });
	        }
	        s.setState({ suggesting: false });
	      }
	    }

	    // --------------------
	    // Static methods
	    // --------------------

	  }], [{
	    key: 'Text',
	    value: function Text(_ref) {
	      var id = _ref.id;
	      var name = _ref.name;
	      var value = _ref.value;
	      var placeholder = _ref.placeholder;
	      var className = _ref.className;
	      var autoFocus = _ref.autoFocus;
	      var multiline = _ref.multiline;
	      var handlers = _ref.handlers;

	      if (multiline) {
	        return _react2.default.createElement('textarea', _extends({ autoFocus: autoFocus,
	          id: id,
	          name: name,
	          placeholder: placeholder,
	          className: (0, _classnames2.default)('ap-text ap-text-multiple', className),
	          value: value
	        }, handlers, {
	          onFocus: null
	        }));
	      } else {
	        return _react2.default.createElement('input', _extends({ autoFocus: autoFocus,
	          id: id,
	          name: name,
	          placeholder: placeholder,
	          className: (0, _classnames2.default)('ap-text', className),
	          value: value
	        }, handlers, {
	          type: 'text'
	        }));
	      }
	    }
	  }, {
	    key: 'CandidateList',
	    value: function CandidateList(_ref2) {
	      var suggesting = _ref2.suggesting;
	      var candidates = _ref2.candidates;
	      var selectedCandidate = _ref2.selectedCandidate;
	      var multiline = _ref2.multiline;
	      var handlers = _ref2.handlers;

	      if (!suggesting) {
	        return null;
	      }
	      if (multiline) {
	        console.warn('[ApText] Can not use candidates with multiline input.');
	        return null;
	      }

	      if (!candidates) {
	        return null;
	      }

	      if (!candidates.length) {
	        return null;
	      }

	      return _react2.default.createElement('ul', { className: 'ap-text-candidate-list' }, candidates.map(function (candidate) {
	        return _react2.default.createElement('li', { key: candidate,
	          className: (0, _classnames2.default)('ap-text-candidate-list-item', {
	            'ap-text-candidate-list-item-selected': candidate === selectedCandidate
	          }) }, _react2.default.createElement('a', _extends({}, handlers, {
	          'data-value': candidate }), candidate));
	      }));
	    }
	  }]);

	  return ApText;
	}(_react.Component);

	Object.assign(ApText, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Name of text input */
	    name: _react.PropTypes.string,
	    /** Value of text input */
	    value: _react.PropTypes.string,
	    /** Placeholder text */
	    placeholder: _react.PropTypes.string,
	    /** Number of rows */
	    rows: _react.PropTypes.number,
	    /** Selectable candidate text */
	    candidates: _react.PropTypes.arrayOf(_react.PropTypes.string)
	  },

	  defaultProps: {
	    name: '',
	    value: '',
	    placeholder: '',
	    rows: 1,
	    candidates: null
	  }

	});

	exports.default = ApText;

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApText.
	 * @class ApTextStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _acolor = __webpack_require__(27);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApTextStyle */
	var ApTextStyle = function (_Component) {
	  _inherits(ApTextStyle, _Component);

	  function ApTextStyle() {
	    _classCallCheck(this, ApTextStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApTextStyle).apply(this, arguments));
	  }

	  _createClass(ApTextStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApTextStyle$styleDat = ApTextStyle.styleData(props);

	      var all = _ApTextStyle$styleDat.all;
	      var small = _ApTextStyle$styleDat.small;
	      var medium = _ApTextStyle$styleDat.medium;
	      var large = _ApTextStyle$styleDat.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApTextStyle;
	}(_react.Component);

	Object.assign(ApTextStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string,
	    maxWidth: _react.PropTypes.number
	  },

	  defaultProps: {
	    style: {},
	    maxWidth: _apemanReactStyle.ApStyle.CONTENT_WIDTH,
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR
	  },

	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;
	    var maxWidth = config.maxWidth;

	    return {
	      all: {
	        '.ap-text': {
	          display: 'block',
	          padding: '4px 8px',
	          border: '1px solid #AAA',
	          width: '100%',
	          maxWidth: maxWidth + 'px',
	          borderRadius: '2px',
	          boxSizing: 'border-box',
	          outlineColor: '' + highlightColor,
	          boxShadow: '1px 1px 1px rgba(0,0,0,.05) inset'
	        },
	        '.ap-text-wrap': {
	          position: 'relative',
	          width: '100%',
	          margin: '4px',
	          verticalAlign: 'middle',
	          maxWidth: maxWidth + 'px',
	          display: 'block'
	        },
	        '.ap-text-multiple': {
	          overflow: 'auto'
	        },
	        '.ap-text-candidate-list': {
	          position: 'absolute',
	          left: 0,
	          right: '1px',
	          top: '100%',
	          zIndex: 4,
	          padding: '4px 0',
	          margin: '0 1px',
	          boxShadow: '1px 1px 2px rgba(0,0,0,0.33)',
	          background: 'white',
	          boxSizing: 'border-box'
	        },
	        '.ap-text-candidate-list-item': {
	          display: 'block',
	          padding: 0,
	          margin: 0
	        },
	        '.ap-text-candidate-list-item a': {
	          display: 'block',
	          padding: '4px 8px'
	        },
	        '.ap-text-candidate-list-item a:hover': {
	          cursor: 'pointer',
	          background: '#FAFAFA'
	        },
	        '.ap-text-candidate-list-item a:active': {
	          background: '#F5F5F5'
	        },
	        '.ap-text-candidate-list-item-selected a': {
	          background: (0, _acolor.alpha)(highlightColor, 0.33)
	        },
	        '.ap-text-candidate-list-item-selected a:hover': {
	          background: (0, _acolor.alpha)(highlightColor, 0.5)
	        },
	        '.ap-text-candidate-list-item-selected a:active': {
	          background: (0, _acolor.alpha)(highlightColor, 0.2)
	        }
	      }
	    };
	  }
	});
	exports.default = ApTextStyle;

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for theme style components.
	 * @class ApTheme
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTheme */
	var ApTheme = _react2.default.createClass({
	  displayName: 'ApTheme',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-theme', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = ApTheme;

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	/** * Style for ApTheme.
	 * @class ApThemeStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _ap_basic_theme_style = __webpack_require__(245);

	var _ap_basic_theme_style2 = _interopRequireDefault(_ap_basic_theme_style);

	var _ap_handy_theme_style = __webpack_require__(246);

	var _ap_handy_theme_style2 = _interopRequireDefault(_ap_handy_theme_style);

	var _render_style_data = __webpack_require__(151);

	var _render_style_data2 = _interopRequireDefault(_render_style_data);

	var _style_content = __webpack_require__(247);

	var _style_content2 = _interopRequireDefault(_style_content);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApThemeStyle */
	var ApThemeStyle = _react2.default.createClass({
	  displayName: 'ApThemeStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    dominant: _react.PropTypes.string,
	    subordinate: _react.PropTypes.string,
	    accent: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      dominant: '#38E',
	      subordinate: '#FFF',
	      accent: '#FF3'
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var data = {
	      '.ap-theme': {}
	    };
	    var smallMediaData = {};
	    var mediumMediaData = {};
	    var largeMediaData = {};

	    var themedStyle = [_ap_basic_theme_style2.default.css(props), _ap_handy_theme_style2.default.css(props)].join('');

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(data, props.style),
	      smallMediaData: smallMediaData,
	      mediumMediaData: mediumMediaData,
	      largeMediaData: largeMediaData
	    }, themedStyle, props.children);
	  }
	});

	exports.default = ApThemeStyle;

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for theme style components.
	 * @module apeman-react-theme
	 * @version 6.0.9
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApTheme = exports.ApThemeStyle = exports.ApHandyThemeStyle = exports.ApBasicThemeStyle = undefined;

	var _ap_basic_theme_style = __webpack_require__(245);

	var _ap_basic_theme_style2 = _interopRequireDefault(_ap_basic_theme_style);

	var _ap_handy_theme_style = __webpack_require__(246);

	var _ap_handy_theme_style2 = _interopRequireDefault(_ap_handy_theme_style);

	var _ap_theme_style = __webpack_require__(608);

	var _ap_theme_style2 = _interopRequireDefault(_ap_theme_style);

	var _ap_theme = __webpack_require__(607);

	var _ap_theme2 = _interopRequireDefault(_ap_theme);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApBasicThemeStyle = _ap_basic_theme_style2.default;
	exports.ApHandyThemeStyle = _ap_handy_theme_style2.default;
	exports.ApThemeStyle = _ap_theme_style2.default;
	exports.ApTheme = _ap_theme2.default;

/***/ },
/* 610 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Toast group.
	 * @class ApToastGroup
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _asobj = __webpack_require__(8);

	var _ap_toast = __webpack_require__(100);

	var _ap_toast2 = _interopRequireDefault(_ap_toast);

	var _ap_info_toast = __webpack_require__(249);

	var _ap_info_toast2 = _interopRequireDefault(_ap_info_toast);

	var _ap_warn_toast = __webpack_require__(251);

	var _ap_warn_toast2 = _interopRequireDefault(_ap_warn_toast);

	var _ap_error_toast = __webpack_require__(248);

	var _ap_error_toast2 = _interopRequireDefault(_ap_error_toast);

	var _toaster = __webpack_require__(613);

	var _toaster2 = _interopRequireDefault(_toaster);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApToastGroup */
	var ApToastGroup = _react2.default.createClass({
	  displayName: 'ApToastGroup',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    duration: _react.PropTypes.number,
	    toaster: _react.PropTypes.instanceOf(_toaster2.default)
	  },

	  mixins: [],

	  statics: {
	    Toaster: _toaster2.default
	  },

	  getInitialState: function getInitialState() {
	    var state = { _date: null };
	    _toaster2.default.levels.forEach(function (level) {
	      state[level] = null;
	    });
	    return state;
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      toaster: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var duration = props.duration;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-toast-group', {}, props.className) }, _react2.default.createElement(_ap_toast2.default, { message: state.default, duration: duration, name: 'default', onDismiss: s.handleDismiss }), _react2.default.createElement(_ap_info_toast2.default, { message: state.info, duration: duration, name: 'info', onDismiss: s.handleDismiss }), _react2.default.createElement(_ap_warn_toast2.default, { message: state.warn, duration: duration, name: 'warn', onDismiss: s.handleDismiss }), _react2.default.createElement(_ap_error_toast2.default, { message: state.error, duration: duration, name: 'error', onDismiss: s.handleDismiss }), props.children);
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var props = s.props;

	    if (props.toaster) {
	      s.bindToaster(props.toaster);
	    }
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var props = s.props;

	    if (nextProps.toaster) {
	      s.unbindToaster(props.toaster);
	      s.bindToaster(nextProps.toaster);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    var props = s.props;

	    if (props.toaster) {
	      s.unbindToaster(props.toaster);
	    }
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    return !(0, _asobj.shallowEqual)(props, nextProps) || (0, _asobj.shallowEqual)(state, nextState);
	  },

	  // --------------------
	  // Custom
	  // --------------------

	  handleDismiss: function handleDismiss(e) {
	    var s = this;
	    var state = s.state;
	    var name = e.name;
	    var dismissed = e.dismissed;

	    if (state[name] === dismissed) {
	      s.setState({ name: null });
	    }
	  },

	  /**
	   * Bind toaster events.
	   * @param toaster
	   */
	  bindToaster: function bindToaster(toaster) {
	    var s = this;
	    toaster.addListener('toast', s.handleToast);
	  },

	  /**
	   * Unbind toaster events.
	   * @param toaster
	   */
	  unbindToaster: function unbindToaster(toaster) {
	    var s = this;
	    toaster.removeListener('toast', s.handleToast);
	  },

	  /**
	   * Handle toaster events.
	   * @param data
	   */
	  handleToast: function handleToast(data) {
	    var s = this;
	    var state = { _date: new Date() };
	    _toaster2.default.levels.forEach(function (level) {
	      state[level] = data.level === level ? data.message : null;
	    });
	    s.setState(state);
	  }
	});

	exports.default = ApToastGroup;

/***/ },
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApToast.
	 * @class ApToastStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApToastStyle */
	var ApToastStyle = _react2.default.createClass({
	  displayName: 'ApToastStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    normalColor: _react.PropTypes.string,
	    infoColor: _react.PropTypes.string,
	    warnColor: _react.PropTypes.string,
	    errorColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      normalColor: _apemanReactStyle.ApStyle.NORMAL_COLOR,
	      infoColor: _apemanReactStyle.ApStyle.INFO_COLOR,
	      warnColor: _apemanReactStyle.ApStyle.WARN_COLOR,
	      errorColor: _apemanReactStyle.ApStyle.ERROR_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var normalColor = config.normalColor;
	      var infoColor = config.infoColor;
	      var warnColor = config.warnColor;
	      var errorColor = config.errorColor;

	      return {
	        all: {
	          '.ap-toast-group': {
	            position: 'fixed',
	            height: 0,
	            top: 'initial',
	            overflow: 'visible',
	            left: 0,
	            bottom: 24,
	            right: 0,
	            textAlign: 'center',
	            padding: 0,
	            zIndex: 49,
	            display: 'flex',
	            flexDirection: 'column',
	            justifyContent: 'flex-end'
	          },
	          '.ap-toast': {
	            display: 'block',
	            margin: '0 auto'
	          },
	          '.ap-toast-inner': {
	            margin: '4px auto',
	            maxWidth: '420px',
	            display: 'inline-block',
	            textAlign: 'left',
	            padding: '4px',
	            boxShadow: '2px 2px 4px rgba(0,0,0,0.33)',
	            backgroundColor: 'rgba(255, 255, 255, 0.95)',
	            color: '' + normalColor,
	            border: '4px solid ' + normalColor,
	            fontSize: '14px',
	            width: '240px',
	            borderRadius: '2px'
	          },
	          '.ap-toast-item': {
	            display: 'block',
	            padding: '2px 0'
	          },
	          '.ap-toast-item:active': {
	            opacity: 0.8
	          },
	          '.ap-info-toast .ap-toast-inner': {
	            color: '' + infoColor,
	            borderColor: '' + infoColor
	          },
	          '.ap-warn-toast .ap-toast-inner': {
	            color: '' + warnColor,
	            borderColor: '' + warnColor
	          },
	          '.ap-error-toast .ap-toast-inner': {
	            color: '' + errorColor,
	            borderColor: '' + errorColor
	          },
	          '.ap-toast-item-icon': {
	            display: 'inline-block',
	            pointerEvents: 'none'
	          },
	          '.ap-toast-text': {
	            display: 'inline-block',
	            pointerEvents: 'none',
	            margin: '0 2px',
	            cursor: 'default'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApToastStyle$styleDa = ApToastStyle.styleData(props);

	    var all = _ApToastStyle$styleDa.all;
	    var small = _ApToastStyle$styleDa.small;
	    var medium = _ApToastStyle$styleDa.medium;
	    var large = _ApToastStyle$styleDa.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApToastStyle;

/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for toast components.
	 * @module apeman-react-toast
	 * @version 2.0.17
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApWarnToast = exports.ApToast = exports.ApToastStyle = exports.ApToastItem = exports.ApToastGroup = exports.ApInfoToast = exports.ApErrorToast = undefined;

	var _ap_error_toast = __webpack_require__(248);

	var _ap_error_toast2 = _interopRequireDefault(_ap_error_toast);

	var _ap_info_toast = __webpack_require__(249);

	var _ap_info_toast2 = _interopRequireDefault(_ap_info_toast);

	var _ap_toast_group = __webpack_require__(610);

	var _ap_toast_group2 = _interopRequireDefault(_ap_toast_group);

	var _ap_toast_item = __webpack_require__(250);

	var _ap_toast_item2 = _interopRequireDefault(_ap_toast_item);

	var _ap_toast_style = __webpack_require__(611);

	var _ap_toast_style2 = _interopRequireDefault(_ap_toast_style);

	var _ap_toast = __webpack_require__(100);

	var _ap_toast2 = _interopRequireDefault(_ap_toast);

	var _ap_warn_toast = __webpack_require__(251);

	var _ap_warn_toast2 = _interopRequireDefault(_ap_warn_toast);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApErrorToast = _ap_error_toast2.default;
	exports.ApInfoToast = _ap_info_toast2.default;
	exports.ApToastGroup = _ap_toast_group2.default;
	exports.ApToastItem = _ap_toast_item2.default;
	exports.ApToastStyle = _ap_toast_style2.default;
	exports.ApToast = _ap_toast2.default;
	exports.ApWarnToast = _ap_warn_toast2.default;

/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Toast data handler
	 * @class Toaster
	 */
	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var EventEmitter = __webpack_require__(130);

	/** @lends Toaster */

	var Toaster = function (_EventEmitter) {
	  _inherits(Toaster, _EventEmitter);

	  function Toaster(options) {
	    _classCallCheck(this, Toaster);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Toaster).call(this));
	  }

	  return Toaster;
	}(EventEmitter);

	Object.assign(Toaster, {
	  levels: ['default', 'info', 'warn', 'error']
	});

	exports.default = Toaster;

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Toggle item
	 * @class ApToggle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_toggle_item = __webpack_require__(252);

	var _ap_toggle_item2 = _interopRequireDefault(_ap_toggle_item);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApToggle */
	var ApToggle = function (_Component) {
	  _inherits(ApToggle, _Component);

	  function ApToggle() {
	    _classCallCheck(this, ApToggle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApToggle).apply(this, arguments));
	  }

	  _createClass(ApToggle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var state = s.state;
	      var props = s.props;
	      var options = props.options;

	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-toggle', props.className),
	        style: Object.assign({}, props.style) }, Object.keys(options || {}).map(function (value) {
	        return _react2.default.createElement(_ap_toggle_item2.default, { active: value === props.value,
	          key: value,
	          data: value,
	          onTap: props.onToggle
	        }, options[value]);
	      }));
	    }
	  }]);

	  return ApToggle;
	}(_react.Component);

	Object.assign(ApToggle, {
	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    options: _react.PropTypes.object.isRequired,
	    value: _react.PropTypes.node.isRequired,
	    onToggle: _react.PropTypes.func
	  },

	  defaultProps: {
	    options: null,
	    value: null,
	    onToggle: null
	  }
	});

	exports.default = ApToggle;

/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApToggle.
	 * @class ApToggleStyle
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	/** @lends ApToggleStyle */
	var ApToggleStyle = function (_Component) {
	  _inherits(ApToggleStyle, _Component);

	  function ApToggleStyle() {
	    _classCallCheck(this, ApToggleStyle);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApToggleStyle).apply(this, arguments));
	  }

	  _createClass(ApToggleStyle, [{
	    key: 'render',
	    value: function render() {
	      var s = this;
	      var props = s.props;

	      var _ApToggleStyle$styleD = ApToggleStyle.styleData(props);

	      var all = _ApToggleStyle$styleD.all;
	      var small = _ApToggleStyle$styleD.small;
	      var medium = _ApToggleStyle$styleD.medium;
	      var large = _ApToggleStyle$styleD.large;

	      return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	        smallMediaData: small,
	        mediumMediaData: medium,
	        largeMediaData: large
	      }, props.children);
	    }
	  }]);

	  return ApToggleStyle;
	}(_react.Component);

	Object.assign(ApToggleStyle, {
	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string
	  },
	  defaultProps: {
	    style: {},
	    highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	    backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	  },
	  styleData: function styleData(config) {
	    var highlightColor = config.highlightColor;
	    var backgroundColor = config.backgroundColor;

	    var borderRadius = 4;
	    return {
	      all: {
	        '.ap-toggle': {
	          borderRadius: borderRadius + 'px'
	        },
	        '.ap-toggle-item': {
	          color: '' + highlightColor,
	          border: '1px solid ' + highlightColor,
	          margin: '0 -1px 0 0',
	          background: 'transparent'
	        },
	        '.ap-toggle-item:first-child': {
	          borderRadius: borderRadius + 'px 0 0 ' + borderRadius + 'px'
	        },
	        '.ap-toggle-item:last-child': {
	          borderRadius: '0 ' + borderRadius + 'px ' + borderRadius + 'px 0'
	        },
	        '.ap-toggle-item-active': {
	          background: '' + highlightColor,
	          color: 'white'
	        }
	      }
	    };
	  }
	});

	exports.default = ApToggleStyle;

/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for toggle components.
	 * @module apeman-react-toggle
	 * @version 3.0.2
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ApToggle = exports.ApToggleStyle = exports.ApToggleItem = undefined;

	var _ap_toggle_item = __webpack_require__(252);

	var _ap_toggle_item2 = _interopRequireDefault(_ap_toggle_item);

	var _ap_toggle_style = __webpack_require__(615);

	var _ap_toggle_style2 = _interopRequireDefault(_ap_toggle_style);

	var _ap_toggle = __webpack_require__(614);

	var _ap_toggle2 = _interopRequireDefault(_ap_toggle);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.ApToggleItem = _ap_toggle_item2.default;
	exports.ApToggleStyle = _ap_toggle_style2.default;
	exports.ApToggle = _ap_toggle2.default;

/***/ },
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for touchable component.
	 * @class ApTouchable
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _with_touch = __webpack_require__(254);

	var _with_touch2 = _interopRequireDefault(_with_touch);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTouchable */
	var ApTouchable = _react2.default.createClass({
	  displayName: 'ApTouchable',

	  // --------------------
	  // Specs
	  // --------------------
	  propTypes: {},

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { id: props.id,
	      className: (0, _classnames2.default)('ap-touchable', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Helper
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApTouchable; // Dummy export for doc generator

	exports.default = (0, _with_touch2.default)(ApTouchable);

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApTouchable.
	 * @class ApTouchableStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApTouchableStyle */
	var ApTouchableStyle = _react2.default.createClass({
	  displayName: 'ApTouchableStyle',

	  propTypes: _apemanReactStyle.ApStyle.propTypes,
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },

	  statics: {
	    styleData: function styleData(config) {
	      return {
	        all: {
	          '.ap-touchable': {}
	        }
	      };
	    }
	  },

	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApTouchableStyle$sty = ApTouchableStyle.styleData(props);

	    var all = _ApTouchableStyle$sty.all;
	    var small = _ApTouchableStyle$sty.small;
	    var medium = _ApTouchableStyle$sty.medium;
	    var large = _ApTouchableStyle$sty.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApTouchableStyle;

/***/ },
/* 619 */
/***/ function(module, exports) {

	/**
	 * @namespace Enums
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var directions = ['NONE', 'LEFT', 'RIGHT', 'UP', 'DOWN', 'HORIZONTAL', 'VERTICAL', 'ALL'];

	exports.directions = directions;

/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Higher order component with outside touch
	 * @function withOutside
	 * @param {function} Component - A component constructor
	 * @returns {function} - Wrapped component
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _breact = __webpack_require__(90);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _bwindow = __webpack_require__(104);

	var _new_hammer = __webpack_require__(253);

	var _new_hammer2 = _interopRequireDefault(_new_hammer);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends withOutside */
	function withOutside(Component) {
	  return (0, _breact.wrap)(Component, {
	    propTypes: {
	      onOutside: _react.PropTypes.func
	    },

	    componentDidMount: function componentDidMount() {
	      var s = this;
	      var body = (0, _bwindow.get)('document.body');
	      var hammer = (0, _new_hammer2.default)(body);
	      hammer.on('tap', s.handleTapForOutside);
	      s.hammer = hammer;
	    },
	    componentWillUnmount: function componentWillUnmount() {
	      var s = this;
	      var hammer = s.hammer;

	      hammer.off('tap', s.handleTapForOutside);
	      hammer.destroy();
	      hammer.stop();
	      hammer.destroy();
	    },
	    handleTapForOutside: function handleTapForOutside(e) {
	      var s = this;
	      var props = s.props;
	      var _props$onOutside = props.onOutside;
	      var onOutside = _props$onOutside === undefined ? function () {
	        return undefined;
	      } : _props$onOutside;

	      var node = _reactDom2.default.findDOMNode(s);
	      if (!node) {
	        return;
	      }
	      var contained = node.contains(e.target);
	      if (!contained) {
	        onOutside(e);
	      }
	    }
	  });
	}

	exports.default = withOutside;

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * apeman react package for file upload components.
	 * @class ApUpload
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _async = __webpack_require__(665);

	var _async2 = _interopRequireDefault(_async);

	var _path = __webpack_require__(920);

	var _path2 = _interopRequireDefault(_path);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _apemanReactImage = __webpack_require__(68);

	var _apemanReactSpinner = __webpack_require__(29);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApUpload */
	var ApUpload = _react2.default.createClass({
	  displayName: 'ApUpload',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Name of input */
	    name: _react.PropTypes.string,
	    /** DOM id of input */
	    id: _react.PropTypes.string,
	    /** Allow multiple upload */
	    multiple: _react.PropTypes.bool,
	    /** Handler for change event */
	    onChange: _react.PropTypes.func,
	    /** Handler for load event */
	    onLoad: _react.PropTypes.func,
	    /** Handler for error event */
	    onError: _react.PropTypes.func,
	    /** Image width */
	    width: _react.PropTypes.number,
	    /** Image height */
	    height: _react.PropTypes.number,
	    /** Guide text */
	    text: _react.PropTypes.string,
	    /** Accept file type */
	    accept: _react.PropTypes.string,
	    /** Guide icon */
	    icon: _react.PropTypes.string,
	    /** Icon for close images */
	    closeIcon: _react.PropTypes.string,
	    /** Spinner theme */
	    spinner: _react.PropTypes.string,
	    /** Value of input */
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.array])
	  },

	  mixins: [],

	  statics: {
	    readFile: function readFile(file, callback) {
	      var reader = new window.FileReader();
	      reader.onerror = function onerror(err) {
	        callback(err);
	      };
	      reader.onload = function onload(ev) {
	        callback(null, ev.target.result);
	      };
	      reader.readAsDataURL(file);
	    },
	    isImageUrl: function isImageUrl(url) {
	      var imageExtensions = ['.jpg', '.jpeg', '.svg', '.gif', '.png'];
	      return (/^data:image/.test(url) || !!~imageExtensions.indexOf(_path2.default.extname(url))
	      );
	    }
	  },

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    var hasValue = props.value && props.value.length > 0;
	    return {
	      spinning: false,
	      error: null,
	      urls: hasValue ? [].concat(props.value) : null
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      name: null,
	      id: 'ap-upload-' + _uuid2.default.v4(),
	      multiple: false,
	      width: 180,
	      height: 180,
	      accept: null,
	      text: 'Upload file',
	      icon: 'fa fa-cloud-upload',
	      closeIcon: 'fa fa-close',
	      spinnerIcon: _apemanReactSpinner.ApSpinner.DEFAULT_THEME,
	      onChange: null,
	      onLoad: null,
	      onError: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var width = props.width;
	    var height = props.height;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-upload', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('input', { type: 'file',
	      className: 'ap-upload-input',
	      multiple: props.multiple,
	      name: props.name,
	      id: props.id,
	      accept: props.accept,
	      onChange: s.handleChange,
	      style: { width: width, height: height }
	    }), _react2.default.createElement('label', { className: 'ap-upload-label', htmlFor: props.id }, _react2.default.createElement('span', { className: 'ap-upload-aligner' }), _react2.default.createElement('span', { className: 'ap-upload-label-inner' }, _react2.default.createElement('i', { className: (0, _classnames2.default)('ap-upload-icon', props.icon) }), _react2.default.createElement('span', { className: 'ap-upload-text' }, props.text), props.children)), s._renderPreviewImage(state.urls, width, height), s._renderRemoveButton(!!(state.urls && state.urls.length > 0), props.closeIcon), s._renderSpinner(state.spinning, props.spinner));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  handleChange: function handleChange(e) {
	    var s = this;
	    var props = s.props;
	    var target = e.target;

	    var files = Array.prototype.slice.call(target.files, 0);

	    var onChange = props.onChange;
	    var onError = props.onError;
	    var onLoad = props.onLoad;

	    s.setState({ spinning: true });
	    if (onChange) {
	      onChange(e);
	    }
	    _async2.default.concat(files, ApUpload.readFile, function (err, urls) {
	      e.urls = urls;
	      e.target = target;
	      s.setState({
	        spinning: false,
	        error: err,
	        urls: urls
	      });
	      if (err) {
	        if (onError) {
	          onError(err);
	        }
	      } else {
	        if (onLoad) {
	          onLoad(e);
	        }
	      }
	    });
	  },
	  handleRemove: function handleRemove() {
	    var s = this;
	    var props = s.props;
	    var onLoad = props.onLoad;

	    s.setState({
	      error: null,
	      urls: null
	    });
	    if (onLoad) {
	      onLoad([]);
	    }
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _renderSpinner: function _renderSpinner(spinning, theme) {
	    var s = this;
	    return _react2.default.createElement(_apemanReactSpinner.ApSpinner, { enabled: spinning, theme: theme });
	  },
	  _renderRemoveButton: function _renderRemoveButton(removable, icon) {
	    var s = this;
	    if (!removable) {
	      return null;
	    }
	    return _react2.default.createElement(_apemanReactButton.ApButton, { onTap: s.handleRemove, className: 'ap-upload-remove-button' }, _react2.default.createElement('i', { className: (0, _classnames2.default)('ap-upload-remove-icon', icon) }));
	  },
	  _renderPreviewImage: function _renderPreviewImage(urls, width, height) {
	    if (!urls) {
	      return null;
	    }
	    var s = this;
	    return urls.filter(function (url) {
	      return ApUpload.isImageUrl(url);
	    }).map(function (url, i) {
	      return _react2.default.createElement(_apemanReactImage.ApImage, { key: url,
	        src: url,
	        height: height,
	        width: width,
	        className: (0, _classnames2.default)('ap-upload-preview-image'),
	        style: { left: i * 10 + '%', top: i * 10 + '%' },
	        scale: 'fit' });
	    });
	  }
	});

	exports.default = ApUpload;

/***/ },
/* 622 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApUpload.
	 * @class ApUploadStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApUploadStyle */
	var ApUploadStyle = _react2.default.createClass({
	  displayName: 'ApUploadStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    highlightColor: _react.PropTypes.string,
	    backgroundColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var highlightColor = config.highlightColor;
	      var backgroundColor = config.backgroundColor;

	      return {
	        all: {
	          '.ap-upload': {
	            position: 'relative',
	            display: 'inline-block',
	            color: '#888',
	            overflow: 'hidden'
	          },
	          '.ap-upload:hover': {
	            color: '#555'
	          },
	          '.ap-upload:active': {
	            textShadow: 'none',
	            opacity: 1,
	            color: '#777'
	          },
	          '.ap-upload-label': {
	            position: 'absolute',
	            zIndex: 1,
	            textAlign: 'center',
	            boxSizing: 'border-box',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            pointerEvents: 'none',
	            backgroundColor: '' + backgroundColor,
	            boxShadow: 'inset 1px 1px 2px rgba(0,0,0,0.33)',
	            border: '1px solid #CCC',
	            borderRadius: '2px'
	          },
	          '.ap-upload-input': {
	            opacity: 0,
	            display: 'inline-block',
	            cursor: 'pointer',
	            position: 'relative',
	            zIndex: 2
	          },
	          '.ap-upload-icon': {
	            display: 'block',
	            fontSize: '2em'
	          },
	          '.ap-upload-label-inner': {
	            display: 'inline-block',
	            verticalAlign: 'middle'
	          },
	          '.ap-upload-aligner': {
	            display: 'inline-block',
	            width: '1px',
	            marginRight: '-1px',
	            height: '100%',
	            boxSizing: 'border-box',
	            verticalAlign: 'middle'
	          },
	          '.ap-upload .ap-spinner': {
	            position: 'absolute',
	            top: 0,
	            left: 0,
	            right: 0,
	            bottom: 0,
	            zIndex: 8,
	            backgroundColor: '' + backgroundColor,
	            color: '#DDD'
	          },
	          '.ap-upload-preview-image': {
	            display: 'inline-block',
	            boxSizing: 'border-box',
	            zIndex: 4,
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            pointerEvents: 'none',
	            border: '1px solid #AAA'
	          },
	          '.ap-upload-remove-button': {
	            display: 'inline-block',
	            position: 'absolute',
	            right: 0,
	            top: 0,
	            zIndex: 5,
	            margin: 0,
	            border: 'none',
	            padding: '8px',
	            fontSize: '24px',
	            color: '#AAA',
	            background: 'rgba(255,255,255,0.2)',
	            borderRadius: 0
	          },
	          '.ap-upload-remove-button:hover': {
	            opacity: 1,
	            boxShadow: 'none',
	            color: '#555'
	          },
	          '.ap-upload-remove-button:active': {
	            opacity: 1,
	            boxShadow: 'none',
	            color: '#555'
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApUploadStyle$styleD = ApUploadStyle.styleData(props);

	    var all = _ApUploadStyle$styleD.all;
	    var small = _ApUploadStyle$styleD.small;
	    var medium = _ApUploadStyle$styleD.medium;
	    var large = _ApUploadStyle$styleD.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApUploadStyle;

/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * View component.
	 * @class ApView
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _asobj = __webpack_require__(8);

	var _apemanReactSpinner = __webpack_require__(29);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApView */
	var ApView = _react2.default.createClass({
	  displayName: 'ApView',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Wide style */
	    wide: _react.PropTypes.bool
	  },

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      wide: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-view', {
	      'ap-view-wide': !!props.wide
	    }, props.className);
	    var divProps = (0, _asobj.clone)(props, {
	      without: ['wide', 'spinner']
	    });
	    return _react2.default.createElement('div', _extends({}, divProps, {
	      className: className,
	      style: Object.assign({}, props.style)
	    }), _react2.default.createElement('div', { className: 'ap-view-inner' }, props.children, props.spinner));
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApView; // Dummy export for parser

	exports.default = (0, _apemanReactSpinner.withSpin)(ApView);

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Body for view.
	 * @class ApViewBody
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactContainer = __webpack_require__(112);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewBody */
	var ApViewBody = _react2.default.createClass({
	  displayName: 'ApViewBody',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {},

	  mixins: [],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {};
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-view-body', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement(_apemanReactContainer.ApContainer, { className: 'ap-view-body-inner' }, props.children));
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApViewBody;

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Footer for view.
	 * @class ApViewFooter
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactMixinLayout = __webpack_require__(39);

	var _apemanReactContainer = __webpack_require__(112);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewFooter */
	var ApViewFooter = _react2.default.createClass({
	  displayName: 'ApViewFooter',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Fixed to bottom */
	    fixed: _react.PropTypes.bool
	  },

	  mixins: [_apemanReactMixinLayout.ApLayoutMixin],

	  statics: {},

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      fixed: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var layouts = s.layouts;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-view-footer', {
	        'ap-view-footer-fixed': props.fixed
	      }, props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('div', { className: 'ap-view-footer-space',
	      ref: 'state',
	      style: layouts.space
	    }), _react2.default.createElement('div', { className: 'ap-view-footer-content',
	      ref: 'content',
	      style: layouts.content
	    }, _react2.default.createElement(_apemanReactContainer.ApContainer, { className: 'ap-view-footer-inner' }, props.children)));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // For ApLayoutMixin
	  // ------------------

	  getInitialLayouts: function getInitialLayouts() {
	    var s = this;
	    return {
	      space: {
	        height: 'auto'
	      },
	      content: {}
	    };
	  },
	  calcLayouts: function calcLayouts() {
	    var s = this;

	    var content = _reactDom2.default.findDOMNode(s.refs['content']);
	    var contentRect = content.getBoundingClientRect();
	    return {
	      space: {
	        height: contentRect.height
	      },
	      content: {}
	    };
	  }

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApViewFooter;

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Header for view.
	 * @class ApViewHeader
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _ap_view_header_button = __webpack_require__(256);

	var _ap_view_header_button2 = _interopRequireDefault(_ap_view_header_button);

	var _ap_view_header_title = __webpack_require__(257);

	var _ap_view_header_title2 = _interopRequireDefault(_ap_view_header_title);

	var _apemanReactContainer = __webpack_require__(112);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewHeader */
	var ApViewHeader = _react2.default.createClass({
	  displayName: 'ApViewHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Handler of left button tap */
	    onLeftTap: _react.PropTypes.func,
	    /** Text of left button */
	    leftText: _react.PropTypes.string,
	    /** Icon of left button */
	    leftIcon: _react.PropTypes.string,
	    /** Text of title */
	    titleText: _react.PropTypes.string,
	    /** Title of icon */
	    titleIcon: _react.PropTypes.string,
	    /** Text of right button */
	    rightText: _react.PropTypes.string,
	    /** Icon of right button */
	    rightIcon: _react.PropTypes.string,
	    /** Handler of right button tap */
	    onRightTap: _react.PropTypes.func
	  },

	  mixins: [],

	  // From http://ionicons.com/
	  statics: {
	    BACK_ICON: 'ion ion-chevron-left',
	    NEXT_ICON: 'ion ion-chevron-right',
	    ADD_ICON: 'ion ion-plus-round',
	    UP_ICON: 'ion ion-chevron-up',
	    CLOSE_ICON: 'ion ion-android-close',
	    DOWN_ICON: 'ion ion-chevron-down',
	    SHARE_ICON: 'ion ion-share',
	    COMPOSE_ICON: 'ion ion-compose',
	    MENU_ICON: 'ion ion-navicon-round',
	    /**
	     * Get icon for view pop.
	     * @param {string} way - View push way.
	     * @returns {string} - Pop icon for a way
	     */
	    popIcon: function popIcon(way) {
	      switch (String(way).toUpperCase()) {
	        case 'PUSH_LEFT':
	          return ApViewHeader.BACK_ICON;
	        default:
	          return ApViewHeader.CLOSE_ICON;
	      }
	    }
	  },

	  getInitialState: function getInitialState() {
	    return {};
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      leftText: null,
	      leftIcon: null,
	      onLeftTap: null,
	      titleText: null,
	      titleIcon: null,
	      rightText: null,
	      rightIcon: null,
	      onRightTap: null
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-view-header', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement(_apemanReactContainer.ApContainer, { className: 'ap-view-header-inner' }, _react2.default.createElement(_ap_view_header_button2.default, { icon: props.leftIcon,
	      text: props.leftText,
	      onTap: props.onLeftTap,
	      className: 'ape-view-header-button-left'
	    }), _react2.default.createElement('div', { className: 'ap-view-header-content' }, _react2.default.createElement(_ap_view_header_title2.default, { icon: props.titleIcon,
	      text: props.titleText,
	      onTap: props.onTap
	    }), props.children), _react2.default.createElement(_ap_view_header_button2.default, { icon: props.rightIcon,
	      text: props.rightText,
	      onTap: props.onRightTap,
	      className: 'ape-view-header-button-right'
	    })));
	  }

	  // --------------------
	  // Lifecycle
	  // --------------------

	  // ------------------
	  // Custom
	  // ------------------

	  // ------------------
	  // Private
	  // ------------------

	});

	exports.default = ApViewHeader;

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Sidebar of views
	 * @class ApViewSidebar
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactTouchable = __webpack_require__(9);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewSidebar */
	var ApViewSidebar = _react2.default.createClass({
	  displayName: 'ApViewSidebar',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Shows sidebar */
	    enabled: _react.PropTypes.bool,
	    /** Handler for close */
	    onClose: _react.PropTypes.func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      enabled: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var className = (0, _classnames2.default)('ap-view-sidebar', props.className, {
	      'ap-view-sidebar-enabled': props.enabled
	    });
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, props.style) }, _react2.default.createElement('div', { className: 'ap-view-sidebar-overlay' }), _react2.default.createElement('div', { className: 'ap-view-sidebar-inner' }, props.children), _react2.default.createElement(_apemanReactTouchable.ApTouchable, { className: 'ap-view-sidebar-closer',
	      onTap: props.onClose
	    }));
	  }
	});

	exports.default = ApViewSidebar;

/***/ },
/* 628 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Stack for views.
	 * @class ApViewStack
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _iftype = __webpack_require__(133);

	var _iftype2 = _interopRequireDefault(_iftype);

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _stringcase = __webpack_require__(97);

	var _stringcase2 = _interopRequireDefault(_stringcase);

	var _stacker = __webpack_require__(632);

	var _stacker2 = _interopRequireDefault(_stacker);

	var _resolver = __webpack_require__(631);

	var _resolver2 = _interopRequireDefault(_resolver);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	var RENDER_DELAY = 50;

	/** @lends ApViewStack */
	var ApViewStack = _react2.default.createClass({
	  displayName: 'ApViewStack',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    insetTop: _react.PropTypes.number,
	    insetBottom: _react.PropTypes.number,
	    /** Stacker instance of stacker */
	    stacker: function stacker(props, propName, componentName) {
	      var stacker = props[propName];
	      if (!stacker) {
	        return new Error('stacker is required.');
	      }
	      var invalid = !(0, _iftype2.default)(stacker).is(ApViewStack.Stacker);
	      if (invalid) {
	        return new Error('stacker should be an instance of ApViewStack.Stacker');
	      }
	      return null;
	    },

	    /** Duration for view transition animation */
	    transitionDuration: _react.PropTypes.number
	  },

	  mixins: [],

	  statics: {
	    Stacker: _stacker2.default,
	    Resolver: _resolver2.default,
	    RENDER_DELAY: RENDER_DELAY
	  },

	  getInitialState: function getInitialState() {
	    var s = this;
	    var props = s.props;

	    return {
	      way: null,
	      views: props.stacker && props.stacker.allViews() || [],
	      empty: true,
	      pushing: false,
	      pushingActive: false,
	      popping: false,
	      poppingActive: false
	    };
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      insetTop: 0,
	      insetBottom: 0,
	      insetLeft: 0,
	      insetRight: 0,
	      stacker: null,
	      transitionDuration: 400,
	      uuid: _uuid2.default.v4()
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var stacker = props.stacker;
	    var uuid = props.uuid;

	    if (!stacker) {
	      return null;
	    }
	    var className = (0, _classnames2.default)('ap-view-stack', 'ap-view-stack-' + uuid, props.className, {
	      'ap-view-stack-empty': state.empty,
	      'ap-view-stack-pushing': state.pushing,
	      'ap-view-stack-pushing-active': state.pushingActive,
	      'ap-view-stack-popping': state.popping,
	      'ap-view-stack-popping-active': state.poppingActive
	    }, 'ap-view-stack-way-' + _stringcase2.default.spinalcase(state.way));
	    return _react2.default.createElement('div', { className: className,
	      style: Object.assign({}, props.style) }, _react2.default.createElement(_apemanReactStyle.ApStyle, { data: _defineProperty({}, '.ap-view-stack-' + uuid + ' .ap-view-inner', {
	        top: props.insetTop,
	        left: props.insetLeft,
	        right: props.insetRight,
	        bottom: props.insetBottom
	      }),
	      className: 'ap-view-stack-inset-style'
	    }), _react2.default.createElement('div', { className: 'ap-view-stack-inner' }, s._renderViews()));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    s.bindStacker(props.stacker);
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    var props = s.props;

	    if (props.stacker) {
	      s.setState({
	        empty: props.stacker.isEmpty()
	      });
	    }
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    var props = s.props;

	    var stackerChanged = props.stacker !== nextProps.stacker;
	    if (stackerChanged) {
	      s.unbindStacker(props.stacker);
	      s.bindStacker(nextProps.stacker);
	      s.setState({
	        views: nextProps.stacker.allViews() || [],
	        empty: nextProps.stacker.isEmpty()
	      });
	    }
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    var s = this;
	    var state = s.state;

	    var isPushing = state.pushingActive && nextState.pushingActive;
	    var isPopping = state.poppingActive && nextState.poppingActive;
	    var animating = isPushing || isPopping;
	    return !animating;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    var props = s.props;

	    s.unbindStacker(props.stacker);

	    clearTimeout(s._pushOffTimer);
	    clearTimeout(s._popOffTimer);
	  },

	  // ------------------
	  // Custom
	  // ------------------

	  /**
	   * Bind stacker events.
	   * @param {Stacker} stacker - A stacker instance.
	   */
	  bindStacker: function bindStacker(stacker) {
	    var s = this;
	    if (!stacker) {
	      return;
	    }
	    stacker.addListener('push', s.handlePush);
	    stacker.addListener('pop', s.handlePop);
	    stacker.addListener('reload', s.handleReload);

	    stacker.emit('bound');
	  },

	  /**
	   * Unbind stacker events.
	   * @param {Stacker} stacker - A stacker instance.
	   */
	  unbindStacker: function unbindStacker(stacker) {
	    var s = this;
	    if (!stacker) {
	      return;
	    }
	    stacker.removeListener('push', s.handlePush);
	    stacker.removeListener('pop', s.handlePop);
	    stacker.removeListener('reload', s.handleReload);
	  },

	  /**
	   * Apply view push.
	   * @param {object} view - View to push
	   */
	  handlePush: function handlePush(view) {
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    var stacker = props.stacker;

	    s.setState({
	      views: stacker.allViews(),
	      pushing: true,
	      pushingActive: false,
	      way: view.way,
	      empty: false
	    });
	    clearTimeout(s._pushOffTimer);
	    s._pushOffTimer = setTimeout(function () {
	      s.setState({
	        pushingActive: true
	      });
	      s._pushOffTimer = setTimeout(function () {
	        s.setState({
	          pushingActive: false,
	          pushing: false
	        });
	      }, props.transitionDuration);
	    }, RENDER_DELAY);
	  },

	  /**
	   * Apply view pop.
	   * @param {object} view - View to pop.
	   */
	  handlePop: function handlePop(view) {
	    if (!view) {
	      return;
	    }
	    var s = this;
	    var props = s.props;
	    var state = s.state;

	    var stacker = props.stacker;

	    s.setState({
	      popping: true,
	      poppingActive: false,
	      way: view.way
	    });
	    clearTimeout(s._popOffTimer);
	    s._popOffTimer = setTimeout(function () {
	      s.setState({
	        poppingActive: true
	      });
	      s._popOffTimer = setTimeout(function () {
	        s.setState({
	          popping: false,
	          poppingActive: false,
	          views: stacker.allViews(),
	          empty: stacker.isEmpty()
	        });
	      }, props.transitionDuration);
	    }, RENDER_DELAY);
	  },
	  handleReload: function handleReload() {
	    var s = this;
	    var props = s.props;
	    var stacker = props.stacker;

	    if (!stacker) {
	      return;
	    }
	    s.setState({
	      views: stacker && stacker.allViews() || [],
	      empty: stacker.isEmpty()
	    });
	  },
	  triggerPopView: function triggerPopView() {
	    var s = this;
	    var stacker = s.props.stacker;

	    if (!stacker) {
	      return;
	    }
	    return s._doneTrigger(stacker && stacker.popView());
	  },
	  triggerPushView: function triggerPushView(view, params, way) {
	    var s = this;
	    var props = s.props;
	    var stacker = props.stacker;

	    if (!stacker) {
	      return;
	    }
	    return s._doneTrigger(stacker && stacker.pushView(view, params, way));
	  },
	  getTopView: function getTopView() {
	    var s = this;
	    var stacker = s.props.stacker;

	    if (!stacker) {
	      return;
	    }
	    return stacker.topView();
	  },

	  // ------------------
	  // Private
	  // ------------------

	  _renderViews: function _renderViews() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return state.views.map(function (view, i, views) {
	      return _react2.default.createElement('div', { className: (0, _classnames2.default)('ap-view-wrap', 'ap-view-wrap-' + (views.length - 1 - i)), key: 'view-wrap-' + view.id,
	        id: 'view-wrap-' + view.id
	      }, _react2.default.createElement(view.component, Object.assign({
	        viewId: view.id,
	        viewWay: view.way,
	        viewPush: s.triggerPushView,
	        viewPop: s.triggerPopView,
	        viewTop: s.getTopView
	      }, view.params)));
	    });
	  },
	  _doneTrigger: function _doneTrigger(result) {
	    var s = this;
	    var props = s.props;

	    return new Promise(function (resolve) {
	      return setTimeout(function () {
	        resolve(result);
	      }, RENDER_DELAY + props.transitionDuration);
	    });
	  },

	  _pushOffTimer: -1,
	  _popOffTimer: -1
	});

	exports.default = ApViewStack;

/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApViewStack.
	 * @class ApViewStackStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewStackStyle */
	var ApViewStackStyle = _react2.default.createClass({
	  displayName: 'ApViewStackStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    transitionDuration: _react.PropTypes.number
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      transitionDuration: 400
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var transitionDuration = config.transitionDuration;

	      return {
	        all: {
	          '.ap-view-stack': {
	            position: 'fixed',
	            top: 0,
	            left: 0,
	            right: 0,
	            bottom: 0,
	            overflow: 'hidden'
	          },
	          '.ap-view-stack-inner': {
	            position: 'absolute',
	            top: 0,
	            left: 0,
	            right: 0,
	            bottom: 0,
	            overflow: 'hidden',
	            boxSizing: 'border-box'
	          },
	          '.ap-view-stack-empty': {
	            left: 'auto',
	            bottom: 'auto',
	            width: '0 !important',
	            height: '0 !important',
	            display: 'none !important',
	            zIndex: '-9999'
	          },
	          '.ap-view-stack .ap-view-wrap': {
	            position: 'absolute',
	            left: '-1px',
	            top: '-1px',
	            width: '100%',
	            height: '100%',
	            zIndex: 2,
	            boxSizing: 'content-box',
	            border: '1px solid #EEE',
	            boxShadow: '0 0 4px rgba(0,0,0,0.1)',
	            background: 'white'
	          },
	          '.ap-view-stack .ap-view-wrap .ap-view': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0,
	            boxSizing: 'border-box'
	          },
	          // -----------------------
	          // PUSH_LEFT pushing animation
	          // -----------------------
	          '.ap-view-stack-way-push-left.ap-view-stack-pushing .ap-view-wrap-0': {
	            left: '100%',
	            transition: 'left ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-push-left.ap-view-stack-pushing .ap-view-wrap-1': {
	            left: 0,
	            transition: 'left ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-push-left.ap-view-stack-pushing-active .ap-view-wrap-0': {
	            left: 0
	          },
	          '.ap-view-stack-way-push-left.ap-view-stack-pushing-active .ap-view-wrap-1': {
	            left: '-50%'
	          },
	          // -----------------------
	          // PUSH_LEFT popping animation
	          // -----------------------
	          '.ap-view-stack-way-push-left.ap-view-stack-popping .ap-view-wrap-0': {
	            left: 0,
	            transition: 'left ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-push-left.ap-view-stack-popping .ap-view-wrap-1': {
	            left: '-50%',
	            transition: 'left ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-push-left.ap-view-stack-popping-active .ap-view-wrap-0': {
	            left: '100%'
	          },
	          '.ap-view-stack-way-push-left.ap-view-stack-popping-active .ap-view-wrap-1': {
	            left: 0
	          },
	          // -----------------------
	          // PULL_UP pushing animation
	          // -----------------------
	          '.ap-view-stack-way-pull-up.ap-view-stack-pushing .ap-view-wrap-0': {
	            top: '100%',
	            transition: 'top ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-pull-up.ap-view-stack-pushing-active .ap-view-wrap-0': {
	            top: 0
	          },
	          // -----------------------
	          // PULL_UP popping animation
	          // -----------------------
	          '.ap-view-stack-way-pull-up.ap-view-stack-popping .ap-view-wrap-0': {
	            top: 0,
	            transition: 'top ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-pull-up.ap-view-stack-popping-active .ap-view-wrap-0': {
	            top: '100%'
	          },
	          // -----------------------
	          // FADE_IN pushing animation
	          // -----------------------
	          '.ap-view-stack-way-fade-in.ap-view-stack-pushing .ap-view-wrap-0': {
	            opacity: 0,
	            transition: 'opacity ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-fade-in.ap-view-stack-pushing-active .ap-view-wrap-0': {
	            opacity: '1'
	          },
	          // -----------------------
	          // FADE_IN popping animation
	          // -----------------------
	          '.ap-view-stack-way-fade-in.ap-view-stack-popping .ap-view-wrap-0': {
	            opacity: '1',
	            transition: 'opacity ease-out ' + transitionDuration + 'ms'
	          },
	          '.ap-view-stack-way-fade-in.ap-view-stack-popping-active .ap-view-wrap-0': {
	            opacity: 0
	          }
	        }
	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApViewStackStyle$sty = ApViewStackStyle.styleData(props);

	    var all = _ApViewStackStyle$sty.all;
	    var small = _ApViewStackStyle$sty.small;
	    var medium = _ApViewStackStyle$sty.medium;
	    var large = _ApViewStackStyle$sty.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApViewStackStyle;

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for ApView.
	 * @class ApViewStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends ApViewStyle */
	var ApViewStyle = _react2.default.createClass({
	  displayName: 'ApViewStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    sidePadding: _react.PropTypes.number,
	    headerHeight: _react.PropTypes.number,
	    highlightColor: _react.PropTypes.string,
	    backgroundColor: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      sidePadding: 8,
	      headerHeight: 44,
	      highlightColor: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR,
	      backgroundColor: _apemanReactStyle.ApStyle.DEFAULT_BACKGROUND_COLOR,
	      footerBackgroundColor: _apemanReactStyle.ApStyle.COVER_BACKGROUND
	    };
	  },

	  statics: {
	    styleData: function styleData(config) {
	      var headerHeight = config.headerHeight;
	      var backgroundColor = config.backgroundColor;
	      var sidePadding = config.sidePadding;
	      var footerBackgroundColor = config.footerBackgroundColor;

	      var sidebarRate = 0.8;
	      var sideAnimationDuration = 400;
	      return {
	        all: {
	          '.ap-view': {
	            position: 'relative',
	            overflow: 'auto'
	          },
	          '.ap-view-wide .ap-container': {
	            maxWidth: 'none'
	          },
	          '.ap-view-inner': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            bottom: 0
	          },
	          '.ap-view-header': {
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            right: 0,
	            height: headerHeight + 'px',
	            display: 'block',
	            lineHeight: headerHeight + 'px',
	            padding: 0,
	            margin: 0,
	            zIndex: 1,
	            boxSizing: 'border-box',
	            borderBottom: '1px solid #F5F5F5'
	          },
	          '.ap-view-header-inner': {
	            display: 'flex',
	            padding: 0,
	            margin: '0 auto'
	          },
	          '.ap-view-header-content': {
	            width: '100%',
	            flex: 1
	          },
	          '.ap-view-body': {
	            padding: headerHeight + 8 + 'px ' + sidePadding + 'px 8px',
	            margin: 0,
	            display: 'block',
	            backgroundColor: '' + backgroundColor
	          },
	          '.ap-view-body-inner': {
	            margin: '0 auto'
	          },
	          '.ap-view-header-button': {
	            display: 'inline-block',
	            cursor: 'pointer',
	            textAlign: 'center',
	            lineHeight: headerHeight + 'px'
	          },
	          '.ap-view-header-button:hover': {
	            opacity: 0.9
	          },
	          '.ap-view-header-button:active': {
	            opacity: 0.66
	          },
	          '.ap-view-header-button-inner': {
	            display: 'inline-block',
	            padding: '0 4px',
	            minWidth: '44px'
	          },
	          '.ap-view-header-button-aligner': {
	            display: 'inline-block',
	            width: '1px',
	            overflow: 'hidden',
	            opacity: 0,
	            color: 'transparent',
	            marginRight: '-1px',
	            lineHeight: headerHeight + 'px',
	            height: headerHeight + 'px',
	            verticalAlign: 'middle'
	          },
	          '.ap-view-header-ion': {
	            display: 'inline-block',
	            lineHeight: headerHeight + 'px',
	            verticalAlign: 'middle'
	          },
	          '.ap-view-header-button-text': {
	            lineHeight: headerHeight + 'px',
	            verticalAlign: 'middle'
	          },
	          '.ap-view-header-title': {
	            margin: '0 auto',
	            display: 'block',
	            verticalAlign: 'middle',
	            fontWeight: 'normal',
	            fontSize: '14px',
	            textAlign: 'center'
	          },
	          '.ap-view-footer': {
	            position: 'relative',
	            display: 'block',
	            width: '100%'
	          },
	          '.ap-view-footer-space': {
	            display: 'none'
	          },
	          '.ap-view-footer-fixed': {},
	          '.ap-view-footer-content': {
	            boxSizing: 'border-box'
	          },
	          '.ap-view-footer-inner': {
	            padding: sidePadding + 'px ' + sidePadding + 'px',
	            background: '' + footerBackgroundColor,
	            borderStyle: 'solid',
	            borderWidth: '1px 1px 0',
	            borderColor: '#F0F0F0',
	            boxSizing: 'border-box'
	          },
	          '.ap-view-footer-fixed .ap-view-footer-content': {
	            position: 'fixed',
	            left: 0,
	            right: 0,
	            bottom: 0,
	            zIndex: 4
	          },
	          '.ap-view-footer-fixed .ap-view-footer-space': {
	            display: 'block'
	          },
	          '.ap-view-sidebar': {
	            position: 'absolute',
	            left: '-100%',
	            top: 0,
	            bottom: 0,
	            width: '100%',
	            boxSizing: 'border-box',
	            display: 'flex',
	            justifyContent: 'flex-start',
	            zIndex: 8,
	            transition: 'left ' + sideAnimationDuration + 'ms'
	          },
	          '.ap-view-sidebar-enabled': {
	            left: 0
	          },
	          '.ap-view-sidebar-inner': {
	            background: backgroundColor,
	            width: 100 * sidebarRate + '%',
	            height: '100%',
	            overflowY: 'auto',
	            borderRight: '1px solid #F0F0F0',
	            display: 'block',
	            boxShadow: '1px 1px 2px rgba(0, 0, 0, 0.1)'
	          },
	          '.ap-view-sidebar-closer': {
	            width: 100 * (1 - sidebarRate) + '%',
	            height: '100%',
	            display: 'block'
	          },
	          '.ap-view-sidebar-overlay': {
	            display: 'block',
	            background: 'rgba(0,0,0,0)',
	            left: '-200%',
	            transition: 'background ' + sideAnimationDuration + 'ms'
	          },
	          '.ap-view-sidebar-enabled .ap-view-sidebar-overlay': {
	            display: 'block',
	            width: '200%',
	            height: '100%',
	            boxSizing: 'border-box',
	            position: 'absolute',
	            left: 0,
	            top: 0,
	            bottom: 0,
	            zIndex: -1,
	            background: 'rgba(0,0,0,0.2)'
	          }
	        }

	      };
	    }
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;

	    var _ApViewStyle$styleDat = ApViewStyle.styleData(props);

	    var all = _ApViewStyle$styleDat.all;
	    var small = _ApViewStyle$styleDat.small;
	    var medium = _ApViewStyle$styleDat.medium;
	    var large = _ApViewStyle$styleDat.large;

	    return _react2.default.createElement(_apemanReactStyle.ApStyle, { data: Object.assign(all, props.style),
	      smallMediaData: small,
	      mediumMediaData: medium,
	      largeMediaData: large
	    }, props.children);
	  }
	});

	exports.default = ApViewStyle;

/***/ },
/* 631 */
/***/ function(module, exports) {

	/**
	 * View name resolver
	 * @class Resolver
	 */

	'use strict';

	/** @lends Resolver */

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	function Resolver(views) {
	  var s = this;
	  s.views = views;
	}

	Resolver.prototype = {
	  views: null,

	  /**
	   * Resolve view by name.
	   * @param {string} name - Name of view.
	   * @returns {*}
	   */
	  resolve: function resolve(name) {
	    var s = this;
	    var keys = Object.keys(s.views || {});
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var key = _step.value;

	        var view = s.views[key];
	        var hit = view.viewName === name || key === name || key.replace(/View$/, '') === name;
	        if (hit) {
	          return view;
	        }
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    return null;
	  }
	};

	exports.default = Resolver;

/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * View contents stacker.
	 * @class Stacker
	 * @param {object} options - Optional settings.
	 * @parma {boolean} [options.allowRootPop] - Allow root view to pop.
	 * @param {string} [options.defaultWay] - Default way to push.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
	      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;_e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }return _arr;
	  }return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if (Symbol.iterator in Object(arr)) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

	var _stacker_view = __webpack_require__(633);

	var _stacker_view2 = _interopRequireDefault(_stacker_view);

	var _iftype = __webpack_require__(133);

	var _iftype2 = _interopRequireDefault(_iftype);

	var _objnest = __webpack_require__(309);

	var _objnest2 = _interopRequireDefault(_objnest);

	var _stringcase = __webpack_require__(97);

	var _stringcase2 = _interopRequireDefault(_stringcase);

	var _events = __webpack_require__(130);

	var _events2 = _interopRequireDefault(_events);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends Stacker */
	function Stacker(options) {
	  var s = this;
	  s._views = [];
	  options = options || {};
	  s.root = options.root;
	  s.resolver = options.resolver;
	  s.rootProps = options.rootProps || {};
	  s._allowRootPop = !!options.allowRootPop;
	  s._allowDuplicatePush = !!options.allowDuplicatePush;
	  s._defaultWay = options.defaultWay || 'NONE';

	  _events2.default.call(s);

	  if (s.root) {
	    s.pushView(s.root, s.rootProps, 'NONE');
	  }
	}

	Stacker.prototype = Object.assign({
	  _views: null,
	  _allowRootPop: false,
	  _allowDuplicatePush: false,
	  stackName: null,
	  /**
	   * Root view component.
	   */
	  root: null,
	  /**
	   * Component resolver function.
	   */
	  resolver: null,

	  /**
	   * Resolve a view component.
	   * @param component
	   * @returns {*}
	   */
	  resolve: function resolve(component) {
	    var s = this;
	    var shouldResolve = _iftype2.default.isString(component) && !!s.resolver;
	    if (shouldResolve) {
	      if (s.resolver.resolve) {
	        return s.resolver.resolve(component);
	      } else {
	        return s.resolver(component);
	      }
	    }
	    return component;
	  },

	  /**
	   * Push a view.
	   * @param {string|object} component - View component.
	   * @param {object} [params] - Params for view.
	   * @param {string} [way] - Transition way.
	   */
	  pushView: function pushView(component, params, way) {
	    var s = this;
	    var pushing = s.newView(component, params, way);
	    var top = s.topView();
	    var pushingViewName = pushing && pushing.getViewName();
	    var topViewName = top && top.getViewName();
	    var duplicate = pushingViewName && topViewName && pushingViewName === topViewName;
	    if (duplicate && !s._allowDuplicatePush) {
	      console.warn('Skip duplicate push: ' + topViewName);
	      return;
	    }
	    s._views.push(pushing);
	    s.emit('push', pushing, s);
	  },

	  /**
	   * Pop last view.
	   * @returns {StackerView|null}
	   */
	  popView: function popView() {
	    var s = this;
	    var size = s.size();

	    var isRoot = !!s.root && size === 1;
	    if (isRoot && !s._allowRootPop) {
	      return null;
	    }
	    var view = s._views.pop();
	    s.emit('pop', view, s);

	    return view || null;
	  },

	  /**
	   * Get view size.
	   * @returns {number}
	   */
	  size: function size() {
	    var s = this;
	    return s._views.length;
	  },

	  /**
	   * Get the top view.
	   * @returns {object}
	   */
	  topView: function topView() {
	    var s = this;
	    return s.viewAt(0);
	  },

	  /**
	   * Get view with index.
	   * @param {number} i - Index of the view.
	   * @returns {?object} view
	   */
	  viewAt: function viewAt(i) {
	    var s = this;
	    var size = s.size();
	    return s._views[size - 1 - i] || null;
	  },

	  /**
	   * Get all views.
	   * @returns {object[]} - Views
	   */
	  allViews: function allViews() {
	    var s = this;
	    return [].concat(s._views || []);
	  },

	  /**
	   * Get all pushed views.
	   * @returns {object[]} - Views
	   */
	  allPushedViews: function allPushedViews() {
	    var s = this;
	    var views = s.allViews();
	    if (s.root) {
	      return views.slice(1);
	    } else {
	      return views;
	    }
	  },

	  /**
	   * Check has any view.
	   * @returns {boolean} - Has view or not.
	   */
	  isEmpty: function isEmpty() {
	    var s = this;
	    return s.size() === 0;
	  },

	  /**
	   * Convert to URL
	   */
	  toURL: function toURL() {
	    var s = this;
	    var urls = [];
	    var params = [];
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = s.allPushedViews()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var view = _step.value;
	        var component = view.component;

	        var name = _iftype2.default.isString(component) ? component : component.viewName;
	        if (!name) {
	          continue;
	        }
	        urls.push(name);
	        params.push(view.params || {});
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    var result = urls.join('/');
	    var queryString = s._toQueryString(params);
	    if (queryString) {
	      result = [result, queryString].join('?');
	    }
	    return result;
	  },

	  /**
	   * Restore from URL
	   * @param {string} url - URL to restore.
	   */
	  fromURL: function fromURL(url) {
	    var s = this;

	    var _url$split = url.split('?');

	    var _url$split2 = _slicedToArray(_url$split, 2);

	    var pathname = _url$split2[0];
	    var queryString = _url$split2[1];

	    var params = s._fromQueryString(queryString) || {};
	    s._views = [];
	    if (s.root) {
	      var rootView = s.newView(s.root, s.rootProps, 'NONE');
	      s._views.push(rootView);
	    }
	    pathname.split(/\//g).forEach(function (name, i) {
	      if (name) {
	        var view = s.newView(name, params[i]);
	        s._views.push(view);
	      }
	    });
	  },

	  /**
	   * Reload stacks.
	   */
	  reload: function reload() {
	    var s = this;
	    s._views = [].concat(s._views || []);
	    s.emit('reload');
	  },

	  /**
	   * Reset views.
	   */
	  reset: function reset() {
	    var s = this;

	    var leaveRoot = !!s.root && !s._allowRootPop;
	    if (leaveRoot) {
	      s._views = [].concat(s._views[0] || []);
	    } else {
	      s._views = [];
	    }
	    s.reload();
	  },

	  /**
	   * Create a new view.
	   * @param {string|object} component - View component.
	   * @param {object} [params] - Params for view.
	   * @param {string} [way] - Transition way.
	   */
	  newView: function newView(component, params, way) {
	    var s = this;
	    return new _stacker_view2.default(s.resolve(component), params, way || s._defaultWay);
	  },
	  _toQueryString: function _toQueryString(params) {
	    var query = _objnest2.default.flatten(params);
	    return Object.keys(query).map(function (key) {
	      var paramKey = key.split(/\./g).map(function (key) {
	        return _stringcase2.default.spinalcase(key);
	      }).join('.');
	      return [paramKey, encodeURIComponent(query[key])].join('=');
	    }).join('&');
	  },
	  _fromQueryString: function _fromQueryString(queryString) {
	    if (!queryString) {
	      return null;
	    }
	    var query = {};
	    queryString.split('&').forEach(function (kv) {
	      var _kv$split = kv.split('=');

	      var _kv$split2 = _slicedToArray(_kv$split, 2);

	      var key = _kv$split2[0];
	      var value = _kv$split2[1];

	      var queryKey = key.split(/\./g).map(function (key) {
	        return _stringcase2.default.camelcase(key);
	      }).join('.');
	      query[queryKey] = decodeURIComponent(value);
	    });
	    return _objnest2.default.expand(query);
	  }
	}, _events2.default.prototype);

	Object.assign(Stacker, {
	  View: _stacker_view2.default
	});

	exports.default = Stacker;

/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * View for stacker.
	 * @class StackerView
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _uuid = __webpack_require__(38);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _assert = __webpack_require__(59);

	var _assert2 = _interopRequireDefault(_assert);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/* @lends StackerView */
	function StackerView(component, params, way) {
	  var s = this;
	  s.id = _uuid2.default.v4();
	  s.component = component;
	  s.params = params || {};
	  s.way = way || StackerView.ways[0];

	  s.validate();
	}

	StackerView.prototype = {
	  id: null,
	  component: null,
	  params: null,
	  way: null,
	  validate: function validate() {
	    var s = this;
	    var hasComponent = !!s.component;
	    _assert2.default.ok(hasComponent, 'component is required.');
	    var hasWay = !!~StackerView.ways.indexOf(s.way);
	    _assert2.default.ok(hasWay, 'Unknown way: ' + s.way);
	  },

	  /**
	   * Get name of component.
	   * @returns {?string} - Name of view.
	   */
	  getViewName: function getViewName() {
	    var s = this;
	    var component = s.component;

	    return component && component.viewName;
	  }
	};

	StackerView.ways = ['NONE', 'PUSH_LEFT', 'PULL_UP', 'FADE_IN'];

	exports.default = StackerView;

/***/ },
/* 634 */
[1111, 635, 636],
/* 635 */
[1112, 259],
/* 636 */
[1113, 259],
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Set alpha value
	 * @function alpha
	 * @param {string} color - Color value.
	 * @param {number} Alpha value. 0.00 to 1.00
	 * @returns {string}
	 */
	'use strict';

	var _require = __webpack_require__(27);

	var alpha = _require.alpha;

	module.exports = alpha;

/***/ },
/* 638 */
[1111, 639, 640],
/* 639 */
[1112, 152],
/* 640 */
[1113, 152],
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Detect dark or not
	 * @function isDark
	 * @param {string} color - Color value
	 * @returns {boolean}
	 */
	'use strict';

	var _require = __webpack_require__(27);

	var isDark = _require.isDark;

	module.exports = isDark;

/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Detect light or not
	 * @function isLight
	 * @param {string} color - Color value
	 * @returns {boolean}
	 */
	'use strict';

	var _require = __webpack_require__(27);

	var isLight = _require.isLight;

	module.exports = isLight;

/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * mix colors
	 * @function mix
	 * @param {string} color1 - Color value.
	 * @param {string} color2 - Color value.
	 * @returns {string}
	 */
	'use strict';

	var _require = __webpack_require__(27);

	var mix = _require.mix;

	module.exports = mix;

/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Parse a color
	 * @function parse
	 * @param {value} - Color value
	 * @returns {Object} - Parsed color instance.
	 */
	'use strict';

	var _require = __webpack_require__(27);

	var parse = _require.parse;

	module.exports = parse;

/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Parse arguments.
	 * @constructor Argx
	 * @param {Arguments} args - Function arguments
	 */

	'use strict';

	var iftype = __webpack_require__(133);
	var isNumber = __webpack_require__(648);

	/** @lends constructor */
	function Argx(args) {
	  var s = this;
	  s.values = Array.prototype.slice.call(args, 0);
	}

	Argx.prototype = {
	  /**
	   * Splice argument values.
	   * @param {number} start - Where to start
	   * @param {number} [howmany=1] - Number of value to get.
	   * @param {string} [type] - Type restriction.
	   */
	  splice: function splice(start, howmany, type) {
	    var s = this;

	    if (typeof arguments[1] !== 'number') {
	      if (isNumber(arguments[1])) {
	        howmany = Number(arguments[1]);
	      } else {
	        type = arguments[1];
	        howmany = 1;
	      }
	    }
	    howmany = howmany || 1;
	    if (start < 0) {
	      start += s.values.length;
	    }
	    var result = void 0;
	    var hitCount = 0;
	    for (var i = start + howmany - 1; i >= start; i--) {
	      var skipByType = type && !iftype(s.values[i]).is(type);
	      if (skipByType) {
	        break;
	      }
	      var spliced = s.values.splice(i, 1);
	      if (!spliced.length) {
	        break;
	      }
	      spliced = spliced[0];
	      switch (hitCount) {
	        case 0:
	          result = spliced;
	          break;
	        case 1:
	          result = [spliced, result];
	          break;
	        default:
	          result.unshift(spliced);
	          break;
	      }
	      hitCount += 1;
	    }
	    return result;
	  },

	  /**
	   * Pop values
	   * @param {number|string} [howmany=1] - Number of value to get.
	   * @param {string|function} [type] - Type restriction. Could be a name of type or a constructor.
	   * @returns {*} - Value. Array if multiple hits.
	   * @example
	   *  function doSomething() {
	     *      let args = argx(arguments)
	     *      args.pop()
	     *      args.pop(2)
	     *      args.pop('string')
	     *      args.pop(MyCustomError)
	     *  }
	   */
	  pop: function pop(howmany, type) {
	    var s = this;
	    var from = -Number(howmany);
	    if (isNaN(from)) {
	      from = -1;
	    }
	    return s.splice(from, howmany, type);
	  },

	  /**
	   * Shift values
	   * @param {number|string} [howmany=1] - Number of value to get.
	   * @param {string} [type] - Type restriction. Could be a name of type or a constructor.
	   * @returns {*} - Value. Array if multiple hits.
	   * @example
	   *  function doSomething() {
	     *      let args = argx(arguments)
	     *      args.shift()
	     *      args.shift(2)
	     *      args.shift('string')
	     *      args.shift(MyCustomError)
	     *  }
	   */
	  shift: function shift(howmany, type) {
	    var s = this;
	    return s.splice(0, howmany, type);
	  },

	  /**
	   * Get all remain values.
	   * @returns {Array}
	   */
	  remain: function remain() {
	    var s = this;
	    var values = s.values;
	    s.values = [];
	    return values;
	  }
	};

	module.exports = Argx;

/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Parse function arguments. Useful to implement variadic functions.
	 * @module argx
	 * @version 3.0.1
	 */

	'use strict';

	var Argx = __webpack_require__(645),
	    noop = __webpack_require__(647);

	/**
	 * Get value from arguments.
	 * @param {Arguments} args - Argument passed to your function.
	 * @returns {Argx} - Parser object.
	 */
	function argx(args) {
	  return new Argx(args);
	}

	argx.noop = noop;

	module.exports = argx;

/***/ },
/* 647 */
/***/ function(module, exports) {

	/**
	 * Function to do nothing.
	 * @memberof module:argx/lib
	 * @function noop
	 */

	'use strict';

	/** @lends noop */

	function noop() {
	  // Do nothing.
	}

	module.exports = noop;

/***/ },
/* 648 */
/***/ function(module, exports) {

	/**
	 * Detect is a number or not.
	 * @param {*} value - Value to check.
	 * @returns {boolean} - Is a number or not.
	 * @private
	 */

	'use strict';

	/** @lends _isNumber */

	function _isNumber(value) {
	  var notNumber = isNaN(Number(value));
	  if (notNumber) {
	    return false;
	  }
	  return !_isEmptyString(value) && !_isEmptyArray(value);
	}

	function _isEmptyString(value) {
	  return value === '';
	}

	function _isEmptyArray(value) {
	  return Array.isArray(value) && value.length === 0;
	}

	module.exports = _isNumber;

/***/ },
/* 649 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * An abstraction for slicing an arraybuffer even when
	 * ArrayBuffer.prototype.slice is not supported
	 *
	 * @api public
	 */

	module.exports = function (arraybuffer, start, end) {
	  var bytes = arraybuffer.byteLength;
	  start = start || 0;
	  end = end || bytes;

	  if (arraybuffer.slice) {
	    return arraybuffer.slice(start, end);
	  }

	  if (start < 0) {
	    start += bytes;
	  }
	  if (end < 0) {
	    end += bytes;
	  }
	  if (end > bytes) {
	    end = bytes;
	  }

	  if (start >= bytes || start >= end || bytes === 0) {
	    return new ArrayBuffer(0);
	  }

	  var abv = new Uint8Array(arraybuffer);
	  var result = new Uint8Array(end - start);
	  for (var i = start, ii = 0; i < end; i++, ii++) {
	    result[ii] = abv[i];
	  }
	  return result.buffer;
	};

/***/ },
/* 650 */
/***/ function(module, exports) {

	/**
	 * Create a filter function to reject empty.
	 * @memberof module:arrayfilter/lib
	 * @function duplicateReject
	 * @returns {function} - Filter function to reject duplicated entry.
	 */

	"use strict";

	/** @lends duplicateReject */

	function duplicateReject() {
	    if (arguments.length > 1) {
	        throw new Error('[duplicateReject] Invalid args.');
	    }
	    return function filter(entry, i, array) {
	        return array.indexOf(entry) === i;
	    };
	}

	module.exports = duplicateReject;

/***/ },
/* 651 */
/***/ function(module, exports) {

	/**
	 * Create a filter function to reject empty.
	 * @memberof module:arrayfilter/lib
	 * @function emptyReject
	 * @returns {function} - Filter function to reject the empty.
	 */

	"use strict";

	/** @lends emptyReject */

	function emptyReject() {
	    if (arguments.length > 1) {
	        throw new Error('[emptyReject] Invalid args.');
	    }
	    return function filter(value) {
	        return value !== null && typeof value !== 'undefined' && value !== '';
	    };
	}

	module.exports = emptyReject;

/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Array filtering utility.
	 * @module arrayfilter
	 */

	"use strict";

	module.exports = {
	    get duplicateReject() {
	        return __webpack_require__(650);
	    },
	    get emptyReject() {
	        return __webpack_require__(651);
	    },
	    get patternAccept() {
	        return __webpack_require__(653);
	    },
	    get patternReject() {
	        return __webpack_require__(654);
	    },
	    get typeAccept() {
	        return __webpack_require__(655);
	    },
	    get typeReject() {
	        return __webpack_require__(656);
	    }
	};

/***/ },
/* 653 */
/***/ function(module, exports) {

	/**
	 * Create a filter function to accept values matches a pattern.
	 * @memberof module:arrayfilter/lib
	 * @function patternAccept
	 * @param {string|RegExp} pattern - Pattern to accept.
	 * @returns {function} - Accept function to accept the pattern.
	 */

	"use strict";

	/** @lends patternAccept */

	function patternAccept(pattern) {
	    if (arguments.length > 1) {
	        throw new Error('[patternAccept] Invalid args.');
	    }
	    return function filter(value) {
	        return String(value).match(pattern);
	    };
	}

	module.exports = patternAccept;

/***/ },
/* 654 */
/***/ function(module, exports) {

	/**
	 * Create a filter function to reject values matches a pattern.
	 * @memberof module:arrayfilter/lib
	 * @function patternReject
	 * @param {string|RegExp} pattern - Pattern to reject.
	 * @returns {function} - Filter function to reject the pattern.
	 */

	"use strict";

	/** @lends patternReject */

	function patternReject(pattern) {
	    if (arguments.length > 1) {
	        throw new Error('[patternReject] Invalid args.');
	    }
	    return function filter(value) {
	        return !String(value).match(pattern);
	    };
	}

	module.exports = patternReject;

/***/ },
/* 655 */
/***/ function(module, exports) {

	/**
	 * Create a filter function to accept values matches type.
	 * @memberof module:arrayfilter/lib
	 * @function typeAccept
	 * @param {string} type - Type to match.
	 * @returns {function} - Accept function to accept the pattern.
	 */

	"use strict";

	/** @lends typeAccept */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	function typeAccept(type) {
	    if (arguments.length > 1) {
	        throw new Error('[typeAccept] Invalid args.');
	    }
	    return function filter(value) {
	        return (typeof value === "undefined" ? "undefined" : _typeof(value)) === type;
	    };
	}

	module.exports = typeAccept;

/***/ },
/* 656 */
/***/ function(module, exports) {

	/**
	 * Create a filter function to reject values matches type.
	 * @memberof module:arrayfilter/lib
	 * @function typeReject
	 * @param {string} type - Type to match.
	 * @returns {function} - Reject function to reject the pattern.
	 */

	"use strict";

	/** @lends typeReject */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	function typeReject(type) {
	    if (arguments.length > 1) {
	        throw new Error('[typeReject] Invalid args.');
	    }
	    return function filter(value) {
	        return (typeof value === "undefined" ? "undefined" : _typeof(value)) !== type;
	    };
	}

	module.exports = typeReject;

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Check if the env it development
	 * @function isDevelopment
	 * @returns {boolean} - Development or not
	 */
	'use strict';

	var _require = __webpack_require__(114);

	var DEVELOPMENT = _require.DEVELOPMENT;

	var getEnv = __webpack_require__(115);

	/** @lends isDevelopment */
	function isDevelopment() {
	  return getEnv() === DEVELOPMENT;
	}

	module.exports = isDevelopment;

/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Check if the env is production
	 * @function isProduction
	 * @returns {boolean} - Production or not
	 */
	'use strict';

	var _require = __webpack_require__(114);

	var PRODUCTION = _require.PRODUCTION;

	var getEnv = __webpack_require__(115);

	/** @lends isProduction */
	function isProduction() {
	  return getEnv() === PRODUCTION;
	}

	module.exports = isProduction;

/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Check if the env is test
	 * @function isTest
	 * @returns {boolean} - Test or not
	 */
	'use strict';

	var _require = __webpack_require__(114);

	var TEST = _require.TEST;

	var getEnv = __webpack_require__(115);

	/** @lends isTest */
	function isTest() {
	  return getEnv() === TEST;
	}

	module.exports = isTest;

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Set NODE_ENV value
	 * @function setEnv()
	 * @param {string} env - Env value
	 */
	'use strict';

	/** @lends setEnv */

	function setEnv(env) {
	  Object.assign(process.env, {
	    NODE_ENV: env && String(env).trim() || env
	  });
	}

	module.exports = setEnv;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 661 */
/***/ function(module, exports) {

	/**
	 * Clone a object
	 * @function clone
	 * @param {Object} src - Source object to clone
	 * @param {Object} [options={}] - Optional settings
	 * @returns {Object} - Cloned object
	 */
	'use strict';

	/** @lends clone */

	function clone(src) {
	  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	  var cloned = Object.assign({}, src);

	  var without = [].concat(options.without || []);
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;

	  try {
	    for (var _iterator = without[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var name = _step.value;

	      delete cloned[name];
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }

	  return cloned;
	}

	module.exports = clone;

/***/ },
/* 662 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Compare object deeply
	 * @function deepEqual
	 * @param {Object} obj1
	 * @param {Object} obj2
	 * @returns {boolean}
	 */
	'use strict';

	/** @lends deepEqual */

	module.exports = __webpack_require__(129);

/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * @function  shallowEqual
	 * @param {Object} obj1
	 * @param {Object} obj2
	 * @returns {boolean}
	 */
	'use strict';

	/** @lends shallowEqual */

	module.exports = __webpack_require__(664);

/***/ },
/* 664 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 665 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, setImmediate, process) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.async = global.async || {});
	})(undefined, function (exports) {
	    'use strict';

	    /**
	     * A faster alternative to `Function#apply`, this function invokes `func`
	     * with the `this` binding of `thisArg` and the arguments of `args`.
	     *
	     * @private
	     * @param {Function} func The function to invoke.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} args The arguments to invoke `func` with.
	     * @returns {*} Returns the result of `func`.
	     */

	    function apply(func, thisArg, args) {
	        var length = args.length;
	        switch (length) {
	            case 0:
	                return func.call(thisArg);
	            case 1:
	                return func.call(thisArg, args[0]);
	            case 2:
	                return func.call(thisArg, args[0], args[1]);
	            case 3:
	                return func.call(thisArg, args[0], args[1], args[2]);
	        }
	        return func.apply(thisArg, args);
	    }

	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	        var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	        return !!value && (type == 'object' || type == 'function');
	    }

	    var funcTag = '[object Function]';
	    var genTag = '[object GeneratorFunction]';
	    /** Used for built-in method references. */
	    var objectProto = Object.prototype;

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString = objectProto.toString;

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	        // The use of `Object#toString` avoids issues with the `typeof` operator
	        // in Safari 8 which returns 'object' for typed array and weak map constructors,
	        // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	        var tag = isObject(value) ? objectToString.call(value) : '';
	        return tag == funcTag || tag == genTag;
	    }

	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	        return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';
	    }

	    /** `Object#toString` result references. */
	    var symbolTag = '[object Symbol]';

	    /** Used for built-in method references. */
	    var objectProto$1 = Object.prototype;

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString$1 = objectProto$1.toString;

	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	        return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'symbol' || isObjectLike(value) && objectToString$1.call(value) == symbolTag;
	    }

	    /** Used as references for various `Number` constants. */
	    var NAN = 0 / 0;

	    /** Used to match leading and trailing whitespace. */
	    var reTrim = /^\s+|\s+$/g;

	    /** Used to detect bad signed hexadecimal string values. */
	    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	    /** Used to detect binary string values. */
	    var reIsBinary = /^0b[01]+$/i;

	    /** Used to detect octal string values. */
	    var reIsOctal = /^0o[0-7]+$/i;

	    /** Built-in method references without a dependency on `root`. */
	    var freeParseInt = parseInt;

	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */
	    function toNumber(value) {
	        if (typeof value == 'number') {
	            return value;
	        }
	        if (isSymbol(value)) {
	            return NAN;
	        }
	        if (isObject(value)) {
	            var other = isFunction(value.valueOf) ? value.valueOf() : value;
	            value = isObject(other) ? other + '' : other;
	        }
	        if (typeof value != 'string') {
	            return value === 0 ? value : +value;
	        }
	        value = value.replace(reTrim, '');
	        var isBinary = reIsBinary.test(value);
	        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
	    }

	    var INFINITY = 1 / 0;
	    var MAX_INTEGER = 1.7976931348623157e+308;
	    /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */
	    function toFinite(value) {
	        if (!value) {
	            return value === 0 ? value : 0;
	        }
	        value = toNumber(value);
	        if (value === INFINITY || value === -INFINITY) {
	            var sign = value < 0 ? -1 : 1;
	            return sign * MAX_INTEGER;
	        }
	        return value === value ? value : 0;
	    }

	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */
	    function toInteger(value) {
	        var result = toFinite(value),
	            remainder = result % 1;

	        return result === result ? remainder ? result - remainder : result : 0;
	    }

	    /** Used as the `TypeError` message for "Functions" methods. */
	    var FUNC_ERROR_TEXT = 'Expected a function';

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeMax = Math.max;

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	        if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        start = nativeMax(start === undefined ? func.length - 1 : toInteger(start), 0);
	        return function () {
	            var args = arguments,
	                index = -1,
	                length = nativeMax(args.length - start, 0),
	                array = Array(length);

	            while (++index < length) {
	                array[index] = args[start + index];
	            }
	            switch (start) {
	                case 0:
	                    return func.call(this, array);
	                case 1:
	                    return func.call(this, args[0], array);
	                case 2:
	                    return func.call(this, args[0], args[1], array);
	            }
	            var otherArgs = Array(start + 1);
	            index = -1;
	            while (++index < start) {
	                otherArgs[index] = args[index];
	            }
	            otherArgs[start] = array;
	            return apply(func, this, otherArgs);
	        };
	    }

	    function initialParams(fn) {
	        return rest(function (args /*..., callback*/) {
	            var callback = args.pop();
	            fn.call(this, args, callback);
	        });
	    }

	    function applyEach$1(eachfn) {
	        return rest(function (fns, args) {
	            var go = initialParams(function (args, callback) {
	                var that = this;
	                return eachfn(fns, function (fn, cb) {
	                    fn.apply(that, args.concat([cb]));
	                }, callback);
	            });
	            if (args.length) {
	                return go.apply(this, args);
	            } else {
	                return go;
	            }
	        });
	    }

	    /**
	     * The base implementation of `_.property` without support for deep paths.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */
	    function baseProperty(key) {
	        return function (object) {
	            return object == null ? undefined : object[key];
	        };
	    }

	    /**
	     * Gets the "length" property value of `object`.
	     *
	     * **Note:** This function is used to avoid a
	     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	     * Safari on at least iOS 8.1-8.3 ARM64.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {*} Returns the "length" value.
	     */
	    var getLength = baseProperty('length');

	    /** Used as references for various `Number` constants. */
	    var MAX_SAFE_INTEGER = 9007199254740991;

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length,
	     *  else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	        return value != null && isLength(getLength(value)) && !isFunction(value);
	    }

	    /**
	     * A method that returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */
	    function noop() {
	        // No operation performed.
	    }

	    function once(fn) {
	        return function () {
	            if (fn === null) return;
	            var callFn = fn;
	            fn = null;
	            callFn.apply(this, arguments);
	        };
	    }

	    var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;

	    function getIterator(coll) {
	        return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();
	    }

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeGetPrototype = Object.getPrototypeOf;

	    /**
	     * Gets the `[[Prototype]]` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {null|Object} Returns the `[[Prototype]]`.
	     */
	    function getPrototype(value) {
	        return nativeGetPrototype(Object(value));
	    }

	    /** Used for built-in method references. */
	    var objectProto$2 = Object.prototype;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto$2.hasOwnProperty;

	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	        // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	        // that are composed entirely of index properties, return `false` for
	        // `hasOwnProperty` checks of them.
	        return object != null && (hasOwnProperty.call(object, key) || (typeof object === 'undefined' ? 'undefined' : _typeof(object)) == 'object' && key in object && getPrototype(object) === null);
	    }

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeKeys = Object.keys;

	    /**
	     * The base implementation of `_.keys` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	        return nativeKeys(Object(object));
	    }

	    /**
	     * The base implementation of `_.times` without support for iteratee shorthands
	     * or max array length checks.
	     *
	     * @private
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     */
	    function baseTimes(n, iteratee) {
	        var index = -1,
	            result = Array(n);

	        while (++index < n) {
	            result[index] = iteratee(index);
	        }
	        return result;
	    }

	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	        return isObjectLike(value) && isArrayLike(value);
	    }

	    /** `Object#toString` result references. */
	    var argsTag = '[object Arguments]';

	    /** Used for built-in method references. */
	    var objectProto$3 = Object.prototype;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty$1 = objectProto$3.hasOwnProperty;

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString$2 = objectProto$3.toString;

	    /** Built-in value references. */
	    var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;

	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    function isArguments(value) {
	        // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	        return isArrayLikeObject(value) && hasOwnProperty$1.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString$2.call(value) == argsTag);
	    }

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @type {Function}
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;

	    /** `Object#toString` result references. */
	    var stringTag = '[object String]';

	    /** Used for built-in method references. */
	    var objectProto$4 = Object.prototype;

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString$3 = objectProto$4.toString;

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	        return typeof value == 'string' || !isArray(value) && isObjectLike(value) && objectToString$3.call(value) == stringTag;
	    }

	    /**
	     * Creates an array of index keys for `object` values of arrays,
	     * `arguments` objects, and strings, otherwise `null` is returned.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array|null} Returns index keys, else `null`.
	     */
	    function indexKeys(object) {
	        var length = object ? object.length : undefined;
	        if (isLength(length) && (isArray(object) || isString(object) || isArguments(object))) {
	            return baseTimes(length, String);
	        }
	        return null;
	    }

	    /** Used as references for various `Number` constants. */
	    var MAX_SAFE_INTEGER$1 = 9007199254740991;

	    /** Used to detect unsigned integer values. */
	    var reIsUint = /^(?:0|[1-9]\d*)$/;

	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	        length = length == null ? MAX_SAFE_INTEGER$1 : length;
	        return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
	    }

	    /** Used for built-in method references. */
	    var objectProto$5 = Object.prototype;

	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	        var Ctor = value && value.constructor,
	            proto = typeof Ctor == 'function' && Ctor.prototype || objectProto$5;

	        return value === proto;
	    }

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	        var isProto = isPrototype(object);
	        if (!(isProto || isArrayLike(object))) {
	            return baseKeys(object);
	        }
	        var indexes = indexKeys(object),
	            skipIndexes = !!indexes,
	            result = indexes || [],
	            length = result.length;

	        for (var key in object) {
	            if (baseHas(object, key) && !(skipIndexes && (key == 'length' || isIndex(key, length))) && !(isProto && key == 'constructor')) {
	                result.push(key);
	            }
	        }
	        return result;
	    }

	    function createArrayIterator(coll) {
	        var i = -1;
	        var len = coll.length;
	        return function next() {
	            return ++i < len ? { value: coll[i], key: i } : null;
	        };
	    }

	    function createES2015Iterator(iterator) {
	        var i = -1;
	        return function next() {
	            var item = iterator.next();
	            if (item.done) return null;
	            i++;
	            return { value: item.value, key: i };
	        };
	    }

	    function createObjectIterator(obj) {
	        var okeys = keys(obj);
	        var i = -1;
	        var len = okeys.length;
	        return function next() {
	            var key = okeys[++i];
	            return i < len ? { value: obj[key], key: key } : null;
	        };
	    }

	    function iterator(coll) {
	        if (isArrayLike(coll)) {
	            return createArrayIterator(coll);
	        }

	        var iterator = getIterator(coll);
	        return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);
	    }

	    function onlyOnce(fn) {
	        return function () {
	            if (fn === null) throw new Error("Callback was already called.");
	            var callFn = fn;
	            fn = null;
	            callFn.apply(this, arguments);
	        };
	    }

	    function _eachOfLimit(limit) {
	        return function (obj, iteratee, callback) {
	            callback = once(callback || noop);
	            if (limit <= 0 || !obj) {
	                return callback(null);
	            }
	            var nextElem = iterator(obj);
	            var done = false;
	            var running = 0;

	            function iterateeCallback(err) {
	                running -= 1;
	                if (err) {
	                    done = true;
	                    callback(err);
	                } else if (done && running <= 0) {
	                    return callback(null);
	                } else {
	                    replenish();
	                }
	            }

	            function replenish() {
	                while (running < limit && !done) {
	                    var elem = nextElem();
	                    if (elem === null) {
	                        done = true;
	                        if (running <= 0) {
	                            callback(null);
	                        }
	                        return;
	                    }
	                    running += 1;
	                    iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));
	                }
	            }

	            replenish();
	        };
	    }

	    /**
	     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a
	     * time.
	     *
	     * @name eachOfLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.eachOf]{@link module:Collections.eachOf}
	     * @alias forEachOfLimit
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A function to apply to each
	     * item in `coll`. The `key` is the item's key, or index in the case of an
	     * array. The iteratee is passed a `callback(err)` which must be called once it
	     * has completed. If no error has occurred, the callback should be run without
	     * arguments or with an explicit `null` argument. Invoked with
	     * (item, key, callback).
	     * @param {Function} [callback] - A callback which is called when all
	     * `iteratee` functions have finished, or an error occurs. Invoked with (err).
	     */
	    function eachOfLimit(coll, limit, iteratee, callback) {
	        _eachOfLimit(limit)(coll, iteratee, callback);
	    }

	    function doLimit(fn, limit) {
	        return function (iterable, iteratee, callback) {
	            return fn(iterable, limit, iteratee, callback);
	        };
	    }

	    /** Used as the `TypeError` message for "Functions" methods. */
	    var FUNC_ERROR_TEXT$1 = 'Expected a function';

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => allows adding up to 4 contacts to the list
	     */
	    function before(n, func) {
	        var result;
	        if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT$1);
	        }
	        n = toInteger(n);
	        return function () {
	            if (--n > 0) {
	                result = func.apply(this, arguments);
	            }
	            if (n <= 1) {
	                func = undefined;
	            }
	            return result;
	        };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // `initialize` invokes `createApplication` once
	     */
	    function once$1(func) {
	        return before(2, func);
	    }

	    // eachOf implementation optimized for array-likes
	    function eachOfArrayLike(coll, iteratee, callback) {
	        callback = once$1(callback || noop);
	        var index = 0,
	            completed = 0,
	            length = coll.length;
	        if (length === 0) {
	            callback(null);
	        }

	        function iteratorCallback(err) {
	            if (err) {
	                callback(err);
	            } else if (++completed === length) {
	                callback(null);
	            }
	        }

	        for (; index < length; index++) {
	            iteratee(coll[index], index, onlyOnce(iteratorCallback));
	        }
	    }

	    // a generic version of eachOf which can handle array, object, and iterator cases.
	    var eachOfGeneric = doLimit(eachOfLimit, Infinity);

	    /**
	     * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument
	     * to the iteratee.
	     *
	     * @name eachOf
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @alias forEachOf
	     * @category Collection
	     * @see [async.each]{@link module:Collections.each}
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each
	     * item in `coll`. The `key` is the item's key, or index in the case of an
	     * array. The iteratee is passed a `callback(err)` which must be called once it
	     * has completed. If no error has occurred, the callback should be run without
	     * arguments or with an explicit `null` argument. Invoked with
	     * (item, key, callback).
	     * @param {Function} [callback] - A callback which is called when all
	     * `iteratee` functions have finished, or an error occurs. Invoked with (err).
	     * @example
	     *
	     * var obj = {dev: "/dev.json", test: "/test.json", prod: "/prod.json"};
	     * var configs = {};
	     *
	     * async.forEachOf(obj, function (value, key, callback) {
	     *     fs.readFile(__dirname + value, "utf8", function (err, data) {
	     *         if (err) return callback(err);
	     *         try {
	     *             configs[key] = JSON.parse(data);
	     *         } catch (e) {
	     *             return callback(e);
	     *         }
	     *         callback();
	     *     });
	     * }, function (err) {
	     *     if (err) console.error(err.message);
	     *     // configs is now a map of JSON data
	     *     doSomethingWith(configs);
	     * });
	     */
	    function eachOf(coll, iteratee, callback) {
	        var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;
	        eachOfImplementation(coll, iteratee, callback);
	    }

	    function doParallel(fn) {
	        return function (obj, iteratee, callback) {
	            return fn(eachOf, obj, iteratee, callback);
	        };
	    }

	    function _asyncMap(eachfn, arr, iteratee, callback) {
	        callback = once(callback || noop);
	        arr = arr || [];
	        var results = [];
	        var counter = 0;

	        eachfn(arr, function (value, _, callback) {
	            var index = counter++;
	            iteratee(value, function (err, v) {
	                results[index] = v;
	                callback(err);
	            });
	        }, function (err) {
	            callback(err, results);
	        });
	    }

	    /**
	     * Produces a new collection of values by mapping each value in `coll` through
	     * the `iteratee` function. The `iteratee` is called with an item from `coll`
	     * and a callback for when it has finished processing. Each of these callback
	     * takes 2 arguments: an `error`, and the transformed item from `coll`. If
	     * `iteratee` passes an error to its callback, the main `callback` (for the
	     * `map` function) is immediately called with the error.
	     *
	     * Note, that since this function applies the `iteratee` to each item in
	     * parallel, there is no guarantee that the `iteratee` functions will complete
	     * in order. However, the results array will be in the same order as the
	     * original `coll`.
	     *
	     * If `map` is passed an Object, the results will be an Array.  The results
	     * will roughly be in the order of the original Objects' keys (but this can
	     * vary across JavaScript engines)
	     *
	     * @name map
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, transformed)` which must be called
	     * once it has completed with an error (which can be `null`) and a
	     * transformed item. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called when all `iteratee`
	     * functions have finished, or an error occurs. Results is an Array of the
	     * transformed items from the `coll`. Invoked with (err, results).
	     * @example
	     *
	     * async.map(['file1','file2','file3'], fs.stat, function(err, results) {
	     *     // results is now an array of stats for each file
	     * });
	     */
	    var map = doParallel(_asyncMap);

	    /**
	     * Applies the provided arguments to each function in the array, calling
	     * `callback` after all functions have completed. If you only provide the first
	     * argument, then it will return a function which lets you pass in the
	     * arguments as if it were a single function call.
	     *
	     * @name applyEach
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all
	     * call with the same arguments
	     * @param {...*} [args] - any number of separate arguments to pass to the
	     * function.
	     * @param {Function} [callback] - the final argument should be the callback,
	     * called when all functions have completed processing.
	     * @returns {Function} - If only the first argument is provided, it will return
	     * a function which lets you pass in the arguments as if it were a single
	     * function call.
	     * @example
	     *
	     * async.applyEach([enableSearch, updateSchema], 'bucket', callback);
	     *
	     * // partial application example:
	     * async.each(
	     *     buckets,
	     *     async.applyEach([enableSearch, updateSchema]),
	     *     callback
	     * );
	     */
	    var applyEach = applyEach$1(map);

	    function doParallelLimit(fn) {
	        return function (obj, limit, iteratee, callback) {
	            return fn(_eachOfLimit(limit), obj, iteratee, callback);
	        };
	    }

	    /**
	     * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.
	     *
	     * @name mapLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.map]{@link module:Collections.map}
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A function to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, transformed)` which must be called
	     * once it has completed with an error (which can be `null`) and a transformed
	     * item. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called when all `iteratee`
	     * functions have finished, or an error occurs. Results is an array of the
	     * transformed items from the `coll`. Invoked with (err, results).
	     */
	    var mapLimit = doParallelLimit(_asyncMap);

	    /**
	     * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.
	     *
	     * @name mapSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.map]{@link module:Collections.map}
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, transformed)` which must be called
	     * once it has completed with an error (which can be `null`) and a
	     * transformed item. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called when all `iteratee`
	     * functions have finished, or an error occurs. Results is an array of the
	     * transformed items from the `coll`. Invoked with (err, results).
	     */
	    var mapSeries = doLimit(mapLimit, 1);

	    /**
	     * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.
	     *
	     * @name applyEachSeries
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.applyEach]{@link module:ControlFlow.applyEach}
	     * @category Control Flow
	     * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all
	     * call with the same arguments
	     * @param {...*} [args] - any number of separate arguments to pass to the
	     * function.
	     * @param {Function} [callback] - the final argument should be the callback,
	     * called when all functions have completed processing.
	     * @returns {Function} - If only the first argument is provided, it will return
	     * a function which lets you pass in the arguments as if it were a single
	     * function call.
	     */
	    var applyEachSeries = applyEach$1(mapSeries);

	    /**
	     * Creates a continuation function with some arguments already applied.
	     *
	     * Useful as a shorthand when combined with other control flow functions. Any
	     * arguments passed to the returned function are added to the arguments
	     * originally passed to apply.
	     *
	     * @name apply
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {Function} function - The function you want to eventually apply all
	     * arguments to. Invokes with (arguments...).
	     * @param {...*} arguments... - Any number of arguments to automatically apply
	     * when the continuation is called.
	     * @example
	     *
	     * // using apply
	     * async.parallel([
	     *     async.apply(fs.writeFile, 'testfile1', 'test1'),
	     *     async.apply(fs.writeFile, 'testfile2', 'test2')
	     * ]);
	     *
	     *
	     * // the same process without using apply
	     * async.parallel([
	     *     function(callback) {
	     *         fs.writeFile('testfile1', 'test1', callback);
	     *     },
	     *     function(callback) {
	     *         fs.writeFile('testfile2', 'test2', callback);
	     *     }
	     * ]);
	     *
	     * // It's possible to pass any number of additional arguments when calling the
	     * // continuation:
	     *
	     * node> var fn = async.apply(sys.puts, 'one');
	     * node> fn('two', 'three');
	     * one
	     * two
	     * three
	     */
	    var apply$1 = rest(function (fn, args) {
	        return rest(function (callArgs) {
	            return fn.apply(null, args.concat(callArgs));
	        });
	    });

	    /**
	     * Take a sync function and make it async, passing its return value to a
	     * callback. This is useful for plugging sync functions into a waterfall,
	     * series, or other async functions. Any arguments passed to the generated
	     * function will be passed to the wrapped function (except for the final
	     * callback argument). Errors thrown will be passed to the callback.
	     *
	     * If the function passed to `asyncify` returns a Promise, that promises's
	     * resolved/rejected state will be used to call the callback, rather than simply
	     * the synchronous return value.
	     *
	     * This also means you can asyncify ES2016 `async` functions.
	     *
	     * @name asyncify
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @alias wrapSync
	     * @category Util
	     * @param {Function} func - The synchronous function to convert to an
	     * asynchronous function.
	     * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with
	     * (callback).
	     * @example
	     *
	     * // passing a regular synchronous function
	     * async.waterfall([
	     *     async.apply(fs.readFile, filename, "utf8"),
	     *     async.asyncify(JSON.parse),
	     *     function (data, next) {
	     *         // data is the result of parsing the text.
	     *         // If there was a parsing error, it would have been caught.
	     *     }
	     * ], callback);
	     *
	     * // passing a function returning a promise
	     * async.waterfall([
	     *     async.apply(fs.readFile, filename, "utf8"),
	     *     async.asyncify(function (contents) {
	     *         return db.model.create(contents);
	     *     }),
	     *     function (model, next) {
	     *         // `model` is the instantiated model object.
	     *         // If there was an error, this function would be skipped.
	     *     }
	     * ], callback);
	     *
	     * // es6 example
	     * var q = async.queue(async.asyncify(async function(file) {
	     *     var intermediateStep = await processFile(file);
	     *     return await somePromise(intermediateStep)
	     * }));
	     *
	     * q.push(files);
	     */
	    function asyncify(func) {
	        return initialParams(function (args, callback) {
	            var result;
	            try {
	                result = func.apply(this, args);
	            } catch (e) {
	                return callback(e);
	            }
	            // if result is Promise object
	            if (isObject(result) && typeof result.then === 'function') {
	                result.then(function (value) {
	                    callback(null, value);
	                }, function (err) {
	                    callback(err.message ? err : new Error(err));
	                });
	            } else {
	                callback(null, result);
	            }
	        });
	    }

	    /**
	     * A specialized version of `_.forEach` for arrays without support for
	     * iteratee shorthands.
	     *
	     * @private
	     * @param {Array} [array] The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns `array`.
	     */
	    function arrayEach(array, iteratee) {
	        var index = -1,
	            length = array ? array.length : 0;

	        while (++index < length) {
	            if (iteratee(array[index], index, array) === false) {
	                break;
	            }
	        }
	        return array;
	    }

	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	        return function (object, iteratee, keysFunc) {
	            var index = -1,
	                iterable = Object(object),
	                props = keysFunc(object),
	                length = props.length;

	            while (length--) {
	                var key = props[fromRight ? length : ++index];
	                if (iteratee(iterable[key], key, iterable) === false) {
	                    break;
	                }
	            }
	            return object;
	        };
	    }

	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	        return object && baseFor(object, iteratee, keys);
	    }

	    /**
	     * Gets the index at which the first occurrence of `NaN` is found in `array`.
	     *
	     * @private
	     * @param {Array} array The array to search.
	     * @param {number} fromIndex The index to search from.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	     */
	    function indexOfNaN(array, fromIndex, fromRight) {
	        var length = array.length,
	            index = fromIndex + (fromRight ? 1 : -1);

	        while (fromRight ? index-- : ++index < length) {
	            var other = array[index];
	            if (other !== other) {
	                return index;
	            }
	        }
	        return -1;
	    }

	    /**
	     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	     *
	     * @private
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} fromIndex The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function baseIndexOf(array, value, fromIndex) {
	        if (value !== value) {
	            return indexOfNaN(array, fromIndex);
	        }
	        var index = fromIndex - 1,
	            length = array.length;

	        while (++index < length) {
	            if (array[index] === value) {
	                return index;
	            }
	        }
	        return -1;
	    }

	    /**
	     * Determines the best order for running the functions in `tasks`, based on
	     * their requirements. Each function can optionally depend on other functions
	     * being completed first, and each function is run as soon as its requirements
	     * are satisfied.
	     *
	     * If any of the functions pass an error to their callback, the `auto` sequence
	     * will stop. Further tasks will not execute (so any other functions depending
	     * on it will not run), and the main `callback` is immediately called with the
	     * error.
	     *
	     * Functions also receive an object containing the results of functions which
	     * have completed so far as the first argument, if they have dependencies. If a
	     * task function has no dependencies, it will only be passed a callback.
	     *
	     * @name auto
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Object} tasks - An object. Each of its properties is either a
	     * function or an array of requirements, with the function itself the last item
	     * in the array. The object's key of a property serves as the name of the task
	     * defined by that property, i.e. can be used when specifying requirements for
	     * other tasks. The function receives one or two arguments:
	     * * a `results` object, containing the results of the previously executed
	     *   functions, only passed if the task has any dependencies,
	     * * a `callback(err, result)` function, which must be called when finished,
	     *   passing an `error` (which can be `null`) and the result of the function's
	     *   execution.
	     * @param {number} [concurrency=Infinity] - An optional `integer` for
	     * determining the maximum number of tasks that can be run in parallel. By
	     * default, as many as possible.
	     * @param {Function} [callback] - An optional callback which is called when all
	     * the tasks have been completed. It receives the `err` argument if any `tasks`
	     * pass an error to their callback. Results are always returned; however, if an
	     * error occurs, no further `tasks` will be performed, and the results object
	     * will only contain partial results. Invoked with (err, results).
	     * @returns undefined
	     * @example
	     *
	     * async.auto({
	     *     // this function will just be passed a callback
	     *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),
	     *     showData: ['readData', function(results, cb) {
	     *         // results.readData is the file's contents
	     *         // ...
	     *     }]
	     * }, callback);
	     *
	     * async.auto({
	     *     get_data: function(callback) {
	     *         console.log('in get_data');
	     *         // async code to get some data
	     *         callback(null, 'data', 'converted to array');
	     *     },
	     *     make_folder: function(callback) {
	     *         console.log('in make_folder');
	     *         // async code to create a directory to store a file in
	     *         // this is run at the same time as getting the data
	     *         callback(null, 'folder');
	     *     },
	     *     write_file: ['get_data', 'make_folder', function(results, callback) {
	     *         console.log('in write_file', JSON.stringify(results));
	     *         // once there is some data and the directory exists,
	     *         // write the data to a file in the directory
	     *         callback(null, 'filename');
	     *     }],
	     *     email_link: ['write_file', function(results, callback) {
	     *         console.log('in email_link', JSON.stringify(results));
	     *         // once the file is written let's email a link to it...
	     *         // results.write_file contains the filename returned by write_file.
	     *         callback(null, {'file':results.write_file, 'email':'user@example.com'});
	     *     }]
	     * }, function(err, results) {
	     *     console.log('err = ', err);
	     *     console.log('results = ', results);
	     * });
	     */
	    function auto(tasks, concurrency, callback) {
	        if (typeof concurrency === 'function') {
	            // concurrency is optional, shift the args.
	            callback = concurrency;
	            concurrency = null;
	        }
	        callback = once(callback || noop);
	        var keys$$ = keys(tasks);
	        var numTasks = keys$$.length;
	        if (!numTasks) {
	            return callback(null);
	        }
	        if (!concurrency) {
	            concurrency = numTasks;
	        }

	        var results = {};
	        var runningTasks = 0;
	        var hasError = false;

	        var listeners = {};

	        var readyTasks = [];

	        // for cycle detection:
	        var readyToCheck = []; // tasks that have been identified as reachable
	        // without the possibility of returning to an ancestor task
	        var uncheckedDependencies = {};

	        baseForOwn(tasks, function (task, key) {
	            if (!isArray(task)) {
	                // no dependencies
	                enqueueTask(key, [task]);
	                readyToCheck.push(key);
	                return;
	            }

	            var dependencies = task.slice(0, task.length - 1);
	            var remainingDependencies = dependencies.length;
	            if (remainingDependencies === 0) {
	                enqueueTask(key, task);
	                readyToCheck.push(key);
	                return;
	            }
	            uncheckedDependencies[key] = remainingDependencies;

	            arrayEach(dependencies, function (dependencyName) {
	                if (!tasks[dependencyName]) {
	                    throw new Error('async.auto task `' + key + '` has a non-existent dependency in ' + dependencies.join(', '));
	                }
	                addListener(dependencyName, function () {
	                    remainingDependencies--;
	                    if (remainingDependencies === 0) {
	                        enqueueTask(key, task);
	                    }
	                });
	            });
	        });

	        checkForDeadlocks();
	        processQueue();

	        function enqueueTask(key, task) {
	            readyTasks.push(function () {
	                runTask(key, task);
	            });
	        }

	        function processQueue() {
	            if (readyTasks.length === 0 && runningTasks === 0) {
	                return callback(null, results);
	            }
	            while (readyTasks.length && runningTasks < concurrency) {
	                var run = readyTasks.shift();
	                run();
	            }
	        }

	        function addListener(taskName, fn) {
	            var taskListeners = listeners[taskName];
	            if (!taskListeners) {
	                taskListeners = listeners[taskName] = [];
	            }

	            taskListeners.push(fn);
	        }

	        function taskComplete(taskName) {
	            var taskListeners = listeners[taskName] || [];
	            arrayEach(taskListeners, function (fn) {
	                fn();
	            });
	            processQueue();
	        }

	        function runTask(key, task) {
	            if (hasError) return;

	            var taskCallback = onlyOnce(rest(function (err, args) {
	                runningTasks--;
	                if (args.length <= 1) {
	                    args = args[0];
	                }
	                if (err) {
	                    var safeResults = {};
	                    baseForOwn(results, function (val, rkey) {
	                        safeResults[rkey] = val;
	                    });
	                    safeResults[key] = args;
	                    hasError = true;
	                    listeners = [];

	                    callback(err, safeResults);
	                } else {
	                    results[key] = args;
	                    taskComplete(key);
	                }
	            }));

	            runningTasks++;
	            var taskFn = task[task.length - 1];
	            if (task.length > 1) {
	                taskFn(results, taskCallback);
	            } else {
	                taskFn(taskCallback);
	            }
	        }

	        function checkForDeadlocks() {
	            // Kahn's algorithm
	            // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm
	            // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html
	            var currentTask;
	            var counter = 0;
	            while (readyToCheck.length) {
	                currentTask = readyToCheck.pop();
	                counter++;
	                arrayEach(getDependents(currentTask), function (dependent) {
	                    if (--uncheckedDependencies[dependent] === 0) {
	                        readyToCheck.push(dependent);
	                    }
	                });
	            }

	            if (counter !== numTasks) {
	                throw new Error('async.auto cannot execute tasks due to a recursive dependency');
	            }
	        }

	        function getDependents(taskName) {
	            var result = [];
	            baseForOwn(tasks, function (task, key) {
	                if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {
	                    result.push(key);
	                }
	            });
	            return result;
	        }
	    }

	    /**
	     * A specialized version of `_.map` for arrays without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} [array] The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function arrayMap(array, iteratee) {
	        var index = -1,
	            length = array ? array.length : 0,
	            result = Array(length);

	        while (++index < length) {
	            result[index] = iteratee(array[index], index, array);
	        }
	        return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	        var index = -1,
	            length = source.length;

	        array || (array = Array(length));
	        while (++index < length) {
	            array[index] = source[index];
	        }
	        return array;
	    }

	    /**
	     * Checks if `value` is a global object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	     */
	    function checkGlobal(value) {
	        return value && value.Object === Object ? value : null;
	    }

	    /** Detect free variable `global` from Node.js. */
	    var freeGlobal = checkGlobal((typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global);

	    /** Detect free variable `self`. */
	    var freeSelf = checkGlobal((typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self);

	    /** Detect `this` as the global object. */
	    var thisGlobal = checkGlobal(_typeof(this) == 'object' && this);

	    /** Used as a reference to the global object. */
	    var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();

	    /** Built-in value references. */
	    var Symbol$1 = root.Symbol;

	    /** Used as references for various `Number` constants. */
	    var INFINITY$1 = 1 / 0;

	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;
	    var symbolToString = symbolProto ? symbolProto.toString : undefined;
	    /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */
	    function baseToString(value) {
	        // Exit early for strings to avoid a performance hit in some environments.
	        if (typeof value == 'string') {
	            return value;
	        }
	        if (isSymbol(value)) {
	            return symbolToString ? symbolToString.call(value) : '';
	        }
	        var result = value + '';
	        return result == '0' && 1 / value == -INFINITY$1 ? '-0' : result;
	    }

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	        var index = -1,
	            length = array.length;

	        if (start < 0) {
	            start = -start > length ? 0 : length + start;
	        }
	        end = end > length ? length : end;
	        if (end < 0) {
	            end += length;
	        }
	        length = start > end ? 0 : end - start >>> 0;
	        start >>>= 0;

	        var result = Array(length);
	        while (++index < length) {
	            result[index] = array[index + start];
	        }
	        return result;
	    }

	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	        var length = array.length;
	        end = end === undefined ? length : end;
	        return !start && end >= length ? array : baseSlice(array, start, end);
	    }

	    /**
	     * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	     * that is not found in the character symbols.
	     *
	     * @private
	     * @param {Array} strSymbols The string symbols to inspect.
	     * @param {Array} chrSymbols The character symbols to find.
	     * @returns {number} Returns the index of the last unmatched string symbol.
	     */
	    function charsEndIndex(strSymbols, chrSymbols) {
	        var index = strSymbols.length;

	        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	        return index;
	    }

	    /**
	     * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	     * that is not found in the character symbols.
	     *
	     * @private
	     * @param {Array} strSymbols The string symbols to inspect.
	     * @param {Array} chrSymbols The character symbols to find.
	     * @returns {number} Returns the index of the first unmatched string symbol.
	     */
	    function charsStartIndex(strSymbols, chrSymbols) {
	        var index = -1,
	            length = strSymbols.length;

	        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	        return index;
	    }

	    /** Used to compose unicode character classes. */
	    var rsAstralRange = '\\ud800-\\udfff';
	    var rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23';
	    var rsComboSymbolsRange = '\\u20d0-\\u20f0';
	    var rsVarRange = '\\ufe0e\\ufe0f';
	    var rsAstral = '[' + rsAstralRange + ']';
	    var rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';
	    var rsFitz = '\\ud83c[\\udffb-\\udfff]';
	    var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';
	    var rsNonAstral = '[^' + rsAstralRange + ']';
	    var rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}';
	    var rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]';
	    var rsZWJ = '\\u200d';
	    var reOptMod = rsModifier + '?';
	    var rsOptVar = '[' + rsVarRange + ']?';
	    var rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';
	    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
	    var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	    var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	    /**
	     * Converts `string` to an array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the converted array.
	     */
	    function stringToArray(string) {
	        return string.match(reComplexSymbol);
	    }

	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	        return value == null ? '' : baseToString(value);
	    }

	    /** Used to match leading and trailing whitespace. */
	    var reTrim$1 = /^\s+|\s+$/g;

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	        string = toString(string);
	        if (string && (guard || chars === undefined)) {
	            return string.replace(reTrim$1, '');
	        }
	        if (!string || !(chars = baseToString(chars))) {
	            return string;
	        }
	        var strSymbols = stringToArray(string),
	            chrSymbols = stringToArray(chars),
	            start = charsStartIndex(strSymbols, chrSymbols),
	            end = charsEndIndex(strSymbols, chrSymbols) + 1;

	        return castSlice(strSymbols, start, end).join('');
	    }

	    var FN_ARGS = /^(function)?\s*[^\(]*\(\s*([^\)]*)\)/m;
	    var FN_ARG_SPLIT = /,/;
	    var FN_ARG = /(=.+)?(\s*)$/;
	    var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;

	    function parseParams(func) {
	        func = func.toString().replace(STRIP_COMMENTS, '');
	        func = func.match(FN_ARGS)[2].replace(' ', '');
	        func = func ? func.split(FN_ARG_SPLIT) : [];
	        func = func.map(function (arg) {
	            return trim(arg.replace(FN_ARG, ''));
	        });
	        return func;
	    }

	    /**
	     * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent
	     * tasks are specified as parameters to the function, after the usual callback
	     * parameter, with the parameter names matching the names of the tasks it
	     * depends on. This can provide even more readable task graphs which can be
	     * easier to maintain.
	     *
	     * If a final callback is specified, the task results are similarly injected,
	     * specified as named parameters after the initial error parameter.
	     *
	     * The autoInject function is purely syntactic sugar and its semantics are
	     * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.
	     *
	     * @name autoInject
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.auto]{@link module:ControlFlow.auto}
	     * @category Control Flow
	     * @param {Object} tasks - An object, each of whose properties is a function of
	     * the form 'func([dependencies...], callback). The object's key of a property
	     * serves as the name of the task defined by that property, i.e. can be used
	     * when specifying requirements for other tasks.
	     * * The `callback` parameter is a `callback(err, result)` which must be called
	     *   when finished, passing an `error` (which can be `null`) and the result of
	     *   the function's execution. The remaining parameters name other tasks on
	     *   which the task is dependent, and the results from those tasks are the
	     *   arguments of those parameters.
	     * @param {Function} [callback] - An optional callback which is called when all
	     * the tasks have been completed. It receives the `err` argument if any `tasks`
	     * pass an error to their callback, and a `results` object with any completed
	     * task results, similar to `auto`.
	     * @example
	     *
	     * //  The example from `auto` can be rewritten as follows:
	     * async.autoInject({
	     *     get_data: function(callback) {
	     *         // async code to get some data
	     *         callback(null, 'data', 'converted to array');
	     *     },
	     *     make_folder: function(callback) {
	     *         // async code to create a directory to store a file in
	     *         // this is run at the same time as getting the data
	     *         callback(null, 'folder');
	     *     },
	     *     write_file: function(get_data, make_folder, callback) {
	     *         // once there is some data and the directory exists,
	     *         // write the data to a file in the directory
	     *         callback(null, 'filename');
	     *     },
	     *     email_link: function(write_file, callback) {
	     *         // once the file is written let's email a link to it...
	     *         // write_file contains the filename returned by write_file.
	     *         callback(null, {'file':write_file, 'email':'user@example.com'});
	     *     }
	     * }, function(err, results) {
	     *     console.log('err = ', err);
	     *     console.log('email_link = ', results.email_link);
	     * });
	     *
	     * // If you are using a JS minifier that mangles parameter names, `autoInject`
	     * // will not work with plain functions, since the parameter names will be
	     * // collapsed to a single letter identifier.  To work around this, you can
	     * // explicitly specify the names of the parameters your task function needs
	     * // in an array, similar to Angular.js dependency injection.
	     *
	     * // This still has an advantage over plain `auto`, since the results a task
	     * // depends on are still spread into arguments.
	     * async.autoInject({
	     *     //...
	     *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {
	     *         callback(null, 'filename');
	     *     }],
	     *     email_link: ['write_file', function(write_file, callback) {
	     *         callback(null, {'file':write_file, 'email':'user@example.com'});
	     *     }]
	     *     //...
	     * }, function(err, results) {
	     *     console.log('err = ', err);
	     *     console.log('email_link = ', results.email_link);
	     * });
	     */
	    function autoInject(tasks, callback) {
	        var newTasks = {};

	        baseForOwn(tasks, function (taskFn, key) {
	            var params;

	            if (isArray(taskFn)) {
	                params = copyArray(taskFn);
	                taskFn = params.pop();

	                newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);
	            } else if (taskFn.length === 1) {
	                // no dependencies, use the function as-is
	                newTasks[key] = taskFn;
	            } else {
	                params = parseParams(taskFn);
	                if (taskFn.length === 0 && params.length === 0) {
	                    throw new Error("autoInject task functions require explicit parameters.");
	                }

	                params.pop();

	                newTasks[key] = params.concat(newTask);
	            }

	            function newTask(results, taskCb) {
	                var newArgs = arrayMap(params, function (name) {
	                    return results[name];
	                });
	                newArgs.push(taskCb);
	                taskFn.apply(null, newArgs);
	            }
	        });

	        auto(newTasks, callback);
	    }

	    var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;
	    var hasNextTick = (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && typeof process.nextTick === 'function';

	    function fallback(fn) {
	        setTimeout(fn, 0);
	    }

	    function wrap(defer) {
	        return rest(function (fn, args) {
	            defer(function () {
	                fn.apply(null, args);
	            });
	        });
	    }

	    var _defer;

	    if (hasSetImmediate) {
	        _defer = setImmediate;
	    } else if (hasNextTick) {
	        _defer = process.nextTick;
	    } else {
	        _defer = fallback;
	    }

	    var setImmediate$1 = wrap(_defer);

	    // Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation
	    // used for queues. This implementation assumes that the node provided by the user can be modified
	    // to adjust the next and last properties. We implement only the minimal functionality
	    // for queue support.
	    function DLL() {
	        this.head = this.tail = null;
	        this.length = 0;
	    }

	    function setInitial(dll, node) {
	        dll.length = 1;
	        dll.head = dll.tail = node;
	    }

	    DLL.prototype.removeLink = function (node) {
	        if (node.prev) node.prev.next = node.next;else this.head = node.next;
	        if (node.next) node.next.prev = node.prev;else this.tail = node.prev;

	        node.prev = node.next = null;
	        this.length -= 1;
	        return node;
	    };

	    DLL.prototype.empty = DLL;

	    DLL.prototype.insertAfter = function (node, newNode) {
	        newNode.prev = node;
	        newNode.next = node.next;
	        if (node.next) node.next.prev = newNode;else this.tail = newNode;
	        node.next = newNode;
	        this.length += 1;
	    };

	    DLL.prototype.insertBefore = function (node, newNode) {
	        newNode.prev = node.prev;
	        newNode.next = node;
	        if (node.prev) node.prev.next = newNode;else this.head = newNode;
	        node.prev = newNode;
	        this.length += 1;
	    };

	    DLL.prototype.unshift = function (node) {
	        if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);
	    };

	    DLL.prototype.push = function (node) {
	        if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);
	    };

	    DLL.prototype.shift = function () {
	        return this.head && this.removeLink(this.head);
	    };

	    DLL.prototype.pop = function () {
	        return this.tail && this.removeLink(this.tail);
	    };

	    function queue(worker, concurrency, payload) {
	        if (concurrency == null) {
	            concurrency = 1;
	        } else if (concurrency === 0) {
	            throw new Error('Concurrency must not be zero');
	        }

	        function _insert(data, insertAtFront, callback) {
	            if (callback != null && typeof callback !== 'function') {
	                throw new Error('task callback must be a function');
	            }
	            q.started = true;
	            if (!isArray(data)) {
	                data = [data];
	            }
	            if (data.length === 0 && q.idle()) {
	                // call drain immediately if there are no tasks
	                return setImmediate$1(function () {
	                    q.drain();
	                });
	            }
	            arrayEach(data, function (task) {
	                var item = {
	                    data: task,
	                    callback: callback || noop
	                };

	                if (insertAtFront) {
	                    q._tasks.unshift(item);
	                } else {
	                    q._tasks.push(item);
	                }
	            });
	            setImmediate$1(q.process);
	        }

	        function _next(tasks) {
	            return rest(function (args) {
	                workers -= 1;

	                arrayEach(tasks, function (task) {
	                    arrayEach(_workersList, function (worker, index) {
	                        if (worker === task) {
	                            _workersList.splice(index, 1);
	                            return false;
	                        }
	                    });

	                    task.callback.apply(task, args);

	                    if (args[0] != null) {
	                        q.error(args[0], task.data);
	                    }
	                });

	                if (workers <= q.concurrency - q.buffer) {
	                    q.unsaturated();
	                }

	                if (q.idle()) {
	                    q.drain();
	                }
	                q.process();
	            });
	        }

	        var workers = 0;
	        var _workersList = [];
	        var q = {
	            _tasks: new DLL(),
	            concurrency: concurrency,
	            payload: payload,
	            saturated: noop,
	            unsaturated: noop,
	            buffer: concurrency / 4,
	            empty: noop,
	            drain: noop,
	            error: noop,
	            started: false,
	            paused: false,
	            push: function push(data, callback) {
	                _insert(data, false, callback);
	            },
	            kill: function kill() {
	                q.drain = noop;
	                q._tasks.empty();
	            },
	            unshift: function unshift(data, callback) {
	                _insert(data, true, callback);
	            },
	            process: function process() {
	                while (!q.paused && workers < q.concurrency && q._tasks.length) {
	                    var tasks = [],
	                        data = [];
	                    var l = q._tasks.length;
	                    if (q.payload) l = Math.min(l, q.payload);
	                    for (var i = 0; i < l; i++) {
	                        var node = q._tasks.shift();
	                        tasks.push(node);
	                        data.push(node.data);
	                    }

	                    if (q._tasks.length === 0) {
	                        q.empty();
	                    }
	                    workers += 1;
	                    _workersList.push(tasks[0]);

	                    if (workers === q.concurrency) {
	                        q.saturated();
	                    }

	                    var cb = onlyOnce(_next(tasks));
	                    worker(data, cb);
	                }
	            },
	            length: function length() {
	                return q._tasks.length;
	            },
	            running: function running() {
	                return workers;
	            },
	            workersList: function workersList() {
	                return _workersList;
	            },
	            idle: function idle() {
	                return q._tasks.length + workers === 0;
	            },
	            pause: function pause() {
	                q.paused = true;
	            },
	            resume: function resume() {
	                if (q.paused === false) {
	                    return;
	                }
	                q.paused = false;
	                var resumeCount = Math.min(q.concurrency, q._tasks.length);
	                // Need to call q.process once per concurrent
	                // worker to preserve full concurrency after pause
	                for (var w = 1; w <= resumeCount; w++) {
	                    setImmediate$1(q.process);
	                }
	            }
	        };
	        return q;
	    }

	    /**
	     * A cargo of tasks for the worker function to complete. Cargo inherits all of
	     * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.
	     * @typedef {Object} CargoObject
	     * @memberOf module:ControlFlow
	     * @property {Function} length - A function returning the number of items
	     * waiting to be processed. Invoke like `cargo.length()`.
	     * @property {number} payload - An `integer` for determining how many tasks
	     * should be process per round. This property can be changed after a `cargo` is
	     * created to alter the payload on-the-fly.
	     * @property {Function} push - Adds `task` to the `queue`. The callback is
	     * called once the `worker` has finished processing the task. Instead of a
	     * single task, an array of `tasks` can be submitted. The respective callback is
	     * used for every task in the list. Invoke like `cargo.push(task, [callback])`.
	     * @property {Function} saturated - A callback that is called when the
	     * `queue.length()` hits the concurrency and further tasks will be queued.
	     * @property {Function} empty - A callback that is called when the last item
	     * from the `queue` is given to a `worker`.
	     * @property {Function} drain - A callback that is called when the last item
	     * from the `queue` has returned from the `worker`.
	     * @property {Function} idle - a function returning false if there are items
	     * waiting or being processed, or true if not. Invoke like `cargo.idle()`.
	     * @property {Function} pause - a function that pauses the processing of tasks
	     * until `resume()` is called. Invoke like `cargo.pause()`.
	     * @property {Function} resume - a function that resumes the processing of
	     * queued tasks when the queue is paused. Invoke like `cargo.resume()`.
	     * @property {Function} kill - a function that removes the `drain` callback and
	     * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.
	     */

	    /**
	     * Creates a `cargo` object with the specified payload. Tasks added to the
	     * cargo will be processed altogether (up to the `payload` limit). If the
	     * `worker` is in progress, the task is queued until it becomes available. Once
	     * the `worker` has completed some tasks, each callback of those tasks is
	     * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)
	     * for how `cargo` and `queue` work.
	     *
	     * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers
	     * at a time, cargo passes an array of tasks to a single worker, repeating
	     * when the worker is finished.
	     *
	     * @name cargo
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.queue]{@link module:ControlFlow.queue}
	     * @category Control Flow
	     * @param {Function} worker - An asynchronous function for processing an array
	     * of queued tasks, which must call its `callback(err)` argument when finished,
	     * with an optional `err` argument. Invoked with `(tasks, callback)`.
	     * @param {number} [payload=Infinity] - An optional `integer` for determining
	     * how many tasks should be processed per round; if omitted, the default is
	     * unlimited.
	     * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can
	     * attached as certain properties to listen for specific events during the
	     * lifecycle of the cargo and inner queue.
	     * @example
	     *
	     * // create a cargo object with payload 2
	     * var cargo = async.cargo(function(tasks, callback) {
	     *     for (var i=0; i<tasks.length; i++) {
	     *         console.log('hello ' + tasks[i].name);
	     *     }
	     *     callback();
	     * }, 2);
	     *
	     * // add some items
	     * cargo.push({name: 'foo'}, function(err) {
	     *     console.log('finished processing foo');
	     * });
	     * cargo.push({name: 'bar'}, function(err) {
	     *     console.log('finished processing bar');
	     * });
	     * cargo.push({name: 'baz'}, function(err) {
	     *     console.log('finished processing baz');
	     * });
	     */
	    function cargo(worker, payload) {
	        return queue(worker, 1, payload);
	    }

	    /**
	     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.
	     *
	     * @name eachOfSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.eachOf]{@link module:Collections.eachOf}
	     * @alias forEachOfSeries
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each item in `coll`. The
	     * `key` is the item's key, or index in the case of an array. The iteratee is
	     * passed a `callback(err)` which must be called once it has completed. If no
	     * error has occurred, the callback should be run without arguments or with an
	     * explicit `null` argument. Invoked with (item, key, callback).
	     * @param {Function} [callback] - A callback which is called when all `iteratee`
	     * functions have finished, or an error occurs. Invoked with (err).
	     */
	    var eachOfSeries = doLimit(eachOfLimit, 1);

	    /**
	     * Reduces `coll` into a single value using an async `iteratee` to return each
	     * successive step. `memo` is the initial state of the reduction. This function
	     * only operates in series.
	     *
	     * For performance reasons, it may make sense to split a call to this function
	     * into a parallel map, and then use the normal `Array.prototype.reduce` on the
	     * results. This function is for situations where each step in the reduction
	     * needs to be async; if you can get the data before reducing it, then it's
	     * probably a good idea to do so.
	     *
	     * @name reduce
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @alias inject
	     * @alias foldl
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {*} memo - The initial state of the reduction.
	     * @param {Function} iteratee - A function applied to each item in the
	     * array to produce the next step in the reduction. The `iteratee` is passed a
	     * `callback(err, reduction)` which accepts an optional error as its first
	     * argument, and the state of the reduction as the second. If an error is
	     * passed to the callback, the reduction is stopped and the main `callback` is
	     * immediately called with the error. Invoked with (memo, item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Result is the reduced value. Invoked with
	     * (err, result).
	     * @example
	     *
	     * async.reduce([1,2,3], 0, function(memo, item, callback) {
	     *     // pointless async:
	     *     process.nextTick(function() {
	     *         callback(null, memo + item)
	     *     });
	     * }, function(err, result) {
	     *     // result is now equal to the last value of memo, which is 6
	     * });
	     */
	    function reduce(coll, memo, iteratee, callback) {
	        callback = once(callback || noop);
	        eachOfSeries(coll, function (x, i, callback) {
	            iteratee(memo, x, function (err, v) {
	                memo = v;
	                callback(err);
	            });
	        }, function (err) {
	            callback(err, memo);
	        });
	    }

	    /**
	     * Version of the compose function that is more natural to read. Each function
	     * consumes the return value of the previous function. It is the equivalent of
	     * [compose]{@link module:ControlFlow.compose} with the arguments reversed.
	     *
	     * Each function is executed with the `this` binding of the composed function.
	     *
	     * @name seq
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.compose]{@link module:ControlFlow.compose}
	     * @category Control Flow
	     * @param {...Function} functions - the asynchronous functions to compose
	     * @returns {Function} a function that composes the `functions` in order
	     * @example
	     *
	     * // Requires lodash (or underscore), express3 and dresende's orm2.
	     * // Part of an app, that fetches cats of the logged user.
	     * // This example uses `seq` function to avoid overnesting and error
	     * // handling clutter.
	     * app.get('/cats', function(request, response) {
	     *     var User = request.models.User;
	     *     async.seq(
	     *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))
	     *         function(user, fn) {
	     *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))
	     *         }
	     *     )(req.session.user_id, function (err, cats) {
	     *         if (err) {
	     *             console.error(err);
	     *             response.json({ status: 'error', message: err.message });
	     *         } else {
	     *             response.json({ status: 'ok', message: 'Cats found', data: cats });
	     *         }
	     *     });
	     * });
	     */
	    var seq = rest(function seq(functions) {
	        return rest(function (args) {
	            var that = this;

	            var cb = args[args.length - 1];
	            if (typeof cb == 'function') {
	                args.pop();
	            } else {
	                cb = noop;
	            }

	            reduce(functions, args, function (newargs, fn, cb) {
	                fn.apply(that, newargs.concat([rest(function (err, nextargs) {
	                    cb(err, nextargs);
	                })]));
	            }, function (err, results) {
	                cb.apply(that, [err].concat(results));
	            });
	        });
	    });

	    /**
	     * Creates a function which is a composition of the passed asynchronous
	     * functions. Each function consumes the return value of the function that
	     * follows. Composing functions `f()`, `g()`, and `h()` would produce the result
	     * of `f(g(h()))`, only this version uses callbacks to obtain the return values.
	     *
	     * Each function is executed with the `this` binding of the composed function.
	     *
	     * @name compose
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {...Function} functions - the asynchronous functions to compose
	     * @returns {Function} an asynchronous function that is the composed
	     * asynchronous `functions`
	     * @example
	     *
	     * function add1(n, callback) {
	     *     setTimeout(function () {
	     *         callback(null, n + 1);
	     *     }, 10);
	     * }
	     *
	     * function mul3(n, callback) {
	     *     setTimeout(function () {
	     *         callback(null, n * 3);
	     *     }, 10);
	     * }
	     *
	     * var add1mul3 = async.compose(mul3, add1);
	     * add1mul3(4, function (err, result) {
	     *     // result now equals 15
	     * });
	     */
	    var compose = rest(function (args) {
	        return seq.apply(null, args.reverse());
	    });

	    function concat$1(eachfn, arr, fn, callback) {
	        var result = [];
	        eachfn(arr, function (x, index, cb) {
	            fn(x, function (err, y) {
	                result = result.concat(y || []);
	                cb(err);
	            });
	        }, function (err) {
	            callback(err, result);
	        });
	    }

	    /**
	     * Applies `iteratee` to each item in `coll`, concatenating the results. Returns
	     * the concatenated list. The `iteratee`s are called in parallel, and the
	     * results are concatenated as they return. There is no guarantee that the
	     * results array will be returned in the original order of `coll` passed to the
	     * `iteratee` function.
	     *
	     * @name concat
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, results)` which must be called once
	     * it has completed with an error (which can be `null`) and an array of results.
	     * Invoked with (item, callback).
	     * @param {Function} [callback(err)] - A callback which is called after all the
	     * `iteratee` functions have finished, or an error occurs. Results is an array
	     * containing the concatenated results of the `iteratee` function. Invoked with
	     * (err, results).
	     * @example
	     *
	     * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {
	     *     // files is now a list of filenames that exist in the 3 directories
	     * });
	     */
	    var concat = doParallel(concat$1);

	    function doSeries(fn) {
	        return function (obj, iteratee, callback) {
	            return fn(eachOfSeries, obj, iteratee, callback);
	        };
	    }

	    /**
	     * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.
	     *
	     * @name concatSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.concat]{@link module:Collections.concat}
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, results)` which must be called once
	     * it has completed with an error (which can be `null`) and an array of results.
	     * Invoked with (item, callback).
	     * @param {Function} [callback(err)] - A callback which is called after all the
	     * `iteratee` functions have finished, or an error occurs. Results is an array
	     * containing the concatenated results of the `iteratee` function. Invoked with
	     * (err, results).
	     */
	    var concatSeries = doSeries(concat$1);

	    /**
	     * Returns a function that when called, calls-back with the values provided.
	     * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to
	     * [`auto`]{@link module:ControlFlow.auto}.
	     *
	     * @name constant
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {...*} arguments... - Any number of arguments to automatically invoke
	     * callback with.
	     * @returns {Function} Returns a function that when invoked, automatically
	     * invokes the callback with the previous given arguments.
	     * @example
	     *
	     * async.waterfall([
	     *     async.constant(42),
	     *     function (value, next) {
	     *         // value === 42
	     *     },
	     *     //...
	     * ], callback);
	     *
	     * async.waterfall([
	     *     async.constant(filename, "utf8"),
	     *     fs.readFile,
	     *     function (fileData, next) {
	     *         //...
	     *     }
	     *     //...
	     * ], callback);
	     *
	     * async.auto({
	     *     hostname: async.constant("https://server.net/"),
	     *     port: findFreePort,
	     *     launchServer: ["hostname", "port", function (options, cb) {
	     *         startServer(options, cb);
	     *     }],
	     *     //...
	     * }, callback);
	     */
	    var constant = rest(function (values) {
	        var args = [null].concat(values);
	        return initialParams(function (ignoredArgs, callback) {
	            return callback.apply(this, args);
	        });
	    });

	    /**
	     * This method returns the first argument given to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */
	    function identity(value) {
	        return value;
	    }

	    function _createTester(eachfn, check, getResult) {
	        return function (arr, limit, iteratee, cb) {
	            function done(err) {
	                if (cb) {
	                    if (err) {
	                        cb(err);
	                    } else {
	                        cb(null, getResult(false));
	                    }
	                }
	            }
	            function wrappedIteratee(x, _, callback) {
	                if (!cb) return callback();
	                iteratee(x, function (err, v) {
	                    if (cb) {
	                        if (err) {
	                            cb(err);
	                            cb = iteratee = false;
	                        } else if (check(v)) {
	                            cb(null, getResult(true, x));
	                            cb = iteratee = false;
	                        }
	                    }
	                    callback();
	                });
	            }
	            if (arguments.length > 3) {
	                cb = cb || noop;
	                eachfn(arr, limit, wrappedIteratee, done);
	            } else {
	                cb = iteratee;
	                cb = cb || noop;
	                iteratee = limit;
	                eachfn(arr, wrappedIteratee, done);
	            }
	        };
	    }

	    function _findGetResult(v, x) {
	        return x;
	    }

	    /**
	     * Returns the first value in `coll` that passes an async truth test. The
	     * `iteratee` is applied in parallel, meaning the first iteratee to return
	     * `true` will fire the detect `callback` with that result. That means the
	     * result might not be the first item in the original `coll` (in terms of order)
	     * that passes the test.
	      * If order within the original `coll` is important, then look at
	     * [`detectSeries`]{@link module:Collections.detectSeries}.
	     *
	     * @name detect
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @alias find
	     * @category Collections
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, truthValue)` which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called as soon as any
	     * iteratee returns `true`, or after all the `iteratee` functions have finished.
	     * Result will be the first item in the array that passes the truth test
	     * (iteratee) or the value `undefined` if none passed. Invoked with
	     * (err, result).
	     * @example
	     *
	     * async.detect(['file1','file2','file3'], function(filePath, callback) {
	     *     fs.access(filePath, function(err) {
	     *         callback(null, !err)
	     *     });
	     * }, function(err, result) {
	     *     // result now equals the first file in the list that exists
	     * });
	     */
	    var detect = _createTester(eachOf, identity, _findGetResult);

	    /**
	     * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a
	     * time.
	     *
	     * @name detectLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.detect]{@link module:Collections.detect}
	     * @alias findLimit
	     * @category Collections
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, truthValue)` which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called as soon as any
	     * iteratee returns `true`, or after all the `iteratee` functions have finished.
	     * Result will be the first item in the array that passes the truth test
	     * (iteratee) or the value `undefined` if none passed. Invoked with
	     * (err, result).
	     */
	    var detectLimit = _createTester(eachOfLimit, identity, _findGetResult);

	    /**
	     * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.
	     *
	     * @name detectSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.detect]{@link module:Collections.detect}
	     * @alias findSeries
	     * @category Collections
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, truthValue)` which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called as soon as any
	     * iteratee returns `true`, or after all the `iteratee` functions have finished.
	     * Result will be the first item in the array that passes the truth test
	     * (iteratee) or the value `undefined` if none passed. Invoked with
	     * (err, result).
	     */
	    var detectSeries = _createTester(eachOfSeries, identity, _findGetResult);

	    function consoleFunc(name) {
	        return rest(function (fn, args) {
	            fn.apply(null, args.concat([rest(function (err, args) {
	                if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object') {
	                    if (err) {
	                        if (console.error) {
	                            console.error(err);
	                        }
	                    } else if (console[name]) {
	                        arrayEach(args, function (x) {
	                            console[name](x);
	                        });
	                    }
	                }
	            })]));
	        });
	    }

	    /**
	     * Logs the result of an `async` function to the `console` using `console.dir`
	     * to display the properties of the resulting object. Only works in Node.js or
	     * in browsers that support `console.dir` and `console.error` (such as FF and
	     * Chrome). If multiple arguments are returned from the async function,
	     * `console.dir` is called on each argument in order.
	     *
	     * @name dir
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {Function} function - The function you want to eventually apply all
	     * arguments to.
	     * @param {...*} arguments... - Any number of arguments to apply to the function.
	     * @example
	     *
	     * // in a module
	     * var hello = function(name, callback) {
	     *     setTimeout(function() {
	     *         callback(null, {hello: name});
	     *     }, 1000);
	     * };
	     *
	     * // in the node repl
	     * node> async.dir(hello, 'world');
	     * {hello: 'world'}
	     */
	    var dir = consoleFunc('dir');

	    /**
	     * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in
	     * the order of operations, the arguments `test` and `fn` are switched.
	     *
	     * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.
	     * @name doDuring
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.during]{@link module:ControlFlow.during}
	     * @category Control Flow
	     * @param {Function} fn - A function which is called each time `test` passes.
	     * The function is passed a `callback(err)`, which must be called once it has
	     * completed with an optional `err` argument. Invoked with (callback).
	     * @param {Function} test - asynchronous truth test to perform before each
	     * execution of `fn`. Invoked with (...args, callback), where `...args` are the
	     * non-error args from the previous callback of `fn`.
	     * @param {Function} [callback] - A callback which is called after the test
	     * function has failed and repeated execution of `fn` has stopped. `callback`
	     * will be passed an error if one occured, otherwise `null`.
	     */
	    function doDuring(fn, test, callback) {
	        callback = onlyOnce(callback || noop);

	        var next = rest(function (err, args) {
	            if (err) return callback(err);
	            args.push(check);
	            test.apply(this, args);
	        });

	        function check(err, truth) {
	            if (err) return callback(err);
	            if (!truth) return callback(null);
	            fn(next);
	        }

	        check(null, true);
	    }

	    /**
	     * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in
	     * the order of operations, the arguments `test` and `iteratee` are switched.
	     *
	     * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.
	     *
	     * @name doWhilst
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.whilst]{@link module:ControlFlow.whilst}
	     * @category Control Flow
	     * @param {Function} iteratee - A function which is called each time `test`
	     * passes. The function is passed a `callback(err)`, which must be called once
	     * it has completed with an optional `err` argument. Invoked with (callback).
	     * @param {Function} test - synchronous truth test to perform after each
	     * execution of `iteratee`. Invoked with Invoked with the non-error callback
	     * results of `iteratee`.
	     * @param {Function} [callback] - A callback which is called after the test
	     * function has failed and repeated execution of `iteratee` has stopped.
	     * `callback` will be passed an error and any arguments passed to the final
	     * `iteratee`'s callback. Invoked with (err, [results]);
	     */
	    function doWhilst(iteratee, test, callback) {
	        callback = onlyOnce(callback || noop);
	        var next = rest(function (err, args) {
	            if (err) return callback(err);
	            if (test.apply(this, args)) return iteratee(next);
	            callback.apply(null, [null].concat(args));
	        });
	        iteratee(next);
	    }

	    /**
	     * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the
	     * argument ordering differs from `until`.
	     *
	     * @name doUntil
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}
	     * @category Control Flow
	     * @param {Function} fn - A function which is called each time `test` fails.
	     * The function is passed a `callback(err)`, which must be called once it has
	     * completed with an optional `err` argument. Invoked with (callback).
	     * @param {Function} test - synchronous truth test to perform after each
	     * execution of `fn`. Invoked with the non-error callback results of `fn`.
	     * @param {Function} [callback] - A callback which is called after the test
	     * function has passed and repeated execution of `fn` has stopped. `callback`
	     * will be passed an error and any arguments passed to the final `fn`'s
	     * callback. Invoked with (err, [results]);
	     */
	    function doUntil(fn, test, callback) {
	        doWhilst(fn, function () {
	            return !test.apply(this, arguments);
	        }, callback);
	    }

	    /**
	     * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that
	     * is passed a callback in the form of `function (err, truth)`. If error is
	     * passed to `test` or `fn`, the main callback is immediately called with the
	     * value of the error.
	     *
	     * @name during
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.whilst]{@link module:ControlFlow.whilst}
	     * @category Control Flow
	     * @param {Function} test - asynchronous truth test to perform before each
	     * execution of `fn`. Invoked with (callback).
	     * @param {Function} fn - A function which is called each time `test` passes.
	     * The function is passed a `callback(err)`, which must be called once it has
	     * completed with an optional `err` argument. Invoked with (callback).
	     * @param {Function} [callback] - A callback which is called after the test
	     * function has failed and repeated execution of `fn` has stopped. `callback`
	     * will be passed an error, if one occured, otherwise `null`.
	     * @example
	     *
	     * var count = 0;
	     *
	     * async.during(
	     *     function (callback) {
	     *         return callback(null, count < 5);
	     *     },
	     *     function (callback) {
	     *         count++;
	     *         setTimeout(callback, 1000);
	     *     },
	     *     function (err) {
	     *         // 5 seconds have passed
	     *     }
	     * );
	     */
	    function during(test, fn, callback) {
	        callback = onlyOnce(callback || noop);

	        function next(err) {
	            if (err) return callback(err);
	            test(check);
	        }

	        function check(err, truth) {
	            if (err) return callback(err);
	            if (!truth) return callback(null);
	            fn(next);
	        }

	        test(check);
	    }

	    function _withoutIndex(iteratee) {
	        return function (value, index, callback) {
	            return iteratee(value, callback);
	        };
	    }

	    /**
	     * Applies the function `iteratee` to each item in `coll`, in parallel.
	     * The `iteratee` is called with an item from the list, and a callback for when
	     * it has finished. If the `iteratee` passes an error to its `callback`, the
	     * main `callback` (for the `each` function) is immediately called with the
	     * error.
	     *
	     * Note, that since this function applies `iteratee` to each item in parallel,
	     * there is no guarantee that the iteratee functions will complete in order.
	     *
	     * @name each
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @alias forEach
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each item
	     * in `coll`. The iteratee is passed a `callback(err)` which must be called once
	     * it has completed. If no error has occurred, the `callback` should be run
	     * without arguments or with an explicit `null` argument. The array index is not
	     * passed to the iteratee. Invoked with (item, callback). If you need the index,
	     * use `eachOf`.
	     * @param {Function} [callback] - A callback which is called when all
	     * `iteratee` functions have finished, or an error occurs. Invoked with (err).
	     * @example
	     *
	     * // assuming openFiles is an array of file names and saveFile is a function
	     * // to save the modified contents of that file:
	     *
	     * async.each(openFiles, saveFile, function(err){
	     *   // if any of the saves produced an error, err would equal that error
	     * });
	     *
	     * // assuming openFiles is an array of file names
	     * async.each(openFiles, function(file, callback) {
	     *
	     *     // Perform operation on file here.
	     *     console.log('Processing file ' + file);
	     *
	     *     if( file.length > 32 ) {
	     *       console.log('This file name is too long');
	     *       callback('File name too long');
	     *     } else {
	     *       // Do work to process file here
	     *       console.log('File processed');
	     *       callback();
	     *     }
	     * }, function(err) {
	     *     // if any of the file processing produced an error, err would equal that error
	     *     if( err ) {
	     *       // One of the iterations produced an error.
	     *       // All processing will now stop.
	     *       console.log('A file failed to process');
	     *     } else {
	     *       console.log('All files have been processed successfully');
	     *     }
	     * });
	     */
	    function eachLimit(coll, iteratee, callback) {
	        eachOf(coll, _withoutIndex(iteratee), callback);
	    }

	    /**
	     * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.
	     *
	     * @name eachLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.each]{@link module:Collections.each}
	     * @alias forEachLimit
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A colleciton to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A function to apply to each item in `coll`. The
	     * iteratee is passed a `callback(err)` which must be called once it has
	     * completed. If no error has occurred, the `callback` should be run without
	     * arguments or with an explicit `null` argument. The array index is not passed
	     * to the iteratee. Invoked with (item, callback). If you need the index, use
	     * `eachOfLimit`.
	     * @param {Function} [callback] - A callback which is called when all
	     * `iteratee` functions have finished, or an error occurs. Invoked with (err).
	     */
	    function eachLimit$1(coll, limit, iteratee, callback) {
	        _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);
	    }

	    /**
	     * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.
	     *
	     * @name eachSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.each]{@link module:Collections.each}
	     * @alias forEachSeries
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each
	     * item in `coll`. The iteratee is passed a `callback(err)` which must be called
	     * once it has completed. If no error has occurred, the `callback` should be run
	     * without arguments or with an explicit `null` argument. The array index is
	     * not passed to the iteratee. Invoked with (item, callback). If you need the
	     * index, use `eachOfSeries`.
	     * @param {Function} [callback] - A callback which is called when all
	     * `iteratee` functions have finished, or an error occurs. Invoked with (err).
	     */
	    var eachSeries = doLimit(eachLimit$1, 1);

	    /**
	     * Wrap an async function and ensure it calls its callback on a later tick of
	     * the event loop.  If the function already calls its callback on a next tick,
	     * no extra deferral is added. This is useful for preventing stack overflows
	     * (`RangeError: Maximum call stack size exceeded`) and generally keeping
	     * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)
	     * contained.
	     *
	     * @name ensureAsync
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {Function} fn - an async function, one that expects a node-style
	     * callback as its last argument.
	     * @returns {Function} Returns a wrapped function with the exact same call
	     * signature as the function passed in.
	     * @example
	     *
	     * function sometimesAsync(arg, callback) {
	     *     if (cache[arg]) {
	     *         return callback(null, cache[arg]); // this would be synchronous!!
	     *     } else {
	     *         doSomeIO(arg, callback); // this IO would be asynchronous
	     *     }
	     * }
	     *
	     * // this has a risk of stack overflows if many results are cached in a row
	     * async.mapSeries(args, sometimesAsync, done);
	     *
	     * // this will defer sometimesAsync's callback if necessary,
	     * // preventing stack overflows
	     * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);
	     */
	    function ensureAsync(fn) {
	        return initialParams(function (args, callback) {
	            var sync = true;
	            args.push(function () {
	                var innerArgs = arguments;
	                if (sync) {
	                    setImmediate$1(function () {
	                        callback.apply(null, innerArgs);
	                    });
	                } else {
	                    callback.apply(null, innerArgs);
	                }
	            });
	            fn.apply(this, args);
	            sync = false;
	        });
	    }

	    function notId(v) {
	        return !v;
	    }

	    /**
	     * Returns `true` if every element in `coll` satisfies an async test. If any
	     * iteratee call returns `false`, the main `callback` is immediately called.
	     *
	     * @name every
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @alias all
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in the
	     * collection in parallel. The iteratee is passed a `callback(err, truthValue)`
	     * which must be called with a  boolean argument once it has completed. Invoked
	     * with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Result will be either `true` or `false`
	     * depending on the values of the async tests. Invoked with (err, result).
	     * @example
	     *
	     * async.every(['file1','file2','file3'], function(filePath, callback) {
	     *     fs.access(filePath, function(err) {
	     *         callback(null, !err)
	     *     });
	     * }, function(err, result) {
	     *     // if result is true then every file exists
	     * });
	     */
	    var every = _createTester(eachOf, notId, notId);

	    /**
	     * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.
	     *
	     * @name everyLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.every]{@link module:Collections.every}
	     * @alias allLimit
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A truth test to apply to each item in the
	     * collection in parallel. The iteratee is passed a `callback(err, truthValue)`
	     * which must be called with a  boolean argument once it has completed. Invoked
	     * with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Result will be either `true` or `false`
	     * depending on the values of the async tests. Invoked with (err, result).
	     */
	    var everyLimit = _createTester(eachOfLimit, notId, notId);

	    /**
	     * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.
	     *
	     * @name everySeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.every]{@link module:Collections.every}
	     * @alias allSeries
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in the
	     * collection in parallel. The iteratee is passed a `callback(err, truthValue)`
	     * which must be called with a  boolean argument once it has completed. Invoked
	     * with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Result will be either `true` or `false`
	     * depending on the values of the async tests. Invoked with (err, result).
	     */
	    var everySeries = doLimit(everyLimit, 1);

	    function _filter(eachfn, arr, iteratee, callback) {
	        callback = once(callback || noop);
	        var results = [];
	        eachfn(arr, function (x, index, callback) {
	            iteratee(x, function (err, v) {
	                if (err) {
	                    callback(err);
	                } else {
	                    if (v) {
	                        results.push({ index: index, value: x });
	                    }
	                    callback();
	                }
	            });
	        }, function (err) {
	            if (err) {
	                callback(err);
	            } else {
	                callback(null, arrayMap(results.sort(function (a, b) {
	                    return a.index - b.index;
	                }), baseProperty('value')));
	            }
	        });
	    }

	    /**
	     * Returns a new array of all the values in `coll` which pass an async truth
	     * test. This operation is performed in parallel, but the results array will be
	     * in the same order as the original.
	     *
	     * @name filter
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @alias select
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Invoked with (err, results).
	     * @example
	     *
	     * async.filter(['file1','file2','file3'], function(filePath, callback) {
	     *     fs.access(filePath, function(err) {
	     *         callback(null, !err)
	     *     });
	     * }, function(err, results) {
	     *     // results now equals an array of the existing files
	     * });
	     */
	    var filter = doParallel(_filter);

	    /**
	     * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a
	     * time.
	     *
	     * @name filterLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.filter]{@link module:Collections.filter}
	     * @alias selectLimit
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Invoked with (err, results).
	     */
	    var filterLimit = doParallelLimit(_filter);

	    /**
	     * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.
	     *
	     * @name filterSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.filter]{@link module:Collections.filter}
	     * @alias selectSeries
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Invoked with (err, results)
	     */
	    var filterSeries = doLimit(filterLimit, 1);

	    /**
	     * Calls the asynchronous function `fn` with a callback parameter that allows it
	     * to call itself again, in series, indefinitely.
	      * If an error is passed to the
	     * callback then `errback` is called with the error, and execution stops,
	     * otherwise it will never be called.
	     *
	     * @name forever
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Function} fn - a function to call repeatedly. Invoked with (next).
	     * @param {Function} [errback] - when `fn` passes an error to it's callback,
	     * this function will be called, and execution stops. Invoked with (err).
	     * @example
	     *
	     * async.forever(
	     *     function(next) {
	     *         // next is suitable for passing to things that need a callback(err [, whatever]);
	     *         // it will result in this function being called again.
	     *     },
	     *     function(err) {
	     *         // if next is called with a value in its first parameter, it will appear
	     *         // in here as 'err', and execution will stop.
	     *     }
	     * );
	     */
	    function forever(fn, errback) {
	        var done = onlyOnce(errback || noop);
	        var task = ensureAsync(fn);

	        function next(err) {
	            if (err) return done(err);
	            task(next);
	        }
	        next();
	    }

	    /**
	     * Logs the result of an `async` function to the `console`. Only works in
	     * Node.js or in browsers that support `console.log` and `console.error` (such
	     * as FF and Chrome). If multiple arguments are returned from the async
	     * function, `console.log` is called on each argument in order.
	     *
	     * @name log
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {Function} function - The function you want to eventually apply all
	     * arguments to.
	     * @param {...*} arguments... - Any number of arguments to apply to the function.
	     * @example
	     *
	     * // in a module
	     * var hello = function(name, callback) {
	     *     setTimeout(function() {
	     *         callback(null, 'hello ' + name);
	     *     }, 1000);
	     * };
	     *
	     * // in the node repl
	     * node> async.log(hello, 'world');
	     * 'hello world'
	     */
	    var log = consoleFunc('log');

	    /**
	     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a
	     * time.
	     *
	     * @name mapValuesLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.mapValues]{@link module:Collections.mapValues}
	     * @category Collection
	     * @param {Object} obj - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A function to apply to each value in `obj`.
	     * The iteratee is passed a `callback(err, transformed)` which must be called
	     * once it has completed with an error (which can be `null`) and a
	     * transformed value. Invoked with (value, key, callback).
	     * @param {Function} [callback] - A callback which is called when all `iteratee`
	     * functions have finished, or an error occurs. Result is an object of the
	     * transformed values from the `obj`. Invoked with (err, result).
	     */
	    function mapValuesLimit(obj, limit, iteratee, callback) {
	        callback = once(callback || noop);
	        var newObj = {};
	        eachOfLimit(obj, limit, function (val, key, next) {
	            iteratee(val, key, function (err, result) {
	                if (err) return next(err);
	                newObj[key] = result;
	                next();
	            });
	        }, function (err) {
	            callback(err, newObj);
	        });
	    }

	    /**
	     * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.
	     *
	     * Produces a new Object by mapping each value of `obj` through the `iteratee`
	     * function. The `iteratee` is called each `value` and `key` from `obj` and a
	     * callback for when it has finished processing. Each of these callbacks takes
	     * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`
	     * passes an error to its callback, the main `callback` (for the `mapValues`
	     * function) is immediately called with the error.
	     *
	     * Note, the order of the keys in the result is not guaranteed.  The keys will
	     * be roughly in the order they complete, (but this is very engine-specific)
	     *
	     * @name mapValues
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @category Collection
	     * @param {Object} obj - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each value and key in
	     * `coll`. The iteratee is passed a `callback(err, transformed)` which must be
	     * called once it has completed with an error (which can be `null`) and a
	     * transformed value. Invoked with (value, key, callback).
	     * @param {Function} [callback] - A callback which is called when all `iteratee`
	     * functions have finished, or an error occurs. Results is an array of the
	     * transformed items from the `obj`. Invoked with (err, result).
	     * @example
	     *
	     * async.mapValues({
	     *     f1: 'file1',
	     *     f2: 'file2',
	     *     f3: 'file3'
	     * }, function (file, key, callback) {
	     *   fs.stat(file, callback);
	     * }, function(err, result) {
	     *     // results is now a map of stats for each file, e.g.
	     *     // {
	     *     //     f1: [stats for file1],
	     *     //     f2: [stats for file2],
	     *     //     f3: [stats for file3]
	     *     // }
	     * });
	     */

	    var mapValues = doLimit(mapValuesLimit, Infinity);

	    /**
	     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.
	     *
	     * @name mapValuesSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.mapValues]{@link module:Collections.mapValues}
	     * @category Collection
	     * @param {Object} obj - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each value in `obj`.
	     * The iteratee is passed a `callback(err, transformed)` which must be called
	     * once it has completed with an error (which can be `null`) and a
	     * transformed value. Invoked with (value, key, callback).
	     * @param {Function} [callback] - A callback which is called when all `iteratee`
	     * functions have finished, or an error occurs. Result is an object of the
	     * transformed values from the `obj`. Invoked with (err, result).
	     */
	    var mapValuesSeries = doLimit(mapValuesLimit, 1);

	    function has(obj, key) {
	        return key in obj;
	    }

	    /**
	     * Caches the results of an `async` function. When creating a hash to store
	     * function results against, the callback is omitted from the hash and an
	     * optional hash function can be used.
	     *
	     * If no hash function is specified, the first argument is used as a hash key,
	     * which may work reasonably if it is a string or a data type that converts to a
	     * distinct string. Note that objects and arrays will not behave reasonably.
	     * Neither will cases where the other arguments are significant. In such cases,
	     * specify your own hash function.
	     *
	     * The cache of results is exposed as the `memo` property of the function
	     * returned by `memoize`.
	     *
	     * @name memoize
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {Function} fn - The function to proxy and cache results from.
	     * @param {Function} hasher - An optional function for generating a custom hash
	     * for storing results. It has all the arguments applied to it apart from the
	     * callback, and must be synchronous.
	     * @returns {Function} a memoized version of `fn`
	     * @example
	     *
	     * var slow_fn = function(name, callback) {
	     *     // do something
	     *     callback(null, result);
	     * };
	     * var fn = async.memoize(slow_fn);
	     *
	     * // fn can now be used as if it were slow_fn
	     * fn('some name', function() {
	     *     // callback
	     * });
	     */
	    function memoize(fn, hasher) {
	        var memo = Object.create(null);
	        var queues = Object.create(null);
	        hasher = hasher || identity;
	        var memoized = initialParams(function memoized(args, callback) {
	            var key = hasher.apply(null, args);
	            if (has(memo, key)) {
	                setImmediate$1(function () {
	                    callback.apply(null, memo[key]);
	                });
	            } else if (has(queues, key)) {
	                queues[key].push(callback);
	            } else {
	                queues[key] = [callback];
	                fn.apply(null, args.concat([rest(function (args) {
	                    memo[key] = args;
	                    var q = queues[key];
	                    delete queues[key];
	                    for (var i = 0, l = q.length; i < l; i++) {
	                        q[i].apply(null, args);
	                    }
	                })]));
	            }
	        });
	        memoized.memo = memo;
	        memoized.unmemoized = fn;
	        return memoized;
	    }

	    /**
	     * Calls `callback` on a later loop around the event loop. In Node.js this just
	     * calls `setImmediate`.  In the browser it will use `setImmediate` if
	     * available, otherwise `setTimeout(callback, 0)`, which means other higher
	     * priority events may precede the execution of `callback`.
	     *
	     * This is used internally for browser-compatibility purposes.
	     *
	     * @name nextTick
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @alias setImmediate
	     * @category Util
	     * @param {Function} callback - The function to call on a later loop around
	     * the event loop. Invoked with (args...).
	     * @param {...*} args... - any number of additional arguments to pass to the
	     * callback on the next tick.
	     * @example
	     *
	     * var call_order = [];
	     * async.nextTick(function() {
	     *     call_order.push('two');
	     *     // call_order now equals ['one','two']
	     * });
	     * call_order.push('one');
	     *
	     * async.setImmediate(function (a, b, c) {
	     *     // a, b, and c equal 1, 2, and 3
	     * }, 1, 2, 3);
	     */
	    var _defer$1;

	    if (hasNextTick) {
	        _defer$1 = process.nextTick;
	    } else if (hasSetImmediate) {
	        _defer$1 = setImmediate;
	    } else {
	        _defer$1 = fallback;
	    }

	    var nextTick = wrap(_defer$1);

	    function _parallel(eachfn, tasks, callback) {
	        callback = callback || noop;
	        var results = isArrayLike(tasks) ? [] : {};

	        eachfn(tasks, function (task, key, callback) {
	            task(rest(function (err, args) {
	                if (args.length <= 1) {
	                    args = args[0];
	                }
	                results[key] = args;
	                callback(err);
	            }));
	        }, function (err) {
	            callback(err, results);
	        });
	    }

	    /**
	     * Run the `tasks` collection of functions in parallel, without waiting until
	     * the previous function has completed. If any of the functions pass an error to
	     * its callback, the main `callback` is immediately called with the value of the
	     * error. Once the `tasks` have completed, the results are passed to the final
	     * `callback` as an array.
	     *
	     * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about
	     * parallel execution of code.  If your tasks do not use any timers or perform
	     * any I/O, they will actually be executed in series.  Any synchronous setup
	     * sections for each task will happen one after the other.  JavaScript remains
	     * single-threaded.
	     *
	     * It is also possible to use an object instead of an array. Each property will
	     * be run as a function and the results will be passed to the final `callback`
	     * as an object instead of an array. This can be a more readable way of handling
	     * results from {@link async.parallel}.
	     *
	     * @name parallel
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Array|Iterable|Object} tasks - A collection containing functions to run.
	     * Each function is passed a `callback(err, result)` which it must call on
	     * completion with an error `err` (which can be `null`) and an optional `result`
	     * value.
	     * @param {Function} [callback] - An optional callback to run once all the
	     * functions have completed successfully. This function gets a results array
	     * (or object) containing all the result arguments passed to the task callbacks.
	     * Invoked with (err, results).
	     * @example
	     * async.parallel([
	     *     function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'one');
	     *         }, 200);
	     *     },
	     *     function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'two');
	     *         }, 100);
	     *     }
	     * ],
	     * // optional callback
	     * function(err, results) {
	     *     // the results array will equal ['one','two'] even though
	     *     // the second function had a shorter timeout.
	     * });
	     *
	     * // an example using an object instead of an array
	     * async.parallel({
	     *     one: function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 1);
	     *         }, 200);
	     *     },
	     *     two: function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 2);
	     *         }, 100);
	     *     }
	     * }, function(err, results) {
	     *     // results is now equals to: {one: 1, two: 2}
	     * });
	     */
	    function parallelLimit(tasks, callback) {
	        _parallel(eachOf, tasks, callback);
	    }

	    /**
	     * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a
	     * time.
	     *
	     * @name parallelLimit
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.parallel]{@link module:ControlFlow.parallel}
	     * @category Control Flow
	     * @param {Array|Collection} tasks - A collection containing functions to run.
	     * Each function is passed a `callback(err, result)` which it must call on
	     * completion with an error `err` (which can be `null`) and an optional `result`
	     * value.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} [callback] - An optional callback to run once all the
	     * functions have completed successfully. This function gets a results array
	     * (or object) containing all the result arguments passed to the task callbacks.
	     * Invoked with (err, results).
	     */
	    function parallelLimit$1(tasks, limit, callback) {
	        _parallel(_eachOfLimit(limit), tasks, callback);
	    }

	    /**
	     * A queue of tasks for the worker function to complete.
	     * @typedef {Object} QueueObject
	     * @memberOf module:ControlFlow
	     * @property {Function} length - a function returning the number of items
	     * waiting to be processed. Invoke with `queue.length()`.
	     * @property {boolean} started - a boolean indicating whether or not any
	     * items have been pushed and processed by the queue.
	     * @property {Function} running - a function returning the number of items
	     * currently being processed. Invoke with `queue.running()`.
	     * @property {Function} workersList - a function returning the array of items
	     * currently being processed. Invoke with `queue.workersList()`.
	     * @property {Function} idle - a function returning false if there are items
	     * waiting or being processed, or true if not. Invoke with `queue.idle()`.
	     * @property {number} concurrency - an integer for determining how many `worker`
	     * functions should be run in parallel. This property can be changed after a
	     * `queue` is created to alter the concurrency on-the-fly.
	     * @property {Function} push - add a new task to the `queue`. Calls `callback`
	     * once the `worker` has finished processing the task. Instead of a single task,
	     * a `tasks` array can be submitted. The respective callback is used for every
	     * task in the list. Invoke with `queue.push(task, [callback])`,
	     * @property {Function} unshift - add a new task to the front of the `queue`.
	     * Invoke with `queue.unshift(task, [callback])`.
	     * @property {Function} saturated - a callback that is called when the number of
	     * running workers hits the `concurrency` limit, and further tasks will be
	     * queued.
	     * @property {Function} unsaturated - a callback that is called when the number
	     * of running workers is less than the `concurrency` & `buffer` limits, and
	     * further tasks will not be queued.
	     * @property {number} buffer - A minimum threshold buffer in order to say that
	     * the `queue` is `unsaturated`.
	     * @property {Function} empty - a callback that is called when the last item
	     * from the `queue` is given to a `worker`.
	     * @property {Function} drain - a callback that is called when the last item
	     * from the `queue` has returned from the `worker`.
	     * @property {Function} error - a callback that is called when a task errors.
	     * Has the signature `function(error, task)`.
	     * @property {boolean} paused - a boolean for determining whether the queue is
	     * in a paused state.
	     * @property {Function} pause - a function that pauses the processing of tasks
	     * until `resume()` is called. Invoke with `queue.pause()`.
	     * @property {Function} resume - a function that resumes the processing of
	     * queued tasks when the queue is paused. Invoke with `queue.resume()`.
	     * @property {Function} kill - a function that removes the `drain` callback and
	     * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.
	     */

	    /**
	     * Creates a `queue` object with the specified `concurrency`. Tasks added to the
	     * `queue` are processed in parallel (up to the `concurrency` limit). If all
	     * `worker`s are in progress, the task is queued until one becomes available.
	     * Once a `worker` completes a `task`, that `task`'s callback is called.
	     *
	     * @name queue
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Function} worker - An asynchronous function for processing a queued
	     * task, which must call its `callback(err)` argument when finished, with an
	     * optional `error` as an argument.  If you want to handle errors from an
	     * individual task, pass a callback to `q.push()`. Invoked with
	     * (task, callback).
	     * @param {number} [concurrency=1] - An `integer` for determining how many
	     * `worker` functions should be run in parallel.  If omitted, the concurrency
	     * defaults to `1`.  If the concurrency is `0`, an error is thrown.
	     * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can
	     * attached as certain properties to listen for specific events during the
	     * lifecycle of the queue.
	     * @example
	     *
	     * // create a queue object with concurrency 2
	     * var q = async.queue(function(task, callback) {
	     *     console.log('hello ' + task.name);
	     *     callback();
	     * }, 2);
	     *
	     * // assign a callback
	     * q.drain = function() {
	     *     console.log('all items have been processed');
	     * };
	     *
	     * // add some items to the queue
	     * q.push({name: 'foo'}, function(err) {
	     *     console.log('finished processing foo');
	     * });
	     * q.push({name: 'bar'}, function (err) {
	     *     console.log('finished processing bar');
	     * });
	     *
	     * // add some items to the queue (batch-wise)
	     * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {
	     *     console.log('finished processing item');
	     * });
	     *
	     * // add some items to the front of the queue
	     * q.unshift({name: 'bar'}, function (err) {
	     *     console.log('finished processing bar');
	     * });
	     */
	    function queue$1(worker, concurrency) {
	        return queue(function (items, cb) {
	            worker(items[0], cb);
	        }, concurrency, 1);
	    }

	    /**
	     * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and
	     * completed in ascending priority order.
	     *
	     * @name priorityQueue
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.queue]{@link module:ControlFlow.queue}
	     * @category Control Flow
	     * @param {Function} worker - An asynchronous function for processing a queued
	     * task, which must call its `callback(err)` argument when finished, with an
	     * optional `error` as an argument.  If you want to handle errors from an
	     * individual task, pass a callback to `q.push()`. Invoked with
	     * (task, callback).
	     * @param {number} concurrency - An `integer` for determining how many `worker`
	     * functions should be run in parallel.  If omitted, the concurrency defaults to
	     * `1`.  If the concurrency is `0`, an error is thrown.
	     * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two
	     * differences between `queue` and `priorityQueue` objects:
	     * * `push(task, priority, [callback])` - `priority` should be a number. If an
	     *   array of `tasks` is given, all tasks will be assigned the same priority.
	     * * The `unshift` method was removed.
	     */
	    function priorityQueue(worker, concurrency) {
	        // Start with a normal queue
	        var q = queue$1(worker, concurrency);

	        // Override push to accept second parameter representing priority
	        q.push = function (data, priority, callback) {
	            if (callback == null) callback = noop;
	            if (typeof callback !== 'function') {
	                throw new Error('task callback must be a function');
	            }
	            q.started = true;
	            if (!isArray(data)) {
	                data = [data];
	            }
	            if (data.length === 0) {
	                // call drain immediately if there are no tasks
	                return setImmediate$1(function () {
	                    q.drain();
	                });
	            }

	            priority = priority || 0;
	            var nextNode = q._tasks.head;
	            while (nextNode && priority >= nextNode.priority) {
	                nextNode = nextNode.next;
	            }

	            arrayEach(data, function (task) {
	                var item = {
	                    data: task,
	                    priority: priority,
	                    callback: callback
	                };

	                if (nextNode) {
	                    q._tasks.insertBefore(nextNode, item);
	                } else {
	                    q._tasks.push(item);
	                }
	            });
	            setImmediate$1(q.process);
	        };

	        // Remove unshift function
	        delete q.unshift;

	        return q;
	    }

	    /**
	     * Runs the `tasks` array of functions in parallel, without waiting until the
	     * previous function has completed. Once any the `tasks` completed or pass an
	     * error to its callback, the main `callback` is immediately called. It's
	     * equivalent to `Promise.race()`.
	     *
	     * @name race
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Array} tasks - An array containing functions to run. Each function
	     * is passed a `callback(err, result)` which it must call on completion with an
	     * error `err` (which can be `null`) and an optional `result` value.
	     * @param {Function} callback - A callback to run once any of the functions have
	     * completed. This function gets an error or result from the first function that
	     * completed. Invoked with (err, result).
	     * @returns undefined
	     * @example
	     *
	     * async.race([
	     *     function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'one');
	     *         }, 200);
	     *     },
	     *     function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'two');
	     *         }, 100);
	     *     }
	     * ],
	     * // main callback
	     * function(err, result) {
	     *     // the result will be equal to 'two' as it finishes earlier
	     * });
	     */
	    function race(tasks, callback) {
	        callback = once(callback || noop);
	        if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));
	        if (!tasks.length) return callback();
	        arrayEach(tasks, function (task) {
	            task(callback);
	        });
	    }

	    var slice = Array.prototype.slice;

	    /**
	     * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.
	     *
	     * @name reduceRight
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.reduce]{@link module:Collections.reduce}
	     * @alias foldr
	     * @category Collection
	     * @param {Array} array - A collection to iterate over.
	     * @param {*} memo - The initial state of the reduction.
	     * @param {Function} iteratee - A function applied to each item in the
	     * array to produce the next step in the reduction. The `iteratee` is passed a
	     * `callback(err, reduction)` which accepts an optional error as its first
	     * argument, and the state of the reduction as the second. If an error is
	     * passed to the callback, the reduction is stopped and the main `callback` is
	     * immediately called with the error. Invoked with (memo, item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Result is the reduced value. Invoked with
	     * (err, result).
	     */
	    function reduceRight(array, memo, iteratee, callback) {
	        var reversed = slice.call(array).reverse();
	        reduce(reversed, memo, iteratee, callback);
	    }

	    /**
	     * Wraps the function in another function that always returns data even when it
	     * errors.
	     *
	     * The object returned has either the property `error` or `value`.
	     *
	     * @name reflect
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {Function} fn - The function you want to wrap
	     * @returns {Function} - A function that always passes null to it's callback as
	     * the error. The second argument to the callback will be an `object` with
	     * either an `error` or a `value` property.
	     * @example
	     *
	     * async.parallel([
	     *     async.reflect(function(callback) {
	     *         // do some stuff ...
	     *         callback(null, 'one');
	     *     }),
	     *     async.reflect(function(callback) {
	     *         // do some more stuff but error ...
	     *         callback('bad stuff happened');
	     *     }),
	     *     async.reflect(function(callback) {
	     *         // do some more stuff ...
	     *         callback(null, 'two');
	     *     })
	     * ],
	     * // optional callback
	     * function(err, results) {
	     *     // values
	     *     // results[0].value = 'one'
	     *     // results[1].error = 'bad stuff happened'
	     *     // results[2].value = 'two'
	     * });
	     */
	    function reflect(fn) {
	        return initialParams(function reflectOn(args, reflectCallback) {
	            args.push(rest(function callback(err, cbArgs) {
	                if (err) {
	                    reflectCallback(null, {
	                        error: err
	                    });
	                } else {
	                    var value = null;
	                    if (cbArgs.length === 1) {
	                        value = cbArgs[0];
	                    } else if (cbArgs.length > 1) {
	                        value = cbArgs;
	                    }
	                    reflectCallback(null, {
	                        value: value
	                    });
	                }
	            }));

	            return fn.apply(this, args);
	        });
	    }

	    function reject$1(eachfn, arr, iteratee, callback) {
	        _filter(eachfn, arr, function (value, cb) {
	            iteratee(value, function (err, v) {
	                if (err) {
	                    cb(err);
	                } else {
	                    cb(null, !v);
	                }
	            });
	        }, callback);
	    }

	    /**
	     * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.
	     *
	     * @name reject
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.filter]{@link module:Collections.filter}
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Invoked with (err, results).
	     * @example
	     *
	     * async.reject(['file1','file2','file3'], function(filePath, callback) {
	     *     fs.access(filePath, function(err) {
	     *         callback(null, !err)
	     *     });
	     * }, function(err, results) {
	     *     // results now equals an array of missing files
	     *     createFiles(results);
	     * });
	     */
	    var reject = doParallel(reject$1);

	    /**
	     * A helper function that wraps an array or an object of functions with reflect.
	     *
	     * @name reflectAll
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @see [async.reflect]{@link module:Utils.reflect}
	     * @category Util
	     * @param {Array} tasks - The array of functions to wrap in `async.reflect`.
	     * @returns {Array} Returns an array of functions, each function wrapped in
	     * `async.reflect`
	     * @example
	     *
	     * let tasks = [
	     *     function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'one');
	     *         }, 200);
	     *     },
	     *     function(callback) {
	     *         // do some more stuff but error ...
	     *         callback(new Error('bad stuff happened'));
	     *     },
	     *     function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'two');
	     *         }, 100);
	     *     }
	     * ];
	     *
	     * async.parallel(async.reflectAll(tasks),
	     * // optional callback
	     * function(err, results) {
	     *     // values
	     *     // results[0].value = 'one'
	     *     // results[1].error = Error('bad stuff happened')
	     *     // results[2].value = 'two'
	     * });
	     *
	     * // an example using an object instead of an array
	     * let tasks = {
	     *     one: function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'one');
	     *         }, 200);
	     *     },
	     *     two: function(callback) {
	     *         callback('two');
	     *     },
	     *     three: function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 'three');
	     *         }, 100);
	     *     }
	     * };
	     *
	     * async.parallel(async.reflectAll(tasks),
	     * // optional callback
	     * function(err, results) {
	     *     // values
	     *     // results.one.value = 'one'
	     *     // results.two.error = 'two'
	     *     // results.three.value = 'three'
	     * });
	     */
	    function reflectAll(tasks) {
	        var results;
	        if (isArray(tasks)) {
	            results = arrayMap(tasks, reflect);
	        } else {
	            results = {};
	            baseForOwn(tasks, function (task, key) {
	                results[key] = reflect.call(this, task);
	            });
	        }
	        return results;
	    }

	    /**
	     * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a
	     * time.
	     *
	     * @name rejectLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.reject]{@link module:Collections.reject}
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Invoked with (err, results).
	     */
	    var rejectLimit = doParallelLimit(reject$1);

	    /**
	     * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.
	     *
	     * @name rejectSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.reject]{@link module:Collections.reject}
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in `coll`.
	     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
	     * with a boolean argument once it has completed. Invoked with (item, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Invoked with (err, results).
	     */
	    var rejectSeries = doLimit(rejectLimit, 1);

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */
	    function constant$1(value) {
	        return function () {
	            return value;
	        };
	    }

	    /**
	     * Attempts to get a successful response from `task` no more than `times` times
	     * before returning an error. If the task is successful, the `callback` will be
	     * passed the result of the successful task. If all attempts fail, the callback
	     * will be passed the error and result (if any) of the final attempt.
	     *
	     * @name retry
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an
	     * object with `times` and `interval` or a number.
	     * * `times` - The number of attempts to make before giving up.  The default
	     *   is `5`.
	     * * `interval` - The time to wait between retries, in milliseconds.  The
	     *   default is `0`. The interval may also be specified as a function of the
	     *   retry count (see example).
	     * * If `opts` is a number, the number specifies the number of times to retry,
	     *   with the default interval of `0`.
	     * @param {Function} task - A function which receives two arguments: (1) a
	     * `callback(err, result)` which must be called when finished, passing `err`
	     * (which can be `null`) and the `result` of the function's execution, and (2)
	     * a `results` object, containing the results of the previously executed
	     * functions (if nested inside another control flow). Invoked with
	     * (callback, results).
	     * @param {Function} [callback] - An optional callback which is called when the
	     * task has succeeded, or after the final failed attempt. It receives the `err`
	     * and `result` arguments of the last attempt at completing the `task`. Invoked
	     * with (err, results).
	     * @example
	     *
	     * // The `retry` function can be used as a stand-alone control flow by passing
	     * // a callback, as shown below:
	     *
	     * // try calling apiMethod 3 times
	     * async.retry(3, apiMethod, function(err, result) {
	     *     // do something with the result
	     * });
	     *
	     * // try calling apiMethod 3 times, waiting 200 ms between each retry
	     * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {
	     *     // do something with the result
	     * });
	     *
	     * // try calling apiMethod 10 times with exponential backoff
	     * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)
	     * async.retry({
	     *   times: 10,
	     *   interval: function(retryCount) {
	     *     return 50 * Math.pow(2, retryCount);
	     *   }
	     * }, apiMethod, function(err, result) {
	     *     // do something with the result
	     * });
	     *
	     * // try calling apiMethod the default 5 times no delay between each retry
	     * async.retry(apiMethod, function(err, result) {
	     *     // do something with the result
	     * });
	     *
	     * // It can also be embedded within other control flow functions to retry
	     * // individual methods that are not as reliable, like this:
	     * async.auto({
	     *     users: api.getUsers.bind(api),
	     *     payments: async.retry(3, api.getPayments.bind(api))
	     * }, function(err, results) {
	     *     // do something with the results
	     * });
	     */
	    function retry(opts, task, callback) {
	        var DEFAULT_TIMES = 5;
	        var DEFAULT_INTERVAL = 0;

	        var options = {
	            times: DEFAULT_TIMES,
	            intervalFunc: constant$1(DEFAULT_INTERVAL)
	        };

	        function parseTimes(acc, t) {
	            if ((typeof t === 'undefined' ? 'undefined' : _typeof(t)) === 'object') {
	                acc.times = +t.times || DEFAULT_TIMES;

	                acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);
	            } else if (typeof t === 'number' || typeof t === 'string') {
	                acc.times = +t || DEFAULT_TIMES;
	            } else {
	                throw new Error("Invalid arguments for async.retry");
	            }
	        }

	        if (arguments.length < 3 && typeof opts === 'function') {
	            callback = task || noop;
	            task = opts;
	        } else {
	            parseTimes(options, opts);
	            callback = callback || noop;
	        }

	        if (typeof task !== 'function') {
	            throw new Error("Invalid arguments for async.retry");
	        }

	        var attempt = 1;
	        function retryAttempt() {
	            task(function (err) {
	                if (err && attempt++ < options.times) {
	                    setTimeout(retryAttempt, options.intervalFunc(attempt));
	                } else {
	                    callback.apply(null, arguments);
	                }
	            });
	        }

	        retryAttempt();
	    }

	    /**
	     * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it
	     * retryable, rather than immediately calling it with retries.
	     *
	     * @name retryable
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.retry]{@link module:ControlFlow.retry}
	     * @category Control Flow
	     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional
	     * options, exactly the same as from `retry`
	     * @param {Function} task - the asynchronous function to wrap
	     * @returns {Functions} The wrapped function, which when invoked, will retry on
	     * an error, based on the parameters specified in `opts`.
	     * @example
	     *
	     * async.auto({
	     *     dep1: async.retryable(3, getFromFlakyService),
	     *     process: ["dep1", async.retryable(3, function (results, cb) {
	     *         maybeProcessData(results.dep1, cb);
	     *     })]
	     * }, callback);
	     */
	    function retryable(opts, task) {
	        if (!task) {
	            task = opts;
	            opts = null;
	        }
	        return initialParams(function (args, callback) {
	            function taskFn(cb) {
	                task.apply(null, args.concat([cb]));
	            }

	            if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);
	        });
	    }

	    /**
	     * Run the functions in the `tasks` collection in series, each one running once
	     * the previous function has completed. If any functions in the series pass an
	     * error to its callback, no more functions are run, and `callback` is
	     * immediately called with the value of the error. Otherwise, `callback`
	     * receives an array of results when `tasks` have completed.
	     *
	     * It is also possible to use an object instead of an array. Each property will
	     * be run as a function, and the results will be passed to the final `callback`
	     * as an object instead of an array. This can be a more readable way of handling
	     *  results from {@link async.series}.
	     *
	     * **Note** that while many implementations preserve the order of object
	     * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)
	     * explicitly states that
	     *
	     * > The mechanics and order of enumerating the properties is not specified.
	     *
	     * So if you rely on the order in which your series of functions are executed,
	     * and want this to work on all platforms, consider using an array.
	     *
	     * @name series
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each
	     * function is passed a `callback(err, result)` it must call on completion with
	     * an error `err` (which can be `null`) and an optional `result` value.
	     * @param {Function} [callback] - An optional callback to run once all the
	     * functions have completed. This function gets a results array (or object)
	     * containing all the result arguments passed to the `task` callbacks. Invoked
	     * with (err, result).
	     * @example
	     * async.series([
	     *     function(callback) {
	     *         // do some stuff ...
	     *         callback(null, 'one');
	     *     },
	     *     function(callback) {
	     *         // do some more stuff ...
	     *         callback(null, 'two');
	     *     }
	     * ],
	     * // optional callback
	     * function(err, results) {
	     *     // results is now equal to ['one', 'two']
	     * });
	     *
	     * async.series({
	     *     one: function(callback) {
	     *         setTimeout(function() {
	     *             callback(null, 1);
	     *         }, 200);
	     *     },
	     *     two: function(callback){
	     *         setTimeout(function() {
	     *             callback(null, 2);
	     *         }, 100);
	     *     }
	     * }, function(err, results) {
	     *     // results is now equal to: {one: 1, two: 2}
	     * });
	     */
	    function series(tasks, callback) {
	        _parallel(eachOfSeries, tasks, callback);
	    }

	    /**
	     * Returns `true` if at least one element in the `coll` satisfies an async test.
	     * If any iteratee call returns `true`, the main `callback` is immediately
	     * called.
	     *
	     * @name some
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @alias any
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in the array
	     * in parallel. The iteratee is passed a `callback(err, truthValue)` which must
	     * be called with a boolean argument once it has completed. Invoked with
	     * (item, callback).
	     * @param {Function} [callback] - A callback which is called as soon as any
	     * iteratee returns `true`, or after all the iteratee functions have finished.
	     * Result will be either `true` or `false` depending on the values of the async
	     * tests. Invoked with (err, result).
	     * @example
	     *
	     * async.some(['file1','file2','file3'], function(filePath, callback) {
	     *     fs.access(filePath, function(err) {
	     *         callback(null, !err)
	     *     });
	     * }, function(err, result) {
	     *     // if result is true then at least one of the files exists
	     * });
	     */
	    var some = _createTester(eachOf, Boolean, identity);

	    /**
	     * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.
	     *
	     * @name someLimit
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.some]{@link module:Collections.some}
	     * @alias anyLimit
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - A truth test to apply to each item in the array
	     * in parallel. The iteratee is passed a `callback(err, truthValue)` which must
	     * be called with a boolean argument once it has completed. Invoked with
	     * (item, callback).
	     * @param {Function} [callback] - A callback which is called as soon as any
	     * iteratee returns `true`, or after all the iteratee functions have finished.
	     * Result will be either `true` or `false` depending on the values of the async
	     * tests. Invoked with (err, result).
	     */
	    var someLimit = _createTester(eachOfLimit, Boolean, identity);

	    /**
	     * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.
	     *
	     * @name someSeries
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @see [async.some]{@link module:Collections.some}
	     * @alias anySeries
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A truth test to apply to each item in the array
	     * in parallel. The iteratee is passed a `callback(err, truthValue)` which must
	     * be called with a boolean argument once it has completed. Invoked with
	     * (item, callback).
	     * @param {Function} [callback] - A callback which is called as soon as any
	     * iteratee returns `true`, or after all the iteratee functions have finished.
	     * Result will be either `true` or `false` depending on the values of the async
	     * tests. Invoked with (err, result).
	     */
	    var someSeries = doLimit(someLimit, 1);

	    /**
	     * Sorts a list by the results of running each `coll` value through an async
	     * `iteratee`.
	     *
	     * @name sortBy
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {Function} iteratee - A function to apply to each item in `coll`.
	     * The iteratee is passed a `callback(err, sortValue)` which must be called once
	     * it has completed with an error (which can be `null`) and a value to use as
	     * the sort criteria. Invoked with (item, callback).
	     * @param {Function} callback - A callback which is called after all the
	     * `iteratee` functions have finished, or an error occurs. Results is the items
	     * from the original `coll` sorted by the values returned by the `iteratee`
	     * calls. Invoked with (err, results).
	     * @example
	     *
	     * async.sortBy(['file1','file2','file3'], function(file, callback) {
	     *     fs.stat(file, function(err, stats) {
	     *         callback(err, stats.mtime);
	     *     });
	     * }, function(err, results) {
	     *     // results is now the original array of files sorted by
	     *     // modified date
	     * });
	     *
	     * // By modifying the callback parameter the
	     * // sorting order can be influenced:
	     *
	     * // ascending order
	     * async.sortBy([1,9,3,5], function(x, callback) {
	     *     callback(null, x);
	     * }, function(err,result) {
	     *     // result callback
	     * });
	     *
	     * // descending order
	     * async.sortBy([1,9,3,5], function(x, callback) {
	     *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around
	     * }, function(err,result) {
	     *     // result callback
	     * });
	     */
	    function sortBy(coll, iteratee, callback) {
	        map(coll, function (x, callback) {
	            iteratee(x, function (err, criteria) {
	                if (err) return callback(err);
	                callback(null, { value: x, criteria: criteria });
	            });
	        }, function (err, results) {
	            if (err) return callback(err);
	            callback(null, arrayMap(results.sort(comparator), baseProperty('value')));
	        });

	        function comparator(left, right) {
	            var a = left.criteria,
	                b = right.criteria;
	            return a < b ? -1 : a > b ? 1 : 0;
	        }
	    }

	    /**
	     * Sets a time limit on an asynchronous function. If the function does not call
	     * its callback within the specified milliseconds, it will be called with a
	     * timeout error. The code property for the error object will be `'ETIMEDOUT'`.
	     *
	     * @name timeout
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @category Util
	     * @param {Function} asyncFn - The asynchronous function you want to set the
	     * time limit.
	     * @param {number} milliseconds - The specified time limit.
	     * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)
	     * to timeout Error for more information..
	     * @returns {Function} Returns a wrapped function that can be used with any of
	     * the control flow functions.
	     * @example
	     *
	     * async.timeout(function(callback) {
	     *     doAsyncTask(callback);
	     * }, 1000);
	     */
	    function timeout(asyncFn, milliseconds, info) {
	        var originalCallback, timer;
	        var timedOut = false;

	        function injectedCallback() {
	            if (!timedOut) {
	                originalCallback.apply(null, arguments);
	                clearTimeout(timer);
	            }
	        }

	        function timeoutCallback() {
	            var name = asyncFn.name || 'anonymous';
	            var error = new Error('Callback function "' + name + '" timed out.');
	            error.code = 'ETIMEDOUT';
	            if (info) {
	                error.info = info;
	            }
	            timedOut = true;
	            originalCallback(error);
	        }

	        return initialParams(function (args, origCallback) {
	            originalCallback = origCallback;
	            // setup timer and call original function
	            timer = setTimeout(timeoutCallback, milliseconds);
	            asyncFn.apply(null, args.concat(injectedCallback));
	        });
	    }

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil;
	    var nativeMax$1 = Math.max;
	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	        var index = -1,
	            length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),
	            result = Array(length);

	        while (length--) {
	            result[fromRight ? length : ++index] = start;
	            start += step;
	        }
	        return result;
	    }

	    /**
	     * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a
	     * time.
	     *
	     * @name timesLimit
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.times]{@link module:ControlFlow.times}
	     * @category Control Flow
	     * @param {number} count - The number of times to run the function.
	     * @param {number} limit - The maximum number of async operations at a time.
	     * @param {Function} iteratee - The function to call `n` times. Invoked with the
	     * iteration index and a callback (n, next).
	     * @param {Function} callback - see [async.map]{@link module:Collections.map}.
	     */
	    function timeLimit(count, limit, iteratee, callback) {
	        mapLimit(baseRange(0, count, 1), limit, iteratee, callback);
	    }

	    /**
	     * Calls the `iteratee` function `n` times, and accumulates results in the same
	     * manner you would use with [map]{@link module:Collections.map}.
	     *
	     * @name times
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.map]{@link module:Collections.map}
	     * @category Control Flow
	     * @param {number} n - The number of times to run the function.
	     * @param {Function} iteratee - The function to call `n` times. Invoked with the
	     * iteration index and a callback (n, next).
	     * @param {Function} callback - see {@link module:Collections.map}.
	     * @example
	     *
	     * // Pretend this is some complicated async factory
	     * var createUser = function(id, callback) {
	     *     callback(null, {
	     *         id: 'user' + id
	     *     });
	     * };
	     *
	     * // generate 5 users
	     * async.times(5, function(n, next) {
	     *     createUser(n, function(err, user) {
	     *         next(err, user);
	     *     });
	     * }, function(err, users) {
	     *     // we should now have 5 users
	     * });
	     */
	    var times = doLimit(timeLimit, Infinity);

	    /**
	     * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.
	     *
	     * @name timesSeries
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.times]{@link module:ControlFlow.times}
	     * @category Control Flow
	     * @param {number} n - The number of times to run the function.
	     * @param {Function} iteratee - The function to call `n` times. Invoked with the
	     * iteration index and a callback (n, next).
	     * @param {Function} callback - see {@link module:Collections.map}.
	     */
	    var timesSeries = doLimit(timeLimit, 1);

	    /**
	     * A relative of `reduce`.  Takes an Object or Array, and iterates over each
	     * element in series, each step potentially mutating an `accumulator` value.
	     * The type of the accumulator defaults to the type of collection passed in.
	     *
	     * @name transform
	     * @static
	     * @memberOf module:Collections
	     * @method
	     * @category Collection
	     * @param {Array|Iterable|Object} coll - A collection to iterate over.
	     * @param {*} [accumulator] - The initial state of the transform.  If omitted,
	     * it will default to an empty Object or Array, depending on the type of `coll`
	     * @param {Function} iteratee - A function applied to each item in the
	     * collection that potentially modifies the accumulator. The `iteratee` is
	     * passed a `callback(err)` which accepts an optional error as its first
	     * argument. If an error is passed to the callback, the transform is stopped
	     * and the main `callback` is immediately called with the error.
	     * Invoked with (accumulator, item, key, callback).
	     * @param {Function} [callback] - A callback which is called after all the
	     * `iteratee` functions have finished. Result is the transformed accumulator.
	     * Invoked with (err, result).
	     * @example
	     *
	     * async.transform([1,2,3], function(acc, item, index, callback) {
	     *     // pointless async:
	     *     process.nextTick(function() {
	     *         acc.push(item * 2)
	     *         callback(null)
	     *     });
	     * }, function(err, result) {
	     *     // result is now equal to [2, 4, 6]
	     * });
	     *
	     * @example
	     *
	     * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {
	     *     setImmediate(function () {
	     *         obj[key] = val * 2;
	     *         callback();
	     *     })
	     * }, function (err, result) {
	     *     // result is equal to {a: 2, b: 4, c: 6}
	     * })
	     */
	    function transform(coll, accumulator, iteratee, callback) {
	        if (arguments.length === 3) {
	            callback = iteratee;
	            iteratee = accumulator;
	            accumulator = isArray(coll) ? [] : {};
	        }
	        callback = once(callback || noop);

	        eachOf(coll, function (v, k, cb) {
	            iteratee(accumulator, v, k, cb);
	        }, function (err) {
	            callback(err, accumulator);
	        });
	    }

	    /**
	     * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,
	     * unmemoized form. Handy for testing.
	     *
	     * @name unmemoize
	     * @static
	     * @memberOf module:Utils
	     * @method
	     * @see [async.memoize]{@link module:Utils.memoize}
	     * @category Util
	     * @param {Function} fn - the memoized function
	     * @returns {Function} a function that calls the original unmemoized function
	     */
	    function unmemoize(fn) {
	        return function () {
	            return (fn.unmemoized || fn).apply(null, arguments);
	        };
	    }

	    /**
	     * Repeatedly call `fn`, while `test` returns `true`. Calls `callback` when
	     * stopped, or an error occurs.
	     *
	     * @name whilst
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Function} test - synchronous truth test to perform before each
	     * execution of `fn`. Invoked with ().
	     * @param {Function} iteratee - A function which is called each time `test` passes.
	     * The function is passed a `callback(err)`, which must be called once it has
	     * completed with an optional `err` argument. Invoked with (callback).
	     * @param {Function} [callback] - A callback which is called after the test
	     * function has failed and repeated execution of `fn` has stopped. `callback`
	     * will be passed an error and any arguments passed to the final `fn`'s
	     * callback. Invoked with (err, [results]);
	     * @returns undefined
	     * @example
	     *
	     * var count = 0;
	     * async.whilst(
	     *     function() { return count < 5; },
	     *     function(callback) {
	     *         count++;
	     *         setTimeout(function() {
	     *             callback(null, count);
	     *         }, 1000);
	     *     },
	     *     function (err, n) {
	     *         // 5 seconds have passed, n = 5
	     *     }
	     * );
	     */
	    function whilst(test, iteratee, callback) {
	        callback = onlyOnce(callback || noop);
	        if (!test()) return callback(null);
	        var next = rest(function (err, args) {
	            if (err) return callback(err);
	            if (test()) return iteratee(next);
	            callback.apply(null, [null].concat(args));
	        });
	        iteratee(next);
	    }

	    /**
	     * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when
	     * stopped, or an error occurs. `callback` will be passed an error and any
	     * arguments passed to the final `fn`'s callback.
	     *
	     * The inverse of [whilst]{@link module:ControlFlow.whilst}.
	     *
	     * @name until
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @see [async.whilst]{@link module:ControlFlow.whilst}
	     * @category Control Flow
	     * @param {Function} test - synchronous truth test to perform before each
	     * execution of `fn`. Invoked with ().
	     * @param {Function} fn - A function which is called each time `test` fails.
	     * The function is passed a `callback(err)`, which must be called once it has
	     * completed with an optional `err` argument. Invoked with (callback).
	     * @param {Function} [callback] - A callback which is called after the test
	     * function has passed and repeated execution of `fn` has stopped. `callback`
	     * will be passed an error and any arguments passed to the final `fn`'s
	     * callback. Invoked with (err, [results]);
	     */
	    function until(test, fn, callback) {
	        whilst(function () {
	            return !test.apply(this, arguments);
	        }, fn, callback);
	    }

	    /**
	     * Runs the `tasks` array of functions in series, each passing their results to
	     * the next in the array. However, if any of the `tasks` pass an error to their
	     * own callback, the next function is not executed, and the main `callback` is
	     * immediately called with the error.
	     *
	     * @name waterfall
	     * @static
	     * @memberOf module:ControlFlow
	     * @method
	     * @category Control Flow
	     * @param {Array} tasks - An array of functions to run, each function is passed
	     * a `callback(err, result1, result2, ...)` it must call on completion. The
	     * first argument is an error (which can be `null`) and any further arguments
	     * will be passed as arguments in order to the next task.
	     * @param {Function} [callback] - An optional callback to run once all the
	     * functions have completed. This will be passed the results of the last task's
	     * callback. Invoked with (err, [results]).
	     * @returns undefined
	     * @example
	     *
	     * async.waterfall([
	     *     function(callback) {
	     *         callback(null, 'one', 'two');
	     *     },
	     *     function(arg1, arg2, callback) {
	     *         // arg1 now equals 'one' and arg2 now equals 'two'
	     *         callback(null, 'three');
	     *     },
	     *     function(arg1, callback) {
	     *         // arg1 now equals 'three'
	     *         callback(null, 'done');
	     *     }
	     * ], function (err, result) {
	     *     // result now equals 'done'
	     * });
	     *
	     * // Or, with named functions:
	     * async.waterfall([
	     *     myFirstFunction,
	     *     mySecondFunction,
	     *     myLastFunction,
	     * ], function (err, result) {
	     *     // result now equals 'done'
	     * });
	     * function myFirstFunction(callback) {
	     *     callback(null, 'one', 'two');
	     * }
	     * function mySecondFunction(arg1, arg2, callback) {
	     *     // arg1 now equals 'one' and arg2 now equals 'two'
	     *     callback(null, 'three');
	     * }
	     * function myLastFunction(arg1, callback) {
	     *     // arg1 now equals 'three'
	     *     callback(null, 'done');
	     * }
	     */
	    function waterfall(tasks, callback) {
	        callback = once(callback || noop);
	        if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));
	        if (!tasks.length) return callback();
	        var taskIndex = 0;

	        function nextTask(args) {
	            if (taskIndex === tasks.length) {
	                return callback.apply(null, [null].concat(args));
	            }

	            var taskCallback = onlyOnce(rest(function (err, args) {
	                if (err) {
	                    return callback.apply(null, [err].concat(args));
	                }
	                nextTask(args);
	            }));

	            args.push(taskCallback);

	            var task = tasks[taskIndex++];
	            task.apply(null, args);
	        }

	        nextTask([]);
	    }

	    var index = {
	        applyEach: applyEach,
	        applyEachSeries: applyEachSeries,
	        apply: apply$1,
	        asyncify: asyncify,
	        auto: auto,
	        autoInject: autoInject,
	        cargo: cargo,
	        compose: compose,
	        concat: concat,
	        concatSeries: concatSeries,
	        constant: constant,
	        detect: detect,
	        detectLimit: detectLimit,
	        detectSeries: detectSeries,
	        dir: dir,
	        doDuring: doDuring,
	        doUntil: doUntil,
	        doWhilst: doWhilst,
	        during: during,
	        each: eachLimit,
	        eachLimit: eachLimit$1,
	        eachOf: eachOf,
	        eachOfLimit: eachOfLimit,
	        eachOfSeries: eachOfSeries,
	        eachSeries: eachSeries,
	        ensureAsync: ensureAsync,
	        every: every,
	        everyLimit: everyLimit,
	        everySeries: everySeries,
	        filter: filter,
	        filterLimit: filterLimit,
	        filterSeries: filterSeries,
	        forever: forever,
	        log: log,
	        map: map,
	        mapLimit: mapLimit,
	        mapSeries: mapSeries,
	        mapValues: mapValues,
	        mapValuesLimit: mapValuesLimit,
	        mapValuesSeries: mapValuesSeries,
	        memoize: memoize,
	        nextTick: nextTick,
	        parallel: parallelLimit,
	        parallelLimit: parallelLimit$1,
	        priorityQueue: priorityQueue,
	        queue: queue$1,
	        race: race,
	        reduce: reduce,
	        reduceRight: reduceRight,
	        reflect: reflect,
	        reflectAll: reflectAll,
	        reject: reject,
	        rejectLimit: rejectLimit,
	        rejectSeries: rejectSeries,
	        retry: retry,
	        retryable: retryable,
	        seq: seq,
	        series: series,
	        setImmediate: setImmediate$1,
	        some: some,
	        someLimit: someLimit,
	        someSeries: someSeries,
	        sortBy: sortBy,
	        timeout: timeout,
	        times: times,
	        timesLimit: timeLimit,
	        timesSeries: timesSeries,
	        transform: transform,
	        unmemoize: unmemoize,
	        until: until,
	        waterfall: waterfall,
	        whilst: whilst,

	        // aliases
	        all: every,
	        any: some,
	        forEach: eachLimit,
	        forEachSeries: eachSeries,
	        forEachLimit: eachLimit$1,
	        forEachOf: eachOf,
	        forEachOfSeries: eachOfSeries,
	        forEachOfLimit: eachOfLimit,
	        inject: reduce,
	        foldl: reduce,
	        foldr: reduceRight,
	        select: filter,
	        selectLimit: filterLimit,
	        selectSeries: filterSeries,
	        wrapSync: asyncify
	    };

	    exports['default'] = index;
	    exports.applyEach = applyEach;
	    exports.applyEachSeries = applyEachSeries;
	    exports.apply = apply$1;
	    exports.asyncify = asyncify;
	    exports.auto = auto;
	    exports.autoInject = autoInject;
	    exports.cargo = cargo;
	    exports.compose = compose;
	    exports.concat = concat;
	    exports.concatSeries = concatSeries;
	    exports.constant = constant;
	    exports.detect = detect;
	    exports.detectLimit = detectLimit;
	    exports.detectSeries = detectSeries;
	    exports.dir = dir;
	    exports.doDuring = doDuring;
	    exports.doUntil = doUntil;
	    exports.doWhilst = doWhilst;
	    exports.during = during;
	    exports.each = eachLimit;
	    exports.eachLimit = eachLimit$1;
	    exports.eachOf = eachOf;
	    exports.eachOfLimit = eachOfLimit;
	    exports.eachOfSeries = eachOfSeries;
	    exports.eachSeries = eachSeries;
	    exports.ensureAsync = ensureAsync;
	    exports.every = every;
	    exports.everyLimit = everyLimit;
	    exports.everySeries = everySeries;
	    exports.filter = filter;
	    exports.filterLimit = filterLimit;
	    exports.filterSeries = filterSeries;
	    exports.forever = forever;
	    exports.log = log;
	    exports.map = map;
	    exports.mapLimit = mapLimit;
	    exports.mapSeries = mapSeries;
	    exports.mapValues = mapValues;
	    exports.mapValuesLimit = mapValuesLimit;
	    exports.mapValuesSeries = mapValuesSeries;
	    exports.memoize = memoize;
	    exports.nextTick = nextTick;
	    exports.parallel = parallelLimit;
	    exports.parallelLimit = parallelLimit$1;
	    exports.priorityQueue = priorityQueue;
	    exports.queue = queue$1;
	    exports.race = race;
	    exports.reduce = reduce;
	    exports.reduceRight = reduceRight;
	    exports.reflect = reflect;
	    exports.reflectAll = reflectAll;
	    exports.reject = reject;
	    exports.rejectLimit = rejectLimit;
	    exports.rejectSeries = rejectSeries;
	    exports.retry = retry;
	    exports.retryable = retryable;
	    exports.seq = seq;
	    exports.series = series;
	    exports.setImmediate = setImmediate$1;
	    exports.some = some;
	    exports.someLimit = someLimit;
	    exports.someSeries = someSeries;
	    exports.sortBy = sortBy;
	    exports.timeout = timeout;
	    exports.times = times;
	    exports.timesLimit = timeLimit;
	    exports.timesSeries = timesSeries;
	    exports.transform = transform;
	    exports.unmemoize = unmemoize;
	    exports.until = until;
	    exports.waterfall = waterfall;
	    exports.whilst = whilst;
	    exports.all = every;
	    exports.allLimit = everyLimit;
	    exports.allSeries = everySeries;
	    exports.any = some;
	    exports.anyLimit = someLimit;
	    exports.anySeries = someSeries;
	    exports.find = detect;
	    exports.findLimit = detectLimit;
	    exports.findSeries = detectSeries;
	    exports.forEach = eachLimit;
	    exports.forEachSeries = eachSeries;
	    exports.forEachLimit = eachLimit$1;
	    exports.forEachOf = eachOf;
	    exports.forEachOfSeries = eachOfSeries;
	    exports.forEachOfLimit = eachOfLimit;
	    exports.inject = reduce;
	    exports.foldl = reduce;
	    exports.foldr = reduceRight;
	    exports.select = filter;
	    exports.selectLimit = filterLimit;
	    exports.selectSeries = filterSeries;
	    exports.wrapSync = asyncify;
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(218).setImmediate, __webpack_require__(64)))

/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	__webpack_require__(847);

	__webpack_require__(1004);

	__webpack_require__(667);

	/* eslint max-len: 0 */

	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel-polyfill is allowed");
	}
	global._babelPolyfill = true;

	// Should be removed in the next major release:

	var DEFINE_PROPERTY = "defineProperty";
	function define(O, key, value) {
	  O[key] || Object[DEFINE_PROPERTY](O, key, {
	    writable: true,
	    configurable: true,
	    value: value
	  });
	}

	define(String.prototype, "padLeft", "".padStart);
	define(String.prototype, "padRight", "".padEnd);

	"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
	  [][key] && define(Array, key, Function.call.bind([][key]));
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(676);
	module.exports = __webpack_require__(52).RegExp.escape;

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isObject = __webpack_require__(13),
	    isArray = __webpack_require__(161),
	    SPECIES = __webpack_require__(14)('species');

	module.exports = function (original) {
	  var C;
	  if (isArray(original)) {
	    C = original.constructor;
	    // cross-realm fallback
	    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
	    if (isObject(C)) {
	      C = C[SPECIES];
	      if (C === null) C = undefined;
	    }
	  }return C === undefined ? Array : C;
	};

/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(668);

	module.exports = function (original, length) {
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var anObject = __webpack_require__(6),
	    toPrimitive = __webpack_require__(50),
	    NUMBER = 'number';

	module.exports = function (hint) {
	  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 671 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(74),
	    gOPS = __webpack_require__(124),
	    pIE = __webpack_require__(103);
	module.exports = function (it) {
	  var result = getKeys(it),
	      getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it),
	        isEnum = pIE.f,
	        i = 0,
	        key;
	    while (symbols.length > i) {
	      if (isEnum.call(it, key = symbols[i++])) result.push(key);
	    }
	  }return result;
	};

/***/ },
/* 672 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getKeys = __webpack_require__(74),
	    toIObject = __webpack_require__(34);
	module.exports = function (object, el) {
	  var O = toIObject(object),
	      keys = getKeys(O),
	      length = keys.length,
	      index = 0,
	      key;
	  while (length > index) {
	    if (O[key = keys[index++]] === el) return key;
	  }
	};

/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var path = __webpack_require__(674),
	    invoke = __webpack_require__(120),
	    aFunction = __webpack_require__(30);
	module.exports = function () /* ...pargs */{
	  var fn = aFunction(this),
	      length = arguments.length,
	      pargs = Array(length),
	      i = 0,
	      _ = path._,
	      holder = false;
	  while (length > i) {
	    if ((pargs[i] = arguments[i++]) === _) holder = true;
	  }return function () /* ...args */{
	    var that = this,
	        aLen = arguments.length,
	        j = 0,
	        k = 0,
	        args;
	    if (!holder && !aLen) return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if (holder) for (; length > j; j++) {
	      if (args[j] === _) args[j] = arguments[k++];
	    }while (aLen > k) {
	      args.push(arguments[k++]);
	    }return invoke(fn, args, that);
	  };
	};

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(10);

/***/ },
/* 675 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (regExp, replace) {
	  var replacer = replace === Object(replace) ? function (part) {
	    return replace[part];
	  } : replace;
	  return function (it) {
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(3),
	    $re = __webpack_require__(675)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

	$export($export.S, 'RegExp', { escape: function escape(it) {
	    return $re(it);
	  } });

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(3);

	$export($export.P, 'Array', { copyWithin: __webpack_require__(263) });

	__webpack_require__(85)('copyWithin');

/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $every = __webpack_require__(48)(4);

	$export($export.P + $export.F * !__webpack_require__(42)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */) {
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(3);

	$export($export.P, 'Array', { fill: __webpack_require__(153) });

	__webpack_require__(85)('fill');

/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $filter = __webpack_require__(48)(2);

	$export($export.P + $export.F * !__webpack_require__(42)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */) {
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 681 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)

	var $export = __webpack_require__(3),
	    $find = __webpack_require__(48)(6),
	    KEY = 'findIndex',
	    forced = true;
	// Shouldn't skip holes
	if (KEY in []) Array(1)[KEY](function () {
	  forced = false;
	});
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn /*, that = undefined */) {
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(85)(KEY);

/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)

	var $export = __webpack_require__(3),
	    $find = __webpack_require__(48)(5),
	    KEY = 'find',
	    forced = true;
	// Shouldn't skip holes
	if (KEY in []) Array(1)[KEY](function () {
	  forced = false;
	});
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn /*, that = undefined */) {
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(85)(KEY);

/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $forEach = __webpack_require__(48)(0),
	    STRICT = __webpack_require__(42)([].forEach, true);

	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */) {
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 684 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ctx = __webpack_require__(53),
	    $export = __webpack_require__(3),
	    toObject = __webpack_require__(23),
	    call = __webpack_require__(272),
	    isArrayIter = __webpack_require__(160),
	    toLength = __webpack_require__(22),
	    createProperty = __webpack_require__(154),
	    getIterFn = __webpack_require__(177);

	$export($export.S + $export.F * !__webpack_require__(122)(function (iter) {
	  Array.from(iter);
	}), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike /*, mapfn = undefined, thisArg = undefined*/) {
	    var O = toObject(arrayLike),
	        C = typeof this == 'function' ? this : Array,
	        aLen = arguments.length,
	        mapfn = aLen > 1 ? arguments[1] : undefined,
	        mapping = mapfn !== undefined,
	        index = 0,
	        iterFn = getIterFn(O),
	        length,
	        result,
	        step,
	        iterator;
	    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
	      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for (result = new C(length); length > index; index++) {
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});

/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $indexOf = __webpack_require__(116)(false),
	    $native = [].indexOf,
	    NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(42)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */) {
	    return NEGATIVE_ZERO
	    // convert -0 to +0
	    ? $native.apply(this, arguments) || 0 : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(3);

	$export($export.S, 'Array', { isArray: __webpack_require__(161) });

/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)

	var $export = __webpack_require__(3),
	    toIObject = __webpack_require__(34),
	    arrayJoin = [].join;

	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(102) != Object || !__webpack_require__(42)(arrayJoin)), 'Array', {
	  join: function join(separator) {
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toIObject = __webpack_require__(34),
	    toInteger = __webpack_require__(62),
	    toLength = __webpack_require__(22),
	    $native = [].lastIndexOf,
	    NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(42)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */) {
	    // convert -0 to +0
	    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
	    var O = toIObject(this),
	        length = toLength(O.length),
	        index = length - 1;
	    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
	    if (index < 0) index = length + index;
	    for (; index >= 0; index--) {
	      if (index in O) if (O[index] === searchElement) return index || 0;
	    }return -1;
	  }
	});

/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $map = __webpack_require__(48)(1);

	$export($export.P + $export.F * !__webpack_require__(42)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */) {
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    createProperty = __webpack_require__(154);

	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(12)(function () {
	  function F() {}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of() /* ...args */{
	    var index = 0,
	        aLen = arguments.length,
	        result = new (typeof this == 'function' ? this : Array)(aLen);
	    while (aLen > index) {
	      createProperty(result, index, arguments[index++]);
	    }result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $reduce = __webpack_require__(265);

	$export($export.P + $export.F * !__webpack_require__(42)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $reduce = __webpack_require__(265);

	$export($export.P + $export.F * !__webpack_require__(42)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */) {
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    html = __webpack_require__(158),
	    cof = __webpack_require__(40),
	    toIndex = __webpack_require__(77),
	    toLength = __webpack_require__(22),
	    arraySlice = [].slice;

	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(12)(function () {
	  if (html) arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end) {
	    var len = toLength(this.length),
	        klass = cof(this);
	    end = end === undefined ? len : end;
	    if (klass == 'Array') return arraySlice.call(this, begin, end);
	    var start = toIndex(begin, len),
	        upTo = toIndex(end, len),
	        size = toLength(upTo - start),
	        cloned = Array(size),
	        i = 0;
	    for (; i < size; i++) {
	      cloned[i] = klass == 'String' ? this.charAt(start + i) : this[start + i];
	    }return cloned;
	  }
	});

/***/ },
/* 694 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $some = __webpack_require__(48)(3);

	$export($export.P + $export.F * !__webpack_require__(42)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */) {
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    aFunction = __webpack_require__(30),
	    toObject = __webpack_require__(23),
	    fails = __webpack_require__(12),
	    $sort = [].sort,
	    test = [1, 2, 3];

	$export($export.P + $export.F * (fails(function () {
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function () {
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(42)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn) {
	    return comparefn === undefined ? $sort.call(toObject(this)) : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 696 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(76)('Array');

/***/ },
/* 697 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(3);

	$export($export.S, 'Date', { now: function now() {
	    return new Date().getTime();
	  } });

/***/ },
/* 698 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()

	var $export = __webpack_require__(3),
	    fails = __webpack_require__(12),
	    getTime = Date.prototype.getTime;

	var lz = function lz(num) {
	  return num > 9 ? num : '0' + num;
	};

	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function () {
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function () {
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString() {
	    if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
	    var d = this,
	        y = d.getUTCFullYear(),
	        m = d.getUTCMilliseconds(),
	        s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) + '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) + 'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) + ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 699 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toObject = __webpack_require__(23),
	    toPrimitive = __webpack_require__(50);

	$export($export.P + $export.F * __webpack_require__(12)(function () {
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({ toISOString: function toISOString() {
	      return 1;
	    } }) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key) {
	    var O = toObject(this),
	        pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 700 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TO_PRIMITIVE = __webpack_require__(14)('toPrimitive'),
	    proto = Date.prototype;

	if (!(TO_PRIMITIVE in proto)) __webpack_require__(31)(proto, TO_PRIMITIVE, __webpack_require__(670));

/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var DateProto = Date.prototype,
	    INVALID_DATE = 'Invalid Date',
	    TO_STRING = 'toString',
	    $toString = DateProto[TO_STRING],
	    getTime = DateProto.getTime;
	if (new Date(NaN) + '' != INVALID_DATE) {
	  __webpack_require__(32)(DateProto, TO_STRING, function toString() {
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(3);

	$export($export.P, 'Function', { bind: __webpack_require__(266) });

/***/ },
/* 703 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isObject = __webpack_require__(13),
	    getPrototypeOf = __webpack_require__(36),
	    HAS_INSTANCE = __webpack_require__(14)('hasInstance'),
	    FunctionProto = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(19).f(FunctionProto, HAS_INSTANCE, { value: function value(O) {
	    if (typeof this != 'function' || !isObject(O)) return false;
	    if (!isObject(this.prototype)) return O instanceof this;
	    // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	    while (O = getPrototypeOf(O)) {
	      if (this.prototype === O) return true;
	    }return false;
	  } });

/***/ },
/* 704 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var dP = __webpack_require__(19).f,
	    createDesc = __webpack_require__(61),
	    has = __webpack_require__(25),
	    FProto = Function.prototype,
	    nameRE = /^\s*function ([^ (]*)/,
	    NAME = 'name';

	var isExtensible = Object.isExtensible || function () {
	  return true;
	};

	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(18) && dP(FProto, NAME, {
	  configurable: true,
	  get: function get() {
	    try {
	      var that = this,
	          name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch (e) {
	      return '';
	    }
	  }
	});

/***/ },
/* 705 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(3),
	    log1p = __webpack_require__(274),
	    sqrt = Math.sqrt,
	    $acosh = Math.acosh;

	$export($export.S + $export.F * !($acosh
	// V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	&& Math.floor($acosh(Number.MAX_VALUE)) == 710
	// Tor Browser bug: Math.acosh(Infinity) -> NaN 
	&& $acosh(Infinity) == Infinity), 'Math', {
	  acosh: function acosh(x) {
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? Math.log(x) + Math.LN2 : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 706 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(3),
	    $asinh = Math.asinh;

	function asinh(x) {
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}

	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(3),
	    $atanh = Math.atanh;

	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x) {
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 708 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(3),
	    sign = __webpack_require__(165);

	$export($export.S, 'Math', {
	  cbrt: function cbrt(x) {
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 709 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  clz32: function clz32(x) {
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 710 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(3),
	    exp = Math.exp;

	$export($export.S, 'Math', {
	  cosh: function cosh(x) {
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(3),
	    $expm1 = __webpack_require__(164);

	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

/***/ },
/* 712 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.16 Math.fround(x)
	var $export = __webpack_require__(3),
	    sign = __webpack_require__(165),
	    pow = Math.pow,
	    EPSILON = pow(2, -52),
	    EPSILON32 = pow(2, -23),
	    MAX32 = pow(2, 127) * (2 - EPSILON32),
	    MIN32 = pow(2, -126);

	var roundTiesToEven = function roundTiesToEven(n) {
	  return n + 1 / EPSILON - 1 / EPSILON;
	};

	$export($export.S, 'Math', {
	  fround: function fround(x) {
	    var $abs = Math.abs(x),
	        $sign = sign(x),
	        a,
	        result;
	    if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if (result > MAX32 || result != result) return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 713 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(3),
	    abs = Math.abs;

	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2) {
	    // eslint-disable-line no-unused-vars
	    var sum = 0,
	        i = 0,
	        aLen = arguments.length,
	        larg = 0,
	        arg,
	        div;
	    while (i < aLen) {
	      arg = abs(arguments[i++]);
	      if (larg < arg) {
	        div = larg / arg;
	        sum = sum * div * div + 1;
	        larg = arg;
	      } else if (arg > 0) {
	        div = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 714 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(3),
	    $imul = Math.imul;

	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(12)(function () {
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y) {
	    var UINT16 = 0xffff,
	        xn = +x,
	        yn = +y,
	        xl = UINT16 & xn,
	        yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 715 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  log10: function log10(x) {
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 716 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', { log1p: __webpack_require__(274) });

/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  log2: function log2(x) {
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 718 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', { sign: __webpack_require__(165) });

/***/ },
/* 719 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(3),
	    expm1 = __webpack_require__(164),
	    exp = Math.exp;

	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(12)(function () {
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x) {
	    return Math.abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 720 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(3),
	    expm1 = __webpack_require__(164),
	    exp = Math.exp;

	$export($export.S, 'Math', {
	  tanh: function tanh(x) {
	    var a = expm1(x = +x),
	        b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 721 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  trunc: function trunc(it) {
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    has = __webpack_require__(25),
	    cof = __webpack_require__(40),
	    inheritIfRequired = __webpack_require__(159),
	    toPrimitive = __webpack_require__(50),
	    fails = __webpack_require__(12),
	    gOPN = __webpack_require__(73).f,
	    gOPD = __webpack_require__(35).f,
	    dP = __webpack_require__(19).f,
	    $trim = __webpack_require__(89).trim,
	    NUMBER = 'Number',
	    $Number = global[NUMBER],
	    Base = $Number,
	    proto = $Number.prototype
	// Opera ~12 has broken Object#toString
	,
	    BROKEN_COF = cof(__webpack_require__(72)(proto)) == NUMBER,
	    TRIM = 'trim' in String.prototype;

	// 7.1.3 ToNumber(argument)
	var toNumber = function toNumber(argument) {
	  var it = toPrimitive(argument, false);
	  if (typeof it == 'string' && it.length > 2) {
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0),
	        third,
	        radix,
	        maxCode;
	    if (first === 43 || first === 45) {
	      third = it.charCodeAt(2);
	      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if (first === 48) {
	      switch (it.charCodeAt(1)) {
	        case 66:case 98:
	          radix = 2;maxCode = 49;break; // fast equal /^0b[01]+$/i
	        case 79:case 111:
	          radix = 8;maxCode = 55;break; // fast equal /^0o[0-7]+$/i
	        default:
	          return +it;
	      }
	      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if (code < 48 || code > maxCode) return NaN;
	      }return parseInt(digits, radix);
	    }
	  }return +it;
	};

	if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
	  $Number = function Number(value) {
	    var it = arguments.length < 1 ? 0 : value,
	        that = this;
	    return that instanceof $Number
	    // check on 1..constructor(foo) case
	    && (BROKEN_COF ? fails(function () {
	      proto.valueOf.call(that);
	    }) : cof(that) != NUMBER) ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for (var keys = __webpack_require__(18) ? gOPN(Base) : (
	  // ES3:
	  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	  // ES6 (in case, if modules with ES6 Number statics required before):
	  'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), j = 0, key; keys.length > j; j++) {
	    if (has(Base, key = keys[j]) && !has($Number, key)) {
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(32)(global, NUMBER, $Number);
	}

/***/ },
/* 723 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(3);

	$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

/***/ },
/* 724 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.2 Number.isFinite(number)
	var $export = __webpack_require__(3),
	    _isFinite = __webpack_require__(10).isFinite;

	$export($export.S, 'Number', {
	  isFinite: function isFinite(it) {
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 725 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(3);

	$export($export.S, 'Number', { isInteger: __webpack_require__(271) });

/***/ },
/* 726 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(3);

	$export($export.S, 'Number', {
	  isNaN: function isNaN(number) {
	    return number != number;
	  }
	});

/***/ },
/* 727 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export = __webpack_require__(3),
	    isInteger = __webpack_require__(271),
	    abs = Math.abs;

	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number) {
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 728 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(3);

	$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

/***/ },
/* 729 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(3);

	$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

/***/ },
/* 730 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $parseFloat = __webpack_require__(281);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });

/***/ },
/* 731 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $parseInt = __webpack_require__(282);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });

/***/ },
/* 732 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toInteger = __webpack_require__(62),
	    aNumberValue = __webpack_require__(262),
	    repeat = __webpack_require__(172),
	    $toFixed = 1..toFixed,
	    floor = Math.floor,
	    data = [0, 0, 0, 0, 0, 0],
	    ERROR = 'Number.toFixed: incorrect invocation!',
	    ZERO = '0';

	var multiply = function multiply(n, c) {
	  var i = -1,
	      c2 = c;
	  while (++i < 6) {
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function divide(n) {
	  var i = 6,
	      c = 0;
	  while (--i >= 0) {
	    c += data[i];
	    data[i] = floor(c / n);
	    c = c % n * 1e7;
	  }
	};
	var numToString = function numToString() {
	  var i = 6,
	      s = '';
	  while (--i >= 0) {
	    if (s !== '' || i === 0 || data[i] !== 0) {
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  }return s;
	};
	var pow = function pow(x, n, acc) {
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function log(x) {
	  var n = 0,
	      x2 = x;
	  while (x2 >= 4096) {
	    n += 12;
	    x2 /= 4096;
	  }
	  while (x2 >= 2) {
	    n += 1;
	    x2 /= 2;
	  }return n;
	};

	$export($export.P + $export.F * (!!$toFixed && (0.00008.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || 1000000000000000128..toFixed(0) !== '1000000000000000128') || !__webpack_require__(12)(function () {
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits) {
	    var x = aNumberValue(this, ERROR),
	        f = toInteger(fractionDigits),
	        s = '',
	        m = ZERO,
	        e,
	        z,
	        j,
	        k;
	    if (f < 0 || f > 20) throw RangeError(ERROR);
	    if (x != x) return 'NaN';
	    if (x <= -1e21 || x >= 1e21) return String(x);
	    if (x < 0) {
	      s = '-';
	      x = -x;
	    }
	    if (x > 1e-21) {
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if (e > 0) {
	        multiply(0, z);
	        j = f;
	        while (j >= 7) {
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while (j >= 23) {
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if (f > 0) {
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    }return m;
	  }
	});

/***/ },
/* 733 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $fails = __webpack_require__(12),
	    aNumberValue = __webpack_require__(262),
	    $toPrecision = 1..toPrecision;

	$export($export.P + $export.F * ($fails(function () {
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function () {
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision) {
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
	  }
	});

/***/ },
/* 734 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(3);

	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(275) });

/***/ },
/* 735 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(72) });

/***/ },
/* 736 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(18), 'Object', { defineProperties: __webpack_require__(276) });

/***/ },
/* 737 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(18), 'Object', { defineProperty: __webpack_require__(19).f });

/***/ },
/* 738 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(13),
	    meta = __webpack_require__(60).onFreeze;

	__webpack_require__(49)('freeze', function ($freeze) {
	  return function freeze(it) {
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 739 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject = __webpack_require__(34),
	    $getOwnPropertyDescriptor = __webpack_require__(35).f;

	__webpack_require__(49)('getOwnPropertyDescriptor', function () {
	  return function getOwnPropertyDescriptor(it, key) {
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 740 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(49)('getOwnPropertyNames', function () {
	  return __webpack_require__(277).f;
	});

/***/ },
/* 741 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(23),
	    $getPrototypeOf = __webpack_require__(36);

	__webpack_require__(49)('getPrototypeOf', function () {
	  return function getPrototypeOf(it) {
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 742 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(13);

	__webpack_require__(49)('isExtensible', function ($isExtensible) {
	  return function isExtensible(it) {
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 743 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(13);

	__webpack_require__(49)('isFrozen', function ($isFrozen) {
	  return function isFrozen(it) {
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 744 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(13);

	__webpack_require__(49)('isSealed', function ($isSealed) {
	  return function isSealed(it) {
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 745 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(3);
	$export($export.S, 'Object', { is: __webpack_require__(283) });

/***/ },
/* 746 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(23),
	    $keys = __webpack_require__(74);

	__webpack_require__(49)('keys', function () {
	  return function keys(it) {
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 747 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(13),
	    meta = __webpack_require__(60).onFreeze;

	__webpack_require__(49)('preventExtensions', function ($preventExtensions) {
	  return function preventExtensions(it) {
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 748 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(13),
	    meta = __webpack_require__(60).onFreeze;

	__webpack_require__(49)('seal', function ($seal) {
	  return function seal(it) {
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 749 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(3);
	$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(167).set });

/***/ },
/* 750 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()

	var classof = __webpack_require__(101),
	    test = {};
	test[__webpack_require__(14)('toStringTag')] = 'z';
	if (test + '' != '[object z]') {
	  __webpack_require__(32)(Object.prototype, 'toString', function toString() {
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 751 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $parseFloat = __webpack_require__(281);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });

/***/ },
/* 752 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $parseInt = __webpack_require__(282);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });

/***/ },
/* 753 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var LIBRARY = __webpack_require__(71),
	    global = __webpack_require__(10),
	    ctx = __webpack_require__(53),
	    classof = __webpack_require__(101),
	    $export = __webpack_require__(3),
	    isObject = __webpack_require__(13),
	    aFunction = __webpack_require__(30),
	    anInstance = __webpack_require__(70),
	    forOf = __webpack_require__(86),
	    speciesConstructor = __webpack_require__(169),
	    task = __webpack_require__(174).set,
	    microtask = __webpack_require__(166)(),
	    PROMISE = 'Promise',
	    TypeError = global.TypeError,
	    process = global.process,
	    $Promise = global[PROMISE],
	    process = global.process,
	    isNode = classof(process) == 'process',
	    empty = function empty() {/* empty */},
	    Internal,
	    GenericPromiseCapability,
	    Wrapper;

	var USE_NATIVE = !!function () {
	  try {
	    // correct subclassing with @@species support
	    var promise = $Promise.resolve(1),
	        FakePromise = (promise.constructor = {})[__webpack_require__(14)('species')] = function (exec) {
	      exec(empty, empty);
	    };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch (e) {/* empty */}
	}();

	// helpers
	var sameConstructor = function sameConstructor(a, b) {
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function isThenable(it) {
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function newPromiseCapability(C) {
	  return sameConstructor($Promise, C) ? new PromiseCapability(C) : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function GenericPromiseCapability(C) {
	  var resolve, reject;
	  this.promise = new C(function ($$resolve, $$reject) {
	    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject = aFunction(reject);
	};
	var perform = function perform(exec) {
	  try {
	    exec();
	  } catch (e) {
	    return { error: e };
	  }
	};
	var notify = function notify(promise, isReject) {
	  if (promise._n) return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function () {
	    var value = promise._v,
	        ok = promise._s == 1,
	        i = 0;
	    var run = function run(reaction) {
	      var handler = ok ? reaction.ok : reaction.fail,
	          resolve = reaction.resolve,
	          reject = reaction.reject,
	          domain = reaction.domain,
	          result,
	          then;
	      try {
	        if (handler) {
	          if (!ok) {
	            if (promise._h == 2) onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if (handler === true) result = value;else {
	            if (domain) domain.enter();
	            result = handler(value);
	            if (domain) domain.exit();
	          }
	          if (result === reaction.promise) {
	            reject(TypeError('Promise-chain cycle'));
	          } else if (then = isThenable(result)) {
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch (e) {
	        reject(e);
	      }
	    };
	    while (chain.length > i) {
	      run(chain[i++]);
	    } // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if (isReject && !promise._h) onUnhandled(promise);
	  });
	};
	var onUnhandled = function onUnhandled(promise) {
	  task.call(global, function () {
	    var value = promise._v,
	        abrupt,
	        handler,
	        console;
	    if (isUnhandled(promise)) {
	      abrupt = perform(function () {
	        if (isNode) {
	          process.emit('unhandledRejection', value, promise);
	        } else if (handler = global.onunhandledrejection) {
	          handler({ promise: promise, reason: value });
	        } else if ((console = global.console) && console.error) {
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    }promise._a = undefined;
	    if (abrupt) throw abrupt.error;
	  });
	};
	var isUnhandled = function isUnhandled(promise) {
	  if (promise._h == 1) return false;
	  var chain = promise._a || promise._c,
	      i = 0,
	      reaction;
	  while (chain.length > i) {
	    reaction = chain[i++];
	    if (reaction.fail || !isUnhandled(reaction.promise)) return false;
	  }return true;
	};
	var onHandleUnhandled = function onHandleUnhandled(promise) {
	  task.call(global, function () {
	    var handler;
	    if (isNode) {
	      process.emit('rejectionHandled', promise);
	    } else if (handler = global.onrejectionhandled) {
	      handler({ promise: promise, reason: promise._v });
	    }
	  });
	};
	var $reject = function $reject(value) {
	  var promise = this;
	  if (promise._d) return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if (!promise._a) promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function $resolve(value) {
	  var promise = this,
	      then;
	  if (promise._d) return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if (promise === value) throw TypeError("Promise can't be resolved itself");
	    if (then = isThenable(value)) {
	      microtask(function () {
	        var wrapper = { _w: promise, _d: false }; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch (e) {
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch (e) {
	    $reject.call({ _w: promise, _d: false }, e); // wrap
	  }
	};

	// constructor polyfill
	if (!USE_NATIVE) {
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor) {
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch (err) {
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor) {
	    this._c = []; // <- awaiting reactions
	    this._a = undefined; // <- checked in isUnhandled reactions
	    this._s = 0; // <- state
	    this._d = false; // <- done
	    this._v = undefined; // <- value
	    this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false; // <- notify
	  };
	  Internal.prototype = __webpack_require__(75)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected) {
	      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if (this._a) this._a.push(reaction);
	      if (this._s) notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function _catch(onRejected) {
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function PromiseCapability() {
	    var promise = new Internal();
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject = ctx($reject, promise, 1);
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
	__webpack_require__(88)($Promise, PROMISE);
	__webpack_require__(76)(PROMISE);
	Wrapper = __webpack_require__(52)[PROMISE];

	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r) {
	    var capability = newPromiseCapability(this),
	        $$reject = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x) {
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if (x instanceof $Promise && sameConstructor(x.constructor, this)) return x;
	    var capability = newPromiseCapability(this),
	        $$resolve = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(122)(function (iter) {
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable) {
	    var C = this,
	        capability = newPromiseCapability(C),
	        resolve = capability.resolve,
	        reject = capability.reject;
	    var abrupt = perform(function () {
	      var values = [],
	          index = 0,
	          remaining = 1;
	      forOf(iterable, false, function (promise) {
	        var $index = index++,
	            alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function (value) {
	          if (alreadyCalled) return;
	          alreadyCalled = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if (abrupt) reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable) {
	    var C = this,
	        capability = newPromiseCapability(C),
	        reject = capability.reject;
	    var abrupt = perform(function () {
	      forOf(iterable, false, function (promise) {
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if (abrupt) reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 754 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export = __webpack_require__(3),
	    aFunction = __webpack_require__(30),
	    anObject = __webpack_require__(6),
	    rApply = (__webpack_require__(10).Reflect || {}).apply,
	    fApply = Function.apply;
	// MS Edge argumentsList argument is optional
	$export($export.S + $export.F * !__webpack_require__(12)(function () {
	  rApply(function () {});
	}), 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList) {
	    var T = aFunction(target),
	        L = anObject(argumentsList);
	    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
	  }
	});

/***/ },
/* 755 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export = __webpack_require__(3),
	    create = __webpack_require__(72),
	    aFunction = __webpack_require__(30),
	    anObject = __webpack_require__(6),
	    isObject = __webpack_require__(13),
	    fails = __webpack_require__(12),
	    bind = __webpack_require__(266),
	    rConstruct = (__webpack_require__(10).Reflect || {}).construct;

	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function () {
	  function F() {}
	  return !(rConstruct(function () {}, [], F) instanceof F);
	});
	var ARGS_BUG = !fails(function () {
	  rConstruct(function () {});
	});

	$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/) {
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
	    if (Target == newTarget) {
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch (args.length) {
	        case 0:
	          return new Target();
	        case 1:
	          return new Target(args[0]);
	        case 2:
	          return new Target(args[0], args[1]);
	        case 3:
	          return new Target(args[0], args[1], args[2]);
	        case 4:
	          return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args))();
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto = newTarget.prototype,
	        instance = create(isObject(proto) ? proto : Object.prototype),
	        result = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 756 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP = __webpack_require__(19),
	    $export = __webpack_require__(3),
	    anObject = __webpack_require__(6),
	    toPrimitive = __webpack_require__(50);

	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(12)(function () {
	  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes) {
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }
	});

/***/ },
/* 757 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export = __webpack_require__(3),
	    gOPD = __webpack_require__(35).f,
	    anObject = __webpack_require__(6);

	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey) {
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 758 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)

	var $export = __webpack_require__(3),
	    anObject = __webpack_require__(6);
	var Enumerate = function Enumerate(iterated) {
	  this._t = anObject(iterated); // target
	  this._i = 0; // next index
	  var keys = this._k = [] // keys
	  ,
	      key;
	  for (key in iterated) {
	    keys.push(key);
	  }
	};
	__webpack_require__(162)(Enumerate, 'Object', function () {
	  var that = this,
	      keys = that._k,
	      key;
	  do {
	    if (that._i >= keys.length) return { value: undefined, done: true };
	  } while (!((key = keys[that._i++]) in that._t));
	  return { value: key, done: false };
	});

	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target) {
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 759 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD = __webpack_require__(35),
	    $export = __webpack_require__(3),
	    anObject = __webpack_require__(6);

	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 760 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export = __webpack_require__(3),
	    getProto = __webpack_require__(36),
	    anObject = __webpack_require__(6);

	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target) {
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 761 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD = __webpack_require__(35),
	    getPrototypeOf = __webpack_require__(36),
	    has = __webpack_require__(25),
	    $export = __webpack_require__(3),
	    isObject = __webpack_require__(13),
	    anObject = __webpack_require__(6);

	function get(target, propertyKey /*, receiver*/) {
	  var receiver = arguments.length < 3 ? target : arguments[2],
	      desc,
	      proto;
	  if (anObject(target) === receiver) return target[propertyKey];
	  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value') ? desc.value : desc.get !== undefined ? desc.get.call(receiver) : undefined;
	  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
	}

	$export($export.S, 'Reflect', { get: get });

/***/ },
/* 762 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(3);

	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey) {
	    return propertyKey in target;
	  }
	});

/***/ },
/* 763 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.10 Reflect.isExtensible(target)
	var $export = __webpack_require__(3),
	    anObject = __webpack_require__(6),
	    $isExtensible = Object.isExtensible;

	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target) {
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 764 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(3);

	$export($export.S, 'Reflect', { ownKeys: __webpack_require__(280) });

/***/ },
/* 765 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.12 Reflect.preventExtensions(target)
	var $export = __webpack_require__(3),
	    anObject = __webpack_require__(6),
	    $preventExtensions = Object.preventExtensions;

	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target) {
	    anObject(target);
	    try {
	      if ($preventExtensions) $preventExtensions(target);
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }
	});

/***/ },
/* 766 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export = __webpack_require__(3),
	    setProto = __webpack_require__(167);

	if (setProto) $export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto) {
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }
	});

/***/ },
/* 767 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP = __webpack_require__(19),
	    gOPD = __webpack_require__(35),
	    getPrototypeOf = __webpack_require__(36),
	    has = __webpack_require__(25),
	    $export = __webpack_require__(3),
	    createDesc = __webpack_require__(61),
	    anObject = __webpack_require__(6),
	    isObject = __webpack_require__(13);

	function set(target, propertyKey, V /*, receiver*/) {
	  var receiver = arguments.length < 4 ? target : arguments[3],
	      ownDesc = gOPD.f(anObject(target), propertyKey),
	      existingDescriptor,
	      proto;
	  if (!ownDesc) {
	    if (isObject(proto = getPrototypeOf(target))) {
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if (has(ownDesc, 'value')) {
	    if (ownDesc.writable === false || !isObject(receiver)) return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}

	$export($export.S, 'Reflect', { set: set });

/***/ },
/* 768 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(10),
	    inheritIfRequired = __webpack_require__(159),
	    dP = __webpack_require__(19).f,
	    gOPN = __webpack_require__(73).f,
	    isRegExp = __webpack_require__(121),
	    $flags = __webpack_require__(119),
	    $RegExp = global.RegExp,
	    Base = $RegExp,
	    proto = $RegExp.prototype,
	    re1 = /a/g,
	    re2 = /a/g
	// "new" creates a new object, old webkit buggy here
	,
	    CORRECT_NEW = new $RegExp(re1) !== re1;

	if (__webpack_require__(18) && (!CORRECT_NEW || __webpack_require__(12)(function () {
	  re2[__webpack_require__(14)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))) {
	  $RegExp = function RegExp(p, f) {
	    var tiRE = this instanceof $RegExp,
	        piRE = isRegExp(p),
	        fiU = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p : inheritIfRequired(CORRECT_NEW ? new Base(piRE && !fiU ? p.source : p, f) : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f), tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function proxy(key) {
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function get() {
	        return Base[key];
	      },
	      set: function set(it) {
	        Base[key] = it;
	      }
	    });
	  };
	  for (var keys = gOPN(Base), i = 0; keys.length > i;) {
	    proxy(keys[i++]);
	  }proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(32)(global, 'RegExp', $RegExp);
	}

	__webpack_require__(76)('RegExp');

/***/ },
/* 769 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// @@match logic
	__webpack_require__(118)('match', 1, function (defined, MATCH, $match) {
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp) {
	    'use strict';

	    var O = defined(this),
	        fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 770 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// @@replace logic
	__webpack_require__(118)('replace', 2, function (defined, REPLACE, $replace) {
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue) {
	    'use strict';

	    var O = defined(this),
	        fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 771 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// @@search logic
	__webpack_require__(118)('search', 1, function (defined, SEARCH, $search) {
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp) {
	    'use strict';

	    var O = defined(this),
	        fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 772 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// @@split logic
	__webpack_require__(118)('split', 2, function (defined, SPLIT, $split) {
	  'use strict';

	  var isRegExp = __webpack_require__(121),
	      _split = $split,
	      $push = [].push,
	      $SPLIT = 'split',
	      LENGTH = 'length',
	      LAST_INDEX = 'lastIndex';
	  if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function $split(separator, limit) {
	      var string = String(this);
	      if (separator === undefined && limit === 0) return [];
	      // If `separator` is not a regex, use native split
	      if (!isRegExp(separator)) return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while (match = separatorCopy.exec(string)) {
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if (lastIndex > lastLastIndex) {
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
	            for (i = 1; i < arguments[LENGTH] - 2; i++) {
	              if (arguments[i] === undefined) match[i] = undefined;
	            }
	          });
	          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if (output[LENGTH] >= splitLimit) break;
	        }
	        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if (lastLastIndex === string[LENGTH]) {
	        if (lastLength || !separatorCopy.test('')) output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	    // Chakra, V8
	  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
	    $split = function $split(separator, limit) {
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit) {
	    var O = defined(this),
	        fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 773 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(287);
	var anObject = __webpack_require__(6),
	    $flags = __webpack_require__(119),
	    DESCRIPTORS = __webpack_require__(18),
	    TO_STRING = 'toString',
	    $toString = /./[TO_STRING];

	var define = function define(fn) {
	  __webpack_require__(32)(RegExp.prototype, TO_STRING, fn, true);
	};

	// 21.2.5.14 RegExp.prototype.toString()
	if (__webpack_require__(12)(function () {
	  return $toString.call({ source: 'a', flags: 'b' }) != '/a/b';
	})) {
	  define(function toString() {
	    var R = anObject(this);
	    return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	  // FF44- RegExp#toString has a wrong name
	} else if ($toString.name != TO_STRING) {
	  define(function toString() {
	    return $toString.call(this);
	  });
	}

/***/ },
/* 774 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)

	__webpack_require__(33)('anchor', function (createHTML) {
	  return function anchor(name) {
	    return createHTML(this, 'a', 'name', name);
	  };
	});

/***/ },
/* 775 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()

	__webpack_require__(33)('big', function (createHTML) {
	  return function big() {
	    return createHTML(this, 'big', '', '');
	  };
	});

/***/ },
/* 776 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()

	__webpack_require__(33)('blink', function (createHTML) {
	  return function blink() {
	    return createHTML(this, 'blink', '', '');
	  };
	});

/***/ },
/* 777 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()

	__webpack_require__(33)('bold', function (createHTML) {
	  return function bold() {
	    return createHTML(this, 'b', '', '');
	  };
	});

/***/ },
/* 778 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $at = __webpack_require__(170)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos) {
	    return $at(this, pos);
	  }
	});

/***/ },
/* 779 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';

	var $export = __webpack_require__(3),
	    toLength = __webpack_require__(22),
	    context = __webpack_require__(171),
	    ENDS_WITH = 'endsWith',
	    $endsWith = ''[ENDS_WITH];

	$export($export.P + $export.F * __webpack_require__(157)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */) {
	    var that = context(this, searchString, ENDS_WITH),
	        endPosition = arguments.length > 1 ? arguments[1] : undefined,
	        len = toLength(that.length),
	        end = endPosition === undefined ? len : Math.min(toLength(endPosition), len),
	        search = String(searchString);
	    return $endsWith ? $endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 780 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()

	__webpack_require__(33)('fixed', function (createHTML) {
	  return function fixed() {
	    return createHTML(this, 'tt', '', '');
	  };
	});

/***/ },
/* 781 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)

	__webpack_require__(33)('fontcolor', function (createHTML) {
	  return function fontcolor(color) {
	    return createHTML(this, 'font', 'color', color);
	  };
	});

/***/ },
/* 782 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)

	__webpack_require__(33)('fontsize', function (createHTML) {
	  return function fontsize(size) {
	    return createHTML(this, 'font', 'size', size);
	  };
	});

/***/ },
/* 783 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toIndex = __webpack_require__(77),
	    fromCharCode = String.fromCharCode,
	    $fromCodePoint = String.fromCodePoint;

	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x) {
	    // eslint-disable-line no-unused-vars
	    var res = [],
	        aLen = arguments.length,
	        i = 0,
	        code;
	    while (aLen > i) {
	      code = +arguments[i++];
	      if (toIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
	    }return res.join('');
	  }
	});

/***/ },
/* 784 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';

	var $export = __webpack_require__(3),
	    context = __webpack_require__(171),
	    INCLUDES = 'includes';

	$export($export.P + $export.F * __webpack_require__(157)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */) {
	    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 785 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()

	__webpack_require__(33)('italics', function (createHTML) {
	  return function italics() {
	    return createHTML(this, 'i', '', '');
	  };
	});

/***/ },
/* 786 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $at = __webpack_require__(170)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(163)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0; // next index
	  // 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t,
	      index = this._i,
	      point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});

/***/ },
/* 787 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)

	__webpack_require__(33)('link', function (createHTML) {
	  return function link(url) {
	    return createHTML(this, 'a', 'href', url);
	  };
	});

/***/ },
/* 788 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toIObject = __webpack_require__(34),
	    toLength = __webpack_require__(22);

	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite) {
	    var tpl = toIObject(callSite.raw),
	        len = toLength(tpl.length),
	        aLen = arguments.length,
	        res = [],
	        i = 0;
	    while (len > i) {
	      res.push(String(tpl[i++]));
	      if (i < aLen) res.push(String(arguments[i]));
	    }return res.join('');
	  }
	});

/***/ },
/* 789 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3);

	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(172)
	});

/***/ },
/* 790 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()

	__webpack_require__(33)('small', function (createHTML) {
	  return function small() {
	    return createHTML(this, 'small', '', '');
	  };
	});

/***/ },
/* 791 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';

	var $export = __webpack_require__(3),
	    toLength = __webpack_require__(22),
	    context = __webpack_require__(171),
	    STARTS_WITH = 'startsWith',
	    $startsWith = ''[STARTS_WITH];

	$export($export.P + $export.F * __webpack_require__(157)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */) {
	    var that = context(this, searchString, STARTS_WITH),
	        index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length)),
	        search = String(searchString);
	    return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 792 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()

	__webpack_require__(33)('strike', function (createHTML) {
	  return function strike() {
	    return createHTML(this, 'strike', '', '');
	  };
	});

/***/ },
/* 793 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()

	__webpack_require__(33)('sub', function (createHTML) {
	  return function sub() {
	    return createHTML(this, 'sub', '', '');
	  };
	});

/***/ },
/* 794 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()

	__webpack_require__(33)('sup', function (createHTML) {
	  return function sup() {
	    return createHTML(this, 'sup', '', '');
	  };
	});

/***/ },
/* 795 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()

	__webpack_require__(89)('trim', function ($trim) {
	  return function trim() {
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 796 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var global = __webpack_require__(10),
	    has = __webpack_require__(25),
	    DESCRIPTORS = __webpack_require__(18),
	    $export = __webpack_require__(3),
	    redefine = __webpack_require__(32),
	    META = __webpack_require__(60).KEY,
	    $fails = __webpack_require__(12),
	    shared = __webpack_require__(125),
	    setToStringTag = __webpack_require__(88),
	    uid = __webpack_require__(78),
	    wks = __webpack_require__(14),
	    wksExt = __webpack_require__(285),
	    wksDefine = __webpack_require__(176),
	    keyOf = __webpack_require__(672),
	    enumKeys = __webpack_require__(671),
	    isArray = __webpack_require__(161),
	    anObject = __webpack_require__(6),
	    toIObject = __webpack_require__(34),
	    toPrimitive = __webpack_require__(50),
	    createDesc = __webpack_require__(61),
	    _create = __webpack_require__(72),
	    gOPNExt = __webpack_require__(277),
	    $GOPD = __webpack_require__(35),
	    $DP = __webpack_require__(19),
	    $keys = __webpack_require__(74),
	    gOPD = $GOPD.f,
	    dP = $DP.f,
	    gOPN = gOPNExt.f,
	    $Symbol = global.Symbol,
	    $JSON = global.JSON,
	    _stringify = $JSON && $JSON.stringify,
	    PROTOTYPE = 'prototype',
	    HIDDEN = wks('_hidden'),
	    TO_PRIMITIVE = wks('toPrimitive'),
	    isEnum = {}.propertyIsEnumerable,
	    SymbolRegistry = shared('symbol-registry'),
	    AllSymbols = shared('symbols'),
	    OPSymbols = shared('op-symbols'),
	    ObjectProto = Object[PROTOTYPE],
	    USE_NATIVE = typeof $Symbol == 'function',
	    QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function get() {
	      return dP(this, 'a', { value: 7 }).a;
	    }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function wrap(tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && _typeof($Symbol.iterator) == 'symbol' ? function (it) {
	  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    }return setSymbolDesc(it, key, D);
	  }return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P)),
	      i = 0,
	      l = keys.length,
	      key;
	  while (l > i) {
	    $defineProperty(it, key = keys[i++], P[key]);
	  }return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it)),
	      result = [],
	      i = 0,
	      key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  }return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto,
	      names = gOPN(IS_OP ? OPSymbols : toIObject(it)),
	      result = [],
	      i = 0,
	      key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  }return result;
	};

	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function _Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function $set(value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(73).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(103).f = $propertyIsEnumerable;
	  __webpack_require__(124).f = $getOwnPropertySymbols;

	  if (DESCRIPTORS && !__webpack_require__(71)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

	for (var symbols =
	// 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), i = 0; symbols.length > i;) {
	  wks(symbols[i++]);
	}for (var symbols = $keys(wks.store), i = 0; symbols.length > i;) {
	  wksDefine(symbols[i++]);
	}$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function _for(key) {
	    return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key) {
	    if (isSymbol(key)) return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function useSetter() {
	    setter = true;
	  },
	  useSimple: function useSimple() {
	    setter = false;
	  }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    var args = [it],
	        i = 1,
	        replacer,
	        $replacer;
	    while (arguments.length > i) {
	      args.push(arguments[i++]);
	    }replacer = args[1];
	    if (typeof replacer == 'function') $replacer = replacer;
	    if ($replacer || !isArray(replacer)) replacer = function replacer(key, value) {
	      if ($replacer) value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(31)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 797 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $typed = __webpack_require__(126),
	    buffer = __webpack_require__(175),
	    anObject = __webpack_require__(6),
	    toIndex = __webpack_require__(77),
	    toLength = __webpack_require__(22),
	    isObject = __webpack_require__(13),
	    ArrayBuffer = __webpack_require__(10).ArrayBuffer,
	    speciesConstructor = __webpack_require__(169),
	    $ArrayBuffer = buffer.ArrayBuffer,
	    $DataView = buffer.DataView,
	    $isView = $typed.ABV && ArrayBuffer.isView,
	    $slice = $ArrayBuffer.prototype.slice,
	    VIEW = $typed.VIEW,
	    ARRAY_BUFFER = 'ArrayBuffer';

	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it) {
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});

	$export($export.P + $export.U + $export.F * __webpack_require__(12)(function () {
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end) {
	    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
	    var len = anObject(this).byteLength,
	        first = toIndex(start, len),
	        final = toIndex(end === undefined ? len : end, len),
	        result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first)),
	        viewS = new $DataView(this),
	        viewT = new $DataView(result),
	        index = 0;
	    while (first < final) {
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    }return result;
	  }
	});

	__webpack_require__(76)(ARRAY_BUFFER);

/***/ },
/* 798 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3);
	$export($export.G + $export.W + $export.F * !__webpack_require__(126).ABV, {
	  DataView: __webpack_require__(175).DataView
	});

/***/ },
/* 799 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Float32', 4, function (init) {
	  return function Float32Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 800 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Float64', 8, function (init) {
	  return function Float64Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 801 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Int16', 2, function (init) {
	  return function Int16Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 802 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Int32', 4, function (init) {
	  return function Int32Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 803 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Int8', 1, function (init) {
	  return function Int8Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 804 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Uint16', 2, function (init) {
	  return function Uint16Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 805 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Uint32', 4, function (init) {
	  return function Uint32Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 806 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Uint8', 1, function (init) {
	  return function Uint8Array(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 807 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(55)('Uint8', 1, function (init) {
	  return function Uint8ClampedArray(data, byteOffset, length) {
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 808 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var weak = __webpack_require__(269);

	// 23.4 WeakSet Objects
	__webpack_require__(117)('WeakSet', function (get) {
	  return function WeakSet() {
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value) {
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 809 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes

	var $export = __webpack_require__(3),
	    $includes = __webpack_require__(116)(true);

	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */) {
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	__webpack_require__(85)('includes');

/***/ },
/* 810 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export = __webpack_require__(3),
	    microtask = __webpack_require__(166)(),
	    process = __webpack_require__(10).process,
	    isNode = __webpack_require__(40)(process) == 'process';

	$export($export.G, {
	  asap: function asap(fn) {
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 811 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(3),
	    cof = __webpack_require__(40);

	$export($export.S, 'Error', {
	  isError: function isError(it) {
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 812 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export = __webpack_require__(3);

	$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(268)('Map') });

/***/ },
/* 813 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1) {
	    var $x0 = x0 >>> 0,
	        $x1 = x1 >>> 0,
	        $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 814 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  imulh: function imulh(u, v) {
	    var UINT16 = 0xffff,
	        $u = +u,
	        $v = +v,
	        u0 = $u & UINT16,
	        v0 = $v & UINT16,
	        u1 = $u >> 16,
	        v1 = $v >> 16,
	        t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 815 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1) {
	    var $x0 = x0 >>> 0,
	        $x1 = x1 >>> 0,
	        $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 816 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(3);

	$export($export.S, 'Math', {
	  umulh: function umulh(u, v) {
	    var UINT16 = 0xffff,
	        $u = +u,
	        $v = +v,
	        u0 = $u & UINT16,
	        v0 = $v & UINT16,
	        u1 = $u >>> 16,
	        v1 = $v >>> 16,
	        t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 817 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toObject = __webpack_require__(23),
	    aFunction = __webpack_require__(30),
	    $defineProperty = __webpack_require__(19);

	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(18) && $export($export.P + __webpack_require__(123), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter) {
	    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
	  }
	});

/***/ },
/* 818 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toObject = __webpack_require__(23),
	    aFunction = __webpack_require__(30),
	    $defineProperty = __webpack_require__(19);

	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(18) && $export($export.P + __webpack_require__(123), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter) {
	    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
	  }
	});

/***/ },
/* 819 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(3),
	    $entries = __webpack_require__(279)(true);

	$export($export.S, 'Object', {
	  entries: function entries(it) {
	    return $entries(it);
	  }
	});

/***/ },
/* 820 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export = __webpack_require__(3),
	    ownKeys = __webpack_require__(280),
	    toIObject = __webpack_require__(34),
	    gOPD = __webpack_require__(35),
	    createProperty = __webpack_require__(154);

	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
	    var O = toIObject(object),
	        getDesc = gOPD.f,
	        keys = ownKeys(O),
	        result = {},
	        i = 0,
	        key;
	    while (keys.length > i) {
	      createProperty(result, key = keys[i++], getDesc(O, key));
	    }return result;
	  }
	});

/***/ },
/* 821 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toObject = __webpack_require__(23),
	    toPrimitive = __webpack_require__(50),
	    getPrototypeOf = __webpack_require__(36),
	    getOwnPropertyDescriptor = __webpack_require__(35).f;

	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(18) && $export($export.P + __webpack_require__(123), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P) {
	    var O = toObject(this),
	        K = toPrimitive(P, true),
	        D;
	    do {
	      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
	    } while (O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 822 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    toObject = __webpack_require__(23),
	    toPrimitive = __webpack_require__(50),
	    getPrototypeOf = __webpack_require__(36),
	    getOwnPropertyDescriptor = __webpack_require__(35).f;

	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(18) && $export($export.P + __webpack_require__(123), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P) {
	    var O = toObject(this),
	        K = toPrimitive(P, true),
	        D;
	    do {
	      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
	    } while (O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 823 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(3),
	    $values = __webpack_require__(279)(false);

	$export($export.S, 'Object', {
	  values: function values(it) {
	    return $values(it);
	  }
	});

/***/ },
/* 824 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable

	var $export = __webpack_require__(3),
	    global = __webpack_require__(10),
	    core = __webpack_require__(52),
	    microtask = __webpack_require__(166)(),
	    OBSERVABLE = __webpack_require__(14)('observable'),
	    aFunction = __webpack_require__(30),
	    anObject = __webpack_require__(6),
	    anInstance = __webpack_require__(70),
	    redefineAll = __webpack_require__(75),
	    hide = __webpack_require__(31),
	    forOf = __webpack_require__(86),
	    RETURN = forOf.RETURN;

	var getMethod = function getMethod(fn) {
	  return fn == null ? undefined : aFunction(fn);
	};

	var cleanupSubscription = function cleanupSubscription(subscription) {
	  var cleanup = subscription._c;
	  if (cleanup) {
	    subscription._c = undefined;
	    cleanup();
	  }
	};

	var subscriptionClosed = function subscriptionClosed(subscription) {
	  return subscription._o === undefined;
	};

	var closeSubscription = function closeSubscription(subscription) {
	  if (!subscriptionClosed(subscription)) {
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};

	var Subscription = function Subscription(observer, subscriber) {
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup = subscriber(observer),
	        subscription = cleanup;
	    if (cleanup != null) {
	      if (typeof cleanup.unsubscribe === 'function') cleanup = function cleanup() {
	        subscription.unsubscribe();
	      };else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch (e) {
	    observer.error(e);
	    return;
	  }if (subscriptionClosed(this)) cleanupSubscription(this);
	};

	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe() {
	    closeSubscription(this);
	  }
	});

	var SubscriptionObserver = function SubscriptionObserver(subscription) {
	  this._s = subscription;
	};

	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value) {
	    var subscription = this._s;
	    if (!subscriptionClosed(subscription)) {
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if (m) return m.call(observer, value);
	      } catch (e) {
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value) {
	    var subscription = this._s;
	    if (subscriptionClosed(subscription)) throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if (!m) throw value;
	      value = m.call(observer, value);
	    } catch (e) {
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    }cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value) {
	    var subscription = this._s;
	    if (!subscriptionClosed(subscription)) {
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch (e) {
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});

	var $Observable = function Observable(subscriber) {
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};

	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer) {
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn) {
	    var that = this;
	    return new (core.Promise || global.Promise)(function (resolve, reject) {
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next: function next(value) {
	          try {
	            return fn(value);
	          } catch (e) {
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});

	redefineAll($Observable, {
	  from: function from(x) {
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if (method) {
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function (observer) {
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function (observer) {
	      var done = false;
	      microtask(function () {
	        if (!done) {
	          try {
	            if (forOf(x, false, function (it) {
	              observer.next(it);
	              if (done) return RETURN;
	            }) === RETURN) return;
	          } catch (e) {
	            if (done) throw e;
	            observer.error(e);
	            return;
	          }observer.complete();
	        }
	      });
	      return function () {
	        done = true;
	      };
	    });
	  },
	  of: function of() {
	    for (var i = 0, l = arguments.length, items = Array(l); i < l;) {
	      items[i] = arguments[i++];
	    }return new (typeof this === 'function' ? this : $Observable)(function (observer) {
	      var done = false;
	      microtask(function () {
	        if (!done) {
	          for (var i = 0; i < items.length; ++i) {
	            observer.next(items[i]);
	            if (done) return;
	          }observer.complete();
	        }
	      });
	      return function () {
	        done = true;
	      };
	    });
	  }
	});

	hide($Observable.prototype, OBSERVABLE, function () {
	  return this;
	});

	$export($export.G, { Observable: $Observable });

	__webpack_require__(76)('Observable');

/***/ },
/* 825 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    toMetaKey = metadata.key,
	    ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
	    ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	  } });

/***/ },
/* 826 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    toMetaKey = metadata.key,
	    getOrCreateMetadataMap = metadata.map,
	    store = metadata.store;

	metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */) {
	    var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]),
	        metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	    if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
	    if (metadataMap.size) return true;
	    var targetMetadata = store.get(target);
	    targetMetadata['delete'](targetKey);
	    return !!targetMetadata.size || store['delete'](target);
	  } });

/***/ },
/* 827 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Set = __webpack_require__(288),
	    from = __webpack_require__(264),
	    metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    getPrototypeOf = __webpack_require__(36),
	    ordinaryOwnMetadataKeys = metadata.keys,
	    toMetaKey = metadata.key;

	var ordinaryMetadataKeys = function ordinaryMetadataKeys(O, P) {
	  var oKeys = ordinaryOwnMetadataKeys(O, P),
	      parent = getPrototypeOf(O);
	  if (parent === null) return oKeys;
	  var pKeys = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};

	metadata.exp({ getMetadataKeys: function getMetadataKeys(target /*, targetKey */) {
	    return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	  } });

/***/ },
/* 828 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    getPrototypeOf = __webpack_require__(36),
	    ordinaryHasOwnMetadata = metadata.has,
	    ordinaryGetOwnMetadata = metadata.get,
	    toMetaKey = metadata.key;

	var ordinaryGetMetadata = function ordinaryGetMetadata(MetadataKey, O, P) {
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};

	metadata.exp({ getMetadata: function getMetadata(metadataKey, target /*, targetKey */) {
	    return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	  } });

/***/ },
/* 829 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    ordinaryOwnMetadataKeys = metadata.keys,
	    toMetaKey = metadata.key;

	metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */) {
	    return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	  } });

/***/ },
/* 830 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    ordinaryGetOwnMetadata = metadata.get,
	    toMetaKey = metadata.key;

	metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */) {
	    return ordinaryGetOwnMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	  } });

/***/ },
/* 831 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    getPrototypeOf = __webpack_require__(36),
	    ordinaryHasOwnMetadata = metadata.has,
	    toMetaKey = metadata.key;

	var ordinaryHasMetadata = function ordinaryHasMetadata(MetadataKey, O, P) {
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if (hasOwn) return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};

	metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */) {
	    return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	  } });

/***/ },
/* 832 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    ordinaryHasOwnMetadata = metadata.has,
	    toMetaKey = metadata.key;

	metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */) {
	    return ordinaryHasOwnMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	  } });

/***/ },
/* 833 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var metadata = __webpack_require__(54),
	    anObject = __webpack_require__(6),
	    aFunction = __webpack_require__(30),
	    toMetaKey = metadata.key,
	    ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
	    return function decorator(target, targetKey) {
	      ordinaryDefineOwnMetadata(metadataKey, metadataValue, (targetKey !== undefined ? anObject : aFunction)(target), toMetaKey(targetKey));
	    };
	  } });

/***/ },
/* 834 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export = __webpack_require__(3);

	$export($export.P + $export.R, 'Set', { toJSON: __webpack_require__(268)('Set') });

/***/ },
/* 835 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at

	var $export = __webpack_require__(3),
	    $at = __webpack_require__(170)(true);

	$export($export.P, 'String', {
	  at: function at(pos) {
	    return $at(this, pos);
	  }
	});

/***/ },
/* 836 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/

	var $export = __webpack_require__(3),
	    defined = __webpack_require__(41),
	    toLength = __webpack_require__(22),
	    isRegExp = __webpack_require__(121),
	    getFlags = __webpack_require__(119),
	    RegExpProto = RegExp.prototype;

	var $RegExpStringIterator = function $RegExpStringIterator(regexp, string) {
	  this._r = regexp;
	  this._s = string;
	};

	__webpack_require__(162)($RegExpStringIterator, 'RegExp String', function next() {
	  var match = this._r.exec(this._s);
	  return { value: match, done: match === null };
	});

	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp) {
	    defined(this);
	    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
	    var S = String(this),
	        flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp),
	        rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 837 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end

	var $export = __webpack_require__(3),
	    $pad = __webpack_require__(284);

	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */) {
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 838 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end

	var $export = __webpack_require__(3),
	    $pad = __webpack_require__(284);

	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */) {
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 839 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim

	__webpack_require__(89)('trimLeft', function ($trim) {
	  return function trimLeft() {
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 840 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim

	__webpack_require__(89)('trimRight', function ($trim) {
	  return function trimRight() {
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 841 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(176)('asyncIterator');

/***/ },
/* 842 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(176)('observable');

/***/ },
/* 843 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(3);

	$export($export.S, 'System', { global: __webpack_require__(10) });

/***/ },
/* 844 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $iterators = __webpack_require__(178),
	    redefine = __webpack_require__(32),
	    global = __webpack_require__(10),
	    hide = __webpack_require__(31),
	    Iterators = __webpack_require__(87),
	    wks = __webpack_require__(14),
	    ITERATOR = wks('iterator'),
	    TO_STRING_TAG = wks('toStringTag'),
	    ArrayValues = Iterators.Array;

	for (var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++) {
	  var NAME = collections[i],
	      Collection = global[NAME],
	      proto = Collection && Collection.prototype,
	      key;
	  if (proto) {
	    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
	    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for (key in $iterators) {
	      if (!proto[key]) redefine(proto, key, $iterators[key], true);
	    }
	  }
	}

/***/ },
/* 845 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $export = __webpack_require__(3),
	    $task = __webpack_require__(174);
	$export($export.G + $export.B, {
	  setImmediate: $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 846 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// ie9- setTimeout & setInterval additional parameters fix
	var global = __webpack_require__(10),
	    $export = __webpack_require__(3),
	    invoke = __webpack_require__(120),
	    partial = __webpack_require__(673),
	    navigator = global.navigator,
	    MSIE = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function wrap(set) {
	  return MSIE ? function (fn, time /*, ...args */) {
	    return set(invoke(partial, [].slice.call(arguments, 2), typeof fn == 'function' ? fn : Function(fn)), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout: wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 847 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(796);
	__webpack_require__(735);
	__webpack_require__(737);
	__webpack_require__(736);
	__webpack_require__(739);
	__webpack_require__(741);
	__webpack_require__(746);
	__webpack_require__(740);
	__webpack_require__(738);
	__webpack_require__(748);
	__webpack_require__(747);
	__webpack_require__(743);
	__webpack_require__(744);
	__webpack_require__(742);
	__webpack_require__(734);
	__webpack_require__(745);
	__webpack_require__(749);
	__webpack_require__(750);
	__webpack_require__(702);
	__webpack_require__(704);
	__webpack_require__(703);
	__webpack_require__(752);
	__webpack_require__(751);
	__webpack_require__(722);
	__webpack_require__(732);
	__webpack_require__(733);
	__webpack_require__(723);
	__webpack_require__(724);
	__webpack_require__(725);
	__webpack_require__(726);
	__webpack_require__(727);
	__webpack_require__(728);
	__webpack_require__(729);
	__webpack_require__(730);
	__webpack_require__(731);
	__webpack_require__(705);
	__webpack_require__(706);
	__webpack_require__(707);
	__webpack_require__(708);
	__webpack_require__(709);
	__webpack_require__(710);
	__webpack_require__(711);
	__webpack_require__(712);
	__webpack_require__(713);
	__webpack_require__(714);
	__webpack_require__(715);
	__webpack_require__(716);
	__webpack_require__(717);
	__webpack_require__(718);
	__webpack_require__(719);
	__webpack_require__(720);
	__webpack_require__(721);
	__webpack_require__(783);
	__webpack_require__(788);
	__webpack_require__(795);
	__webpack_require__(786);
	__webpack_require__(778);
	__webpack_require__(779);
	__webpack_require__(784);
	__webpack_require__(789);
	__webpack_require__(791);
	__webpack_require__(774);
	__webpack_require__(775);
	__webpack_require__(776);
	__webpack_require__(777);
	__webpack_require__(780);
	__webpack_require__(781);
	__webpack_require__(782);
	__webpack_require__(785);
	__webpack_require__(787);
	__webpack_require__(790);
	__webpack_require__(792);
	__webpack_require__(793);
	__webpack_require__(794);
	__webpack_require__(697);
	__webpack_require__(699);
	__webpack_require__(698);
	__webpack_require__(701);
	__webpack_require__(700);
	__webpack_require__(686);
	__webpack_require__(684);
	__webpack_require__(690);
	__webpack_require__(687);
	__webpack_require__(693);
	__webpack_require__(695);
	__webpack_require__(683);
	__webpack_require__(689);
	__webpack_require__(680);
	__webpack_require__(694);
	__webpack_require__(678);
	__webpack_require__(692);
	__webpack_require__(691);
	__webpack_require__(685);
	__webpack_require__(688);
	__webpack_require__(677);
	__webpack_require__(679);
	__webpack_require__(682);
	__webpack_require__(681);
	__webpack_require__(696);
	__webpack_require__(178);
	__webpack_require__(768);
	__webpack_require__(773);
	__webpack_require__(287);
	__webpack_require__(769);
	__webpack_require__(770);
	__webpack_require__(771);
	__webpack_require__(772);
	__webpack_require__(753);
	__webpack_require__(286);
	__webpack_require__(288);
	__webpack_require__(289);
	__webpack_require__(808);
	__webpack_require__(797);
	__webpack_require__(798);
	__webpack_require__(803);
	__webpack_require__(806);
	__webpack_require__(807);
	__webpack_require__(801);
	__webpack_require__(804);
	__webpack_require__(802);
	__webpack_require__(805);
	__webpack_require__(799);
	__webpack_require__(800);
	__webpack_require__(754);
	__webpack_require__(755);
	__webpack_require__(756);
	__webpack_require__(757);
	__webpack_require__(758);
	__webpack_require__(761);
	__webpack_require__(759);
	__webpack_require__(760);
	__webpack_require__(762);
	__webpack_require__(763);
	__webpack_require__(764);
	__webpack_require__(765);
	__webpack_require__(767);
	__webpack_require__(766);
	__webpack_require__(809);
	__webpack_require__(835);
	__webpack_require__(838);
	__webpack_require__(837);
	__webpack_require__(839);
	__webpack_require__(840);
	__webpack_require__(836);
	__webpack_require__(841);
	__webpack_require__(842);
	__webpack_require__(820);
	__webpack_require__(823);
	__webpack_require__(819);
	__webpack_require__(817);
	__webpack_require__(818);
	__webpack_require__(821);
	__webpack_require__(822);
	__webpack_require__(812);
	__webpack_require__(834);
	__webpack_require__(843);
	__webpack_require__(811);
	__webpack_require__(813);
	__webpack_require__(815);
	__webpack_require__(814);
	__webpack_require__(816);
	__webpack_require__(825);
	__webpack_require__(826);
	__webpack_require__(828);
	__webpack_require__(827);
	__webpack_require__(830);
	__webpack_require__(829);
	__webpack_require__(831);
	__webpack_require__(832);
	__webpack_require__(833);
	__webpack_require__(810);
	__webpack_require__(824);
	__webpack_require__(846);
	__webpack_require__(845);
	__webpack_require__(844);
	module.exports = __webpack_require__(52);

/***/ },
/* 848 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Expose `Backoff`.
	 */

	module.exports = Backoff;

	/**
	 * Initialize backoff timer with `opts`.
	 *
	 * - `min` initial timeout in milliseconds [100]
	 * - `max` max timeout [10000]
	 * - `jitter` [0]
	 * - `factor` [2]
	 *
	 * @param {Object} opts
	 * @api public
	 */

	function Backoff(opts) {
	  opts = opts || {};
	  this.ms = opts.min || 100;
	  this.max = opts.max || 10000;
	  this.factor = opts.factor || 2;
	  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
	  this.attempts = 0;
	}

	/**
	 * Return the backoff duration.
	 *
	 * @return {Number}
	 * @api public
	 */

	Backoff.prototype.duration = function () {
	  var ms = this.ms * Math.pow(this.factor, this.attempts++);
	  if (this.jitter) {
	    var rand = Math.random();
	    var deviation = Math.floor(rand * this.jitter * ms);
	    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
	  }
	  return Math.min(ms, this.max) | 0;
	};

	/**
	 * Reset the number of attempts.
	 *
	 * @api public
	 */

	Backoff.prototype.reset = function () {
	  this.attempts = 0;
	};

	/**
	 * Set the minimum duration
	 *
	 * @api public
	 */

	Backoff.prototype.setMin = function (min) {
	  this.ms = min;
	};

	/**
	 * Set the maximum duration
	 *
	 * @api public
	 */

	Backoff.prototype.setMax = function (max) {
	  this.max = max;
	};

	/**
	 * Set the jitter
	 *
	 * @api public
	 */

	Backoff.prototype.setJitter = function (jitter) {
	  this.jitter = jitter;
	};

/***/ },
/* 849 */
/***/ function(module, exports) {

	"use strict";

	/*
	 * base64-arraybuffer
	 * https://github.com/niklasvh/base64-arraybuffer
	 *
	 * Copyright (c) 2012 Niklas von Hertzen
	 * Licensed under the MIT license.
	 */
	(function (chars) {
	  "use strict";

	  exports.encode = function (arraybuffer) {
	    var bytes = new Uint8Array(arraybuffer),
	        i,
	        len = bytes.length,
	        base64 = "";

	    for (i = 0; i < len; i += 3) {
	      base64 += chars[bytes[i] >> 2];
	      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
	      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
	      base64 += chars[bytes[i + 2] & 63];
	    }

	    if (len % 3 === 2) {
	      base64 = base64.substring(0, base64.length - 1) + "=";
	    } else if (len % 3 === 1) {
	      base64 = base64.substring(0, base64.length - 2) + "==";
	    }

	    return base64;
	  };

	  exports.decode = function (base64) {
	    var bufferLength = base64.length * 0.75,
	        len = base64.length,
	        i,
	        p = 0,
	        encoded1,
	        encoded2,
	        encoded3,
	        encoded4;

	    if (base64[base64.length - 1] === "=") {
	      bufferLength--;
	      if (base64[base64.length - 2] === "=") {
	        bufferLength--;
	      }
	    }

	    var arraybuffer = new ArrayBuffer(bufferLength),
	        bytes = new Uint8Array(arraybuffer);

	    for (i = 0; i < len; i += 4) {
	      encoded1 = chars.indexOf(base64[i]);
	      encoded2 = chars.indexOf(base64[i + 1]);
	      encoded3 = chars.indexOf(base64[i + 2]);
	      encoded4 = chars.indexOf(base64[i + 3]);

	      bytes[p++] = encoded1 << 2 | encoded2 >> 4;
	      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
	      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
	    }

	    return arraybuffer;
	  };
	})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");

/***/ },
/* 850 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Create a blob builder even when vendor prefixes exist
	 */

	var BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;

	/**
	 * Check if Blob constructor is supported
	 */

	var blobSupported = function () {
	  try {
	    var a = new Blob(['hi']);
	    return a.size === 2;
	  } catch (e) {
	    return false;
	  }
	}();

	/**
	 * Check if Blob constructor supports ArrayBufferViews
	 * Fails in Safari 6, so we need to map to ArrayBuffers there.
	 */

	var blobSupportsArrayBufferView = blobSupported && function () {
	  try {
	    var b = new Blob([new Uint8Array([1, 2])]);
	    return b.size === 2;
	  } catch (e) {
	    return false;
	  }
	}();

	/**
	 * Check if BlobBuilder is supported
	 */

	var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;

	/**
	 * Helper function that maps ArrayBufferViews to ArrayBuffers
	 * Used by BlobBuilder constructor and old browsers that didn't
	 * support it in the Blob constructor.
	 */

	function mapArrayBufferViews(ary) {
	  for (var i = 0; i < ary.length; i++) {
	    var chunk = ary[i];
	    if (chunk.buffer instanceof ArrayBuffer) {
	      var buf = chunk.buffer;

	      // if this is a subarray, make a copy so we only
	      // include the subarray region from the underlying buffer
	      if (chunk.byteLength !== buf.byteLength) {
	        var copy = new Uint8Array(chunk.byteLength);
	        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
	        buf = copy.buffer;
	      }

	      ary[i] = buf;
	    }
	  }
	}

	function BlobBuilderConstructor(ary, options) {
	  options = options || {};

	  var bb = new BlobBuilder();
	  mapArrayBufferViews(ary);

	  for (var i = 0; i < ary.length; i++) {
	    bb.append(ary[i]);
	  }

	  return options.type ? bb.getBlob(options.type) : bb.getBlob();
	};

	function BlobConstructor(ary, options) {
	  mapArrayBufferViews(ary);
	  return new Blob(ary, options || {});
	};

	module.exports = function () {
	  if (blobSupported) {
	    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;
	  } else if (blobBuilderSupported) {
	    return BlobBuilderConstructor;
	  } else {
	    return undefined;
	  }
	}();
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 851 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function autobind
	 * @returns
	 */
	'use strict';

	var reactAutobind = __webpack_require__(932);

	/** @lends autobind */
	module.exports = reactAutobind;

/***/ },
/* 852 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create static markup
	 * @function markup
	 * @param {Object} Component - Component class
	 * @param {Object} props - Properties
	 * @param {...Object[]} children - Child elements
	 * @returns {string} - Static markup
	 */
	'use strict';

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	var create = __webpack_require__(290);
	var ReactDomServer = __webpack_require__(188);

	/** @lends markup */
	function markup(Component, props) {
	  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    children[_key - 2] = arguments[_key];
	  }

	  var _ref;

	  children = (_ref = []).concat.apply(_ref, _toConsumableArray(children));
	  var elm = create.apply(undefined, [Component, props].concat(_toConsumableArray(children)));
	  return ReactDomServer.renderToStaticMarkup(elm);
	}

	module.exports = markup;

/***/ },
/* 853 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Mount an element into dom
	 * @function mount
	 * @param {string|Object} container - Container element or it's id
	 * @param {Object} element - React element to mount.
	 * @returns {Promise}
	 */
	'use strict';

	var _require = __webpack_require__(104);

	var get = _require.get;

	var ReactDOM = __webpack_require__(16);

	/** @lends mount */
	function mount(container, element) {
	  if (!container) {
	    return Promise.reject(new Error('Container not found'));
	  }
	  if (typeof container === 'string') {
	    var document = get('document', { strict: true });
	    var found = document.getElementById(container);
	    if (!container) {
	      return Promise.reject(new Error('Container not found: ' + container));
	    }
	    container = found;
	  }

	  return new Promise(function (resolve, reject) {
	    return ReactDOM.render(element, container, function () {
	      return resolve();
	    });
	  });
	}
	module.exports = mount;

/***/ },
/* 854 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Bind window event once
	 * @function once
	 * @param {string} event - Event to bind
	 * @param {function} handler - Event handler
	 */
	'use strict';

	var _require = __webpack_require__(104);

	var once = _require.once;

	module.exports = once;

/***/ },
/* 855 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Wrap a element with higher order component
	 * @function wrap
	 * @param {Object} Base - Base react class
	 * @param {Object} spec - Additional spec to wrap
	 * @returns {Object} - Wrapped component
	 */
	'use strict';

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	var React = __webpack_require__(1);

	var _require = __webpack_require__(8);

	var clone = _require.clone;

	var reservedNames = ['displayName', 'mixins', 'childContextTypes', 'contextTypes', 'getDefaultProps', 'propTypes', 'statics', 'autobind'];

	/** @lends wrap */
	function wrap(Component, spec) {
	  var propTypes = Object.assign({}, spec.propTypes);
	  var statics = Object.assign({}, Object.keys(Component).filter(function (key) {
	    return !~reservedNames.indexOf(key);
	  }).reduce(function (statics, key) {
	    return Object.assign(statics, _defineProperty({}, key, Component[key]));
	  }, {}), spec.statics);
	  return React.createClass(Object.assign({
	    // Default renderer
	    render: function render() {
	      var s = this;
	      var props = s.props;

	      var wrappedProps = clone(props, {
	        without: Object.keys(spec.propTypes || {})
	      });
	      var children = React.Children.toArray(props.children);
	      return React.createElement.apply(React, [Component, wrappedProps].concat(_toConsumableArray(children)));
	    }
	  }, spec, {
	    propTypes: propTypes,
	    statics: statics
	  }));
	}

	module.exports = wrap;

/***/ },
/* 856 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @function create
	 */

	'use strict';

	var BRequest = __webpack_require__(291);

	/** @lends create */
	function create(conf) {
	  return new BRequest(conf);
	}

	module.exports = create;

/***/ },
/* 857 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTTP client for browsers
	 * @module brequest
	 */

	"use strict";

	var create = __webpack_require__(856);
	var BRequest = __webpack_require__(291);

	var lib = create({});

	Object.assign(lib, {
	  BRequest: BRequest,
	  create: create,
	  superagent: BRequest.superagent
	});

	module.exports = lib;

/***/ },
/* 858 */
/***/ function(module, exports) {

	'use strict';

	exports.toByteArray = toByteArray;
	exports.fromByteArray = fromByteArray;

	var lookup = [];
	var revLookup = [];
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

	function init() {
	  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
	  for (var i = 0, len = code.length; i < len; ++i) {
	    lookup[i] = code[i];
	    revLookup[code.charCodeAt(i)] = i;
	  }

	  revLookup['-'.charCodeAt(0)] = 62;
	  revLookup['_'.charCodeAt(0)] = 63;
	}

	init();

	function toByteArray(b64) {
	  var i, j, l, tmp, placeHolders, arr;
	  var len = b64.length;

	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4');
	  }

	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;

	  // base64 is 4/3 + up to two characters of the original data
	  arr = new Arr(len * 3 / 4 - placeHolders);

	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len;

	  var L = 0;

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
	    arr[L++] = tmp >> 16 & 0xFF;
	    arr[L++] = tmp >> 8 & 0xFF;
	    arr[L++] = tmp & 0xFF;
	  }

	  if (placeHolders === 2) {
	    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
	    arr[L++] = tmp & 0xFF;
	  } else if (placeHolders === 1) {
	    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
	    arr[L++] = tmp >> 8 & 0xFF;
	    arr[L++] = tmp & 0xFF;
	  }

	  return arr;
	}

	function tripletToBase64(num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
	}

	function encodeChunk(uint8, start, end) {
	  var tmp;
	  var output = [];
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
	    output.push(tripletToBase64(tmp));
	  }
	  return output.join('');
	}

	function fromByteArray(uint8) {
	  var tmp;
	  var len = uint8.length;
	  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
	  var output = '';
	  var parts = [];
	  var maxChunkLength = 16383; // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1];
	    output += lookup[tmp >> 2];
	    output += lookup[tmp << 4 & 0x3F];
	    output += '==';
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
	    output += lookup[tmp >> 10];
	    output += lookup[tmp >> 4 & 0x3F];
	    output += lookup[tmp << 2 & 0x3F];
	    output += '=';
	  }

	  parts.push(output);

	  return parts.join('');
	}

/***/ },
/* 859 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Bind window event once
	 * @function once
	 * @param {string} event - Event to bind
	 * @param {function} handler - Event handler
	 * @returns {function} - Function to cancel the binding
	 */
	'use strict';

	var get = __webpack_require__(293);

	/** @lends once */
	function once(event, handler) {
	  var window = get('window', { strict: true });
	  var binding = function onceWrap() {
	    window.removeEventListener(event, binding);
	    handler.apply(undefined, arguments);
	  };
	  window.addEventListener(event, binding);
	  var cancel = function cancel() {
	    return window.removeEventListener(event, binding);
	  };
	  return Object.assign(cancel, { cancel: cancel });
	}

	module.exports = once;

/***/ },
/* 860 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Chop to ceil.
	 * @function ceil
	 * @param {number} value - Value to calc.
	 * @param {number} [base=1] - Base number.
	 * @returns {number} - Ceil number.
	 */
	'use strict';

	var surplus = __webpack_require__(127);

	/** @lends ceil */
	function ceil(value, base) {
	  base = base || 0;
	  var surplused = surplus(value, base);
	  var result = value - surplused;
	  var enough = 0 < surplused;
	  if (enough) {
	    result += base;
	  }
	  var weight = 1 / base;
	  return parseInt(result * weight) / weight;
	}

	module.exports = ceil;

/***/ },
/* 861 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Chop to floor.
	 * @function floor
	 * @param {number} value - Value to calc.
	 * @param {number} [base=1] - Base number.
	 * @returns {number} - Floor number.
	 */
	'use strict';

	var surplus = __webpack_require__(127);

	/** @lends floor */
	function floor(value, base) {
	  base = base || 0;
	  var surplused = surplus(value, base);
	  var result = value - surplused;
	  var weight = 1 / base;
	  return parseInt(result * weight) / weight;
	}

	module.exports = floor;

/***/ },
/* 862 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Chop to round.
	 * @function round
	 * @param {number} value - Value to calc.
	 * @param {number} [base=1] - Base number.
	 * @returns {number} - Round number.
	 */
	'use strict';

	var surplus = __webpack_require__(127);

	/** @lends round */
	function round(value, base) {
	  base = base || 0;
	  var surplused = surplus(value, base);
	  var result = value - surplused;
	  var enough = base / 2 < surplused;
	  if (enough) {
	    result += base;
	  }
	  var weight = 1 / base;
	  return parseInt(result * weight) / weight;
	}

	module.exports = round;

/***/ },
/* 863 */
/***/ function(module, exports) {

	"use strict";

	module.exports = {
		aliceblue: [240, 248, 255],
		antiquewhite: [250, 235, 215],
		aqua: [0, 255, 255],
		aquamarine: [127, 255, 212],
		azure: [240, 255, 255],
		beige: [245, 245, 220],
		bisque: [255, 228, 196],
		black: [0, 0, 0],
		blanchedalmond: [255, 235, 205],
		blue: [0, 0, 255],
		blueviolet: [138, 43, 226],
		brown: [165, 42, 42],
		burlywood: [222, 184, 135],
		cadetblue: [95, 158, 160],
		chartreuse: [127, 255, 0],
		chocolate: [210, 105, 30],
		coral: [255, 127, 80],
		cornflowerblue: [100, 149, 237],
		cornsilk: [255, 248, 220],
		crimson: [220, 20, 60],
		cyan: [0, 255, 255],
		darkblue: [0, 0, 139],
		darkcyan: [0, 139, 139],
		darkgoldenrod: [184, 134, 11],
		darkgray: [169, 169, 169],
		darkgreen: [0, 100, 0],
		darkgrey: [169, 169, 169],
		darkkhaki: [189, 183, 107],
		darkmagenta: [139, 0, 139],
		darkolivegreen: [85, 107, 47],
		darkorange: [255, 140, 0],
		darkorchid: [153, 50, 204],
		darkred: [139, 0, 0],
		darksalmon: [233, 150, 122],
		darkseagreen: [143, 188, 143],
		darkslateblue: [72, 61, 139],
		darkslategray: [47, 79, 79],
		darkslategrey: [47, 79, 79],
		darkturquoise: [0, 206, 209],
		darkviolet: [148, 0, 211],
		deeppink: [255, 20, 147],
		deepskyblue: [0, 191, 255],
		dimgray: [105, 105, 105],
		dimgrey: [105, 105, 105],
		dodgerblue: [30, 144, 255],
		firebrick: [178, 34, 34],
		floralwhite: [255, 250, 240],
		forestgreen: [34, 139, 34],
		fuchsia: [255, 0, 255],
		gainsboro: [220, 220, 220],
		ghostwhite: [248, 248, 255],
		gold: [255, 215, 0],
		goldenrod: [218, 165, 32],
		gray: [128, 128, 128],
		green: [0, 128, 0],
		greenyellow: [173, 255, 47],
		grey: [128, 128, 128],
		honeydew: [240, 255, 240],
		hotpink: [255, 105, 180],
		indianred: [205, 92, 92],
		indigo: [75, 0, 130],
		ivory: [255, 255, 240],
		khaki: [240, 230, 140],
		lavender: [230, 230, 250],
		lavenderblush: [255, 240, 245],
		lawngreen: [124, 252, 0],
		lemonchiffon: [255, 250, 205],
		lightblue: [173, 216, 230],
		lightcoral: [240, 128, 128],
		lightcyan: [224, 255, 255],
		lightgoldenrodyellow: [250, 250, 210],
		lightgray: [211, 211, 211],
		lightgreen: [144, 238, 144],
		lightgrey: [211, 211, 211],
		lightpink: [255, 182, 193],
		lightsalmon: [255, 160, 122],
		lightseagreen: [32, 178, 170],
		lightskyblue: [135, 206, 250],
		lightslategray: [119, 136, 153],
		lightslategrey: [119, 136, 153],
		lightsteelblue: [176, 196, 222],
		lightyellow: [255, 255, 224],
		lime: [0, 255, 0],
		limegreen: [50, 205, 50],
		linen: [250, 240, 230],
		magenta: [255, 0, 255],
		maroon: [128, 0, 0],
		mediumaquamarine: [102, 205, 170],
		mediumblue: [0, 0, 205],
		mediumorchid: [186, 85, 211],
		mediumpurple: [147, 112, 219],
		mediumseagreen: [60, 179, 113],
		mediumslateblue: [123, 104, 238],
		mediumspringgreen: [0, 250, 154],
		mediumturquoise: [72, 209, 204],
		mediumvioletred: [199, 21, 133],
		midnightblue: [25, 25, 112],
		mintcream: [245, 255, 250],
		mistyrose: [255, 228, 225],
		moccasin: [255, 228, 181],
		navajowhite: [255, 222, 173],
		navy: [0, 0, 128],
		oldlace: [253, 245, 230],
		olive: [128, 128, 0],
		olivedrab: [107, 142, 35],
		orange: [255, 165, 0],
		orangered: [255, 69, 0],
		orchid: [218, 112, 214],
		palegoldenrod: [238, 232, 170],
		palegreen: [152, 251, 152],
		paleturquoise: [175, 238, 238],
		palevioletred: [219, 112, 147],
		papayawhip: [255, 239, 213],
		peachpuff: [255, 218, 185],
		peru: [205, 133, 63],
		pink: [255, 192, 203],
		plum: [221, 160, 221],
		powderblue: [176, 224, 230],
		purple: [128, 0, 128],
		rebeccapurple: [102, 51, 153],
		red: [255, 0, 0],
		rosybrown: [188, 143, 143],
		royalblue: [65, 105, 225],
		saddlebrown: [139, 69, 19],
		salmon: [250, 128, 114],
		sandybrown: [244, 164, 96],
		seagreen: [46, 139, 87],
		seashell: [255, 245, 238],
		sienna: [160, 82, 45],
		silver: [192, 192, 192],
		skyblue: [135, 206, 235],
		slateblue: [106, 90, 205],
		slategray: [112, 128, 144],
		slategrey: [112, 128, 144],
		snow: [255, 250, 250],
		springgreen: [0, 255, 127],
		steelblue: [70, 130, 180],
		tan: [210, 180, 140],
		teal: [0, 128, 128],
		thistle: [216, 191, 216],
		tomato: [255, 99, 71],
		turquoise: [64, 224, 208],
		violet: [238, 130, 238],
		wheat: [245, 222, 179],
		white: [255, 255, 255],
		whitesmoke: [245, 245, 245],
		yellow: [255, 255, 0],
		yellowgreen: [154, 205, 50]
	};

/***/ },
/* 864 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var conversions = __webpack_require__(296);
	var route = __webpack_require__(865);

	var convert = {};

	var models = Object.keys(conversions);

	function wrapRaw(fn) {
		var wrappedFn = function wrappedFn(args) {
			if (args === undefined || args === null) {
				return args;
			}

			if (arguments.length > 1) {
				args = Array.prototype.slice.call(arguments);
			}

			return fn(args);
		};

		// preserve .conversion property if there is one
		if ('conversion' in fn) {
			wrappedFn.conversion = fn.conversion;
		}

		return wrappedFn;
	}

	function wrapRounded(fn) {
		var wrappedFn = function wrappedFn(args) {
			if (args === undefined || args === null) {
				return args;
			}

			if (arguments.length > 1) {
				args = Array.prototype.slice.call(arguments);
			}

			var result = fn(args);

			// we're assuming the result is an array here.
			// see notice in conversions.js; don't use box types
			// in conversion functions.
			if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {
				for (var len = result.length, i = 0; i < len; i++) {
					result[i] = Math.round(result[i]);
				}
			}

			return result;
		};

		// preserve .conversion property if there is one
		if ('conversion' in fn) {
			wrappedFn.conversion = fn.conversion;
		}

		return wrappedFn;
	}

	models.forEach(function (fromModel) {
		convert[fromModel] = {};

		Object.defineProperty(convert[fromModel], 'channels', { value: conversions[fromModel].channels });

		var routes = route(fromModel);
		var routeModels = Object.keys(routes);

		routeModels.forEach(function (toModel) {
			var fn = routes[toModel];

			convert[fromModel][toModel] = wrapRounded(fn);
			convert[fromModel][toModel].raw = wrapRaw(fn);
		});
	});

	module.exports = convert;

/***/ },
/* 865 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var conversions = __webpack_require__(296);

	/*
		this function routes a model to all other models.

		all functions that are routed have a property `.conversion` attached
		to the returned synthetic function. This property is an array
		of strings, each with the steps in between the 'from' and 'to'
		color models (inclusive).

		conversions that are not possible simply are not included.
	*/

	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions);

	function buildGraph() {
		var graph = {};

		for (var len = models.length, i = 0; i < len; i++) {
			graph[models[i]] = {
				// http://jsperf.com/1-vs-infinity
				// micro-opt, but this is simple.
				distance: -1,
				parent: null
			};
		}

		return graph;
	}

	// https://en.wikipedia.org/wiki/Breadth-first_search
	function deriveBFS(fromModel) {
		var graph = buildGraph();
		var queue = [fromModel]; // unshift -> queue -> pop

		graph[fromModel].distance = 0;

		while (queue.length) {
			var current = queue.pop();
			var adjacents = Object.keys(conversions[current]);

			for (var len = adjacents.length, i = 0; i < len; i++) {
				var adjacent = adjacents[i];
				var node = graph[adjacent];

				if (node.distance === -1) {
					node.distance = graph[current].distance + 1;
					node.parent = current;
					queue.unshift(adjacent);
				}
			}
		}

		return graph;
	}

	function link(from, to) {
		return function (args) {
			return to(from(args));
		};
	}

	function wrapConversion(toModel, graph) {
		var path = [graph[toModel].parent, toModel];
		var fn = conversions[graph[toModel].parent][toModel];

		var cur = graph[toModel].parent;
		while (graph[cur].parent) {
			path.unshift(graph[cur].parent);
			fn = link(conversions[graph[cur].parent][cur], fn);
			cur = graph[cur].parent;
		}

		fn.conversion = path;
		return fn;
	}

	module.exports = function (fromModel) {
		var graph = deriveBFS(fromModel);
		var conversion = {};

		var models = Object.keys(graph);
		for (var len = models.length, i = 0; i < len; i++) {
			var toModel = models[i];
			var node = graph[toModel];

			if (node.parent === null) {
				// no possible conversion, or this node is the source model.
				continue;
			}

			conversion[toModel] = wrapConversion(toModel, graph);
		}

		return conversion;
	};

/***/ },
/* 866 */
/***/ function(module, exports) {

	"use strict";

	module.exports = {
		"aliceblue": [240, 248, 255],
		"antiquewhite": [250, 235, 215],
		"aqua": [0, 255, 255],
		"aquamarine": [127, 255, 212],
		"azure": [240, 255, 255],
		"beige": [245, 245, 220],
		"bisque": [255, 228, 196],
		"black": [0, 0, 0],
		"blanchedalmond": [255, 235, 205],
		"blue": [0, 0, 255],
		"blueviolet": [138, 43, 226],
		"brown": [165, 42, 42],
		"burlywood": [222, 184, 135],
		"cadetblue": [95, 158, 160],
		"chartreuse": [127, 255, 0],
		"chocolate": [210, 105, 30],
		"coral": [255, 127, 80],
		"cornflowerblue": [100, 149, 237],
		"cornsilk": [255, 248, 220],
		"crimson": [220, 20, 60],
		"cyan": [0, 255, 255],
		"darkblue": [0, 0, 139],
		"darkcyan": [0, 139, 139],
		"darkgoldenrod": [184, 134, 11],
		"darkgray": [169, 169, 169],
		"darkgreen": [0, 100, 0],
		"darkgrey": [169, 169, 169],
		"darkkhaki": [189, 183, 107],
		"darkmagenta": [139, 0, 139],
		"darkolivegreen": [85, 107, 47],
		"darkorange": [255, 140, 0],
		"darkorchid": [153, 50, 204],
		"darkred": [139, 0, 0],
		"darksalmon": [233, 150, 122],
		"darkseagreen": [143, 188, 143],
		"darkslateblue": [72, 61, 139],
		"darkslategray": [47, 79, 79],
		"darkslategrey": [47, 79, 79],
		"darkturquoise": [0, 206, 209],
		"darkviolet": [148, 0, 211],
		"deeppink": [255, 20, 147],
		"deepskyblue": [0, 191, 255],
		"dimgray": [105, 105, 105],
		"dimgrey": [105, 105, 105],
		"dodgerblue": [30, 144, 255],
		"firebrick": [178, 34, 34],
		"floralwhite": [255, 250, 240],
		"forestgreen": [34, 139, 34],
		"fuchsia": [255, 0, 255],
		"gainsboro": [220, 220, 220],
		"ghostwhite": [248, 248, 255],
		"gold": [255, 215, 0],
		"goldenrod": [218, 165, 32],
		"gray": [128, 128, 128],
		"green": [0, 128, 0],
		"greenyellow": [173, 255, 47],
		"grey": [128, 128, 128],
		"honeydew": [240, 255, 240],
		"hotpink": [255, 105, 180],
		"indianred": [205, 92, 92],
		"indigo": [75, 0, 130],
		"ivory": [255, 255, 240],
		"khaki": [240, 230, 140],
		"lavender": [230, 230, 250],
		"lavenderblush": [255, 240, 245],
		"lawngreen": [124, 252, 0],
		"lemonchiffon": [255, 250, 205],
		"lightblue": [173, 216, 230],
		"lightcoral": [240, 128, 128],
		"lightcyan": [224, 255, 255],
		"lightgoldenrodyellow": [250, 250, 210],
		"lightgray": [211, 211, 211],
		"lightgreen": [144, 238, 144],
		"lightgrey": [211, 211, 211],
		"lightpink": [255, 182, 193],
		"lightsalmon": [255, 160, 122],
		"lightseagreen": [32, 178, 170],
		"lightskyblue": [135, 206, 250],
		"lightslategray": [119, 136, 153],
		"lightslategrey": [119, 136, 153],
		"lightsteelblue": [176, 196, 222],
		"lightyellow": [255, 255, 224],
		"lime": [0, 255, 0],
		"limegreen": [50, 205, 50],
		"linen": [250, 240, 230],
		"magenta": [255, 0, 255],
		"maroon": [128, 0, 0],
		"mediumaquamarine": [102, 205, 170],
		"mediumblue": [0, 0, 205],
		"mediumorchid": [186, 85, 211],
		"mediumpurple": [147, 112, 219],
		"mediumseagreen": [60, 179, 113],
		"mediumslateblue": [123, 104, 238],
		"mediumspringgreen": [0, 250, 154],
		"mediumturquoise": [72, 209, 204],
		"mediumvioletred": [199, 21, 133],
		"midnightblue": [25, 25, 112],
		"mintcream": [245, 255, 250],
		"mistyrose": [255, 228, 225],
		"moccasin": [255, 228, 181],
		"navajowhite": [255, 222, 173],
		"navy": [0, 0, 128],
		"oldlace": [253, 245, 230],
		"olive": [128, 128, 0],
		"olivedrab": [107, 142, 35],
		"orange": [255, 165, 0],
		"orangered": [255, 69, 0],
		"orchid": [218, 112, 214],
		"palegoldenrod": [238, 232, 170],
		"palegreen": [152, 251, 152],
		"paleturquoise": [175, 238, 238],
		"palevioletred": [219, 112, 147],
		"papayawhip": [255, 239, 213],
		"peachpuff": [255, 218, 185],
		"peru": [205, 133, 63],
		"pink": [255, 192, 203],
		"plum": [221, 160, 221],
		"powderblue": [176, 224, 230],
		"purple": [128, 0, 128],
		"rebeccapurple": [102, 51, 153],
		"red": [255, 0, 0],
		"rosybrown": [188, 143, 143],
		"royalblue": [65, 105, 225],
		"saddlebrown": [139, 69, 19],
		"salmon": [250, 128, 114],
		"sandybrown": [244, 164, 96],
		"seagreen": [46, 139, 87],
		"seashell": [255, 245, 238],
		"sienna": [160, 82, 45],
		"silver": [192, 192, 192],
		"skyblue": [135, 206, 235],
		"slateblue": [106, 90, 205],
		"slategray": [112, 128, 144],
		"slategrey": [112, 128, 144],
		"snow": [255, 250, 250],
		"springgreen": [0, 255, 127],
		"steelblue": [70, 130, 180],
		"tan": [210, 180, 140],
		"teal": [0, 128, 128],
		"thistle": [216, 191, 216],
		"tomato": [255, 99, 71],
		"turquoise": [64, 224, 208],
		"violet": [238, 130, 238],
		"wheat": [245, 222, 179],
		"white": [255, 255, 255],
		"whitesmoke": [245, 245, 245],
		"yellow": [255, 255, 0],
		"yellowgreen": [154, 205, 50]
	};

/***/ },
/* 867 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	/* MIT license */
	var colorNames = __webpack_require__(866);

	module.exports = {
	   getRgba: getRgba,
	   getHsla: getHsla,
	   getRgb: getRgb,
	   getHsl: getHsl,
	   getHwb: getHwb,
	   getAlpha: getAlpha,

	   hexString: hexString,
	   rgbString: rgbString,
	   rgbaString: rgbaString,
	   percentString: percentString,
	   percentaString: percentaString,
	   hslString: hslString,
	   hslaString: hslaString,
	   hwbString: hwbString,
	   keyword: keyword
	};

	function getRgba(string) {
	   if (!string) {
	      return;
	   }
	   var abbr = /^#([a-fA-F0-9]{3})$/,
	       hex = /^#([a-fA-F0-9]{6})$/,
	       rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
	       per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
	       keyword = /(\D+)/;

	   var rgb = [0, 0, 0],
	       a = 1,
	       match = string.match(abbr);
	   if (match) {
	      match = match[1];
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = parseInt(match[i] + match[i], 16);
	      }
	   } else if (match = string.match(hex)) {
	      match = match[1];
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
	      }
	   } else if (match = string.match(rgba)) {
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = parseInt(match[i + 1]);
	      }
	      a = parseFloat(match[4]);
	   } else if (match = string.match(per)) {
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
	      }
	      a = parseFloat(match[4]);
	   } else if (match = string.match(keyword)) {
	      if (match[1] == "transparent") {
	         return [0, 0, 0, 0];
	      }
	      rgb = colorNames[match[1]];
	      if (!rgb) {
	         return;
	      }
	   }

	   for (var i = 0; i < rgb.length; i++) {
	      rgb[i] = scale(rgb[i], 0, 255);
	   }
	   if (!a && a != 0) {
	      a = 1;
	   } else {
	      a = scale(a, 0, 1);
	   }
	   rgb[3] = a;
	   return rgb;
	}

	function getHsla(string) {
	   if (!string) {
	      return;
	   }
	   var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
	   var match = string.match(hsl);
	   if (match) {
	      var alpha = parseFloat(match[4]);
	      var h = scale(parseInt(match[1]), 0, 360),
	          s = scale(parseFloat(match[2]), 0, 100),
	          l = scale(parseFloat(match[3]), 0, 100),
	          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
	      return [h, s, l, a];
	   }
	}

	function getHwb(string) {
	   if (!string) {
	      return;
	   }
	   var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
	   var match = string.match(hwb);
	   if (match) {
	      var alpha = parseFloat(match[4]);
	      var h = scale(parseInt(match[1]), 0, 360),
	          w = scale(parseFloat(match[2]), 0, 100),
	          b = scale(parseFloat(match[3]), 0, 100),
	          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
	      return [h, w, b, a];
	   }
	}

	function getRgb(string) {
	   var rgba = getRgba(string);
	   return rgba && rgba.slice(0, 3);
	}

	function getHsl(string) {
	   var hsla = getHsla(string);
	   return hsla && hsla.slice(0, 3);
	}

	function getAlpha(string) {
	   var vals = getRgba(string);
	   if (vals) {
	      return vals[3];
	   } else if (vals = getHsla(string)) {
	      return vals[3];
	   } else if (vals = getHwb(string)) {
	      return vals[3];
	   }
	}

	// generators
	function hexString(rgb) {
	   return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);
	}

	function rgbString(rgba, alpha) {
	   if (alpha < 1 || rgba[3] && rgba[3] < 1) {
	      return rgbaString(rgba, alpha);
	   }
	   return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
	}

	function rgbaString(rgba, alpha) {
	   if (alpha === undefined) {
	      alpha = rgba[3] !== undefined ? rgba[3] : 1;
	   }
	   return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ", " + alpha + ")";
	}

	function percentString(rgba, alpha) {
	   if (alpha < 1 || rgba[3] && rgba[3] < 1) {
	      return percentaString(rgba, alpha);
	   }
	   var r = Math.round(rgba[0] / 255 * 100),
	       g = Math.round(rgba[1] / 255 * 100),
	       b = Math.round(rgba[2] / 255 * 100);

	   return "rgb(" + r + "%, " + g + "%, " + b + "%)";
	}

	function percentaString(rgba, alpha) {
	   var r = Math.round(rgba[0] / 255 * 100),
	       g = Math.round(rgba[1] / 255 * 100),
	       b = Math.round(rgba[2] / 255 * 100);
	   return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
	}

	function hslString(hsla, alpha) {
	   if (alpha < 1 || hsla[3] && hsla[3] < 1) {
	      return hslaString(hsla, alpha);
	   }
	   return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
	}

	function hslaString(hsla, alpha) {
	   if (alpha === undefined) {
	      alpha = hsla[3] !== undefined ? hsla[3] : 1;
	   }
	   return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, " + alpha + ")";
	}

	// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
	// (hwb have alpha optional & 1 is default value)
	function hwbString(hwb, alpha) {
	   if (alpha === undefined) {
	      alpha = hwb[3] !== undefined ? hwb[3] : 1;
	   }
	   return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%" + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
	}

	function keyword(rgb) {
	   return reverseNames[rgb.slice(0, 3)];
	}

	// helpers
	function scale(num, min, max) {
	   return Math.min(Math.max(min, num), max);
	}

	function hexDouble(num) {
	   var str = num.toString(16).toUpperCase();
	   return str.length < 2 ? "0" + str : str;
	}

	//create a list of reverse color names
	var reverseNames = {};
	for (var name in colorNames) {
	   reverseNames[colorNames[name]] = name;
	}

/***/ },
/* 868 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = debug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(911);

	/**
	 * The currently active debug mode names, and names to skip.
	 */

	exports.names = [];
	exports.skips = [];

	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lowercased letter, i.e. "n".
	 */

	exports.formatters = {};

	/**
	 * Previously assigned color.
	 */

	var prevColor = 0;

	/**
	 * Previous log timestamp.
	 */

	var prevTime;

	/**
	 * Select a color.
	 *
	 * @return {Number}
	 * @api private
	 */

	function selectColor() {
	  return exports.colors[prevColor++ % exports.colors.length];
	}

	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */

	function debug(namespace) {

	  // define the `disabled` version
	  function disabled() {}
	  disabled.enabled = false;

	  // define the `enabled` version
	  function enabled() {

	    var self = enabled;

	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;

	    // add the `color` if not set
	    if (null == self.useColors) self.useColors = exports.useColors();
	    if (null == self.color && self.useColors) self.color = selectColor();

	    var args = Array.prototype.slice.call(arguments);

	    args[0] = exports.coerce(args[0]);

	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %o
	      args = ['%o'].concat(args);
	    }

	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);

	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });

	    if ('function' === typeof exports.formatArgs) {
	      args = exports.formatArgs.apply(self, args);
	    }
	    var logFn = enabled.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }
	  enabled.enabled = true;

	  var fn = exports.enabled(namespace) ? enabled : disabled;

	  fn.namespace = namespace;

	  return fn;
	}

	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */

	function enable(namespaces) {
	  exports.save(namespaces);

	  var split = (namespaces || '').split(/[\s,]+/);
	  var len = split.length;

	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}

	/**
	 * Disable debug output.
	 *
	 * @api public
	 */

	function disable() {
	  exports.enable('');
	}

	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */

	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}

	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */

	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}

/***/ },
/* 869 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var supportsArgumentsClass = function () {
	  return Object.prototype.toString.call(arguments);
	}() == '[object Arguments]';

	exports = module.exports = supportsArgumentsClass ? supported : unsupported;

	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};

	exports.unsupported = unsupported;
	function unsupported(object) {
	  return object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) == 'object' && typeof object.length == 'number' && Object.prototype.hasOwnProperty.call(object, 'callee') && !Object.prototype.propertyIsEnumerable.call(object, 'callee') || false;
	};

/***/ },
/* 870 */
/***/ function(module, exports) {

	'use strict';

	exports = module.exports = typeof Object.keys === 'function' ? Object.keys : shim;

	exports.shim = shim;
	function shim(obj) {
	  var keys = [];
	  for (var key in obj) {
	    keys.push(key);
	  }return keys;
	}

/***/ },
/* 871 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var clone = __webpack_require__(295);

	module.exports = function (options, defaults) {
	  options = options || {};

	  Object.keys(defaults).forEach(function (key) {
	    if (typeof options[key] === 'undefined') {
	      options[key] = clone(defaults[key]);
	    }
	  });

	  return options;
	};

/***/ },
/* 872 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(873);

/***/ },
/* 873 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(874);

	/**
	 * Exports parser
	 *
	 * @api public
	 *
	 */
	module.exports.parser = __webpack_require__(91);

/***/ },
/* 874 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * Module dependencies.
	 */

	var transports = __webpack_require__(299);
	var Emitter = __webpack_require__(182);
	var debug = __webpack_require__(24)('engine.io-client:socket');
	var index = __webpack_require__(307);
	var parser = __webpack_require__(91);
	var parseuri = __webpack_require__(311);
	var parsejson = __webpack_require__(919);
	var parseqs = __webpack_require__(185);

	/**
	 * Module exports.
	 */

	module.exports = Socket;

	/**
	 * Noop function.
	 *
	 * @api private
	 */

	function noop() {}

	/**
	 * Socket constructor.
	 *
	 * @param {String|Object} uri or options
	 * @param {Object} options
	 * @api public
	 */

	function Socket(uri, opts) {
	  if (!(this instanceof Socket)) return new Socket(uri, opts);

	  opts = opts || {};

	  if (uri && 'object' == (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {
	    opts = uri;
	    uri = null;
	  }

	  if (uri) {
	    uri = parseuri(uri);
	    opts.hostname = uri.host;
	    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';
	    opts.port = uri.port;
	    if (uri.query) opts.query = uri.query;
	  } else if (opts.host) {
	    opts.hostname = parseuri(opts.host).host;
	  }

	  this.secure = null != opts.secure ? opts.secure : global.location && 'https:' == location.protocol;

	  if (opts.hostname && !opts.port) {
	    // if no port is specified manually, use the protocol default
	    opts.port = this.secure ? '443' : '80';
	  }

	  this.agent = opts.agent || false;
	  this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');
	  this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);
	  this.query = opts.query || {};
	  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);
	  this.upgrade = false !== opts.upgrade;
	  this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
	  this.forceJSONP = !!opts.forceJSONP;
	  this.jsonp = false !== opts.jsonp;
	  this.forceBase64 = !!opts.forceBase64;
	  this.enablesXDR = !!opts.enablesXDR;
	  this.timestampParam = opts.timestampParam || 't';
	  this.timestampRequests = opts.timestampRequests;
	  this.transports = opts.transports || ['polling', 'websocket'];
	  this.readyState = '';
	  this.writeBuffer = [];
	  this.policyPort = opts.policyPort || 843;
	  this.rememberUpgrade = opts.rememberUpgrade || false;
	  this.binaryType = null;
	  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
	  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;

	  if (true === this.perMessageDeflate) this.perMessageDeflate = {};
	  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
	    this.perMessageDeflate.threshold = 1024;
	  }

	  // SSL options for Node.js client
	  this.pfx = opts.pfx || null;
	  this.key = opts.key || null;
	  this.passphrase = opts.passphrase || null;
	  this.cert = opts.cert || null;
	  this.ca = opts.ca || null;
	  this.ciphers = opts.ciphers || null;
	  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;

	  // other options for Node.js client
	  var freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global;
	  if (freeGlobal.global === freeGlobal) {
	    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
	      this.extraHeaders = opts.extraHeaders;
	    }
	  }

	  this.open();
	}

	Socket.priorWebsocketSuccess = false;

	/**
	 * Mix in `Emitter`.
	 */

	Emitter(Socket.prototype);

	/**
	 * Protocol version.
	 *
	 * @api public
	 */

	Socket.protocol = parser.protocol; // this is an int

	/**
	 * Expose deps for legacy compatibility
	 * and standalone browser access.
	 */

	Socket.Socket = Socket;
	Socket.Transport = __webpack_require__(180);
	Socket.transports = __webpack_require__(299);
	Socket.parser = __webpack_require__(91);

	/**
	 * Creates transport of the given type.
	 *
	 * @param {String} transport name
	 * @return {Transport}
	 * @api private
	 */

	Socket.prototype.createTransport = function (name) {
	  debug('creating transport "%s"', name);
	  var query = clone(this.query);

	  // append engine.io protocol identifier
	  query.EIO = parser.protocol;

	  // transport name
	  query.transport = name;

	  // session id if we already have one
	  if (this.id) query.sid = this.id;

	  var transport = new transports[name]({
	    agent: this.agent,
	    hostname: this.hostname,
	    port: this.port,
	    secure: this.secure,
	    path: this.path,
	    query: query,
	    forceJSONP: this.forceJSONP,
	    jsonp: this.jsonp,
	    forceBase64: this.forceBase64,
	    enablesXDR: this.enablesXDR,
	    timestampRequests: this.timestampRequests,
	    timestampParam: this.timestampParam,
	    policyPort: this.policyPort,
	    socket: this,
	    pfx: this.pfx,
	    key: this.key,
	    passphrase: this.passphrase,
	    cert: this.cert,
	    ca: this.ca,
	    ciphers: this.ciphers,
	    rejectUnauthorized: this.rejectUnauthorized,
	    perMessageDeflate: this.perMessageDeflate,
	    extraHeaders: this.extraHeaders
	  });

	  return transport;
	};

	function clone(obj) {
	  var o = {};
	  for (var i in obj) {
	    if (obj.hasOwnProperty(i)) {
	      o[i] = obj[i];
	    }
	  }
	  return o;
	}

	/**
	 * Initializes transport to use and starts probe.
	 *
	 * @api private
	 */
	Socket.prototype.open = function () {
	  var transport;
	  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {
	    transport = 'websocket';
	  } else if (0 === this.transports.length) {
	    // Emit error on next tick so it can be listened to
	    var self = this;
	    setTimeout(function () {
	      self.emit('error', 'No transports available');
	    }, 0);
	    return;
	  } else {
	    transport = this.transports[0];
	  }
	  this.readyState = 'opening';

	  // Retry with the next transport if the transport is disabled (jsonp: false)
	  try {
	    transport = this.createTransport(transport);
	  } catch (e) {
	    this.transports.shift();
	    this.open();
	    return;
	  }

	  transport.open();
	  this.setTransport(transport);
	};

	/**
	 * Sets the current transport. Disables the existing one (if any).
	 *
	 * @api private
	 */

	Socket.prototype.setTransport = function (transport) {
	  debug('setting transport %s', transport.name);
	  var self = this;

	  if (this.transport) {
	    debug('clearing existing transport %s', this.transport.name);
	    this.transport.removeAllListeners();
	  }

	  // set up transport
	  this.transport = transport;

	  // set up transport listeners
	  transport.on('drain', function () {
	    self.onDrain();
	  }).on('packet', function (packet) {
	    self.onPacket(packet);
	  }).on('error', function (e) {
	    self.onError(e);
	  }).on('close', function () {
	    self.onClose('transport close');
	  });
	};

	/**
	 * Probes a transport.
	 *
	 * @param {String} transport name
	 * @api private
	 */

	Socket.prototype.probe = function (name) {
	  debug('probing transport "%s"', name);
	  var transport = this.createTransport(name, { probe: 1 }),
	      failed = false,
	      self = this;

	  Socket.priorWebsocketSuccess = false;

	  function onTransportOpen() {
	    if (self.onlyBinaryUpgrades) {
	      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
	      failed = failed || upgradeLosesBinary;
	    }
	    if (failed) return;

	    debug('probe transport "%s" opened', name);
	    transport.send([{ type: 'ping', data: 'probe' }]);
	    transport.once('packet', function (msg) {
	      if (failed) return;
	      if ('pong' == msg.type && 'probe' == msg.data) {
	        debug('probe transport "%s" pong', name);
	        self.upgrading = true;
	        self.emit('upgrading', transport);
	        if (!transport) return;
	        Socket.priorWebsocketSuccess = 'websocket' == transport.name;

	        debug('pausing current transport "%s"', self.transport.name);
	        self.transport.pause(function () {
	          if (failed) return;
	          if ('closed' == self.readyState) return;
	          debug('changing transport and sending upgrade packet');

	          cleanup();

	          self.setTransport(transport);
	          transport.send([{ type: 'upgrade' }]);
	          self.emit('upgrade', transport);
	          transport = null;
	          self.upgrading = false;
	          self.flush();
	        });
	      } else {
	        debug('probe transport "%s" failed', name);
	        var err = new Error('probe error');
	        err.transport = transport.name;
	        self.emit('upgradeError', err);
	      }
	    });
	  }

	  function freezeTransport() {
	    if (failed) return;

	    // Any callback called by transport should be ignored since now
	    failed = true;

	    cleanup();

	    transport.close();
	    transport = null;
	  }

	  //Handle any error that happens while probing
	  function onerror(err) {
	    var error = new Error('probe error: ' + err);
	    error.transport = transport.name;

	    freezeTransport();

	    debug('probe transport "%s" failed because of error: %s', name, err);

	    self.emit('upgradeError', error);
	  }

	  function onTransportClose() {
	    onerror("transport closed");
	  }

	  //When the socket is closed while we're probing
	  function onclose() {
	    onerror("socket closed");
	  }

	  //When the socket is upgraded while we're probing
	  function onupgrade(to) {
	    if (transport && to.name != transport.name) {
	      debug('"%s" works - aborting "%s"', to.name, transport.name);
	      freezeTransport();
	    }
	  }

	  //Remove all listeners on the transport and on self
	  function cleanup() {
	    transport.removeListener('open', onTransportOpen);
	    transport.removeListener('error', onerror);
	    transport.removeListener('close', onTransportClose);
	    self.removeListener('close', onclose);
	    self.removeListener('upgrading', onupgrade);
	  }

	  transport.once('open', onTransportOpen);
	  transport.once('error', onerror);
	  transport.once('close', onTransportClose);

	  this.once('close', onclose);
	  this.once('upgrading', onupgrade);

	  transport.open();
	};

	/**
	 * Called when connection is deemed open.
	 *
	 * @api public
	 */

	Socket.prototype.onOpen = function () {
	  debug('socket open');
	  this.readyState = 'open';
	  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;
	  this.emit('open');
	  this.flush();

	  // we check for `readyState` in case an `open`
	  // listener already closed the socket
	  if ('open' == this.readyState && this.upgrade && this.transport.pause) {
	    debug('starting upgrade probes');
	    for (var i = 0, l = this.upgrades.length; i < l; i++) {
	      this.probe(this.upgrades[i]);
	    }
	  }
	};

	/**
	 * Handles a packet.
	 *
	 * @api private
	 */

	Socket.prototype.onPacket = function (packet) {
	  if ('opening' == this.readyState || 'open' == this.readyState) {
	    debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

	    this.emit('packet', packet);

	    // Socket is live - any packet counts
	    this.emit('heartbeat');

	    switch (packet.type) {
	      case 'open':
	        this.onHandshake(parsejson(packet.data));
	        break;

	      case 'pong':
	        this.setPing();
	        this.emit('pong');
	        break;

	      case 'error':
	        var err = new Error('server error');
	        err.code = packet.data;
	        this.onError(err);
	        break;

	      case 'message':
	        this.emit('data', packet.data);
	        this.emit('message', packet.data);
	        break;
	    }
	  } else {
	    debug('packet received with socket readyState "%s"', this.readyState);
	  }
	};

	/**
	 * Called upon handshake completion.
	 *
	 * @param {Object} handshake obj
	 * @api private
	 */

	Socket.prototype.onHandshake = function (data) {
	  this.emit('handshake', data);
	  this.id = data.sid;
	  this.transport.query.sid = data.sid;
	  this.upgrades = this.filterUpgrades(data.upgrades);
	  this.pingInterval = data.pingInterval;
	  this.pingTimeout = data.pingTimeout;
	  this.onOpen();
	  // In case open handler closes socket
	  if ('closed' == this.readyState) return;
	  this.setPing();

	  // Prolong liveness of socket on heartbeat
	  this.removeListener('heartbeat', this.onHeartbeat);
	  this.on('heartbeat', this.onHeartbeat);
	};

	/**
	 * Resets ping timeout.
	 *
	 * @api private
	 */

	Socket.prototype.onHeartbeat = function (timeout) {
	  clearTimeout(this.pingTimeoutTimer);
	  var self = this;
	  self.pingTimeoutTimer = setTimeout(function () {
	    if ('closed' == self.readyState) return;
	    self.onClose('ping timeout');
	  }, timeout || self.pingInterval + self.pingTimeout);
	};

	/**
	 * Pings server every `this.pingInterval` and expects response
	 * within `this.pingTimeout` or closes connection.
	 *
	 * @api private
	 */

	Socket.prototype.setPing = function () {
	  var self = this;
	  clearTimeout(self.pingIntervalTimer);
	  self.pingIntervalTimer = setTimeout(function () {
	    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
	    self.ping();
	    self.onHeartbeat(self.pingTimeout);
	  }, self.pingInterval);
	};

	/**
	* Sends a ping packet.
	*
	* @api private
	*/

	Socket.prototype.ping = function () {
	  var self = this;
	  this.sendPacket('ping', function () {
	    self.emit('ping');
	  });
	};

	/**
	 * Called on `drain` event
	 *
	 * @api private
	 */

	Socket.prototype.onDrain = function () {
	  this.writeBuffer.splice(0, this.prevBufferLen);

	  // setting prevBufferLen = 0 is very important
	  // for example, when upgrading, upgrade packet is sent over,
	  // and a nonzero prevBufferLen could cause problems on `drain`
	  this.prevBufferLen = 0;

	  if (0 === this.writeBuffer.length) {
	    this.emit('drain');
	  } else {
	    this.flush();
	  }
	};

	/**
	 * Flush write buffers.
	 *
	 * @api private
	 */

	Socket.prototype.flush = function () {
	  if ('closed' != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
	    debug('flushing %d packets in socket', this.writeBuffer.length);
	    this.transport.send(this.writeBuffer);
	    // keep track of current length of writeBuffer
	    // splice writeBuffer and callbackBuffer on `drain`
	    this.prevBufferLen = this.writeBuffer.length;
	    this.emit('flush');
	  }
	};

	/**
	 * Sends a message.
	 *
	 * @param {String} message.
	 * @param {Function} callback function.
	 * @param {Object} options.
	 * @return {Socket} for chaining.
	 * @api public
	 */

	Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {
	  this.sendPacket('message', msg, options, fn);
	  return this;
	};

	/**
	 * Sends a packet.
	 *
	 * @param {String} packet type.
	 * @param {String} data.
	 * @param {Object} options.
	 * @param {Function} callback function.
	 * @api private
	 */

	Socket.prototype.sendPacket = function (type, data, options, fn) {
	  if ('function' == typeof data) {
	    fn = data;
	    data = undefined;
	  }

	  if ('function' == typeof options) {
	    fn = options;
	    options = null;
	  }

	  if ('closing' == this.readyState || 'closed' == this.readyState) {
	    return;
	  }

	  options = options || {};
	  options.compress = false !== options.compress;

	  var packet = {
	    type: type,
	    data: data,
	    options: options
	  };
	  this.emit('packetCreate', packet);
	  this.writeBuffer.push(packet);
	  if (fn) this.once('flush', fn);
	  this.flush();
	};

	/**
	 * Closes the connection.
	 *
	 * @api private
	 */

	Socket.prototype.close = function () {
	  if ('opening' == this.readyState || 'open' == this.readyState) {
	    this.readyState = 'closing';

	    var self = this;

	    if (this.writeBuffer.length) {
	      this.once('drain', function () {
	        if (this.upgrading) {
	          waitForUpgrade();
	        } else {
	          close();
	        }
	      });
	    } else if (this.upgrading) {
	      waitForUpgrade();
	    } else {
	      close();
	    }
	  }

	  function close() {
	    self.onClose('forced close');
	    debug('socket closing - telling transport to close');
	    self.transport.close();
	  }

	  function cleanupAndClose() {
	    self.removeListener('upgrade', cleanupAndClose);
	    self.removeListener('upgradeError', cleanupAndClose);
	    close();
	  }

	  function waitForUpgrade() {
	    // wait for upgrade to finish since we can't send packets while pausing a transport
	    self.once('upgrade', cleanupAndClose);
	    self.once('upgradeError', cleanupAndClose);
	  }

	  return this;
	};

	/**
	 * Called upon transport error
	 *
	 * @api private
	 */

	Socket.prototype.onError = function (err) {
	  debug('socket error %j', err);
	  Socket.priorWebsocketSuccess = false;
	  this.emit('error', err);
	  this.onClose('transport error', err);
	};

	/**
	 * Called upon transport close.
	 *
	 * @api private
	 */

	Socket.prototype.onClose = function (reason, desc) {
	  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {
	    debug('socket close with reason: "%s"', reason);
	    var self = this;

	    // clear timers
	    clearTimeout(this.pingIntervalTimer);
	    clearTimeout(this.pingTimeoutTimer);

	    // stop event from firing again for transport
	    this.transport.removeAllListeners('close');

	    // ensure transport won't stay open
	    this.transport.close();

	    // ignore further transport communication
	    this.transport.removeAllListeners();

	    // set ready state
	    this.readyState = 'closed';

	    // clear session id
	    this.id = null;

	    // emit close event
	    this.emit('close', reason, desc);

	    // clean buffers after, so users can still
	    // grab the buffers on `close` event
	    self.writeBuffer = [];
	    self.prevBufferLen = 0;
	  }
	};

	/**
	 * Filters upgrades, returning only those matching client transports.
	 *
	 * @param {Array} server upgrades
	 * @api private
	 *
	 */

	Socket.prototype.filterUpgrades = function (upgrades) {
	  var filteredUpgrades = [];
	  for (var i = 0, j = upgrades.length; i < j; i++) {
	    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
	  }
	  return filteredUpgrades;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 875 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Module requirements.
	 */

	var Polling = __webpack_require__(300);
	var inherit = __webpack_require__(128);

	/**
	 * Module exports.
	 */

	module.exports = JSONPPolling;

	/**
	 * Cached regular expressions.
	 */

	var rNewline = /\n/g;
	var rEscapedNewline = /\\n/g;

	/**
	 * Global JSONP callbacks.
	 */

	var callbacks;

	/**
	 * Callbacks count.
	 */

	var index = 0;

	/**
	 * Noop.
	 */

	function empty() {}

	/**
	 * JSONP Polling constructor.
	 *
	 * @param {Object} opts.
	 * @api public
	 */

	function JSONPPolling(opts) {
	  Polling.call(this, opts);

	  this.query = this.query || {};

	  // define global callbacks array if not present
	  // we do this here (lazily) to avoid unneeded global pollution
	  if (!callbacks) {
	    // we need to consider multiple engines in the same page
	    if (!global.___eio) global.___eio = [];
	    callbacks = global.___eio;
	  }

	  // callback identifier
	  this.index = callbacks.length;

	  // add callback to jsonp global
	  var self = this;
	  callbacks.push(function (msg) {
	    self.onData(msg);
	  });

	  // append to query string
	  this.query.j = this.index;

	  // prevent spurious errors from being emitted when the window is unloaded
	  if (global.document && global.addEventListener) {
	    global.addEventListener('beforeunload', function () {
	      if (self.script) self.script.onerror = empty;
	    }, false);
	  }
	}

	/**
	 * Inherits from Polling.
	 */

	inherit(JSONPPolling, Polling);

	/*
	 * JSONP only supports binary as base64 encoded strings
	 */

	JSONPPolling.prototype.supportsBinary = false;

	/**
	 * Closes the socket.
	 *
	 * @api private
	 */

	JSONPPolling.prototype.doClose = function () {
	  if (this.script) {
	    this.script.parentNode.removeChild(this.script);
	    this.script = null;
	  }

	  if (this.form) {
	    this.form.parentNode.removeChild(this.form);
	    this.form = null;
	    this.iframe = null;
	  }

	  Polling.prototype.doClose.call(this);
	};

	/**
	 * Starts a poll cycle.
	 *
	 * @api private
	 */

	JSONPPolling.prototype.doPoll = function () {
	  var self = this;
	  var script = document.createElement('script');

	  if (this.script) {
	    this.script.parentNode.removeChild(this.script);
	    this.script = null;
	  }

	  script.async = true;
	  script.src = this.uri();
	  script.onerror = function (e) {
	    self.onError('jsonp poll error', e);
	  };

	  var insertAt = document.getElementsByTagName('script')[0];
	  if (insertAt) {
	    insertAt.parentNode.insertBefore(script, insertAt);
	  } else {
	    (document.head || document.body).appendChild(script);
	  }
	  this.script = script;

	  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);

	  if (isUAgecko) {
	    setTimeout(function () {
	      var iframe = document.createElement('iframe');
	      document.body.appendChild(iframe);
	      document.body.removeChild(iframe);
	    }, 100);
	  }
	};

	/**
	 * Writes with a hidden iframe.
	 *
	 * @param {String} data to send
	 * @param {Function} called upon flush.
	 * @api private
	 */

	JSONPPolling.prototype.doWrite = function (data, fn) {
	  var self = this;

	  if (!this.form) {
	    var form = document.createElement('form');
	    var area = document.createElement('textarea');
	    var id = this.iframeId = 'eio_iframe_' + this.index;
	    var iframe;

	    form.className = 'socketio';
	    form.style.position = 'absolute';
	    form.style.top = '-1000px';
	    form.style.left = '-1000px';
	    form.target = id;
	    form.method = 'POST';
	    form.setAttribute('accept-charset', 'utf-8');
	    area.name = 'd';
	    form.appendChild(area);
	    document.body.appendChild(form);

	    this.form = form;
	    this.area = area;
	  }

	  this.form.action = this.uri();

	  function complete() {
	    initIframe();
	    fn();
	  }

	  function initIframe() {
	    if (self.iframe) {
	      try {
	        self.form.removeChild(self.iframe);
	      } catch (e) {
	        self.onError('jsonp polling iframe removal error', e);
	      }
	    }

	    try {
	      // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
	      var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
	      iframe = document.createElement(html);
	    } catch (e) {
	      iframe = document.createElement('iframe');
	      iframe.name = self.iframeId;
	      iframe.src = 'javascript:0';
	    }

	    iframe.id = self.iframeId;

	    self.form.appendChild(iframe);
	    self.iframe = iframe;
	  }

	  initIframe();

	  // escape \n to prevent it from being converted into \r\n by some UAs
	  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
	  data = data.replace(rEscapedNewline, '\\\n');
	  this.area.value = data.replace(rNewline, '\\n');

	  try {
	    this.form.submit();
	  } catch (e) {}

	  if (this.iframe.attachEvent) {
	    this.iframe.onreadystatechange = function () {
	      if (self.iframe.readyState == 'complete') {
	        complete();
	      }
	    };
	  } else {
	    this.iframe.onload = complete;
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 876 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Module requirements.
	 */

	var XMLHttpRequest = __webpack_require__(181);
	var Polling = __webpack_require__(300);
	var Emitter = __webpack_require__(182);
	var inherit = __webpack_require__(128);
	var debug = __webpack_require__(24)('engine.io-client:polling-xhr');

	/**
	 * Module exports.
	 */

	module.exports = XHR;
	module.exports.Request = Request;

	/**
	 * Empty function
	 */

	function empty() {}

	/**
	 * XHR Polling constructor.
	 *
	 * @param {Object} opts
	 * @api public
	 */

	function XHR(opts) {
	  Polling.call(this, opts);

	  if (global.location) {
	    var isSSL = 'https:' == location.protocol;
	    var port = location.port;

	    // some user agents have empty `location.port`
	    if (!port) {
	      port = isSSL ? 443 : 80;
	    }

	    this.xd = opts.hostname != global.location.hostname || port != opts.port;
	    this.xs = opts.secure != isSSL;
	  } else {
	    this.extraHeaders = opts.extraHeaders;
	  }
	}

	/**
	 * Inherits from Polling.
	 */

	inherit(XHR, Polling);

	/**
	 * XHR supports binary
	 */

	XHR.prototype.supportsBinary = true;

	/**
	 * Creates a request.
	 *
	 * @param {String} method
	 * @api private
	 */

	XHR.prototype.request = function (opts) {
	  opts = opts || {};
	  opts.uri = this.uri();
	  opts.xd = this.xd;
	  opts.xs = this.xs;
	  opts.agent = this.agent || false;
	  opts.supportsBinary = this.supportsBinary;
	  opts.enablesXDR = this.enablesXDR;

	  // SSL options for Node.js client
	  opts.pfx = this.pfx;
	  opts.key = this.key;
	  opts.passphrase = this.passphrase;
	  opts.cert = this.cert;
	  opts.ca = this.ca;
	  opts.ciphers = this.ciphers;
	  opts.rejectUnauthorized = this.rejectUnauthorized;

	  // other options for Node.js client
	  opts.extraHeaders = this.extraHeaders;

	  return new Request(opts);
	};

	/**
	 * Sends data.
	 *
	 * @param {String} data to send.
	 * @param {Function} called upon flush.
	 * @api private
	 */

	XHR.prototype.doWrite = function (data, fn) {
	  var isBinary = typeof data !== 'string' && data !== undefined;
	  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
	  var self = this;
	  req.on('success', fn);
	  req.on('error', function (err) {
	    self.onError('xhr post error', err);
	  });
	  this.sendXhr = req;
	};

	/**
	 * Starts a poll cycle.
	 *
	 * @api private
	 */

	XHR.prototype.doPoll = function () {
	  debug('xhr poll');
	  var req = this.request();
	  var self = this;
	  req.on('data', function (data) {
	    self.onData(data);
	  });
	  req.on('error', function (err) {
	    self.onError('xhr poll error', err);
	  });
	  this.pollXhr = req;
	};

	/**
	 * Request constructor
	 *
	 * @param {Object} options
	 * @api public
	 */

	function Request(opts) {
	  this.method = opts.method || 'GET';
	  this.uri = opts.uri;
	  this.xd = !!opts.xd;
	  this.xs = !!opts.xs;
	  this.async = false !== opts.async;
	  this.data = undefined != opts.data ? opts.data : null;
	  this.agent = opts.agent;
	  this.isBinary = opts.isBinary;
	  this.supportsBinary = opts.supportsBinary;
	  this.enablesXDR = opts.enablesXDR;

	  // SSL options for Node.js client
	  this.pfx = opts.pfx;
	  this.key = opts.key;
	  this.passphrase = opts.passphrase;
	  this.cert = opts.cert;
	  this.ca = opts.ca;
	  this.ciphers = opts.ciphers;
	  this.rejectUnauthorized = opts.rejectUnauthorized;

	  // other options for Node.js client
	  this.extraHeaders = opts.extraHeaders;

	  this.create();
	}

	/**
	 * Mix in `Emitter`.
	 */

	Emitter(Request.prototype);

	/**
	 * Creates the XHR object and sends the request.
	 *
	 * @api private
	 */

	Request.prototype.create = function () {
	  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

	  // SSL options for Node.js client
	  opts.pfx = this.pfx;
	  opts.key = this.key;
	  opts.passphrase = this.passphrase;
	  opts.cert = this.cert;
	  opts.ca = this.ca;
	  opts.ciphers = this.ciphers;
	  opts.rejectUnauthorized = this.rejectUnauthorized;

	  var xhr = this.xhr = new XMLHttpRequest(opts);
	  var self = this;

	  try {
	    debug('xhr open %s: %s', this.method, this.uri);
	    xhr.open(this.method, this.uri, this.async);
	    try {
	      if (this.extraHeaders) {
	        xhr.setDisableHeaderCheck(true);
	        for (var i in this.extraHeaders) {
	          if (this.extraHeaders.hasOwnProperty(i)) {
	            xhr.setRequestHeader(i, this.extraHeaders[i]);
	          }
	        }
	      }
	    } catch (e) {}
	    if (this.supportsBinary) {
	      // This has to be done after open because Firefox is stupid
	      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension
	      xhr.responseType = 'arraybuffer';
	    }

	    if ('POST' == this.method) {
	      try {
	        if (this.isBinary) {
	          xhr.setRequestHeader('Content-type', 'application/octet-stream');
	        } else {
	          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
	        }
	      } catch (e) {}
	    }

	    // ie6 check
	    if ('withCredentials' in xhr) {
	      xhr.withCredentials = true;
	    }

	    if (this.hasXDR()) {
	      xhr.onload = function () {
	        self.onLoad();
	      };
	      xhr.onerror = function () {
	        self.onError(xhr.responseText);
	      };
	    } else {
	      xhr.onreadystatechange = function () {
	        if (4 != xhr.readyState) return;
	        if (200 == xhr.status || 1223 == xhr.status) {
	          self.onLoad();
	        } else {
	          // make sure the `error` event handler that's user-set
	          // does not throw in the same tick and gets caught here
	          setTimeout(function () {
	            self.onError(xhr.status);
	          }, 0);
	        }
	      };
	    }

	    debug('xhr data %s', this.data);
	    xhr.send(this.data);
	  } catch (e) {
	    // Need to defer since .create() is called directly fhrom the constructor
	    // and thus the 'error' event can only be only bound *after* this exception
	    // occurs.  Therefore, also, we cannot throw here at all.
	    setTimeout(function () {
	      self.onError(e);
	    }, 0);
	    return;
	  }

	  if (global.document) {
	    this.index = Request.requestsCount++;
	    Request.requests[this.index] = this;
	  }
	};

	/**
	 * Called upon successful response.
	 *
	 * @api private
	 */

	Request.prototype.onSuccess = function () {
	  this.emit('success');
	  this.cleanup();
	};

	/**
	 * Called if we have data.
	 *
	 * @api private
	 */

	Request.prototype.onData = function (data) {
	  this.emit('data', data);
	  this.onSuccess();
	};

	/**
	 * Called upon error.
	 *
	 * @api private
	 */

	Request.prototype.onError = function (err) {
	  this.emit('error', err);
	  this.cleanup(true);
	};

	/**
	 * Cleans up house.
	 *
	 * @api private
	 */

	Request.prototype.cleanup = function (fromError) {
	  if ('undefined' == typeof this.xhr || null === this.xhr) {
	    return;
	  }
	  // xmlhttprequest
	  if (this.hasXDR()) {
	    this.xhr.onload = this.xhr.onerror = empty;
	  } else {
	    this.xhr.onreadystatechange = empty;
	  }

	  if (fromError) {
	    try {
	      this.xhr.abort();
	    } catch (e) {}
	  }

	  if (global.document) {
	    delete Request.requests[this.index];
	  }

	  this.xhr = null;
	};

	/**
	 * Called upon load.
	 *
	 * @api private
	 */

	Request.prototype.onLoad = function () {
	  var data;
	  try {
	    var contentType;
	    try {
	      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];
	    } catch (e) {}
	    if (contentType === 'application/octet-stream') {
	      data = this.xhr.response;
	    } else {
	      if (!this.supportsBinary) {
	        data = this.xhr.responseText;
	      } else {
	        try {
	          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));
	        } catch (e) {
	          var ui8Arr = new Uint8Array(this.xhr.response);
	          var dataArray = [];
	          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {
	            dataArray.push(ui8Arr[idx]);
	          }

	          data = String.fromCharCode.apply(null, dataArray);
	        }
	      }
	    }
	  } catch (e) {
	    this.onError(e);
	  }
	  if (null != data) {
	    this.onData(data);
	  }
	};

	/**
	 * Check if it has XDomainRequest.
	 *
	 * @api private
	 */

	Request.prototype.hasXDR = function () {
	  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;
	};

	/**
	 * Aborts the request.
	 *
	 * @api public
	 */

	Request.prototype.abort = function () {
	  this.cleanup();
	};

	/**
	 * Aborts pending requests when unloading the window. This is needed to prevent
	 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
	 * emitted.
	 */

	if (global.document) {
	  Request.requestsCount = 0;
	  Request.requests = {};
	  if (global.attachEvent) {
	    global.attachEvent('onunload', unloadHandler);
	  } else if (global.addEventListener) {
	    global.addEventListener('beforeunload', unloadHandler, false);
	  }
	}

	function unloadHandler() {
	  for (var i in Request.requests) {
	    if (Request.requests.hasOwnProperty(i)) {
	      Request.requests[i].abort();
	    }
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 877 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Module dependencies.
	 */

	var Transport = __webpack_require__(180);
	var parser = __webpack_require__(91);
	var parseqs = __webpack_require__(185);
	var inherit = __webpack_require__(128);
	var yeast = __webpack_require__(365);
	var debug = __webpack_require__(24)('engine.io-client:websocket');
	var BrowserWebSocket = global.WebSocket || global.MozWebSocket;

	/**
	 * Get either the `WebSocket` or `MozWebSocket` globals
	 * in the browser or try to resolve WebSocket-compatible
	 * interface exposed by `ws` for Node-like environment.
	 */

	var WebSocket = BrowserWebSocket;
	if (!WebSocket && typeof window === 'undefined') {
	  try {
	    WebSocket = __webpack_require__(1110);
	  } catch (e) {}
	}

	/**
	 * Module exports.
	 */

	module.exports = WS;

	/**
	 * WebSocket transport constructor.
	 *
	 * @api {Object} connection options
	 * @api public
	 */

	function WS(opts) {
	  var forceBase64 = opts && opts.forceBase64;
	  if (forceBase64) {
	    this.supportsBinary = false;
	  }
	  this.perMessageDeflate = opts.perMessageDeflate;
	  Transport.call(this, opts);
	}

	/**
	 * Inherits from Transport.
	 */

	inherit(WS, Transport);

	/**
	 * Transport name.
	 *
	 * @api public
	 */

	WS.prototype.name = 'websocket';

	/*
	 * WebSockets support binary
	 */

	WS.prototype.supportsBinary = true;

	/**
	 * Opens socket.
	 *
	 * @api private
	 */

	WS.prototype.doOpen = function () {
	  if (!this.check()) {
	    // let probe timeout
	    return;
	  }

	  var self = this;
	  var uri = this.uri();
	  var protocols = void 0;
	  var opts = {
	    agent: this.agent,
	    perMessageDeflate: this.perMessageDeflate
	  };

	  // SSL options for Node.js client
	  opts.pfx = this.pfx;
	  opts.key = this.key;
	  opts.passphrase = this.passphrase;
	  opts.cert = this.cert;
	  opts.ca = this.ca;
	  opts.ciphers = this.ciphers;
	  opts.rejectUnauthorized = this.rejectUnauthorized;
	  if (this.extraHeaders) {
	    opts.headers = this.extraHeaders;
	  }

	  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);

	  if (this.ws.binaryType === undefined) {
	    this.supportsBinary = false;
	  }

	  if (this.ws.supports && this.ws.supports.binary) {
	    this.supportsBinary = true;
	    this.ws.binaryType = 'buffer';
	  } else {
	    this.ws.binaryType = 'arraybuffer';
	  }

	  this.addEventListeners();
	};

	/**
	 * Adds event listeners to the socket
	 *
	 * @api private
	 */

	WS.prototype.addEventListeners = function () {
	  var self = this;

	  this.ws.onopen = function () {
	    self.onOpen();
	  };
	  this.ws.onclose = function () {
	    self.onClose();
	  };
	  this.ws.onmessage = function (ev) {
	    self.onData(ev.data);
	  };
	  this.ws.onerror = function (e) {
	    self.onError('websocket error', e);
	  };
	};

	/**
	 * Override `onData` to use a timer on iOS.
	 * See: https://gist.github.com/mloughran/2052006
	 *
	 * @api private
	 */

	if ('undefined' != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {
	  WS.prototype.onData = function (data) {
	    var self = this;
	    setTimeout(function () {
	      Transport.prototype.onData.call(self, data);
	    }, 0);
	  };
	}

	/**
	 * Writes data to socket.
	 *
	 * @param {Array} array of packets.
	 * @api private
	 */

	WS.prototype.write = function (packets) {
	  var self = this;
	  this.writable = false;

	  // encodePacket efficient as it uses WS framing
	  // no need for encodePayload
	  var total = packets.length;
	  for (var i = 0, l = total; i < l; i++) {
	    (function (packet) {
	      parser.encodePacket(packet, self.supportsBinary, function (data) {
	        if (!BrowserWebSocket) {
	          // always create a new object (GH-437)
	          var opts = {};
	          if (packet.options) {
	            opts.compress = packet.options.compress;
	          }

	          if (self.perMessageDeflate) {
	            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;
	            if (len < self.perMessageDeflate.threshold) {
	              opts.compress = false;
	            }
	          }
	        }

	        //Sometimes the websocket has already been closed but the browser didn't
	        //have a chance of informing us about it yet, in that case send will
	        //throw an error
	        try {
	          if (BrowserWebSocket) {
	            // TypeError is thrown when passing the second argument on Safari
	            self.ws.send(data);
	          } else {
	            self.ws.send(data, opts);
	          }
	        } catch (e) {
	          debug('websocket closed before onclose event');
	        }

	        --total || done();
	      });
	    })(packets[i]);
	  }

	  function done() {
	    self.emit('flush');

	    // fake drain
	    // defer to next tick to allow Socket to clear writeBuffer
	    setTimeout(function () {
	      self.writable = true;
	      self.emit('drain');
	    }, 0);
	  }
	};

	/**
	 * Called upon close
	 *
	 * @api private
	 */

	WS.prototype.onClose = function () {
	  Transport.prototype.onClose.call(this);
	};

	/**
	 * Closes socket.
	 *
	 * @api private
	 */

	WS.prototype.doClose = function () {
	  if (typeof this.ws !== 'undefined') {
	    this.ws.close();
	  }
	};

	/**
	 * Generates uri for connection.
	 *
	 * @api private
	 */

	WS.prototype.uri = function () {
	  var query = this.query || {};
	  var schema = this.secure ? 'wss' : 'ws';
	  var port = '';

	  // avoid port if default for schema
	  if (this.port && ('wss' == schema && this.port != 443 || 'ws' == schema && this.port != 80)) {
	    port = ':' + this.port;
	  }

	  // append timestamp to URI
	  if (this.timestampRequests) {
	    query[this.timestampParam] = yeast();
	  }

	  // communicate binary support capabilities
	  if (!this.supportsBinary) {
	    query.b64 = 1;
	  }

	  query = parseqs.encode(query);

	  // prepend ? to query
	  if (query.length) {
	    query = '?' + query;
	  }

	  var ipv6 = this.hostname.indexOf(':') !== -1;
	  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
	};

	/**
	 * Feature detection for WebSocket.
	 *
	 * @return {Boolean} whether this transport is available.
	 * @api public
	 */

	WS.prototype.check = function () {
	  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 878 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Gets the keys for an object.
	 *
	 * @return {Array} keys
	 * @api private
	 */

	module.exports = Object.keys || function keys(obj) {
	  var arr = [];
	  var has = Object.prototype.hasOwnProperty;

	  for (var i in obj) {
	    if (has.call(obj, i)) {
	      arr.push(i);
	    }
	  }
	  return arr;
	};

/***/ },
/* 879 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*
	 * Module requirements.
	 */

	var isArray = __webpack_require__(880);

	/**
	 * Module exports.
	 */

	module.exports = hasBinary;

	/**
	 * Checks for binary data.
	 *
	 * Right now only Buffer and ArrayBuffer are supported..
	 *
	 * @param {Object} anything
	 * @api public
	 */

	function hasBinary(data) {

	  function _hasBinary(obj) {
	    if (!obj) return false;

	    if (global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {
	      return true;
	    }

	    if (isArray(obj)) {
	      for (var i = 0; i < obj.length; i++) {
	        if (_hasBinary(obj[i])) {
	          return true;
	        }
	      }
	    } else if (obj && 'object' == (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) {
	      if (obj.toJSON) {
	        obj = obj.toJSON();
	      }

	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {
	          return true;
	        }
	      }
	    }

	    return false;
	  }

	  return _hasBinary(data);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 880 */
358,
/* 881 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var hasOwn = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;

	var isArray = function isArray(arr) {
		if (typeof Array.isArray === 'function') {
			return Array.isArray(arr);
		}

		return toStr.call(arr) === '[object Array]';
	};

	var isPlainObject = function isPlainObject(obj) {
		if (!obj || toStr.call(obj) !== '[object Object]') {
			return false;
		}

		var hasOwnConstructor = hasOwn.call(obj, 'constructor');
		var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
		// Not own constructor property must be Object
		if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		var key;
		for (key in obj) {/**/}

		return typeof key === 'undefined' || hasOwn.call(obj, key);
	};

	module.exports = function extend() {
		var options,
		    name,
		    src,
		    copy,
		    copyIsArray,
		    clone,
		    target = arguments[0],
		    i = 1,
		    length = arguments.length,
		    deep = false;

		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;
			target = arguments[1] || {};
			// skip the boolean and the target
			i = 2;
		} else if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) !== 'object' && typeof target !== 'function' || target == null) {
			target = {};
		}

		for (; i < length; ++i) {
			options = arguments[i];
			// Only deal with non-null/undefined values
			if (options != null) {
				// Extend the base object
				for (name in options) {
					src = target[name];
					copy = options[name];

					// Prevent never-ending loop
					if (target !== copy) {
						// Recurse if we're merging plain objects or arrays
						if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
							if (copyIsArray) {
								copyIsArray = false;
								clone = src && isArray(src) ? src : [];
							} else {
								clone = src && isPlainObject(src) ? src : {};
							}

							// Never move original objects, clone them
							target[name] = extend(deep, clone, copy);

							// Don't bring in undefined values
						} else if (typeof copy !== 'undefined') {
							target[name] = copy;
						}
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

/***/ },
/* 882 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 883 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(882);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 884 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(892);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 885 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var invariant = __webpack_require__(5);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 886 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(26);

	var createArrayFromMixed = __webpack_require__(885);
	var getMarkupWrap = __webpack_require__(887);
	var invariant = __webpack_require__(5);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

/***/ },
/* 887 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(26);

	var invariant = __webpack_require__(5);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;

/***/ },
/* 888 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 889 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 890 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(889);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 891 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 892 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(891);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 893 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 894 */
/***/ function(module, exports) {

	'use strict';

	var hasOwn = Object.prototype.hasOwnProperty;
	var toString = Object.prototype.toString;

	module.exports = function forEach(obj, fn, ctx) {
	    if (toString.call(fn) !== '[object Function]') {
	        throw new TypeError('iterator must be a function');
	    }
	    var l = obj.length;
	    if (l === +l) {
	        for (var i = 0; i < l; i++) {
	            fn.call(ctx, obj[i], i, obj);
	        }
	    } else {
	        for (var k in obj) {
	            if (hasOwn.call(obj, k)) {
	                fn.call(ctx, obj[k], k, obj);
	            }
	        }
	    }
	};

/***/ },
/* 895 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*
	 * Module requirements.
	 */

	var isArray = __webpack_require__(896);

	/**
	 * Module exports.
	 */

	module.exports = hasBinary;

	/**
	 * Checks for binary data.
	 *
	 * Right now only Buffer and ArrayBuffer are supported..
	 *
	 * @param {Object} anything
	 * @api public
	 */

	function hasBinary(data) {

	  function _hasBinary(obj) {
	    if (!obj) return false;

	    if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {
	      return true;
	    }

	    if (isArray(obj)) {
	      for (var i = 0; i < obj.length; i++) {
	        if (_hasBinary(obj[i])) {
	          return true;
	        }
	      }
	    } else if (obj && 'object' == (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) {
	      // see: https://github.com/Automattic/has-binary/pull/4
	      if (obj.toJSON && 'function' == typeof obj.toJSON) {
	        obj = obj.toJSON();
	      }

	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {
	          return true;
	        }
	      }
	    }

	    return false;
	  }

	  return _hasBinary(data);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 896 */
358,
/* 897 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Module exports.
	 *
	 * Logic borrowed from Modernizr:
	 *
	 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
	 */

	try {
	  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();
	} catch (err) {
	  // if XMLHttp support is disabled in IE then it will throw
	  // when trying to create
	  module.exports = false;
	}

/***/ },
/* 898 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') {
	        // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);

	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {}
	            }
	        }
	    }

	    return targetComponent;
	};

/***/ },
/* 899 */
/***/ function(module, exports) {

	"use strict";

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m;
	  var eLen = nBytes * 8 - mLen - 1;
	  var eMax = (1 << eLen) - 1;
	  var eBias = eMax >> 1;
	  var nBits = -7;
	  var i = isLE ? nBytes - 1 : 0;
	  var d = isLE ? -1 : 1;
	  var s = buffer[offset + i];

	  i += d;

	  e = s & (1 << -nBits) - 1;
	  s >>= -nBits;
	  nBits += eLen;
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias;
	  } else if (e === eMax) {
	    return m ? NaN : (s ? -1 : 1) * Infinity;
	  } else {
	    m = m + Math.pow(2, mLen);
	    e = e - eBias;
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
	};

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c;
	  var eLen = nBytes * 8 - mLen - 1;
	  var eMax = (1 << eLen) - 1;
	  var eBias = eMax >> 1;
	  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
	  var i = isLE ? 0 : nBytes - 1;
	  var d = isLE ? 1 : -1;
	  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;

	  value = Math.abs(value);

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0;
	    e = eMax;
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2);
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--;
	      c *= 2;
	    }
	    if (e + eBias >= 1) {
	      value += rt / c;
	    } else {
	      value += rt * Math.pow(2, 1 - eBias);
	    }
	    if (value * c >= 2) {
	      e++;
	      c /= 2;
	    }

	    if (e + eBias >= eMax) {
	      m = 0;
	      e = eMax;
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
	      e = 0;
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = e << mLen | m;
	  eLen += mLen;
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128;
	};

/***/ },
/* 900 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create an instance.
	 * @function create
	 * @returns {Iftype} - Created instance.
	 */

	'use strict';

	var IfType = __webpack_require__(305);

	/** @lends create */
	function create(val) {
	  return new IfType(val);
	}

	module.exports = create;

/***/ },
/* 901 */
/***/ function(module, exports) {

	/**
	 * Parse a type.
	 * @memberof module:iftype/lib/type
	 * @function parseType
	 * @param {string|object|function} type - Type to parse.
	 * @private
	 */

	'use strict';

	/** @lends parseType */

	function parseType(type) {
	  if (type === Function) {
	    return 'function';
	  }
	  if (type === Array) {
	    return 'array';
	  }
	  if (type === String) {
	    return 'string';
	  }
	  if (type === Number) {
	    return 'number';
	  }
	  if (typeof type === 'string') {
	    type = String(type).toLowerCase().trim();
	  }
	  return type;
	}

	module.exports = parseType;

/***/ },
/* 902 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Detect if type hits.
	 * @memberof module:iftype/lib/type
	 * @function typeHits
	 * @param {*} value - Value to check with.
	 * @param {string|object|string[]|object[]} type - Type to check with.
	 * @returns {boolean} - Hit or not.
	 * @private
	 */
	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	var parseType = __webpack_require__(901);

	/** @lends typeHits */
	function typeHits(value, type) {
	  var isEmpty = typeof value === 'undefined' || value === null;
	  if (isEmpty) {
	    return false;
	  }
	  var s = this;
	  var isMultiple = Array.isArray(type);
	  if (isMultiple) {
	    return typeHits.anyOf(value, type);
	  }
	  type = parseType(type);
	  var isArrayType = type === 'array';
	  if (isArrayType) {
	    return Array.isArray(value);
	  }
	  switch (typeof type === 'undefined' ? 'undefined' : _typeof(type)) {
	    case 'string':
	      if (/\|/.test(type)) {
	        return typeHits.anyOf(value, type.split(/\|/g));
	      }
	      return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === type;
	    case 'function':
	      return value instanceof type;
	    case 'object':
	      return !!(type && type.isPrototypeOf) && type.isPrototypeOf(value);
	    default:
	      return false;
	  }
	}

	/**
	 * Detect if any of type hits.
	 * @param {*} value - Value to check with.
	 * @param {string[]|object[]} types - types to check.
	 * @returns {boolean} - Hit or not.
	 * @private
	 */
	typeHits.anyOf = function anyOfTypeHits(value, types) {
	  for (var i = 0, len = types.length; i < len; i++) {
	    var type = types[i];
	    var hit = typeHits(value, type);
	    if (hit) {
	      return true;
	    }
	  }
	  return false;
	};

	module.exports = typeHits;

/***/ },
/* 903 */
/***/ function(module, exports) {

	'use strict';

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor;
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor;
	    var TempCtor = function TempCtor() {};
	    TempCtor.prototype = superCtor.prototype;
	    ctor.prototype = new TempCtor();
	    ctor.prototype.constructor = ctor;
	  };
	}

/***/ },
/* 904 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function invariant(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

/***/ },
/* 905 */
/***/ function(module, exports) {

	'use strict';

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};

/***/ },
/* 906 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*! iScroll v5.2.0 ~ (c) 2008-2016 Matteo Spinelli ~ http://cubiq.org/license */
	(function (window, document, Math) {
		var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
			window.setTimeout(callback, 1000 / 60);
		};

		var utils = function () {
			var me = {};

			var _elementStyle = document.createElement('div').style;
			var _vendor = function () {
				var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
				    transform,
				    i = 0,
				    l = vendors.length;

				for (; i < l; i++) {
					transform = vendors[i] + 'ransform';
					if (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);
				}

				return false;
			}();

			function _prefixStyle(style) {
				if (_vendor === false) return false;
				if (_vendor === '') return style;
				return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
			}

			me.getTime = Date.now || function getTime() {
				return new Date().getTime();
			};

			me.extend = function (target, obj) {
				for (var i in obj) {
					target[i] = obj[i];
				}
			};

			me.addEvent = function (el, type, fn, capture) {
				el.addEventListener(type, fn, !!capture);
			};

			me.removeEvent = function (el, type, fn, capture) {
				el.removeEventListener(type, fn, !!capture);
			};

			me.prefixPointerEvent = function (pointerEvent) {
				return window.MSPointerEvent ? 'MSPointer' + pointerEvent.charAt(7).toUpperCase() + pointerEvent.substr(8) : pointerEvent;
			};

			me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {
				var distance = current - start,
				    speed = Math.abs(distance) / time,
				    destination,
				    duration;

				deceleration = deceleration === undefined ? 0.0006 : deceleration;

				destination = current + speed * speed / (2 * deceleration) * (distance < 0 ? -1 : 1);
				duration = speed / deceleration;

				if (destination < lowerMargin) {
					destination = wrapperSize ? lowerMargin - wrapperSize / 2.5 * (speed / 8) : lowerMargin;
					distance = Math.abs(destination - current);
					duration = distance / speed;
				} else if (destination > 0) {
					destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;
					distance = Math.abs(current) + destination;
					duration = distance / speed;
				}

				return {
					destination: Math.round(destination),
					duration: duration
				};
			};

			var _transform = _prefixStyle('transform');

			me.extend(me, {
				hasTransform: _transform !== false,
				hasPerspective: _prefixStyle('perspective') in _elementStyle,
				hasTouch: 'ontouchstart' in window,
				hasPointer: !!(window.PointerEvent || window.MSPointerEvent), // IE10 is prefixed
				hasTransition: _prefixStyle('transition') in _elementStyle
			});

			/*
	  This should find all Android browsers lower than build 535.19 (both stock browser and webview)
	  - galaxy S2 is ok
	     - 2.3.6 : `AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`
	     - 4.0.4 : `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`
	    - galaxy S3 is badAndroid (stock brower, webview)
	      `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`
	    - galaxy S4 is badAndroid (stock brower, webview)
	      `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`
	    - galaxy S5 is OK
	      `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`
	    - galaxy S6 is OK
	      `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`
	   */
			me.isBadAndroid = function () {
				var appVersion = window.navigator.appVersion;
				// Android browser is not a chrome browser.
				if (/Android/.test(appVersion) && !/Chrome\/\d/.test(appVersion)) {
					var safariVersion = appVersion.match(/Safari\/(\d+.\d)/);
					if (safariVersion && (typeof safariVersion === 'undefined' ? 'undefined' : _typeof(safariVersion)) === "object" && safariVersion.length >= 2) {
						return parseFloat(safariVersion[1]) < 535.19;
					} else {
						return true;
					}
				} else {
					return false;
				}
			}();

			me.extend(me.style = {}, {
				transform: _transform,
				transitionTimingFunction: _prefixStyle('transitionTimingFunction'),
				transitionDuration: _prefixStyle('transitionDuration'),
				transitionDelay: _prefixStyle('transitionDelay'),
				transformOrigin: _prefixStyle('transformOrigin')
			});

			me.hasClass = function (e, c) {
				var re = new RegExp("(^|\\s)" + c + "(\\s|$)");
				return re.test(e.className);
			};

			me.addClass = function (e, c) {
				if (me.hasClass(e, c)) {
					return;
				}

				var newclass = e.className.split(' ');
				newclass.push(c);
				e.className = newclass.join(' ');
			};

			me.removeClass = function (e, c) {
				if (!me.hasClass(e, c)) {
					return;
				}

				var re = new RegExp("(^|\\s)" + c + "(\\s|$)", 'g');
				e.className = e.className.replace(re, ' ');
			};

			me.offset = function (el) {
				var left = -el.offsetLeft,
				    top = -el.offsetTop;

				// jshint -W084
				while (el = el.offsetParent) {
					left -= el.offsetLeft;
					top -= el.offsetTop;
				}
				// jshint +W084

				return {
					left: left,
					top: top
				};
			};

			me.preventDefaultException = function (el, exceptions) {
				for (var i in exceptions) {
					if (exceptions[i].test(el[i])) {
						return true;
					}
				}

				return false;
			};

			me.extend(me.eventType = {}, {
				touchstart: 1,
				touchmove: 1,
				touchend: 1,

				mousedown: 2,
				mousemove: 2,
				mouseup: 2,

				pointerdown: 3,
				pointermove: 3,
				pointerup: 3,

				MSPointerDown: 3,
				MSPointerMove: 3,
				MSPointerUp: 3
			});

			me.extend(me.ease = {}, {
				quadratic: {
					style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
					fn: function fn(k) {
						return k * (2 - k);
					}
				},
				circular: {
					style: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly "circular" but this looks better, it should be (0.075, 0.82, 0.165, 1)
					fn: function fn(k) {
						return Math.sqrt(1 - --k * k);
					}
				},
				back: {
					style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
					fn: function fn(k) {
						var b = 4;
						return (k = k - 1) * k * ((b + 1) * k + b) + 1;
					}
				},
				bounce: {
					style: '',
					fn: function fn(k) {
						if ((k /= 1) < 1 / 2.75) {
							return 7.5625 * k * k;
						} else if (k < 2 / 2.75) {
							return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
						} else if (k < 2.5 / 2.75) {
							return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
						} else {
							return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
						}
					}
				},
				elastic: {
					style: '',
					fn: function fn(k) {
						var f = 0.22,
						    e = 0.4;

						if (k === 0) {
							return 0;
						}
						if (k == 1) {
							return 1;
						}

						return e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;
					}
				}
			});

			me.tap = function (e, eventName) {
				var ev = document.createEvent('Event');
				ev.initEvent(eventName, true, true);
				ev.pageX = e.pageX;
				ev.pageY = e.pageY;
				e.target.dispatchEvent(ev);
			};

			me.click = function (e) {
				var target = e.target,
				    ev;

				if (!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)) {
					ev = document.createEvent('MouseEvents');
					ev.initMouseEvent('click', true, true, e.view, 1, target.screenX, target.screenY, target.clientX, target.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);

					ev._constructed = true;
					target.dispatchEvent(ev);
				}
			};

			return me;
		}();
		function IScroll(el, options) {
			this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;
			this.scroller = this.wrapper.children[0];
			this.scrollerStyle = this.scroller.style; // cache style for better performance

			this.options = {

				resizeScrollbars: true,

				mouseWheelSpeed: 20,

				snapThreshold: 0.334,

				// INSERT POINT: OPTIONS
				disablePointer: !utils.hasPointer,
				disableTouch: utils.hasPointer || !utils.hasTouch,
				disableMouse: utils.hasPointer || utils.hasTouch,
				startX: 0,
				startY: 0,
				scrollY: true,
				directionLockThreshold: 5,
				momentum: true,

				bounce: true,
				bounceTime: 600,
				bounceEasing: '',

				preventDefault: true,
				preventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },

				HWCompositing: true,
				useTransition: true,
				useTransform: true,
				bindToWrapper: typeof window.onmousedown === "undefined"
			};

			for (var i in options) {
				this.options[i] = options[i];
			}

			// Normalize options
			this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';

			this.options.useTransition = utils.hasTransition && this.options.useTransition;
			this.options.useTransform = utils.hasTransform && this.options.useTransform;

			this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;
			this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;

			// If you want eventPassthrough I have to lock one of the axes
			this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;
			this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;

			// With eventPassthrough we also need lockDirection mechanism
			this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
			this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;

			this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;

			this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;

			if (this.options.tap === true) {
				this.options.tap = 'tap';
			}

			if (this.options.shrinkScrollbars == 'scale') {
				this.options.useTransition = false;
			}

			this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;

			if (this.options.probeType == 3) {
				this.options.useTransition = false;
			}

			// INSERT POINT: NORMALIZATION

			// Some defaults
			this.x = 0;
			this.y = 0;
			this.directionX = 0;
			this.directionY = 0;
			this._events = {};

			// INSERT POINT: DEFAULTS

			this._init();
			this.refresh();

			this.scrollTo(this.options.startX, this.options.startY);
			this.enable();
		}

		IScroll.prototype = {
			version: '5.2.0',

			_init: function _init() {
				this._initEvents();

				if (this.options.scrollbars || this.options.indicators) {
					this._initIndicators();
				}

				if (this.options.mouseWheel) {
					this._initWheel();
				}

				if (this.options.snap) {
					this._initSnap();
				}

				if (this.options.keyBindings) {
					this._initKeys();
				}

				// INSERT POINT: _init
			},

			destroy: function destroy() {
				this._initEvents(true);
				clearTimeout(this.resizeTimeout);
				this.resizeTimeout = null;
				this._execEvent('destroy');
			},

			_transitionEnd: function _transitionEnd(e) {
				if (e.target != this.scroller || !this.isInTransition) {
					return;
				}

				this._transitionTime();
				if (!this.resetPosition(this.options.bounceTime)) {
					this.isInTransition = false;
					this._execEvent('scrollEnd');
				}
			},

			_start: function _start(e) {
				// React to left mouse button only
				if (utils.eventType[e.type] != 1) {
					// for button property
					// http://unixpapa.com/js/mouse.html
					var button;
					if (!e.which) {
						/* IE case */
						button = e.button < 2 ? 0 : e.button == 4 ? 1 : 2;
					} else {
						/* All others */
						button = e.button;
					}
					if (button !== 0) {
						return;
					}
				}

				if (!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated) {
					return;
				}

				if (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
					e.preventDefault();
				}

				var point = e.touches ? e.touches[0] : e,
				    pos;

				this.initiated = utils.eventType[e.type];
				this.moved = false;
				this.distX = 0;
				this.distY = 0;
				this.directionX = 0;
				this.directionY = 0;
				this.directionLocked = 0;

				this.startTime = utils.getTime();

				if (this.options.useTransition && this.isInTransition) {
					this._transitionTime();
					this.isInTransition = false;
					pos = this.getComputedPosition();
					this._translate(Math.round(pos.x), Math.round(pos.y));
					this._execEvent('scrollEnd');
				} else if (!this.options.useTransition && this.isAnimating) {
					this.isAnimating = false;
					this._execEvent('scrollEnd');
				}

				this.startX = this.x;
				this.startY = this.y;
				this.absStartX = this.x;
				this.absStartY = this.y;
				this.pointX = point.pageX;
				this.pointY = point.pageY;

				this._execEvent('beforeScrollStart');
			},

			_move: function _move(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}

				if (this.options.preventDefault) {
					// increases performance on Android? TODO: check!
					e.preventDefault();
				}

				var point = e.touches ? e.touches[0] : e,
				    deltaX = point.pageX - this.pointX,
				    deltaY = point.pageY - this.pointY,
				    timestamp = utils.getTime(),
				    newX,
				    newY,
				    absDistX,
				    absDistY;

				this.pointX = point.pageX;
				this.pointY = point.pageY;

				this.distX += deltaX;
				this.distY += deltaY;
				absDistX = Math.abs(this.distX);
				absDistY = Math.abs(this.distY);

				// We need to move at least 10 pixels for the scrolling to initiate
				if (timestamp - this.endTime > 300 && absDistX < 10 && absDistY < 10) {
					return;
				}

				// If you are scrolling in one direction lock the other
				if (!this.directionLocked && !this.options.freeScroll) {
					if (absDistX > absDistY + this.options.directionLockThreshold) {
						this.directionLocked = 'h'; // lock horizontally
					} else if (absDistY >= absDistX + this.options.directionLockThreshold) {
						this.directionLocked = 'v'; // lock vertically
					} else {
						this.directionLocked = 'n'; // no lock
					}
				}

				if (this.directionLocked == 'h') {
					if (this.options.eventPassthrough == 'vertical') {
						e.preventDefault();
					} else if (this.options.eventPassthrough == 'horizontal') {
						this.initiated = false;
						return;
					}

					deltaY = 0;
				} else if (this.directionLocked == 'v') {
					if (this.options.eventPassthrough == 'horizontal') {
						e.preventDefault();
					} else if (this.options.eventPassthrough == 'vertical') {
						this.initiated = false;
						return;
					}

					deltaX = 0;
				}

				deltaX = this.hasHorizontalScroll ? deltaX : 0;
				deltaY = this.hasVerticalScroll ? deltaY : 0;

				newX = this.x + deltaX;
				newY = this.y + deltaY;

				// Slow down if outside of the boundaries
				if (newX > 0 || newX < this.maxScrollX) {
					newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;
				}
				if (newY > 0 || newY < this.maxScrollY) {
					newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;
				}

				this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
				this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;

				if (!this.moved) {
					this._execEvent('scrollStart');
				}

				this.moved = true;

				this._translate(newX, newY);

				/* REPLACE START: _move */
				if (timestamp - this.startTime > 300) {
					this.startTime = timestamp;
					this.startX = this.x;
					this.startY = this.y;

					if (this.options.probeType == 1) {
						this._execEvent('scroll');
					}
				}

				if (this.options.probeType > 1) {
					this._execEvent('scroll');
				}
				/* REPLACE END: _move */
			},

			_end: function _end(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}

				if (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
					e.preventDefault();
				}

				var point = e.changedTouches ? e.changedTouches[0] : e,
				    momentumX,
				    momentumY,
				    duration = utils.getTime() - this.startTime,
				    newX = Math.round(this.x),
				    newY = Math.round(this.y),
				    distanceX = Math.abs(newX - this.startX),
				    distanceY = Math.abs(newY - this.startY),
				    time = 0,
				    easing = '';

				this.isInTransition = 0;
				this.initiated = 0;
				this.endTime = utils.getTime();

				// reset if we are outside of the boundaries
				if (this.resetPosition(this.options.bounceTime)) {
					return;
				}

				this.scrollTo(newX, newY); // ensures that the last position is rounded

				// we scrolled less than 10 pixels
				if (!this.moved) {
					if (this.options.tap) {
						utils.tap(e, this.options.tap);
					}

					if (this.options.click) {
						utils.click(e);
					}

					this._execEvent('scrollCancel');
					return;
				}

				if (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {
					this._execEvent('flick');
					return;
				}

				// start momentum animation if needed
				if (this.options.momentum && duration < 300) {
					momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };
					momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };
					newX = momentumX.destination;
					newY = momentumY.destination;
					time = Math.max(momentumX.duration, momentumY.duration);
					this.isInTransition = 1;
				}

				if (this.options.snap) {
					var snap = this._nearestSnap(newX, newY);
					this.currentPage = snap;
					time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);
					newX = snap.x;
					newY = snap.y;

					this.directionX = 0;
					this.directionY = 0;
					easing = this.options.bounceEasing;
				}

				// INSERT POINT: _end

				if (newX != this.x || newY != this.y) {
					// change easing function when scroller goes out of the boundaries
					if (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {
						easing = utils.ease.quadratic;
					}

					this.scrollTo(newX, newY, time, easing);
					return;
				}

				this._execEvent('scrollEnd');
			},

			_resize: function _resize() {
				var that = this;

				clearTimeout(this.resizeTimeout);

				this.resizeTimeout = setTimeout(function () {
					that.refresh();
				}, this.options.resizePolling);
			},

			resetPosition: function resetPosition(time) {
				var x = this.x,
				    y = this.y;

				time = time || 0;

				if (!this.hasHorizontalScroll || this.x > 0) {
					x = 0;
				} else if (this.x < this.maxScrollX) {
					x = this.maxScrollX;
				}

				if (!this.hasVerticalScroll || this.y > 0) {
					y = 0;
				} else if (this.y < this.maxScrollY) {
					y = this.maxScrollY;
				}

				if (x == this.x && y == this.y) {
					return false;
				}

				this.scrollTo(x, y, time, this.options.bounceEasing);

				return true;
			},

			disable: function disable() {
				this.enabled = false;
			},

			enable: function enable() {
				this.enabled = true;
			},

			refresh: function refresh() {
				var rf = this.wrapper.offsetHeight; // Force reflow

				this.wrapperWidth = this.wrapper.clientWidth;
				this.wrapperHeight = this.wrapper.clientHeight;

				/* REPLACE START: refresh */

				this.scrollerWidth = this.scroller.offsetWidth;
				this.scrollerHeight = this.scroller.offsetHeight;

				this.maxScrollX = this.wrapperWidth - this.scrollerWidth;
				this.maxScrollY = this.wrapperHeight - this.scrollerHeight;

				/* REPLACE END: refresh */

				this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;
				this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;

				if (!this.hasHorizontalScroll) {
					this.maxScrollX = 0;
					this.scrollerWidth = this.wrapperWidth;
				}

				if (!this.hasVerticalScroll) {
					this.maxScrollY = 0;
					this.scrollerHeight = this.wrapperHeight;
				}

				this.endTime = 0;
				this.directionX = 0;
				this.directionY = 0;

				this.wrapperOffset = utils.offset(this.wrapper);

				this._execEvent('refresh');

				this.resetPosition();

				// INSERT POINT: _refresh
			},

			on: function on(type, fn) {
				if (!this._events[type]) {
					this._events[type] = [];
				}

				this._events[type].push(fn);
			},

			off: function off(type, fn) {
				if (!this._events[type]) {
					return;
				}

				var index = this._events[type].indexOf(fn);

				if (index > -1) {
					this._events[type].splice(index, 1);
				}
			},

			_execEvent: function _execEvent(type) {
				if (!this._events[type]) {
					return;
				}

				var i = 0,
				    l = this._events[type].length;

				if (!l) {
					return;
				}

				for (; i < l; i++) {
					this._events[type][i].apply(this, [].slice.call(arguments, 1));
				}
			},

			scrollBy: function scrollBy(x, y, time, easing) {
				x = this.x + x;
				y = this.y + y;
				time = time || 0;

				this.scrollTo(x, y, time, easing);
			},

			scrollTo: function scrollTo(x, y, time, easing) {
				easing = easing || utils.ease.circular;

				this.isInTransition = this.options.useTransition && time > 0;
				var transitionType = this.options.useTransition && easing.style;
				if (!time || transitionType) {
					if (transitionType) {
						this._transitionTimingFunction(easing.style);
						this._transitionTime(time);
					}
					this._translate(x, y);
				} else {
					this._animate(x, y, time, easing.fn);
				}
			},

			scrollToElement: function scrollToElement(el, time, offsetX, offsetY, easing) {
				el = el.nodeType ? el : this.scroller.querySelector(el);

				if (!el) {
					return;
				}

				var pos = utils.offset(el);

				pos.left -= this.wrapperOffset.left;
				pos.top -= this.wrapperOffset.top;

				// if offsetX/Y are true we center the element to the screen
				if (offsetX === true) {
					offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
				}
				if (offsetY === true) {
					offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
				}

				pos.left -= offsetX || 0;
				pos.top -= offsetY || 0;

				pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;
				pos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;

				time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;

				this.scrollTo(pos.left, pos.top, time, easing);
			},

			_transitionTime: function _transitionTime(time) {
				time = time || 0;

				var durationProp = utils.style.transitionDuration;
				this.scrollerStyle[durationProp] = time + 'ms';

				if (!time && utils.isBadAndroid) {
					this.scrollerStyle[durationProp] = '0.0001ms';
					// remove 0.0001ms
					var self = this;
					rAF(function () {
						if (self.scrollerStyle[durationProp] === '0.0001ms') {
							self.scrollerStyle[durationProp] = '0s';
						}
					});
				}

				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].transitionTime(time);
					}
				}

				// INSERT POINT: _transitionTime
			},

			_transitionTimingFunction: function _transitionTimingFunction(easing) {
				this.scrollerStyle[utils.style.transitionTimingFunction] = easing;

				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].transitionTimingFunction(easing);
					}
				}

				// INSERT POINT: _transitionTimingFunction
			},

			_translate: function _translate(x, y) {
				if (this.options.useTransform) {

					/* REPLACE START: _translate */

					this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;

					/* REPLACE END: _translate */
				} else {
					x = Math.round(x);
					y = Math.round(y);
					this.scrollerStyle.left = x + 'px';
					this.scrollerStyle.top = y + 'px';
				}

				this.x = x;
				this.y = y;

				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].updatePosition();
					}
				}

				// INSERT POINT: _translate
			},

			_initEvents: function _initEvents(remove) {
				var eventType = remove ? utils.removeEvent : utils.addEvent,
				    target = this.options.bindToWrapper ? this.wrapper : window;

				eventType(window, 'orientationchange', this);
				eventType(window, 'resize', this);

				if (this.options.click) {
					eventType(this.wrapper, 'click', this, true);
				}

				if (!this.options.disableMouse) {
					eventType(this.wrapper, 'mousedown', this);
					eventType(target, 'mousemove', this);
					eventType(target, 'mousecancel', this);
					eventType(target, 'mouseup', this);
				}

				if (utils.hasPointer && !this.options.disablePointer) {
					eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);
					eventType(target, utils.prefixPointerEvent('pointermove'), this);
					eventType(target, utils.prefixPointerEvent('pointercancel'), this);
					eventType(target, utils.prefixPointerEvent('pointerup'), this);
				}

				if (utils.hasTouch && !this.options.disableTouch) {
					eventType(this.wrapper, 'touchstart', this);
					eventType(target, 'touchmove', this);
					eventType(target, 'touchcancel', this);
					eventType(target, 'touchend', this);
				}

				eventType(this.scroller, 'transitionend', this);
				eventType(this.scroller, 'webkitTransitionEnd', this);
				eventType(this.scroller, 'oTransitionEnd', this);
				eventType(this.scroller, 'MSTransitionEnd', this);
			},

			getComputedPosition: function getComputedPosition() {
				var matrix = window.getComputedStyle(this.scroller, null),
				    x,
				    y;

				if (this.options.useTransform) {
					matrix = matrix[utils.style.transform].split(')')[0].split(', ');
					x = +(matrix[12] || matrix[4]);
					y = +(matrix[13] || matrix[5]);
				} else {
					x = +matrix.left.replace(/[^-\d.]/g, '');
					y = +matrix.top.replace(/[^-\d.]/g, '');
				}

				return { x: x, y: y };
			},
			_initIndicators: function _initIndicators() {
				var interactive = this.options.interactiveScrollbars,
				    customStyle = typeof this.options.scrollbars != 'string',
				    indicators = [],
				    indicator;

				var that = this;

				this.indicators = [];

				if (this.options.scrollbars) {
					// Vertical scrollbar
					if (this.options.scrollY) {
						indicator = {
							el: createDefaultScrollbar('v', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenX: false
						};

						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}

					// Horizontal scrollbar
					if (this.options.scrollX) {
						indicator = {
							el: createDefaultScrollbar('h', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenY: false
						};

						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}
				}

				if (this.options.indicators) {
					// TODO: check concat compatibility
					indicators = indicators.concat(this.options.indicators);
				}

				for (var i = indicators.length; i--;) {
					this.indicators.push(new Indicator(this, indicators[i]));
				}

				// TODO: check if we can use array.map (wide compatibility and performance issues)
				function _indicatorsMap(fn) {
					if (that.indicators) {
						for (var i = that.indicators.length; i--;) {
							fn.call(that.indicators[i]);
						}
					}
				}

				if (this.options.fadeScrollbars) {
					this.on('scrollEnd', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});

					this.on('scrollCancel', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});

					this.on('scrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1);
						});
					});

					this.on('beforeScrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1, true);
						});
					});
				}

				this.on('refresh', function () {
					_indicatorsMap(function () {
						this.refresh();
					});
				});

				this.on('destroy', function () {
					_indicatorsMap(function () {
						this.destroy();
					});

					delete this.indicators;
				});
			},

			_initWheel: function _initWheel() {
				utils.addEvent(this.wrapper, 'wheel', this);
				utils.addEvent(this.wrapper, 'mousewheel', this);
				utils.addEvent(this.wrapper, 'DOMMouseScroll', this);

				this.on('destroy', function () {
					clearTimeout(this.wheelTimeout);
					this.wheelTimeout = null;
					utils.removeEvent(this.wrapper, 'wheel', this);
					utils.removeEvent(this.wrapper, 'mousewheel', this);
					utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);
				});
			},

			_wheel: function _wheel(e) {
				if (!this.enabled) {
					return;
				}

				e.preventDefault();

				var wheelDeltaX,
				    wheelDeltaY,
				    newX,
				    newY,
				    that = this;

				if (this.wheelTimeout === undefined) {
					that._execEvent('scrollStart');
				}

				// Execute the scrollEnd event after 400ms the wheel stopped scrolling
				clearTimeout(this.wheelTimeout);
				this.wheelTimeout = setTimeout(function () {
					if (!that.options.snap) {
						that._execEvent('scrollEnd');
					}
					that.wheelTimeout = undefined;
				}, 400);

				if ('deltaX' in e) {
					if (e.deltaMode === 1) {
						wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;
						wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;
					} else {
						wheelDeltaX = -e.deltaX;
						wheelDeltaY = -e.deltaY;
					}
				} else if ('wheelDeltaX' in e) {
					wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
					wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
				} else if ('wheelDelta' in e) {
					wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
				} else if ('detail' in e) {
					wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;
				} else {
					return;
				}

				wheelDeltaX *= this.options.invertWheelDirection;
				wheelDeltaY *= this.options.invertWheelDirection;

				if (!this.hasVerticalScroll) {
					wheelDeltaX = wheelDeltaY;
					wheelDeltaY = 0;
				}

				if (this.options.snap) {
					newX = this.currentPage.pageX;
					newY = this.currentPage.pageY;

					if (wheelDeltaX > 0) {
						newX--;
					} else if (wheelDeltaX < 0) {
						newX++;
					}

					if (wheelDeltaY > 0) {
						newY--;
					} else if (wheelDeltaY < 0) {
						newY++;
					}

					this.goToPage(newX, newY);

					return;
				}

				newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);
				newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);

				this.directionX = wheelDeltaX > 0 ? -1 : wheelDeltaX < 0 ? 1 : 0;
				this.directionY = wheelDeltaY > 0 ? -1 : wheelDeltaY < 0 ? 1 : 0;

				if (newX > 0) {
					newX = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
				}

				if (newY > 0) {
					newY = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
				}

				this.scrollTo(newX, newY, 0);

				if (this.options.probeType > 1) {
					this._execEvent('scroll');
				}

				// INSERT POINT: _wheel
			},

			_initSnap: function _initSnap() {
				this.currentPage = {};

				if (typeof this.options.snap == 'string') {
					this.options.snap = this.scroller.querySelectorAll(this.options.snap);
				}

				this.on('refresh', function () {
					var i = 0,
					    l,
					    m = 0,
					    n,
					    cx,
					    cy,
					    x = 0,
					    y,
					    stepX = this.options.snapStepX || this.wrapperWidth,
					    stepY = this.options.snapStepY || this.wrapperHeight,
					    el;

					this.pages = [];

					if (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {
						return;
					}

					if (this.options.snap === true) {
						cx = Math.round(stepX / 2);
						cy = Math.round(stepY / 2);

						while (x > -this.scrollerWidth) {
							this.pages[i] = [];
							l = 0;
							y = 0;

							while (y > -this.scrollerHeight) {
								this.pages[i][l] = {
									x: Math.max(x, this.maxScrollX),
									y: Math.max(y, this.maxScrollY),
									width: stepX,
									height: stepY,
									cx: x - cx,
									cy: y - cy
								};

								y -= stepY;
								l++;
							}

							x -= stepX;
							i++;
						}
					} else {
						el = this.options.snap;
						l = el.length;
						n = -1;

						for (; i < l; i++) {
							if (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {
								m = 0;
								n++;
							}

							if (!this.pages[m]) {
								this.pages[m] = [];
							}

							x = Math.max(-el[i].offsetLeft, this.maxScrollX);
							y = Math.max(-el[i].offsetTop, this.maxScrollY);
							cx = x - Math.round(el[i].offsetWidth / 2);
							cy = y - Math.round(el[i].offsetHeight / 2);

							this.pages[m][n] = {
								x: x,
								y: y,
								width: el[i].offsetWidth,
								height: el[i].offsetHeight,
								cx: cx,
								cy: cy
							};

							if (x > this.maxScrollX) {
								m++;
							}
						}
					}

					this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);

					// Update snap threshold if needed
					if (this.options.snapThreshold % 1 === 0) {
						this.snapThresholdX = this.options.snapThreshold;
						this.snapThresholdY = this.options.snapThreshold;
					} else {
						this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
						this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
					}
				});

				this.on('flick', function () {
					var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX), 1000), Math.min(Math.abs(this.y - this.startY), 1000)), 300);

					this.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, time);
				});
			},

			_nearestSnap: function _nearestSnap(x, y) {
				if (!this.pages.length) {
					return { x: 0, y: 0, pageX: 0, pageY: 0 };
				}

				var i = 0,
				    l = this.pages.length,
				    m = 0;

				// Check if we exceeded the snap threshold
				if (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) {
					return this.currentPage;
				}

				if (x > 0) {
					x = 0;
				} else if (x < this.maxScrollX) {
					x = this.maxScrollX;
				}

				if (y > 0) {
					y = 0;
				} else if (y < this.maxScrollY) {
					y = this.maxScrollY;
				}

				for (; i < l; i++) {
					if (x >= this.pages[i][0].cx) {
						x = this.pages[i][0].x;
						break;
					}
				}

				l = this.pages[i].length;

				for (; m < l; m++) {
					if (y >= this.pages[0][m].cy) {
						y = this.pages[0][m].y;
						break;
					}
				}

				if (i == this.currentPage.pageX) {
					i += this.directionX;

					if (i < 0) {
						i = 0;
					} else if (i >= this.pages.length) {
						i = this.pages.length - 1;
					}

					x = this.pages[i][0].x;
				}

				if (m == this.currentPage.pageY) {
					m += this.directionY;

					if (m < 0) {
						m = 0;
					} else if (m >= this.pages[0].length) {
						m = this.pages[0].length - 1;
					}

					y = this.pages[0][m].y;
				}

				return {
					x: x,
					y: y,
					pageX: i,
					pageY: m
				};
			},

			goToPage: function goToPage(x, y, time, easing) {
				easing = easing || this.options.bounceEasing;

				if (x >= this.pages.length) {
					x = this.pages.length - 1;
				} else if (x < 0) {
					x = 0;
				}

				if (y >= this.pages[x].length) {
					y = this.pages[x].length - 1;
				} else if (y < 0) {
					y = 0;
				}

				var posX = this.pages[x][y].x,
				    posY = this.pages[x][y].y;

				time = time === undefined ? this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;

				this.currentPage = {
					x: posX,
					y: posY,
					pageX: x,
					pageY: y
				};

				this.scrollTo(posX, posY, time, easing);
			},

			next: function next(time, easing) {
				var x = this.currentPage.pageX,
				    y = this.currentPage.pageY;

				x++;

				if (x >= this.pages.length && this.hasVerticalScroll) {
					x = 0;
					y++;
				}

				this.goToPage(x, y, time, easing);
			},

			prev: function prev(time, easing) {
				var x = this.currentPage.pageX,
				    y = this.currentPage.pageY;

				x--;

				if (x < 0 && this.hasVerticalScroll) {
					x = 0;
					y--;
				}

				this.goToPage(x, y, time, easing);
			},

			_initKeys: function _initKeys(e) {
				// default key bindings
				var keys = {
					pageUp: 33,
					pageDown: 34,
					end: 35,
					home: 36,
					left: 37,
					up: 38,
					right: 39,
					down: 40
				};
				var i;

				// if you give me characters I give you keycode
				if (_typeof(this.options.keyBindings) == 'object') {
					for (i in this.options.keyBindings) {
						if (typeof this.options.keyBindings[i] == 'string') {
							this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);
						}
					}
				} else {
					this.options.keyBindings = {};
				}

				for (i in keys) {
					this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];
				}

				utils.addEvent(window, 'keydown', this);

				this.on('destroy', function () {
					utils.removeEvent(window, 'keydown', this);
				});
			},

			_key: function _key(e) {
				if (!this.enabled) {
					return;
				}

				var snap = this.options.snap,
				    // we are using this alot, better to cache it
				newX = snap ? this.currentPage.pageX : this.x,
				    newY = snap ? this.currentPage.pageY : this.y,
				    now = utils.getTime(),
				    prevTime = this.keyTime || 0,
				    acceleration = 0.250,
				    pos;

				if (this.options.useTransition && this.isInTransition) {
					pos = this.getComputedPosition();

					this._translate(Math.round(pos.x), Math.round(pos.y));
					this.isInTransition = false;
				}

				this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;

				switch (e.keyCode) {
					case this.options.keyBindings.pageUp:
						if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
							newX += snap ? 1 : this.wrapperWidth;
						} else {
							newY += snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.pageDown:
						if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
							newX -= snap ? 1 : this.wrapperWidth;
						} else {
							newY -= snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.end:
						newX = snap ? this.pages.length - 1 : this.maxScrollX;
						newY = snap ? this.pages[0].length - 1 : this.maxScrollY;
						break;
					case this.options.keyBindings.home:
						newX = 0;
						newY = 0;
						break;
					case this.options.keyBindings.left:
						newX += snap ? -1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.up:
						newY += snap ? 1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.right:
						newX -= snap ? -1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.down:
						newY -= snap ? 1 : 5 + this.keyAcceleration >> 0;
						break;
					default:
						return;
				}

				if (snap) {
					this.goToPage(newX, newY);
					return;
				}

				if (newX > 0) {
					newX = 0;
					this.keyAcceleration = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
					this.keyAcceleration = 0;
				}

				if (newY > 0) {
					newY = 0;
					this.keyAcceleration = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
					this.keyAcceleration = 0;
				}

				this.scrollTo(newX, newY, 0);

				this.keyTime = now;
			},

			_animate: function _animate(destX, destY, duration, easingFn) {
				var that = this,
				    startX = this.x,
				    startY = this.y,
				    startTime = utils.getTime(),
				    destTime = startTime + duration;

				function step() {
					var now = utils.getTime(),
					    newX,
					    newY,
					    easing;

					if (now >= destTime) {
						that.isAnimating = false;
						that._translate(destX, destY);

						if (!that.resetPosition(that.options.bounceTime)) {
							that._execEvent('scrollEnd');
						}

						return;
					}

					now = (now - startTime) / duration;
					easing = easingFn(now);
					newX = (destX - startX) * easing + startX;
					newY = (destY - startY) * easing + startY;
					that._translate(newX, newY);

					if (that.isAnimating) {
						rAF(step);
					}

					if (that.options.probeType == 3) {
						that._execEvent('scroll');
					}
				}

				this.isAnimating = true;
				step();
			},

			handleEvent: function handleEvent(e) {
				switch (e.type) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						this._end(e);
						break;
					case 'orientationchange':
					case 'resize':
						this._resize();
						break;
					case 'transitionend':
					case 'webkitTransitionEnd':
					case 'oTransitionEnd':
					case 'MSTransitionEnd':
						this._transitionEnd(e);
						break;
					case 'wheel':
					case 'DOMMouseScroll':
					case 'mousewheel':
						this._wheel(e);
						break;
					case 'keydown':
						this._key(e);
						break;
					case 'click':
						if (this.enabled && !e._constructed) {
							e.preventDefault();
							e.stopPropagation();
						}
						break;
				}
			}
		};
		function createDefaultScrollbar(direction, interactive, type) {
			var scrollbar = document.createElement('div'),
			    indicator = document.createElement('div');

			if (type === true) {
				scrollbar.style.cssText = 'position:absolute;z-index:9999';
				indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';
			}

			indicator.className = 'iScrollIndicator';

			if (direction == 'h') {
				if (type === true) {
					scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';
					indicator.style.height = '100%';
				}
				scrollbar.className = 'iScrollHorizontalScrollbar';
			} else {
				if (type === true) {
					scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';
					indicator.style.width = '100%';
				}
				scrollbar.className = 'iScrollVerticalScrollbar';
			}

			scrollbar.style.cssText += ';overflow:hidden';

			if (!interactive) {
				scrollbar.style.pointerEvents = 'none';
			}

			scrollbar.appendChild(indicator);

			return scrollbar;
		}

		function Indicator(scroller, options) {
			this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;
			this.wrapperStyle = this.wrapper.style;
			this.indicator = this.wrapper.children[0];
			this.indicatorStyle = this.indicator.style;
			this.scroller = scroller;

			this.options = {
				listenX: true,
				listenY: true,
				interactive: false,
				resize: true,
				defaultScrollbars: false,
				shrink: false,
				fade: false,
				speedRatioX: 0,
				speedRatioY: 0
			};

			for (var i in options) {
				this.options[i] = options[i];
			}

			this.sizeRatioX = 1;
			this.sizeRatioY = 1;
			this.maxPosX = 0;
			this.maxPosY = 0;

			if (this.options.interactive) {
				if (!this.options.disableTouch) {
					utils.addEvent(this.indicator, 'touchstart', this);
					utils.addEvent(window, 'touchend', this);
				}
				if (!this.options.disablePointer) {
					utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);
				}
				if (!this.options.disableMouse) {
					utils.addEvent(this.indicator, 'mousedown', this);
					utils.addEvent(window, 'mouseup', this);
				}
			}

			if (this.options.fade) {
				this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
				var durationProp = utils.style.transitionDuration;
				this.wrapperStyle[durationProp] = utils.isBadAndroid ? '0.0001ms' : '0ms';
				// remove 0.0001ms
				var self = this;
				if (utils.isBadAndroid) {
					rAF(function () {
						if (self.wrapperStyle[durationProp] === '0.0001ms') {
							self.wrapperStyle[durationProp] = '0s';
						}
					});
				}
				this.wrapperStyle.opacity = '0';
			}
		}

		Indicator.prototype = {
			handleEvent: function handleEvent(e) {
				switch (e.type) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						this._end(e);
						break;
				}
			},

			destroy: function destroy() {
				if (this.options.fadeScrollbars) {
					clearTimeout(this.fadeTimeout);
					this.fadeTimeout = null;
				}
				if (this.options.interactive) {
					utils.removeEvent(this.indicator, 'touchstart', this);
					utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.removeEvent(this.indicator, 'mousedown', this);

					utils.removeEvent(window, 'touchmove', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
					utils.removeEvent(window, 'mousemove', this);

					utils.removeEvent(window, 'touchend', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);
					utils.removeEvent(window, 'mouseup', this);
				}

				if (this.options.defaultScrollbars) {
					this.wrapper.parentNode.removeChild(this.wrapper);
				}
			},

			_start: function _start(e) {
				var point = e.touches ? e.touches[0] : e;

				e.preventDefault();
				e.stopPropagation();

				this.transitionTime();

				this.initiated = true;
				this.moved = false;
				this.lastPointX = point.pageX;
				this.lastPointY = point.pageY;

				this.startTime = utils.getTime();

				if (!this.options.disableTouch) {
					utils.addEvent(window, 'touchmove', this);
				}
				if (!this.options.disablePointer) {
					utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);
				}
				if (!this.options.disableMouse) {
					utils.addEvent(window, 'mousemove', this);
				}

				this.scroller._execEvent('beforeScrollStart');
			},

			_move: function _move(e) {
				var point = e.touches ? e.touches[0] : e,
				    deltaX,
				    deltaY,
				    newX,
				    newY,
				    timestamp = utils.getTime();

				if (!this.moved) {
					this.scroller._execEvent('scrollStart');
				}

				this.moved = true;

				deltaX = point.pageX - this.lastPointX;
				this.lastPointX = point.pageX;

				deltaY = point.pageY - this.lastPointY;
				this.lastPointY = point.pageY;

				newX = this.x + deltaX;
				newY = this.y + deltaY;

				this._pos(newX, newY);

				if (this.scroller.options.probeType == 1 && timestamp - this.startTime > 300) {
					this.startTime = timestamp;
					this.scroller._execEvent('scroll');
				} else if (this.scroller.options.probeType > 1) {
					this.scroller._execEvent('scroll');
				}

				// INSERT POINT: indicator._move

				e.preventDefault();
				e.stopPropagation();
			},

			_end: function _end(e) {
				if (!this.initiated) {
					return;
				}

				this.initiated = false;

				e.preventDefault();
				e.stopPropagation();

				utils.removeEvent(window, 'touchmove', this);
				utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
				utils.removeEvent(window, 'mousemove', this);

				if (this.scroller.options.snap) {
					var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);

					var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);

					if (this.scroller.x != snap.x || this.scroller.y != snap.y) {
						this.scroller.directionX = 0;
						this.scroller.directionY = 0;
						this.scroller.currentPage = snap;
						this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);
					}
				}

				if (this.moved) {
					this.scroller._execEvent('scrollEnd');
				}
			},

			transitionTime: function transitionTime(time) {
				time = time || 0;
				var durationProp = utils.style.transitionDuration;
				this.indicatorStyle[durationProp] = time + 'ms';

				if (!time && utils.isBadAndroid) {
					this.indicatorStyle[durationProp] = '0.0001ms';
					// remove 0.0001ms
					var self = this;
					rAF(function () {
						if (self.indicatorStyle[durationProp] === '0.0001ms') {
							self.indicatorStyle[durationProp] = '0s';
						}
					});
				}
			},

			transitionTimingFunction: function transitionTimingFunction(easing) {
				this.indicatorStyle[utils.style.transitionTimingFunction] = easing;
			},

			refresh: function refresh() {
				this.transitionTime();

				if (this.options.listenX && !this.options.listenY) {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';
				} else if (this.options.listenY && !this.options.listenX) {
					this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';
				} else {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';
				}

				if (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {
					utils.addClass(this.wrapper, 'iScrollBothScrollbars');
					utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');

					if (this.options.defaultScrollbars && this.options.customStyle) {
						if (this.options.listenX) {
							this.wrapper.style.right = '8px';
						} else {
							this.wrapper.style.bottom = '8px';
						}
					}
				} else {
					utils.removeClass(this.wrapper, 'iScrollBothScrollbars');
					utils.addClass(this.wrapper, 'iScrollLoneScrollbar');

					if (this.options.defaultScrollbars && this.options.customStyle) {
						if (this.options.listenX) {
							this.wrapper.style.right = '2px';
						} else {
							this.wrapper.style.bottom = '2px';
						}
					}
				}

				var r = this.wrapper.offsetHeight; // force refresh

				if (this.options.listenX) {
					this.wrapperWidth = this.wrapper.clientWidth;
					if (this.options.resize) {
						this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
						this.indicatorStyle.width = this.indicatorWidth + 'px';
					} else {
						this.indicatorWidth = this.indicator.clientWidth;
					}

					this.maxPosX = this.wrapperWidth - this.indicatorWidth;

					if (this.options.shrink == 'clip') {
						this.minBoundaryX = -this.indicatorWidth + 8;
						this.maxBoundaryX = this.wrapperWidth - 8;
					} else {
						this.minBoundaryX = 0;
						this.maxBoundaryX = this.maxPosX;
					}

					this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;
				}

				if (this.options.listenY) {
					this.wrapperHeight = this.wrapper.clientHeight;
					if (this.options.resize) {
						this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
						this.indicatorStyle.height = this.indicatorHeight + 'px';
					} else {
						this.indicatorHeight = this.indicator.clientHeight;
					}

					this.maxPosY = this.wrapperHeight - this.indicatorHeight;

					if (this.options.shrink == 'clip') {
						this.minBoundaryY = -this.indicatorHeight + 8;
						this.maxBoundaryY = this.wrapperHeight - 8;
					} else {
						this.minBoundaryY = 0;
						this.maxBoundaryY = this.maxPosY;
					}

					this.maxPosY = this.wrapperHeight - this.indicatorHeight;
					this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;
				}

				this.updatePosition();
			},

			updatePosition: function updatePosition() {
				var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
				    y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;

				if (!this.options.ignoreBoundaries) {
					if (x < this.minBoundaryX) {
						if (this.options.shrink == 'scale') {
							this.width = Math.max(this.indicatorWidth + x, 8);
							this.indicatorStyle.width = this.width + 'px';
						}
						x = this.minBoundaryX;
					} else if (x > this.maxBoundaryX) {
						if (this.options.shrink == 'scale') {
							this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);
							this.indicatorStyle.width = this.width + 'px';
							x = this.maxPosX + this.indicatorWidth - this.width;
						} else {
							x = this.maxBoundaryX;
						}
					} else if (this.options.shrink == 'scale' && this.width != this.indicatorWidth) {
						this.width = this.indicatorWidth;
						this.indicatorStyle.width = this.width + 'px';
					}

					if (y < this.minBoundaryY) {
						if (this.options.shrink == 'scale') {
							this.height = Math.max(this.indicatorHeight + y * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
						}
						y = this.minBoundaryY;
					} else if (y > this.maxBoundaryY) {
						if (this.options.shrink == 'scale') {
							this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
							y = this.maxPosY + this.indicatorHeight - this.height;
						} else {
							y = this.maxBoundaryY;
						}
					} else if (this.options.shrink == 'scale' && this.height != this.indicatorHeight) {
						this.height = this.indicatorHeight;
						this.indicatorStyle.height = this.height + 'px';
					}
				}

				this.x = x;
				this.y = y;

				if (this.scroller.options.useTransform) {
					this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;
				} else {
					this.indicatorStyle.left = x + 'px';
					this.indicatorStyle.top = y + 'px';
				}
			},

			_pos: function _pos(x, y) {
				if (x < 0) {
					x = 0;
				} else if (x > this.maxPosX) {
					x = this.maxPosX;
				}

				if (y < 0) {
					y = 0;
				} else if (y > this.maxPosY) {
					y = this.maxPosY;
				}

				x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;
				y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;

				this.scroller.scrollTo(x, y);
			},

			fade: function fade(val, hold) {
				if (hold && !this.visible) {
					return;
				}

				clearTimeout(this.fadeTimeout);
				this.fadeTimeout = null;

				var time = val ? 250 : 500,
				    delay = val ? 0 : 300;

				val = val ? '1' : '0';

				this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';

				this.fadeTimeout = setTimeout(function (val) {
					this.wrapperStyle.opacity = val;
					this.visible = +val;
				}.bind(this, val), delay);
			}
		};

		IScroll.utils = utils;

		if (typeof module != 'undefined' && module.exports) {
			module.exports = IScroll;
		} else if (true) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return IScroll;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.IScroll = IScroll;
		}
	})(window, document, Math);

/***/ },
/* 907 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */
	;(function () {
	  // Detect the `define` function exposed by asynchronous module loaders. The
	  // strict `define` check is necessary for compatibility with `r.js`.
	  var isLoader = "function" === "function" && __webpack_require__(81);

	  // A set of types used to distinguish objects from primitives.
	  var objectTypes = {
	    "function": true,
	    "object": true
	  };

	  // Detect the `exports` object exposed by CommonJS implementations.
	  var freeExports = objectTypes[ false ? "undefined" : _typeof(exports)] && exports && !exports.nodeType && exports;

	  // Use the `global` object exposed by Node (including Browserify via
	  // `insert-module-globals`), Narwhal, and Ringo as the default context,
	  // and the `window` object in browsers. Rhino exports a `global` function
	  // instead.
	  var root = objectTypes[typeof window === "undefined" ? "undefined" : _typeof(window)] && window || this,
	      freeGlobal = freeExports && objectTypes[ false ? "undefined" : _typeof(module)] && module && !module.nodeType && (typeof global === "undefined" ? "undefined" : _typeof(global)) == "object" && global;

	  if (freeGlobal && (freeGlobal["global"] === freeGlobal || freeGlobal["window"] === freeGlobal || freeGlobal["self"] === freeGlobal)) {
	    root = freeGlobal;
	  }

	  // Public: Initializes JSON 3 using the given `context` object, attaching the
	  // `stringify` and `parse` functions to the specified `exports` object.
	  function runInContext(context, exports) {
	    context || (context = root["Object"]());
	    exports || (exports = root["Object"]());

	    // Native constructor aliases.
	    var Number = context["Number"] || root["Number"],
	        String = context["String"] || root["String"],
	        Object = context["Object"] || root["Object"],
	        Date = context["Date"] || root["Date"],
	        SyntaxError = context["SyntaxError"] || root["SyntaxError"],
	        TypeError = context["TypeError"] || root["TypeError"],
	        Math = context["Math"] || root["Math"],
	        nativeJSON = context["JSON"] || root["JSON"];

	    // Delegate to the native `stringify` and `parse` implementations.
	    if ((typeof nativeJSON === "undefined" ? "undefined" : _typeof(nativeJSON)) == "object" && nativeJSON) {
	      exports.stringify = nativeJSON.stringify;
	      exports.parse = nativeJSON.parse;
	    }

	    // Convenience aliases.
	    var objectProto = Object.prototype,
	        getClass = objectProto.toString,
	        _isProperty,
	        _forEach,
	        undef;

	    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.
	    var isExtended = new Date(-3509827334573292);
	    try {
	      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical
	      // results for certain dates in Opera >= 10.53.
	      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&
	      // Safari < 2.0.2 stores the internal millisecond time value correctly,
	      // but clips the values returned by the date methods to the range of
	      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).
	      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;
	    } catch (exception) {}

	    // Internal: Determines whether the native `JSON.stringify` and `parse`
	    // implementations are spec-compliant. Based on work by Ken Snyder.
	    function has(name) {
	      if (has[name] !== undef) {
	        // Return cached feature test result.
	        return has[name];
	      }
	      var isSupported;
	      if (name == "bug-string-char-index") {
	        // IE <= 7 doesn't support accessing string characters using square
	        // bracket notation. IE 8 only supports this for primitives.
	        isSupported = "a"[0] != "a";
	      } else if (name == "json") {
	        // Indicates whether both `JSON.stringify` and `JSON.parse` are
	        // supported.
	        isSupported = has("json-stringify") && has("json-parse");
	      } else {
	        var value,
	            serialized = "{\"a\":[1,true,false,null,\"\\u0000\\b\\n\\f\\r\\t\"]}";
	        // Test `JSON.stringify`.
	        if (name == "json-stringify") {
	          var stringify = exports.stringify,
	              stringifySupported = typeof stringify == "function" && isExtended;
	          if (stringifySupported) {
	            // A test function object with a custom `toJSON` method.
	            (value = function value() {
	              return 1;
	            }).toJSON = value;
	            try {
	              stringifySupported =
	              // Firefox 3.1b1 and b2 serialize string, number, and boolean
	              // primitives as object literals.
	              stringify(0) === "0" &&
	              // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object
	              // literals.
	              stringify(new Number()) === "0" && stringify(new String()) == '""' &&
	              // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or
	              // does not define a canonical JSON representation (this applies to
	              // objects with `toJSON` properties as well, *unless* they are nested
	              // within an object or array).
	              stringify(getClass) === undef &&
	              // IE 8 serializes `undefined` as `"undefined"`. Safari <= 5.1.7 and
	              // FF 3.1b3 pass this test.
	              stringify(undef) === undef &&
	              // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,
	              // respectively, if the value is omitted entirely.
	              stringify() === undef &&
	              // FF 3.1b1, 2 throw an error if the given value is not a number,
	              // string, array, object, Boolean, or `null` literal. This applies to
	              // objects with custom `toJSON` methods as well, unless they are nested
	              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`
	              // methods entirely.
	              stringify(value) === "1" && stringify([value]) == "[1]" &&
	              // Prototype <= 1.6.1 serializes `[undefined]` as `"[]"` instead of
	              // `"[null]"`.
	              stringify([undef]) == "[null]" &&
	              // YUI 3.0.0b1 fails to serialize `null` literals.
	              stringify(null) == "null" &&
	              // FF 3.1b1, 2 halts serialization if an array contains a function:
	              // `[1, true, getClass, 1]` serializes as "[1,true,],". FF 3.1b3
	              // elides non-JSON values from objects and arrays, unless they
	              // define custom `toJSON` methods.
	              stringify([undef, getClass, null]) == "[null,null,null]" &&
	              // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
	              // where character escape codes are expected (e.g., `\b` => `\u0008`).
	              stringify({ "a": [value, true, false, null, "\x00\b\n\f\r\t"] }) == serialized &&
	              // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.
	              stringify(null, value) === "1" && stringify([1, 2], null, 1) == "[\n 1,\n 2\n]" &&
	              // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly
	              // serialize extended years.
	              stringify(new Date(-8.64e15)) == '"-271821-04-20T00:00:00.000Z"' &&
	              // The milliseconds are optional in ES 5, but required in 5.1.
	              stringify(new Date(8.64e15)) == '"+275760-09-13T00:00:00.000Z"' &&
	              // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative
	              // four-digit years instead of six-digit years. Credits: @Yaffle.
	              stringify(new Date(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' &&
	              // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond
	              // values less than 1000. Credits: @Yaffle.
	              stringify(new Date(-1)) == '"1969-12-31T23:59:59.999Z"';
	            } catch (exception) {
	              stringifySupported = false;
	            }
	          }
	          isSupported = stringifySupported;
	        }
	        // Test `JSON.parse`.
	        if (name == "json-parse") {
	          var parse = exports.parse;
	          if (typeof parse == "function") {
	            try {
	              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.
	              // Conforming implementations should also coerce the initial argument to
	              // a string prior to parsing.
	              if (parse("0") === 0 && !parse(false)) {
	                // Simple parsing test.
	                value = parse(serialized);
	                var parseSupported = value["a"].length == 5 && value["a"][0] === 1;
	                if (parseSupported) {
	                  try {
	                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.
	                    parseSupported = !parse('"\t"');
	                  } catch (exception) {}
	                  if (parseSupported) {
	                    try {
	                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading
	                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow
	                      // certain octal literals.
	                      parseSupported = parse("01") !== 1;
	                    } catch (exception) {}
	                  }
	                  if (parseSupported) {
	                    try {
	                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal
	                      // points. These environments, along with FF 3.1b1 and 2,
	                      // also allow trailing commas in JSON objects and arrays.
	                      parseSupported = parse("1.") !== 1;
	                    } catch (exception) {}
	                  }
	                }
	              }
	            } catch (exception) {
	              parseSupported = false;
	            }
	          }
	          isSupported = parseSupported;
	        }
	      }
	      return has[name] = !!isSupported;
	    }

	    if (!has("json")) {
	      // Common `[[Class]]` name aliases.
	      var functionClass = "[object Function]",
	          dateClass = "[object Date]",
	          numberClass = "[object Number]",
	          stringClass = "[object String]",
	          arrayClass = "[object Array]",
	          booleanClass = "[object Boolean]";

	      // Detect incomplete support for accessing string characters by index.
	      var charIndexBuggy = has("bug-string-char-index");

	      // Define additional utility methods if the `Date` methods are buggy.
	      if (!isExtended) {
	        var floor = Math.floor;
	        // A mapping between the months of the year and the number of days between
	        // January 1st and the first of the respective month.
	        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
	        // Internal: Calculates the number of days between the Unix epoch and the
	        // first day of the given month.
	        var getDay = function getDay(year, month) {
	          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);
	        };
	      }

	      // Internal: Determines if a property is a direct property of the given
	      // object. Delegates to the native `Object#hasOwnProperty` method.
	      if (!(_isProperty = objectProto.hasOwnProperty)) {
	        _isProperty = function isProperty(property) {
	          var members = {},
	              constructor;
	          if ((members.__proto__ = null, members.__proto__ = {
	            // The *proto* property cannot be set multiple times in recent
	            // versions of Firefox and SeaMonkey.
	            "toString": 1
	          }, members).toString != getClass) {
	            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but
	            // supports the mutable *proto* property.
	            _isProperty = function isProperty(property) {
	              // Capture and break the object's prototype chain (see section 8.6.2
	              // of the ES 5.1 spec). The parenthesized expression prevents an
	              // unsafe transformation by the Closure Compiler.
	              var original = this.__proto__,
	                  result = property in (this.__proto__ = null, this);
	              // Restore the original prototype chain.
	              this.__proto__ = original;
	              return result;
	            };
	          } else {
	            // Capture a reference to the top-level `Object` constructor.
	            constructor = members.constructor;
	            // Use the `constructor` property to simulate `Object#hasOwnProperty` in
	            // other environments.
	            _isProperty = function isProperty(property) {
	              var parent = (this.constructor || constructor).prototype;
	              return property in this && !(property in parent && this[property] === parent[property]);
	            };
	          }
	          members = null;
	          return _isProperty.call(this, property);
	        };
	      }

	      // Internal: Normalizes the `for...in` iteration algorithm across
	      // environments. Each enumerated key is yielded to a `callback` function.
	      _forEach = function forEach(object, callback) {
	        var size = 0,
	            Properties,
	            members,
	            property;

	        // Tests for bugs in the current environment's `for...in` algorithm. The
	        // `valueOf` property inherits the non-enumerable flag from
	        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.
	        (Properties = function Properties() {
	          this.valueOf = 0;
	        }).prototype.valueOf = 0;

	        // Iterate over a new instance of the `Properties` class.
	        members = new Properties();
	        for (property in members) {
	          // Ignore all properties inherited from `Object.prototype`.
	          if (_isProperty.call(members, property)) {
	            size++;
	          }
	        }
	        Properties = members = null;

	        // Normalize the iteration algorithm.
	        if (!size) {
	          // A list of non-enumerable properties inherited from `Object.prototype`.
	          members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"];
	          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable
	          // properties.
	          _forEach = function forEach(object, callback) {
	            var isFunction = getClass.call(object) == functionClass,
	                property,
	                length;
	            var hasProperty = !isFunction && typeof object.constructor != "function" && objectTypes[_typeof(object.hasOwnProperty)] && object.hasOwnProperty || _isProperty;
	            for (property in object) {
	              // Gecko <= 1.0 enumerates the `prototype` property of functions under
	              // certain conditions; IE does not.
	              if (!(isFunction && property == "prototype") && hasProperty.call(object, property)) {
	                callback(property);
	              }
	            }
	            // Manually invoke the callback for each non-enumerable property.
	            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property)) {}
	          };
	        } else if (size == 2) {
	          // Safari <= 2.0.4 enumerates shadowed properties twice.
	          _forEach = function forEach(object, callback) {
	            // Create a set of iterated properties.
	            var members = {},
	                isFunction = getClass.call(object) == functionClass,
	                property;
	            for (property in object) {
	              // Store each property name to prevent double enumeration. The
	              // `prototype` property of functions is not enumerated due to cross-
	              // environment inconsistencies.
	              if (!(isFunction && property == "prototype") && !_isProperty.call(members, property) && (members[property] = 1) && _isProperty.call(object, property)) {
	                callback(property);
	              }
	            }
	          };
	        } else {
	          // No bugs detected; use the standard `for...in` algorithm.
	          _forEach = function forEach(object, callback) {
	            var isFunction = getClass.call(object) == functionClass,
	                property,
	                isConstructor;
	            for (property in object) {
	              if (!(isFunction && property == "prototype") && _isProperty.call(object, property) && !(isConstructor = property === "constructor")) {
	                callback(property);
	              }
	            }
	            // Manually invoke the callback for the `constructor` property due to
	            // cross-environment inconsistencies.
	            if (isConstructor || _isProperty.call(object, property = "constructor")) {
	              callback(property);
	            }
	          };
	        }
	        return _forEach(object, callback);
	      };

	      // Public: Serializes a JavaScript `value` as a JSON string. The optional
	      // `filter` argument may specify either a function that alters how object and
	      // array members are serialized, or an array of strings and numbers that
	      // indicates which properties should be serialized. The optional `width`
	      // argument may be either a string or number that specifies the indentation
	      // level of the output.
	      if (!has("json-stringify")) {
	        // Internal: A map of control characters and their escaped equivalents.
	        var Escapes = {
	          92: "\\\\",
	          34: '\\"',
	          8: "\\b",
	          12: "\\f",
	          10: "\\n",
	          13: "\\r",
	          9: "\\t"
	        };

	        // Internal: Converts `value` into a zero-padded string such that its
	        // length is at least equal to `width`. The `width` must be <= 6.
	        var leadingZeroes = "000000";
	        var toPaddedString = function toPaddedString(width, value) {
	          // The `|| 0` expression is necessary to work around a bug in
	          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== "0"`.
	          return (leadingZeroes + (value || 0)).slice(-width);
	        };

	        // Internal: Double-quotes a string `value`, replacing all ASCII control
	        // characters (characters with code unit values between 0 and 31) with
	        // their escaped equivalents. This is an implementation of the
	        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.
	        var unicodePrefix = "\\u00";
	        var quote = function quote(value) {
	          var result = '"',
	              index = 0,
	              length = value.length,
	              useCharIndex = !charIndexBuggy || length > 10;
	          var symbols = useCharIndex && (charIndexBuggy ? value.split("") : value);
	          for (; index < length; index++) {
	            var charCode = value.charCodeAt(index);
	            // If the character is a control character, append its Unicode or
	            // shorthand escape sequence; otherwise, append the character as-is.
	            switch (charCode) {
	              case 8:case 9:case 10:case 12:case 13:case 34:case 92:
	                result += Escapes[charCode];
	                break;
	              default:
	                if (charCode < 32) {
	                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));
	                  break;
	                }
	                result += useCharIndex ? symbols[index] : value.charAt(index);
	            }
	          }
	          return result + '"';
	        };

	        // Internal: Recursively serializes an object. Implements the
	        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.
	        var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {
	          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;
	          try {
	            // Necessary for host object support.
	            value = object[property];
	          } catch (exception) {}
	          if ((typeof value === "undefined" ? "undefined" : _typeof(value)) == "object" && value) {
	            className = getClass.call(value);
	            if (className == dateClass && !_isProperty.call(value, "toJSON")) {
	              if (value > -1 / 0 && value < 1 / 0) {
	                // Dates are serialized according to the `Date#toJSON` method
	                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15
	                // for the ISO 8601 date time string format.
	                if (getDay) {
	                  // Manually compute the year, month, date, hours, minutes,
	                  // seconds, and milliseconds if the `getUTC*` methods are
	                  // buggy. Adapted from @Yaffle's `date-shim` project.
	                  date = floor(value / 864e5);
	                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++) {}
	                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++) {}
	                  date = 1 + date - getDay(year, month);
	                  // The `time` value specifies the time within the day (see ES
	                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used
	                  // to compute `A modulo B`, as the `%` operator does not
	                  // correspond to the `modulo` operation for negative numbers.
	                  time = (value % 864e5 + 864e5) % 864e5;
	                  // The hours, minutes, seconds, and milliseconds are obtained by
	                  // decomposing the time within the day. See section 15.9.1.10.
	                  hours = floor(time / 36e5) % 24;
	                  minutes = floor(time / 6e4) % 60;
	                  seconds = floor(time / 1e3) % 60;
	                  milliseconds = time % 1e3;
	                } else {
	                  year = value.getUTCFullYear();
	                  month = value.getUTCMonth();
	                  date = value.getUTCDate();
	                  hours = value.getUTCHours();
	                  minutes = value.getUTCMinutes();
	                  seconds = value.getUTCSeconds();
	                  milliseconds = value.getUTCMilliseconds();
	                }
	                // Serialize extended years correctly.
	                value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) +
	                // Months, dates, hours, minutes, and seconds should have two
	                // digits; milliseconds should have three.
	                "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) +
	                // Milliseconds are optional in ES 5.0, but required in 5.1.
	                "." + toPaddedString(3, milliseconds) + "Z";
	              } else {
	                value = null;
	              }
	            } else if (typeof value.toJSON == "function" && (className != numberClass && className != stringClass && className != arrayClass || _isProperty.call(value, "toJSON"))) {
	              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the
	              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3
	              // ignores all `toJSON` methods on these objects unless they are
	              // defined directly on an instance.
	              value = value.toJSON(property);
	            }
	          }
	          if (callback) {
	            // If a replacement function was provided, call it to obtain the value
	            // for serialization.
	            value = callback.call(object, property, value);
	          }
	          if (value === null) {
	            return "null";
	          }
	          className = getClass.call(value);
	          if (className == booleanClass) {
	            // Booleans are represented literally.
	            return "" + value;
	          } else if (className == numberClass) {
	            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as
	            // `"null"`.
	            return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
	          } else if (className == stringClass) {
	            // Strings are double-quoted and escaped.
	            return quote("" + value);
	          }
	          // Recursively serialize objects and arrays.
	          if ((typeof value === "undefined" ? "undefined" : _typeof(value)) == "object") {
	            // Check for cyclic structures. This is a linear search; performance
	            // is inversely proportional to the number of unique nested objects.
	            for (length = stack.length; length--;) {
	              if (stack[length] === value) {
	                // Cyclic structures cannot be serialized by `JSON.stringify`.
	                throw TypeError();
	              }
	            }
	            // Add the object to the stack of traversed objects.
	            stack.push(value);
	            results = [];
	            // Save the current indentation level and indent one additional level.
	            prefix = indentation;
	            indentation += whitespace;
	            if (className == arrayClass) {
	              // Recursively serialize array elements.
	              for (index = 0, length = value.length; index < length; index++) {
	                element = serialize(index, value, callback, properties, whitespace, indentation, stack);
	                results.push(element === undef ? "null" : element);
	              }
	              result = results.length ? whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : "[" + results.join(",") + "]" : "[]";
	            } else {
	              // Recursively serialize object members. Members are selected from
	              // either a user-specified list of property names, or the object
	              // itself.
	              _forEach(properties || value, function (property) {
	                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
	                if (element !== undef) {
	                  // According to ES 5.1 section 15.12.3: "If `gap` {whitespace}
	                  // is not the empty string, let `member` {quote(property) + ":"}
	                  // be the concatenation of `member` and the `space` character."
	                  // The "`space` character" refers to the literal space
	                  // character, not the `space` {width} argument provided to
	                  // `JSON.stringify`.
	                  results.push(quote(property) + ":" + (whitespace ? " " : "") + element);
	                }
	              });
	              result = results.length ? whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : "{" + results.join(",") + "}" : "{}";
	            }
	            // Remove the object from the traversed object stack.
	            stack.pop();
	            return result;
	          }
	        };

	        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.
	        exports.stringify = function (source, filter, width) {
	          var whitespace, callback, properties, className;
	          if (objectTypes[typeof filter === "undefined" ? "undefined" : _typeof(filter)] && filter) {
	            if ((className = getClass.call(filter)) == functionClass) {
	              callback = filter;
	            } else if (className == arrayClass) {
	              // Convert the property names array into a makeshift set.
	              properties = {};
	              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1)) {}
	            }
	          }
	          if (width) {
	            if ((className = getClass.call(width)) == numberClass) {
	              // Convert the `width` to an integer and create a string containing
	              // `width` number of space characters.
	              if ((width -= width % 1) > 0) {
	                for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ") {}
	              }
	            } else if (className == stringClass) {
	              whitespace = width.length <= 10 ? width : width.slice(0, 10);
	            }
	          }
	          // Opera <= 7.54u2 discards the values associated with empty string keys
	          // (`""`) only if they are used directly within an object member list
	          // (e.g., `!("" in { "": 1})`).
	          return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", []);
	        };
	      }

	      // Public: Parses a JSON source string.
	      if (!has("json-parse")) {
	        var fromCharCode = String.fromCharCode;

	        // Internal: A map of escaped control characters and their unescaped
	        // equivalents.
	        var Unescapes = {
	          92: "\\",
	          34: '"',
	          47: "/",
	          98: "\b",
	          116: "\t",
	          110: "\n",
	          102: "\f",
	          114: "\r"
	        };

	        // Internal: Stores the parser state.
	        var Index, Source;

	        // Internal: Resets the parser state and throws a `SyntaxError`.
	        var abort = function abort() {
	          Index = Source = null;
	          throw SyntaxError();
	        };

	        // Internal: Returns the next token, or `"$"` if the parser has reached
	        // the end of the source string. A token may be a string, number, `null`
	        // literal, or Boolean literal.
	        var lex = function lex() {
	          var source = Source,
	              length = source.length,
	              value,
	              begin,
	              position,
	              isSigned,
	              charCode;
	          while (Index < length) {
	            charCode = source.charCodeAt(Index);
	            switch (charCode) {
	              case 9:case 10:case 13:case 32:
	                // Skip whitespace tokens, including tabs, carriage returns, line
	                // feeds, and space characters.
	                Index++;
	                break;
	              case 123:case 125:case 91:case 93:case 58:case 44:
	                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at
	                // the current position.
	                value = charIndexBuggy ? source.charAt(Index) : source[Index];
	                Index++;
	                return value;
	              case 34:
	                // `"` delimits a JSON string; advance to the next character and
	                // begin parsing the string. String tokens are prefixed with the
	                // sentinel `@` character to distinguish them from punctuators and
	                // end-of-string tokens.
	                for (value = "@", Index++; Index < length;) {
	                  charCode = source.charCodeAt(Index);
	                  if (charCode < 32) {
	                    // Unescaped ASCII control characters (those with a code unit
	                    // less than the space character) are not permitted.
	                    abort();
	                  } else if (charCode == 92) {
	                    // A reverse solidus (`\`) marks the beginning of an escaped
	                    // control character (including `"`, `\`, and `/`) or Unicode
	                    // escape sequence.
	                    charCode = source.charCodeAt(++Index);
	                    switch (charCode) {
	                      case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:
	                        // Revive escaped control characters.
	                        value += Unescapes[charCode];
	                        Index++;
	                        break;
	                      case 117:
	                        // `\u` marks the beginning of a Unicode escape sequence.
	                        // Advance to the first character and validate the
	                        // four-digit code point.
	                        begin = ++Index;
	                        for (position = Index + 4; Index < position; Index++) {
	                          charCode = source.charCodeAt(Index);
	                          // A valid sequence comprises four hexdigits (case-
	                          // insensitive) that form a single hexadecimal value.
	                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {
	                            // Invalid Unicode escape sequence.
	                            abort();
	                          }
	                        }
	                        // Revive the escaped character.
	                        value += fromCharCode("0x" + source.slice(begin, Index));
	                        break;
	                      default:
	                        // Invalid escape sequence.
	                        abort();
	                    }
	                  } else {
	                    if (charCode == 34) {
	                      // An unescaped double-quote character marks the end of the
	                      // string.
	                      break;
	                    }
	                    charCode = source.charCodeAt(Index);
	                    begin = Index;
	                    // Optimize for the common case where a string is valid.
	                    while (charCode >= 32 && charCode != 92 && charCode != 34) {
	                      charCode = source.charCodeAt(++Index);
	                    }
	                    // Append the string as-is.
	                    value += source.slice(begin, Index);
	                  }
	                }
	                if (source.charCodeAt(Index) == 34) {
	                  // Advance to the next character and return the revived string.
	                  Index++;
	                  return value;
	                }
	                // Unterminated string.
	                abort();
	              default:
	                // Parse numbers and literals.
	                begin = Index;
	                // Advance past the negative sign, if one is specified.
	                if (charCode == 45) {
	                  isSigned = true;
	                  charCode = source.charCodeAt(++Index);
	                }
	                // Parse an integer or floating-point value.
	                if (charCode >= 48 && charCode <= 57) {
	                  // Leading zeroes are interpreted as octal literals.
	                  if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {
	                    // Illegal octal literal.
	                    abort();
	                  }
	                  isSigned = false;
	                  // Parse the integer component.
	                  for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++) {}
	                  // Floats cannot contain a leading decimal point; however, this
	                  // case is already accounted for by the parser.
	                  if (source.charCodeAt(Index) == 46) {
	                    position = ++Index;
	                    // Parse the decimal component.
	                    for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {}
	                    if (position == Index) {
	                      // Illegal trailing decimal.
	                      abort();
	                    }
	                    Index = position;
	                  }
	                  // Parse exponents. The `e` denoting the exponent is
	                  // case-insensitive.
	                  charCode = source.charCodeAt(Index);
	                  if (charCode == 101 || charCode == 69) {
	                    charCode = source.charCodeAt(++Index);
	                    // Skip past the sign following the exponent, if one is
	                    // specified.
	                    if (charCode == 43 || charCode == 45) {
	                      Index++;
	                    }
	                    // Parse the exponential component.
	                    for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {}
	                    if (position == Index) {
	                      // Illegal empty exponent.
	                      abort();
	                    }
	                    Index = position;
	                  }
	                  // Coerce the parsed value to a JavaScript number.
	                  return +source.slice(begin, Index);
	                }
	                // A negative sign may only precede numbers.
	                if (isSigned) {
	                  abort();
	                }
	                // `true`, `false`, and `null` literals.
	                if (source.slice(Index, Index + 4) == "true") {
	                  Index += 4;
	                  return true;
	                } else if (source.slice(Index, Index + 5) == "false") {
	                  Index += 5;
	                  return false;
	                } else if (source.slice(Index, Index + 4) == "null") {
	                  Index += 4;
	                  return null;
	                }
	                // Unrecognized token.
	                abort();
	            }
	          }
	          // Return the sentinel `$` character if the parser has reached the end
	          // of the source string.
	          return "$";
	        };

	        // Internal: Parses a JSON `value` token.
	        var get = function get(value) {
	          var results, hasMembers;
	          if (value == "$") {
	            // Unexpected end of input.
	            abort();
	          }
	          if (typeof value == "string") {
	            if ((charIndexBuggy ? value.charAt(0) : value[0]) == "@") {
	              // Remove the sentinel `@` character.
	              return value.slice(1);
	            }
	            // Parse object and array literals.
	            if (value == "[") {
	              // Parses a JSON array, returning a new JavaScript array.
	              results = [];
	              for (;; hasMembers || (hasMembers = true)) {
	                value = lex();
	                // A closing square bracket marks the end of the array literal.
	                if (value == "]") {
	                  break;
	                }
	                // If the array literal contains elements, the current token
	                // should be a comma separating the previous element from the
	                // next.
	                if (hasMembers) {
	                  if (value == ",") {
	                    value = lex();
	                    if (value == "]") {
	                      // Unexpected trailing `,` in array literal.
	                      abort();
	                    }
	                  } else {
	                    // A `,` must separate each array element.
	                    abort();
	                  }
	                }
	                // Elisions and leading commas are not permitted.
	                if (value == ",") {
	                  abort();
	                }
	                results.push(get(value));
	              }
	              return results;
	            } else if (value == "{") {
	              // Parses a JSON object, returning a new JavaScript object.
	              results = {};
	              for (;; hasMembers || (hasMembers = true)) {
	                value = lex();
	                // A closing curly brace marks the end of the object literal.
	                if (value == "}") {
	                  break;
	                }
	                // If the object literal contains members, the current token
	                // should be a comma separator.
	                if (hasMembers) {
	                  if (value == ",") {
	                    value = lex();
	                    if (value == "}") {
	                      // Unexpected trailing `,` in object literal.
	                      abort();
	                    }
	                  } else {
	                    // A `,` must separate each object member.
	                    abort();
	                  }
	                }
	                // Leading commas are not permitted, object property names must be
	                // double-quoted strings, and a `:` must separate each property
	                // name and value.
	                if (value == "," || typeof value != "string" || (charIndexBuggy ? value.charAt(0) : value[0]) != "@" || lex() != ":") {
	                  abort();
	                }
	                results[value.slice(1)] = get(lex());
	              }
	              return results;
	            }
	            // Unexpected token encountered.
	            abort();
	          }
	          return value;
	        };

	        // Internal: Updates a traversed object member.
	        var update = function update(source, property, callback) {
	          var element = walk(source, property, callback);
	          if (element === undef) {
	            delete source[property];
	          } else {
	            source[property] = element;
	          }
	        };

	        // Internal: Recursively traverses a parsed JSON object, invoking the
	        // `callback` function for each value. This is an implementation of the
	        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.
	        var walk = function walk(source, property, callback) {
	          var value = source[property],
	              length;
	          if ((typeof value === "undefined" ? "undefined" : _typeof(value)) == "object" && value) {
	            // `forEach` can't be used to traverse an array in Opera <= 8.54
	            // because its `Object#hasOwnProperty` implementation returns `false`
	            // for array indices (e.g., `![1, 2, 3].hasOwnProperty("0")`).
	            if (getClass.call(value) == arrayClass) {
	              for (length = value.length; length--;) {
	                update(value, length, callback);
	              }
	            } else {
	              _forEach(value, function (property) {
	                update(value, property, callback);
	              });
	            }
	          }
	          return callback.call(source, property, value);
	        };

	        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.
	        exports.parse = function (source, callback) {
	          var result, value;
	          Index = 0;
	          Source = "" + source;
	          result = get(lex());
	          // If a JSON string contains multiple tokens, it is invalid.
	          if (lex() != "$") {
	            abort();
	          }
	          // Reset the parser state.
	          Index = Source = null;
	          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[""] = result, value), "", callback) : result;
	        };
	      }
	    }

	    exports["runInContext"] = runInContext;
	    return exports;
	  }

	  if (freeExports && !isLoader) {
	    // Export for CommonJS environments.
	    runInContext(root, freeExports);
	  } else {
	    // Export for web browsers and JavaScript engines.
	    var nativeJSON = root.JSON,
	        previousJSON = root["JSON3"],
	        isRestored = false;

	    var JSON3 = runInContext(root, root["JSON3"] = {
	      // Public: Restores the original value of the global `JSON` object and
	      // returns a reference to the `JSON3` object.
	      "noConflict": function noConflict() {
	        if (!isRestored) {
	          isRestored = true;
	          root.JSON = nativeJSON;
	          root["JSON3"] = previousJSON;
	          nativeJSON = previousJSON = null;
	        }
	        return JSON3;
	      }
	    });

	    root.JSON = {
	      "parse": JSON3.parse,
	      "stringify": JSON3.stringify
	    };
	  }

	  // Export for asynchronous module loaders.
	  if (isLoader) {
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return JSON3;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	}).call(undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(111)(module), (function() { return this; }())))

/***/ },
/* 908 */
/***/ function(module, exports) {

	"use strict";

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf;

	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	function getPrototype(value) {
	  return nativeGetPrototype(Object(value));
	}

	module.exports = getPrototype;

/***/ },
/* 909 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	module.exports = isHostObject;

/***/ },
/* 910 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';
	}

	module.exports = isObjectLike;

/***/ },
/* 911 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Helpers.
	 */

	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var y = d * 365.25;

	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} options
	 * @return {String|Number}
	 * @api public
	 */

	module.exports = function (val, options) {
	  options = options || {};
	  if ('string' == typeof val) return parse(val);
	  return options.long ? long(val) : short(val);
	};

	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */

	function parse(str) {
	  str = '' + str;
	  if (str.length > 10000) return;
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
	  if (!match) return;
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	  }
	}

	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function short(ms) {
	  if (ms >= d) return Math.round(ms / d) + 'd';
	  if (ms >= h) return Math.round(ms / h) + 'h';
	  if (ms >= m) return Math.round(ms / m) + 'm';
	  if (ms >= s) return Math.round(ms / s) + 's';
	  return ms + 'ms';
	}

	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function long(ms) {
	  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';
	}

	/**
	 * Pluralization helper.
	 */

	function plural(ms, n, name) {
	  if (ms < n) return;
	  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;
	  return Math.ceil(ms / n) + ' ' + name + 's';
	}

/***/ },
/* 912 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Get average value.
	 * @function ave
	 * @param {...number} values - Values to ave.
	 * @returns {number} - Average value.
	 */

	'use strict';

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	var sum = __webpack_require__(308);

	/** @lends ave */
	function ave() {
	  var args = arguments;
	  var values = 0,
	      size = 0;
	  for (var i = 0, len = args.length; i < len; i++) {
	    var val = args[i];
	    if (Array.isArray(val)) {
	      size += val.length;
	      val = sum.apply(undefined, _toConsumableArray(val));
	    } else {
	      size += 1;
	    }
	    values += val;
	  }
	  return values / size;
	}

	module.exports = ave;

/***/ },
/* 913 */
/***/ function(module, exports) {

	/**
	 * Find max value.
	 * @function max
	 * @param {...number} values - Values to compare.
	 * @returns {number} - Max number.
	 */

	'use strict';

	/** @lends max */

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	function max() {
	  var args = arguments;
	  var result = undefined;
	  for (var i = 0, len = args.length; i < len; i++) {
	    var val = args[i];
	    if (Array.isArray(val)) {
	      val = max.apply(undefined, _toConsumableArray(val));
	    }
	    var hit = result === undefined || val > result;
	    if (hit) {
	      result = val;
	    }
	  }
	  return result;
	}

	module.exports = max;

/***/ },
/* 914 */
/***/ function(module, exports) {

	/**
	 * Find min value.
	 * @function min
	 * @param {...number} values - Values to compare.
	 * @returns {number} - Min number.
	 */

	'use strict';

	/** @lends min */

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	function min() {
	  var args = arguments;
	  var result = undefined;
	  for (var i = 0, len = args.length; i < len; i++) {
	    var val = args[i];
	    if (Array.isArray(val)) {
	      val = min.apply(undefined, _toConsumableArray(val));
	    }
	    var hit = result === undefined || val < result;
	    if (hit) {
	      result = val;
	    }
	  }
	  return result;
	}

	module.exports = min;

/***/ },
/* 915 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create a new context
	 * @function create
	 */
	'use strict';

	var Objnest = __webpack_require__(310);

	/** @lends create */
	function create(config) {
	  return new Objnest(config);
	}

	module.exports = create;

/***/ },
/* 916 */
/***/ function(module, exports) {

	/**
	 * Convert from array key.
	 * @memberof module:objnest/lib/key
	 * @function fromArrayKey
	 * @param {string} key - Key to convert.
	 * @returns {string} - Converted key.
	 */
	'use strict';

	/** @lends fromArrayKey */

	function fromArrayKey(key) {
	    return {
	        name: key.replace(/\[\d+\]$/, ''),
	        index: Number(key.match(/\[(\d+)\]$/)[1])
	    };
	}

	module.exports = fromArrayKey;

/***/ },
/* 917 */
/***/ function(module, exports) {

	/**
	 * Detect is an array key.
	 * @memberof module:objnest/lib/key
	 * @function isArrayKey
	 * @param {string} key - Key to convert.
	 * @returns {boolean} - Is array key or not.
	 */
	'use strict';

	/** @lends isArrayKey */

	function isArrayKey(key) {
	  return (/\[\d\]$/.test(key)
	  );
	}

	module.exports = isArrayKey;

/***/ },
/* 918 */
/***/ function(module, exports) {

	/**
	 * Convert to array key.
	 * @memberof module:objnest/lib/key
	 * @function toArrayKey
	 * @param {string} key - Key to convert.
	 * @returns {string} - Converted key.
	 */
	'use strict';

	/** @lends toArrayKey */

	function toArrayKey(key) {
	  var components = key.split(/\./g);
	  return ['[' + components[0] + ']'].concat(components.slice(1)).join('.');
	}

	module.exports = toArrayKey;

/***/ },
/* 919 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * JSON parse.
	 *
	 * @see Based on jQuery#parseJSON (MIT) and JSON2
	 * @api private
	 */

	var rvalidchars = /^[\],:{}\s]*$/;
	var rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
	var rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
	var rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g;
	var rtrimLeft = /^\s+/;
	var rtrimRight = /\s+$/;

	module.exports = function parsejson(data) {
	  if ('string' != typeof data || !data) {
	    return null;
	  }

	  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');

	  // Attempt to parse using the native JSON parser first
	  if (global.JSON && JSON.parse) {
	    return JSON.parse(data);
	  }

	  if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {
	    return new Function('return ' + data)();
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 920 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// resolves . and .. elements in a path array with directory names there
	// must be no slashes, empty elements, or device names (c:\) in the array
	// (so also no leading and trailing slashes - it does not distinguish
	// relative and absolute paths)
	function normalizeArray(parts, allowAboveRoot) {
	  // if the path tries to go above the root, `up` ends up > 0
	  var up = 0;
	  for (var i = parts.length - 1; i >= 0; i--) {
	    var last = parts[i];
	    if (last === '.') {
	      parts.splice(i, 1);
	    } else if (last === '..') {
	      parts.splice(i, 1);
	      up++;
	    } else if (up) {
	      parts.splice(i, 1);
	      up--;
	    }
	  }

	  // if the path is allowed to go above the root, restore leading ..s
	  if (allowAboveRoot) {
	    for (; up--; up) {
	      parts.unshift('..');
	    }
	  }

	  return parts;
	}

	// Split a filename into [root, dir, basename, ext], unix version
	// 'root' is just a slash, or nothing.
	var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
	var splitPath = function splitPath(filename) {
	  return splitPathRe.exec(filename).slice(1);
	};

	// path.resolve([from ...], to)
	// posix version
	exports.resolve = function () {
	  var resolvedPath = '',
	      resolvedAbsolute = false;

	  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	    var path = i >= 0 ? arguments[i] : process.cwd();

	    // Skip empty and invalid entries
	    if (typeof path !== 'string') {
	      throw new TypeError('Arguments to path.resolve must be strings');
	    } else if (!path) {
	      continue;
	    }

	    resolvedPath = path + '/' + resolvedPath;
	    resolvedAbsolute = path.charAt(0) === '/';
	  }

	  // At this point the path should be resolved to a full absolute path, but
	  // handle relative paths to be safe (might happen when process.cwd() fails)

	  // Normalize the path
	  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {
	    return !!p;
	  }), !resolvedAbsolute).join('/');

	  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';
	};

	// path.normalize(path)
	// posix version
	exports.normalize = function (path) {
	  var isAbsolute = exports.isAbsolute(path),
	      trailingSlash = substr(path, -1) === '/';

	  // Normalize the path
	  path = normalizeArray(filter(path.split('/'), function (p) {
	    return !!p;
	  }), !isAbsolute).join('/');

	  if (!path && !isAbsolute) {
	    path = '.';
	  }
	  if (path && trailingSlash) {
	    path += '/';
	  }

	  return (isAbsolute ? '/' : '') + path;
	};

	// posix version
	exports.isAbsolute = function (path) {
	  return path.charAt(0) === '/';
	};

	// posix version
	exports.join = function () {
	  var paths = Array.prototype.slice.call(arguments, 0);
	  return exports.normalize(filter(paths, function (p, index) {
	    if (typeof p !== 'string') {
	      throw new TypeError('Arguments to path.join must be strings');
	    }
	    return p;
	  }).join('/'));
	};

	// path.relative(from, to)
	// posix version
	exports.relative = function (from, to) {
	  from = exports.resolve(from).substr(1);
	  to = exports.resolve(to).substr(1);

	  function trim(arr) {
	    var start = 0;
	    for (; start < arr.length; start++) {
	      if (arr[start] !== '') break;
	    }

	    var end = arr.length - 1;
	    for (; end >= 0; end--) {
	      if (arr[end] !== '') break;
	    }

	    if (start > end) return [];
	    return arr.slice(start, end - start + 1);
	  }

	  var fromParts = trim(from.split('/'));
	  var toParts = trim(to.split('/'));

	  var length = Math.min(fromParts.length, toParts.length);
	  var samePartsLength = length;
	  for (var i = 0; i < length; i++) {
	    if (fromParts[i] !== toParts[i]) {
	      samePartsLength = i;
	      break;
	    }
	  }

	  var outputParts = [];
	  for (var i = samePartsLength; i < fromParts.length; i++) {
	    outputParts.push('..');
	  }

	  outputParts = outputParts.concat(toParts.slice(samePartsLength));

	  return outputParts.join('/');
	};

	exports.sep = '/';
	exports.delimiter = ':';

	exports.dirname = function (path) {
	  var result = splitPath(path),
	      root = result[0],
	      dir = result[1];

	  if (!root && !dir) {
	    // No dirname whatsoever
	    return '.';
	  }

	  if (dir) {
	    // It has a dirname, strip trailing slash
	    dir = dir.substr(0, dir.length - 1);
	  }

	  return root + dir;
	};

	exports.basename = function (path, ext) {
	  var f = splitPath(path)[2];
	  // TODO: make this comparison case-insensitive on windows?
	  if (ext && f.substr(-1 * ext.length) === ext) {
	    f = f.substr(0, f.length - ext.length);
	  }
	  return f;
	};

	exports.extname = function (path) {
	  return splitPath(path)[3];
	};

	function filter(xs, f) {
	  if (xs.filter) return xs.filter(f);
	  var res = [];
	  for (var i = 0; i < xs.length; i++) {
	    if (f(xs[i], i, xs)) res.push(xs[i]);
	  }
	  return res;
	}

	// String.prototype.substr - negative index don't work in IE8
	var substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {
	  return str.substr(start, len);
	} : function (str, start, len) {
	  if (start < 0) start = str.length + start;
	  return str.substr(start, len);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 921 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	'use strict';

	// If obj.hasOwnProperty has been overridden, then calling
	// obj.hasOwnProperty(prop) will break.
	// See: https://github.com/joyent/node/issues/1707

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	module.exports = function (qs, sep, eq, options) {
	  sep = sep || '&';
	  eq = eq || '=';
	  var obj = {};

	  if (typeof qs !== 'string' || qs.length === 0) {
	    return obj;
	  }

	  var regexp = /\+/g;
	  qs = qs.split(sep);

	  var maxKeys = 1000;
	  if (options && typeof options.maxKeys === 'number') {
	    maxKeys = options.maxKeys;
	  }

	  var len = qs.length;
	  // maxKeys <= 0 means that we should not limit keys count
	  if (maxKeys > 0 && len > maxKeys) {
	    len = maxKeys;
	  }

	  for (var i = 0; i < len; ++i) {
	    var x = qs[i].replace(regexp, '%20'),
	        idx = x.indexOf(eq),
	        kstr,
	        vstr,
	        k,
	        v;

	    if (idx >= 0) {
	      kstr = x.substr(0, idx);
	      vstr = x.substr(idx + 1);
	    } else {
	      kstr = x;
	      vstr = '';
	    }

	    k = decodeURIComponent(kstr);
	    v = decodeURIComponent(vstr);

	    if (!hasOwnProperty(obj, k)) {
	      obj[k] = v;
	    } else if (Array.isArray(obj[k])) {
	      obj[k].push(v);
	    } else {
	      obj[k] = [obj[k], v];
	    }
	  }

	  return obj;
	};

/***/ },
/* 922 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var stringifyPrimitive = function stringifyPrimitive(v) {
	  switch (typeof v === 'undefined' ? 'undefined' : _typeof(v)) {
	    case 'string':
	      return v;

	    case 'boolean':
	      return v ? 'true' : 'false';

	    case 'number':
	      return isFinite(v) ? v : '';

	    default:
	      return '';
	  }
	};

	module.exports = function (obj, sep, eq, name) {
	  sep = sep || '&';
	  eq = eq || '=';
	  if (obj === null) {
	    obj = undefined;
	  }

	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	    return Object.keys(obj).map(function (k) {
	      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
	      if (Array.isArray(obj[k])) {
	        return obj[k].map(function (v) {
	          return ks + encodeURIComponent(stringifyPrimitive(v));
	        }).join(sep);
	      } else {
	        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
	      }
	    }).join(sep);
	  }

	  if (!name) return '';
	  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
	};

/***/ },
/* 923 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.decode = exports.parse = __webpack_require__(921);
	exports.encode = exports.stringify = __webpack_require__(922);

/***/ },
/* 924 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 
	 * @module randomval
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get randomBool() {
	    return d(__webpack_require__(925));
	  },
	  get randomDate() {
	    return d(__webpack_require__(926));
	  },
	  get randomHash() {
	    return d(__webpack_require__(927));
	  },
	  get randomInt() {
	    return d(__webpack_require__(312));
	  },
	  get random() {
	    return d(__webpack_require__(186));
	  }
	};

/***/ },
/* 925 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Random boolean value.
	 * @function randomBool
	 * @returns {boolean} - Random boolean.
	 */

	'use strict';

	var random = __webpack_require__(186);

	/** @lends randomBool */
	function randomBool() {
	  return random() > random();
	}

	module.exports = randomBool;

/***/ },
/* 926 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Random boolean value.
	 * @function randomDate
	 * @param {Date} [min=_now()] - Min date.
	 * @param {Date} [max=_aYearLater(min)] -  Max date.
	 * @returns {date} - Random date.
	 */

	'use strict';

	var randomInt = __webpack_require__(312);

	/** @lends randomDate */
	function randomDate(min, max) {
	  if (typeof min === 'undefined') {
	    min = _now();
	  }
	  if (typeof max === 'undefined') {
	    max = _aYearLater(min);
	  }
	  min = new Date(min).getTime();
	  max = new Date(max).getTime();

	  return new Date(randomInt(min, max));
	}

	module.exports = randomDate;

	function _now() {
	  return new Date();
	}
	function _aYearLater(date) {
	  var base = new Date(date).getTime();
	  return new Date(base + 365 * 24 * 60 * 60 * 1000);
	}

/***/ },
/* 927 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Random hash value.
	 * @function randomHash
	 * @param {number} [len=32] - Hash length.
	 * @returns {string} - Random hash string.
	 */

	'use strict';

	var uuid = __webpack_require__(38);

	/** @lends randomHash */
	function randomHash(len) {
	  var val = uuid().replace(/\-/g, '');
	  while (val.length < len) {
	    val += randomHash();
	  }
	  return val.substr(0, len);
	}

	module.exports = randomHash;

/***/ },
/* 928 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * A value contained in range.
	 * @function contains
	 * @param {number} min - Min value.
	 * @param {number} max - Max value.
	 * @param {number} value - Value.
	 * @returns {boolean} - Contains or not.
	 */
	'use strict';

	var assert = __webpack_require__(59);
	var amount = __webpack_require__(135);

	/** @lends rate */
	function contains(min, max, value) {
	  assert.equal(arguments.length, 3, 'Invalid args');
	  return min <= value && value <= max;
	}

	module.exports = contains;

/***/ },
/* 929 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Get rate for a value.
	 * @function rate
	 * @param {number} min - Min value.
	 * @param {number} max - Max value.
	 * @param {number} value - Value.
	 * @returns {number} - Rate for value.
	 */
	'use strict';

	var assert = __webpack_require__(59);
	var amount = __webpack_require__(135);

	/** @lends rate */
	function rate(min, max, value) {
	  assert.equal(arguments.length, 3, "Invalid args");
	  return (value - min) / amount(min, max);
	}

	module.exports = rate;

/***/ },
/* 930 */
/***/ function(module, exports) {

	/**
	 * @function round
	 */

	'use strict';

	/** @lends round */

	function round(min, max, value) {
	  if (value < min) {
	    value = min;
	  }
	  if (max < value) {
	    value = max;
	  }
	  return value;
	}

	module.exports = round;

/***/ },
/* 931 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Get value for a rate.
	 * @function rate
	 * @param {number} min - Min value.
	 * @param {number} max - Max value
	 * @param {number} rate - Rate.
	 * @returns {number} - Value for rate.
	 */
	'use strict';

	var assert = __webpack_require__(59);
	var amount = __webpack_require__(135);

	/** @lends rate */
	function value(min, max, rate) {
	  assert.equal(arguments.length, 3, "Invalid args");
	  return amount(min, max) * rate + min;
	}

	module.exports = value;

/***/ },
/* 932 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(933);

/***/ },
/* 933 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = autoBind;
	var wontBind = ['constructor', 'render', 'componentWillMount', 'componentDidMount', 'componentWillReceiveProps', 'shouldComponentUpdate', 'componentWillUpdate', 'componentDidUpdate', 'componentWillUnmount'];

	var toBind = [];

	function autoBind(context) {
	  if (context === undefined) {
	    console.error('Autobind error: No context provided.');
	    return;
	  }

	  var objPrototype = Object.getPrototypeOf(context);

	  if (arguments.length > 1) {
	    // If a list of methods to bind is provided, use it.
	    toBind = Array.prototype.slice.call(arguments, 1);
	  } else {
	    // If no list of methods to bind is provided, bind all available methods in class.
	    toBind = Object.getOwnPropertyNames(objPrototype);
	  }

	  toBind.forEach(function (method) {
	    var descriptor = Object.getOwnPropertyDescriptor(objPrototype, method);

	    if (descriptor === undefined) {
	      console.warn('Autobind: "' + method + '" method not found in class.');
	      return;
	    }

	    // Return if it's special case function or if not a function at all
	    if (wontBind.indexOf(method) !== -1 || typeof descriptor.value !== 'function') {
	      return;
	    }

	    Object.defineProperty(objPrototype, method, boundMethod(objPrototype, method, descriptor));
	  });
	}

	/**
	* From autobind-decorator (https://github.com/andreypopp/autobind-decorator/tree/master)
	* Return a descriptor removing the value and returning a getter
	* The getter will return a .bind version of the function
	* and memoize the result against a symbol on the instance
	*/
	function boundMethod(objPrototype, method, descriptor) {
	  var fn = descriptor.value;

	  return {
	    configurable: true,
	    get: function get() {
	      if (this === objPrototype || this.hasOwnProperty(method)) {
	        return fn;
	      }

	      var boundFn = fn.bind(this);
	      Object.defineProperty(this, method, {
	        value: boundFn,
	        configurable: true,
	        writable: true
	      });
	      return boundFn;
	    }
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 934 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.__esModule = true;
	exports["default"] = undefined;

	var _react = __webpack_require__(1);

	var _storeShape = __webpack_require__(313);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	var _warning = __webpack_require__(314);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;

	  (0, _warning2["default"])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}

	var Provider = function (_Component) {
	  _inherits(Provider, _Component);

	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store };
	  };

	  function Provider(props, context) {
	    _classCallCheck(this, Provider);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	    _this.store = props.store;
	    return _this;
	  }

	  Provider.prototype.render = function render() {
	    var children = this.props.children;

	    return _react.Children.only(children);
	  };

	  return Provider;
	}(_react.Component);

	exports["default"] = Provider;

	if (false) {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;

	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}

	Provider.propTypes = {
	  store: _storeShape2["default"].isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _storeShape2["default"].isRequired
	};

/***/ },
/* 935 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	exports.__esModule = true;
	exports["default"] = connect;

	var _react = __webpack_require__(1);

	var _storeShape = __webpack_require__(313);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	var _shallowEqual = __webpack_require__(936);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _wrapActionCreators = __webpack_require__(937);

	var _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);

	var _warning = __webpack_require__(314);

	var _warning2 = _interopRequireDefault(_warning);

	var _isPlainObject = __webpack_require__(183);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _hoistNonReactStatics = __webpack_require__(898);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _invariant = __webpack_require__(904);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var defaultMapStateToProps = function defaultMapStateToProps(state) {
	  return {};
	}; // eslint-disable-line no-unused-vars
	var defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {
	  return { dispatch: dispatch };
	};
	var defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {
	  return _extends({}, parentProps, stateProps, dispatchProps);
	};

	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}

	var errorObject = { value: null };
	function tryCatch(fn, ctx) {
	  try {
	    return fn.apply(ctx);
	  } catch (e) {
	    errorObject.value = e;
	    return errorObject;
	  }
	}

	// Helps track hot reloading.
	var nextVersion = 0;

	function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

	  var shouldSubscribe = Boolean(mapStateToProps);
	  var mapState = mapStateToProps || defaultMapStateToProps;

	  var mapDispatch = undefined;
	  if (typeof mapDispatchToProps === 'function') {
	    mapDispatch = mapDispatchToProps;
	  } else if (!mapDispatchToProps) {
	    mapDispatch = defaultMapDispatchToProps;
	  } else {
	    mapDispatch = (0, _wrapActionCreators2["default"])(mapDispatchToProps);
	  }

	  var finalMergeProps = mergeProps || defaultMergeProps;
	  var _options$pure = options.pure;
	  var pure = _options$pure === undefined ? true : _options$pure;
	  var _options$withRef = options.withRef;
	  var withRef = _options$withRef === undefined ? false : _options$withRef;

	  var checkMergedEquals = pure && finalMergeProps !== defaultMergeProps;

	  // Helps track hot reloading.
	  var version = nextVersion++;

	  return function wrapWithConnect(WrappedComponent) {
	    var connectDisplayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';

	    function checkStateShape(props, methodName) {
	      if (!(0, _isPlainObject2["default"])(props)) {
	        (0, _warning2["default"])(methodName + '() in ' + connectDisplayName + ' must return a plain object. ' + ('Instead received ' + props + '.'));
	      }
	    }

	    function computeMergedProps(stateProps, dispatchProps, parentProps) {
	      var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);
	      if (false) {
	        checkStateShape(mergedProps, 'mergeProps');
	      }
	      return mergedProps;
	    }

	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);

	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;
	      };

	      function Connect(props, context) {
	        _classCallCheck(this, Connect);

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	        _this.version = version;
	        _this.store = props.store || context.store;

	        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));

	        var storeState = _this.store.getState();
	        _this.state = { storeState: storeState };
	        _this.clearCache();
	        return _this;
	      }

	      Connect.prototype.computeStateProps = function computeStateProps(store, props) {
	        if (!this.finalMapStateToProps) {
	          return this.configureFinalMapState(store, props);
	        }

	        var state = store.getState();
	        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);

	        if (false) {
	          checkStateShape(stateProps, 'mapStateToProps');
	        }
	        return stateProps;
	      };

	      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {
	        var mappedState = mapState(store.getState(), props);
	        var isFactory = typeof mappedState === 'function';

	        this.finalMapStateToProps = isFactory ? mappedState : mapState;
	        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;

	        if (isFactory) {
	          return this.computeStateProps(store, props);
	        }

	        if (false) {
	          checkStateShape(mappedState, 'mapStateToProps');
	        }
	        return mappedState;
	      };

	      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {
	        if (!this.finalMapDispatchToProps) {
	          return this.configureFinalMapDispatch(store, props);
	        }

	        var dispatch = store.dispatch;

	        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);

	        if (false) {
	          checkStateShape(dispatchProps, 'mapDispatchToProps');
	        }
	        return dispatchProps;
	      };

	      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {
	        var mappedDispatch = mapDispatch(store.dispatch, props);
	        var isFactory = typeof mappedDispatch === 'function';

	        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;
	        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;

	        if (isFactory) {
	          return this.computeDispatchProps(store, props);
	        }

	        if (false) {
	          checkStateShape(mappedDispatch, 'mapDispatchToProps');
	        }
	        return mappedDispatch;
	      };

	      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {
	        var nextStateProps = this.computeStateProps(this.store, this.props);
	        if (this.stateProps && (0, _shallowEqual2["default"])(nextStateProps, this.stateProps)) {
	          return false;
	        }

	        this.stateProps = nextStateProps;
	        return true;
	      };

	      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {
	        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);
	        if (this.dispatchProps && (0, _shallowEqual2["default"])(nextDispatchProps, this.dispatchProps)) {
	          return false;
	        }

	        this.dispatchProps = nextDispatchProps;
	        return true;
	      };

	      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {
	        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);
	        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2["default"])(nextMergedProps, this.mergedProps)) {
	          return false;
	        }

	        this.mergedProps = nextMergedProps;
	        return true;
	      };

	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return typeof this.unsubscribe === 'function';
	      };

	      Connect.prototype.trySubscribe = function trySubscribe() {
	        if (shouldSubscribe && !this.unsubscribe) {
	          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));
	          this.handleChange();
	        }
	      };

	      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
	        if (this.unsubscribe) {
	          this.unsubscribe();
	          this.unsubscribe = null;
	        }
	      };

	      Connect.prototype.componentDidMount = function componentDidMount() {
	        this.trySubscribe();
	      };

	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!pure || !(0, _shallowEqual2["default"])(nextProps, this.props)) {
	          this.haveOwnPropsChanged = true;
	        }
	      };

	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        this.tryUnsubscribe();
	        this.clearCache();
	      };

	      Connect.prototype.clearCache = function clearCache() {
	        this.dispatchProps = null;
	        this.stateProps = null;
	        this.mergedProps = null;
	        this.haveOwnPropsChanged = true;
	        this.hasStoreStateChanged = true;
	        this.haveStatePropsBeenPrecalculated = false;
	        this.statePropsPrecalculationError = null;
	        this.renderedElement = null;
	        this.finalMapDispatchToProps = null;
	        this.finalMapStateToProps = null;
	      };

	      Connect.prototype.handleChange = function handleChange() {
	        if (!this.unsubscribe) {
	          return;
	        }

	        var storeState = this.store.getState();
	        var prevStoreState = this.state.storeState;
	        if (pure && prevStoreState === storeState) {
	          return;
	        }

	        if (pure && !this.doStatePropsDependOnOwnProps) {
	          var haveStatePropsChanged = tryCatch(this.updateStatePropsIfNeeded, this);
	          if (!haveStatePropsChanged) {
	            return;
	          }
	          if (haveStatePropsChanged === errorObject) {
	            this.statePropsPrecalculationError = errorObject.value;
	          }
	          this.haveStatePropsBeenPrecalculated = true;
	        }

	        this.hasStoreStateChanged = true;
	        this.setState({ storeState: storeState });
	      };

	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2["default"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');

	        return this.refs.wrappedInstance;
	      };

	      Connect.prototype.render = function render() {
	        var haveOwnPropsChanged = this.haveOwnPropsChanged;
	        var hasStoreStateChanged = this.hasStoreStateChanged;
	        var haveStatePropsBeenPrecalculated = this.haveStatePropsBeenPrecalculated;
	        var statePropsPrecalculationError = this.statePropsPrecalculationError;
	        var renderedElement = this.renderedElement;

	        this.haveOwnPropsChanged = false;
	        this.hasStoreStateChanged = false;
	        this.haveStatePropsBeenPrecalculated = false;
	        this.statePropsPrecalculationError = null;

	        if (statePropsPrecalculationError) {
	          throw statePropsPrecalculationError;
	        }

	        var shouldUpdateStateProps = true;
	        var shouldUpdateDispatchProps = true;
	        if (pure && renderedElement) {
	          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;
	          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;
	        }

	        var haveStatePropsChanged = false;
	        var haveDispatchPropsChanged = false;
	        if (haveStatePropsBeenPrecalculated) {
	          haveStatePropsChanged = true;
	        } else if (shouldUpdateStateProps) {
	          haveStatePropsChanged = this.updateStatePropsIfNeeded();
	        }
	        if (shouldUpdateDispatchProps) {
	          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();
	        }

	        var haveMergedPropsChanged = true;
	        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {
	          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();
	        } else {
	          haveMergedPropsChanged = false;
	        }

	        if (!haveMergedPropsChanged && renderedElement) {
	          return renderedElement;
	        }

	        if (withRef) {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {
	            ref: 'wrappedInstance'
	          }));
	        } else {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);
	        }

	        return this.renderedElement;
	      };

	      return Connect;
	    }(_react.Component);

	    Connect.displayName = connectDisplayName;
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.contextTypes = {
	      store: _storeShape2["default"]
	    };
	    Connect.propTypes = {
	      store: _storeShape2["default"]
	    };

	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        if (this.version === version) {
	          return;
	        }

	        // We are hot reloading!
	        this.version = version;
	        this.trySubscribe();
	        this.clearCache();
	      };
	    }

	    return (0, _hoistNonReactStatics2["default"])(Connect, WrappedComponent);
	  };
	}

/***/ },
/* 936 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = shallowEqual;
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

/***/ },
/* 937 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = wrapActionCreators;

	var _redux = __webpack_require__(214);

	function wrapActionCreators(actionCreators) {
	  return function (dispatch) {
	    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
	  };
	}

/***/ },
/* 938 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(21);

	var focusNode = __webpack_require__(302);

	var AutoFocusUtils = {
	  focusDOMComponent: function focusDOMComponent() {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 939 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var EventConstants = __webpack_require__(57);
	var EventPropagators = __webpack_require__(106);
	var ExecutionEnvironment = __webpack_require__(26);
	var FallbackCompositionState = __webpack_require__(944);
	var SyntheticCompositionEvent = __webpack_require__(980);
	var SyntheticInputEvent = __webpack_require__(983);

	var keyOf = __webpack_require__(63);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (typeof opera === 'undefined' ? 'undefined' : _typeof(opera)) === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if ((typeof detail === 'undefined' ? 'undefined' : _typeof(detail)) === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 940 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(57);
	var EventPluginHub = __webpack_require__(105);
	var EventPropagators = __webpack_require__(106);
	var ExecutionEnvironment = __webpack_require__(26);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactUpdates = __webpack_require__(45);
	var SyntheticEvent = __webpack_require__(58);

	var getEventTarget = __webpack_require__(208);
	var isEventSupported = __webpack_require__(210);
	var isTextInputElement = __webpack_require__(343);
	var keyOf = __webpack_require__(63);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function get() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function set(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 941 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var DOMLazyTree = __webpack_require__(94);
	var ExecutionEnvironment = __webpack_require__(26);

	var createNodesFromMarkup = __webpack_require__(886);
	var emptyFunction = __webpack_require__(43);
	var invariant = __webpack_require__(5);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function dangerouslyReplaceNodeWithMarkup(oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;

/***/ },
/* 942 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(63);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 943 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(57);
	var EventPropagators = __webpack_require__(106);
	var ReactDOMComponentTree = __webpack_require__(21);
	var SyntheticMouseEvent = __webpack_require__(138);

	var keyOf = __webpack_require__(63);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 944 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var PooledClass = __webpack_require__(65);

	var getTextContentAccessor = __webpack_require__(342);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function destructor() {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function getText() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function getData() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 945 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(95);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 946 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var ReactChildren = __webpack_require__(319);
	var ReactComponent = __webpack_require__(195);
	var ReactPureComponent = __webpack_require__(969);
	var ReactClass = __webpack_require__(320);
	var ReactDOMFactories = __webpack_require__(954);
	var ReactElement = __webpack_require__(44);
	var ReactPropTypes = __webpack_require__(334);
	var ReactVersion = __webpack_require__(204);

	var onlyChild = __webpack_require__(996);
	var warning = __webpack_require__(11);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (false) {
	  var warned = false;
	  __spread = function __spread() {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function createMixin(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;

/***/ },
/* 947 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(80);

	var instantiateReactComponent = __webpack_require__(209);
	var KeyEscapeUtils = __webpack_require__(193);
	var shouldUpdateReactComponent = __webpack_require__(211);
	var traverseAllChildren = __webpack_require__(212);
	var warning = __webpack_require__(11);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(197);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = require('./ReactComponentTreeHook');
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function unmountChildren(renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 948 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(189);
	var ReactDOMIDOperations = __webpack_require__(956);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 949 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var ReactComponentEnvironment = __webpack_require__(196);
	var ReactCurrentOwner = __webpack_require__(66);
	var ReactElement = __webpack_require__(44);
	var ReactErrorUtils = __webpack_require__(198);
	var ReactInstanceMap = __webpack_require__(107);
	var ReactInstrumentation = __webpack_require__(37);
	var ReactNodeTypes = __webpack_require__(333);
	var ReactPropTypeLocations = __webpack_require__(201);
	var ReactReconciler = __webpack_require__(80);

	var checkReactTypeSpec = __webpack_require__(989);
	var emptyObject = __webpack_require__(92);
	var invariant = __webpack_require__(5);
	var shallowEqual = __webpack_require__(132);
	var shouldUpdateReactComponent = __webpack_require__(211);
	var warning = __webpack_require__(11);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}

	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function construct(element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (doConstruct) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },

	  performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var selfDebugID = 0;
	    if (false) {
	      selfDebugID = this._debugID;
	    }
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), selfDebugID);

	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function getHostNode() {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function _maskContext(context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function _processContext(context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function _processChildContext(currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (false) {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (false) {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(_typeof(Component.childContextTypes) === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },

	  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (false) {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        if (false) {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function _processPendingState(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = this._debugID;
	      }
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), selfDebugID);

	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
	    var inst = this._instance;

	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }

	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function _renderValidatedComponent() {
	    var renderedComponent;
	    if (("production") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function attachRef(ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function detachRef(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function getName() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function getPublicInstance() {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;

/***/ },
/* 950 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactDefaultInjection = __webpack_require__(325);
	var ReactMount = __webpack_require__(331);
	var ReactReconciler = __webpack_require__(80);
	var ReactUpdates = __webpack_require__(45);
	var ReactVersion = __webpack_require__(204);

	var findDOMNode = __webpack_require__(991);
	var getHostComponentFromComposite = __webpack_require__(340);
	var renderSubtreeIntoContainer = __webpack_require__(998);
	var warning = __webpack_require__(11);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function getNodeFromInstance(inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (false) {
	  var ReactInstrumentation = require('./ReactInstrumentation');
	  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
	  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	}

	module.exports = ReactDOM;

/***/ },
/* 951 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(136);

	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};

	module.exports = ReactDOMButton;

/***/ },
/* 952 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var AutoFocusUtils = __webpack_require__(938);
	var CSSPropertyOperations = __webpack_require__(316);
	var DOMLazyTree = __webpack_require__(94);
	var DOMNamespaces = __webpack_require__(190);
	var DOMProperty = __webpack_require__(95);
	var DOMPropertyOperations = __webpack_require__(318);
	var EventConstants = __webpack_require__(57);
	var EventPluginHub = __webpack_require__(105);
	var EventPluginRegistry = __webpack_require__(191);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactDOMButton = __webpack_require__(951);
	var ReactDOMComponentFlags = __webpack_require__(321);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactDOMInput = __webpack_require__(957);
	var ReactDOMOption = __webpack_require__(958);
	var ReactDOMSelect = __webpack_require__(323);
	var ReactDOMTextarea = __webpack_require__(962);
	var ReactInstrumentation = __webpack_require__(37);
	var ReactMultiChild = __webpack_require__(967);
	var ReactServerRenderingTransaction = __webpack_require__(335);

	var emptyFunction = __webpack_require__(43);
	var escapeTextContentForBrowser = __webpack_require__(139);
	var invariant = __webpack_require__(5);
	var isEventSupported = __webpack_require__(210);
	var keyOf = __webpack_require__(63);
	var shallowEqual = __webpack_require__(132);
	var validateDOMNesting = __webpack_require__(213);
	var warning = __webpack_require__(11);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(_typeof(props.dangerouslySetInnerHTML) === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || _typeof(props.style) === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setContentChildForInstrumentation = emptyFunction;
	if (false) {
	  setContentChildForInstrumentation = function setContentChildForInstrumentation(content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function _createOpenTagMarkupAndPutListeners(transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function _createContentMarkup(transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function _createInitialChildren(transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function receiveComponent(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function _updateDOMProperties(lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function _updateDOMChildren(lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[_typeof(lastProps.children)] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[_typeof(nextProps.children)] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setContentChildForInstrumentation.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function getHostNode() {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (false) {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },

	  getPublicInstance: function getPublicInstance() {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;

/***/ },
/* 953 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var DOMLazyTree = __webpack_require__(94);
	var ReactDOMComponentTree = __webpack_require__(21);

	var ReactDOMEmptyComponent = function ReactDOMEmptyComponent(instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function receiveComponent() {},
	  getHostNode: function getHostNode() {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function unmountComponent() {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 954 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(44);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;

/***/ },
/* 955 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 956 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(189);
	var ReactDOMComponentTree = __webpack_require__(21);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function dangerouslyProcessChildrenUpdates(parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 957 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var DisabledInputUtils = __webpack_require__(136);
	var DOMPropertyOperations = __webpack_require__(318);
	var LinkedValueUtils = __webpack_require__(194);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactUpdates = __webpack_require__(45);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function getHostProps(inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (false) {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;

	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;

/***/ },
/* 958 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var ReactChildren = __webpack_require__(319);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactDOMSelect = __webpack_require__(323);

	var warning = __webpack_require__(11);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function mountWrapper(inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function getHostProps(inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;

/***/ },
/* 959 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(26);

	var getNodeForCharacterOffset = __webpack_require__(994);
	var getTextContentAccessor = __webpack_require__(342);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 960 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(325);
	var ReactServerRendering = __webpack_require__(973);
	var ReactVersion = __webpack_require__(204);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ },
/* 961 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var DOMChildrenOperations = __webpack_require__(189);
	var DOMLazyTree = __webpack_require__(94);
	var ReactDOMComponentTree = __webpack_require__(21);

	var escapeTextContentForBrowser = __webpack_require__(139);
	var invariant = __webpack_require__(5);
	var validateDOMNesting = __webpack_require__(213);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function ReactDOMTextComponent(text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function receiveComponent(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function getHostNode() {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function unmountComponent() {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;

/***/ },
/* 962 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(15);

	var DisabledInputUtils = __webpack_require__(136);
	var LinkedValueUtils = __webpack_require__(194);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactUpdates = __webpack_require__(45);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function getHostProps(inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;

/***/ },
/* 963 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 964 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(105);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 965 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var EventListener = __webpack_require__(301);
	var ExecutionEnvironment = __webpack_require__(26);
	var PooledClass = __webpack_require__(65);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactUpdates = __webpack_require__(45);

	var getEventTarget = __webpack_require__(208);
	var getUnboundedScrollPosition = __webpack_require__(888);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function destructor() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function setEnabled(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function isEnabled() {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function monitorScrollValue(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 966 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(95);
	var EventPluginHub = __webpack_require__(105);
	var EventPluginUtils = __webpack_require__(192);
	var ReactComponentEnvironment = __webpack_require__(196);
	var ReactClass = __webpack_require__(320);
	var ReactEmptyComponent = __webpack_require__(326);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactHostComponent = __webpack_require__(328);
	var ReactUpdates = __webpack_require__(45);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 967 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactComponentEnvironment = __webpack_require__(196);
	var ReactInstanceMap = __webpack_require__(107);
	var ReactInstrumentation = __webpack_require__(37);
	var ReactMultiChildUpdateTypes = __webpack_require__(332);

	var ReactCurrentOwner = __webpack_require__(66);
	var ReactReconciler = __webpack_require__(80);
	var ReactChildReconciler = __webpack_require__(947);

	var emptyFunction = __webpack_require__(43);
	var flattenChildren = __webpack_require__(992);
	var invariant = __webpack_require__(5);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function getDebugID(inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
	      if (false) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function mountChildren(nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (false) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function updateTextContent(nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function updateMarkup(nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function unmountChildren(safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function createChild(child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function removeChild(child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function _unmountChild(child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;

/***/ },
/* 968 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(5);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function isValidOwner(object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

/***/ },
/* 969 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var ReactComponent = __webpack_require__(195);
	var ReactNoopUpdateQueue = __webpack_require__(199);

	var emptyObject = __webpack_require__(92);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ },
/* 970 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(15);

	var CallbackQueue = __webpack_require__(317);
	var PooledClass = __webpack_require__(65);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactInputSelection = __webpack_require__(329);
	var ReactInstrumentation = __webpack_require__(37);
	var Transaction = __webpack_require__(109);
	var ReactUpdateQueue = __webpack_require__(203);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function initialize() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function close(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function initialize() {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function close() {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function getUpdateQueue() {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function checkpoint() {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function rollback(checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 971 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(968);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 972 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function batchedUpdates(callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 973 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactDOMContainerInfo = __webpack_require__(322);
	var ReactDefaultBatchingStrategy = __webpack_require__(324);
	var ReactElement = __webpack_require__(44);
	var ReactInstrumentation = __webpack_require__(37);
	var ReactMarkupChecksum = __webpack_require__(330);
	var ReactReconciler = __webpack_require__(80);
	var ReactServerBatchingStrategy = __webpack_require__(972);
	var ReactServerRenderingTransaction = __webpack_require__(335);
	var ReactUpdates = __webpack_require__(45);

	var emptyObject = __webpack_require__(92);
	var instantiateReactComponent = __webpack_require__(209);
	var invariant = __webpack_require__(5);

	var pendingTransactions = 0;

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToStringImpl(element, makeStaticMarkup) {
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);

	    pendingTransactions++;

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, true);
	      var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactDOMContainerInfo(), emptyObject, 0 /* parentDebugID */
	      );
	      if (false) {
	        ReactInstrumentation.debugTool.onUnmountComponent(componentInstance._debugID);
	      }
	      if (!makeStaticMarkup) {
	        markup = ReactMarkupChecksum.addChecksumToMarkup(markup);
	      }
	      return markup;
	    }, null);
	  } finally {
	    pendingTransactions--;
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    if (!pendingTransactions) {
	      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	    }
	  }
	}

	/**
	 * Render a ReactElement to its initial HTML. This should only be used on the
	 * server.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostring
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : _prodInvariant('46') : void 0;
	  return renderToStringImpl(element, false);
	}

	/**
	 * Similar to renderToString, except this doesn't create extra DOM attributes
	 * such as data-react-id that React uses internally.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostaticmarkup
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : _prodInvariant('47') : void 0;
	  return renderToStringImpl(element, true);
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};

/***/ },
/* 974 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var ReactUpdateQueue = __webpack_require__(203);
	var Transaction = __webpack_require__(109);
	var warning = __webpack_require__(11);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */

	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */

	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;

/***/ },
/* 975 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 976 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(57);
	var EventPropagators = __webpack_require__(106);
	var ExecutionEnvironment = __webpack_require__(26);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactInputSelection = __webpack_require__(329);
	var SyntheticEvent = __webpack_require__(58);

	var getActiveElement = __webpack_require__(303);
	var isTextInputElement = __webpack_require__(343);
	var keyOf = __webpack_require__(63);
	var shallowEqual = __webpack_require__(132);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 977 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var EventConstants = __webpack_require__(57);
	var EventListener = __webpack_require__(301);
	var EventPropagators = __webpack_require__(106);
	var ReactDOMComponentTree = __webpack_require__(21);
	var SyntheticAnimationEvent = __webpack_require__(978);
	var SyntheticClipboardEvent = __webpack_require__(979);
	var SyntheticEvent = __webpack_require__(58);
	var SyntheticFocusEvent = __webpack_require__(982);
	var SyntheticKeyboardEvent = __webpack_require__(984);
	var SyntheticMouseEvent = __webpack_require__(138);
	var SyntheticDragEvent = __webpack_require__(981);
	var SyntheticTouchEvent = __webpack_require__(985);
	var SyntheticTransitionEvent = __webpack_require__(986);
	var SyntheticUIEvent = __webpack_require__(108);
	var SyntheticWheelEvent = __webpack_require__(987);

	var emptyFunction = __webpack_require__(43);
	var getEventCharCode = __webpack_require__(206);
	var invariant = __webpack_require__(5);
	var keyOf = __webpack_require__(63);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function willDeleteListener(inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;

/***/ },
/* 978 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(58);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 979 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(58);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function clipboardData(event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 980 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(58);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 981 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(138);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 982 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(108);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 983 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(58);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 984 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(108);

	var getEventCharCode = __webpack_require__(206);
	var getEventKey = __webpack_require__(993);
	var getEventModifierState = __webpack_require__(207);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function charCode(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function keyCode(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function which(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 985 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(108);

	var getEventModifierState = __webpack_require__(207);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 986 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(58);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 987 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(138);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function deltaX(event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function deltaY(event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 988 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 989 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(7);

	var ReactPropTypeLocationNames = __webpack_require__(200);
	var ReactPropTypesSecret = __webpack_require__(202);

	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(197);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error)) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (false) {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = require('./ReactComponentTreeHook');
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	         false ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 990 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(315);
	var warning = __webpack_require__(11);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 991 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(66);
	var ReactDOMComponentTree = __webpack_require__(21);
	var ReactInstanceMap = __webpack_require__(107);

	var getHostComponentFromComposite = __webpack_require__(340);
	var invariant = __webpack_require__(5);
	var warning = __webpack_require__(11);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;

/***/ },
/* 992 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var KeyEscapeUtils = __webpack_require__(193);
	var traverseAllChildren = __webpack_require__(212);
	var warning = __webpack_require__(11);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(197);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && (typeof traverseContext === 'undefined' ? 'undefined' : _typeof(traverseContext)) === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = require('./ReactComponentTreeHook');
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 993 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(206);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 994 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 995 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(26);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 996 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactElement = __webpack_require__(44);

	var invariant = __webpack_require__(5);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;

/***/ },
/* 997 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(139);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 998 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(331);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 999 */
/***/ function(module, exports) {

	"use strict";

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	function _typeof(obj) {
	  return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	}

	var repeat = function repeat(str, times) {
	  return new Array(times + 1).join(str);
	};
	var pad = function pad(num, maxLength) {
	  return repeat("0", maxLength - num.toString().length) + num;
	};
	var formatTime = function formatTime(time) {
	  return "@ " + pad(time.getHours(), 2) + ":" + pad(time.getMinutes(), 2) + ":" + pad(time.getSeconds(), 2) + "." + pad(time.getMilliseconds(), 3);
	};

	// Use the new performance api to get better precision if available
	var timer = typeof performance !== "undefined" && typeof performance.now === "function" ? performance : Date;

	/**
	 * parse the level option of createLogger
	 *
	 * @property {string | function | object} level - console[level]
	 * @property {object} action
	 * @property {array} payload
	 * @property {string} type
	 */

	function getLogLevel(level, action, payload, type) {
	  switch (typeof level === "undefined" ? "undefined" : _typeof(level)) {
	    case "object":
	      return typeof level[type] === "function" ? level[type].apply(level, _toConsumableArray(payload)) : level[type];
	    case "function":
	      return level(action);
	    default:
	      return level;
	  }
	}

	/**
	 * Creates logger with followed options
	 *
	 * @namespace
	 * @property {object} options - options for logger
	 * @property {string | function | object} options.level - console[level]
	 * @property {boolean} options.duration - print duration of each action?
	 * @property {boolean} options.timestamp - print timestamp with each action?
	 * @property {object} options.colors - custom colors
	 * @property {object} options.logger - implementation of the `console` API
	 * @property {boolean} options.logErrors - should errors in action execution be caught, logged, and re-thrown?
	 * @property {boolean} options.collapsed - is group collapsed?
	 * @property {boolean} options.predicate - condition which resolves logger behavior
	 * @property {function} options.stateTransformer - transform state before print
	 * @property {function} options.actionTransformer - transform action before print
	 * @property {function} options.errorTransformer - transform error before print
	 */

	function createLogger() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var _options$level = options.level;
	  var level = _options$level === undefined ? "log" : _options$level;
	  var _options$logger = options.logger;
	  var logger = _options$logger === undefined ? console : _options$logger;
	  var _options$logErrors = options.logErrors;
	  var logErrors = _options$logErrors === undefined ? true : _options$logErrors;
	  var collapsed = options.collapsed;
	  var predicate = options.predicate;
	  var _options$duration = options.duration;
	  var duration = _options$duration === undefined ? false : _options$duration;
	  var _options$timestamp = options.timestamp;
	  var timestamp = _options$timestamp === undefined ? true : _options$timestamp;
	  var transformer = options.transformer;
	  var _options$stateTransfo = options.stateTransformer;
	  var // deprecated
	  stateTransformer = _options$stateTransfo === undefined ? function (state) {
	    return state;
	  } : _options$stateTransfo;
	  var _options$actionTransf = options.actionTransformer;
	  var actionTransformer = _options$actionTransf === undefined ? function (actn) {
	    return actn;
	  } : _options$actionTransf;
	  var _options$errorTransfo = options.errorTransformer;
	  var errorTransformer = _options$errorTransfo === undefined ? function (error) {
	    return error;
	  } : _options$errorTransfo;
	  var _options$colors = options.colors;
	  var colors = _options$colors === undefined ? {
	    title: function title() {
	      return "#000000";
	    },
	    prevState: function prevState() {
	      return "#9E9E9E";
	    },
	    action: function action() {
	      return "#03A9F4";
	    },
	    nextState: function nextState() {
	      return "#4CAF50";
	    },
	    error: function error() {
	      return "#F20404";
	    }
	  } : _options$colors;

	  // exit if console undefined

	  if (typeof logger === "undefined") {
	    return function () {
	      return function (next) {
	        return function (action) {
	          return next(action);
	        };
	      };
	    };
	  }

	  if (transformer) {
	    console.error("Option 'transformer' is deprecated, use stateTransformer instead");
	  }

	  var logBuffer = [];
	  function printBuffer() {
	    logBuffer.forEach(function (logEntry, key) {
	      var started = logEntry.started;
	      var startedTime = logEntry.startedTime;
	      var action = logEntry.action;
	      var prevState = logEntry.prevState;
	      var error = logEntry.error;
	      var took = logEntry.took;
	      var nextState = logEntry.nextState;

	      var nextEntry = logBuffer[key + 1];
	      if (nextEntry) {
	        nextState = nextEntry.prevState;
	        took = nextEntry.started - started;
	      }
	      // message
	      var formattedAction = actionTransformer(action);
	      var isCollapsed = typeof collapsed === "function" ? collapsed(function () {
	        return nextState;
	      }, action) : collapsed;

	      var formattedTime = formatTime(startedTime);
	      var titleCSS = colors.title ? "color: " + colors.title(formattedAction) + ";" : null;
	      var title = "action " + (timestamp ? formattedTime : "") + " " + formattedAction.type + " " + (duration ? "(in " + took.toFixed(2) + " ms)" : "");

	      // render
	      try {
	        if (isCollapsed) {
	          if (colors.title) logger.groupCollapsed("%c " + title, titleCSS);else logger.groupCollapsed(title);
	        } else {
	          if (colors.title) logger.group("%c " + title, titleCSS);else logger.group(title);
	        }
	      } catch (e) {
	        logger.log(title);
	      }

	      var prevStateLevel = getLogLevel(level, formattedAction, [prevState], "prevState");
	      var actionLevel = getLogLevel(level, formattedAction, [formattedAction], "action");
	      var errorLevel = getLogLevel(level, formattedAction, [error, prevState], "error");
	      var nextStateLevel = getLogLevel(level, formattedAction, [nextState], "nextState");

	      if (prevStateLevel) {
	        if (colors.prevState) logger[prevStateLevel]("%c prev state", "color: " + colors.prevState(prevState) + "; font-weight: bold", prevState);else logger[prevStateLevel]("prev state", prevState);
	      }

	      if (actionLevel) {
	        if (colors.action) logger[actionLevel]("%c action", "color: " + colors.action(formattedAction) + "; font-weight: bold", formattedAction);else logger[actionLevel]("action", formattedAction);
	      }

	      if (error && errorLevel) {
	        if (colors.error) logger[errorLevel]("%c error", "color: " + colors.error(error, prevState) + "; font-weight: bold", error);else logger[errorLevel]("error", error);
	      }

	      if (nextStateLevel) {
	        if (colors.nextState) logger[nextStateLevel]("%c next state", "color: " + colors.nextState(nextState) + "; font-weight: bold", nextState);else logger[nextStateLevel]("next state", nextState);
	      }

	      try {
	        logger.groupEnd();
	      } catch (e) {
	        logger.log("—— log end ——");
	      }
	    });
	    logBuffer.length = 0;
	  }

	  return function (_ref) {
	    var getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        // exit early if predicate function returns false
	        if (typeof predicate === "function" && !predicate(getState, action)) {
	          return next(action);
	        }

	        var logEntry = {};
	        logBuffer.push(logEntry);

	        logEntry.started = timer.now();
	        logEntry.startedTime = new Date();
	        logEntry.prevState = stateTransformer(getState());
	        logEntry.action = action;

	        var returnedValue = undefined;
	        if (logErrors) {
	          try {
	            returnedValue = next(action);
	          } catch (e) {
	            logEntry.error = errorTransformer(e);
	          }
	        } else {
	          returnedValue = next(action);
	        }

	        logEntry.took = timer.now() - logEntry.started;
	        logEntry.nextState = stateTransformer(getState());

	        printBuffer();

	        if (logEntry.error) throw logEntry.error;
	        return returnedValue;
	      };
	    };
	  };
	}

	module.exports = createLogger;

/***/ },
/* 1000 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	function createThunkMiddleware(extraArgument) {
	  return function (_ref) {
	    var dispatch = _ref.dispatch;
	    var getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        if (typeof action === 'function') {
	          return action(dispatch, getState, extraArgument);
	        }

	        return next(action);
	      };
	    };
	  };
	}

	var thunk = createThunkMiddleware();
	thunk.withExtraArgument = createThunkMiddleware;

	exports['default'] = thunk;

/***/ },
/* 1001 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	exports['default'] = applyMiddleware;

	var _compose = __webpack_require__(345);

	var _compose2 = _interopRequireDefault(_compose);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}

	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];

	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ },
/* 1002 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}

	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }

	  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }

	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ },
/* 1003 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = combineReducers;

	var _createStore = __webpack_require__(346);

	var _isPlainObject = __webpack_require__(183);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _warning = __webpack_require__(347);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}

	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}

	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }

	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }

	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });

	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });

	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}

	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }

	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}

	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];

	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }

	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);

	  if (false) {
	    var unexpectedKeyCache = {};
	  }

	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }

	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];

	    if (sanityError) {
	      throw sanityError;
	    }

	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }

	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ },
/* 1004 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module, process) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */

	!function (global) {
	  "use strict";

	  var hasOwn = Object.prototype.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

	  var inModule = ( false ? "undefined" : _typeof(module)) === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }

	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided, then outerFn.prototype instanceof Generator.
	    var generator = Object.create((outerFn || Generator).prototype);
	    var context = new Context(tryLocsList || []);

	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);

	    return generator;
	  }
	  runtime.wrap = wrap;

	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }

	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";

	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};

	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}

	  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function (method) {
	      prototype[method] = function (arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }

	  runtime.isGeneratorFunction = function (genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor ? ctor === GeneratorFunction ||
	    // For the native GeneratorFunction constructor, the best we can
	    // do is to check its .name property.
	    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
	  };

	  runtime.mark = function (genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };

	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `value instanceof AwaitArgument` to determine if the yielded value is
	  // meant to be awaited. Some may consider the name of this method too
	  // cutesy, but they are curmudgeons.
	  runtime.awrap = function (arg) {
	    return new AwaitArgument(arg);
	  };

	  function AwaitArgument(arg) {
	    this.arg = arg;
	  }

	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value instanceof AwaitArgument) {
	          return Promise.resolve(value.arg).then(function (value) {
	            invoke("next", value, resolve, reject);
	          }, function (err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }

	        return Promise.resolve(value).then(function (unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }

	    if ((typeof process === "undefined" ? "undefined" : _typeof(process)) === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }

	    var previousPromise;

	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function (resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }

	      return previousPromise =
	      // If enqueue has been called before, then we want to wait until
	      // all previous Promises have been resolved before calling invoke,
	      // so that results are always delivered in the correct order. If
	      // enqueue has not been called before, then it is important to
	      // call invoke immediately, without waiting on a callback to fire,
	      // so that the async generator function has the opportunity to do
	      // any necessary setup in a predictable way. This predictability
	      // is why the Promise constructor synchronously invokes its
	      // executor callback, and why async functions synchronously
	      // execute code before the first await. Since we implement simple
	      // async functions in terms of async generators, it is especially
	      // important to get this right, even though it requires care.
	      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,
	      // Avoid propagating failures to Promises returned by later
	      // invocations of the iterator.
	      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
	    }

	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }

	  defineIteratorMethods(AsyncIterator.prototype);

	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

	    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
	    : iter.next().then(function (result) {
	      return result.done ? result.value : iter.next();
	    });
	  };

	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;

	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }

	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }

	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }

	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          if (method === "return" || method === "throw" && delegate.iterator[method] === undefined) {
	            // A return or throw (when the delegate iterator has no throw
	            // method) always terminates the yield* loop.
	            context.delegate = null;

	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            var returnMethod = delegate.iterator["return"];
	            if (returnMethod) {
	              var record = tryCatch(returnMethod, delegate.iterator, arg);
	              if (record.type === "throw") {
	                // If the return method threw an exception, let that
	                // exception prevail over the original return or throw.
	                method = "throw";
	                arg = record.arg;
	                continue;
	              }
	            }

	            if (method === "return") {
	              // Continue with the outer return, now that the delegate
	              // iterator has been terminated.
	              continue;
	            }
	          }

	          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);

	          if (record.type === "throw") {
	            context.delegate = null;

	            // Like returning generator.throw(uncaught), but without the
	            // overhead of an extra function call.
	            method = "throw";
	            arg = record.arg;
	            continue;
	          }

	          // Delegate generator ran and handled its own exceptions so
	          // regardless of what the method was, we continue as if it is
	          // "next" with an undefined arg.
	          method = "next";
	          arg = undefined;

	          var info = record.arg;
	          if (info.done) {
	            context[delegate.resultName] = info.value;
	            context.next = delegate.nextLoc;
	          } else {
	            state = GenStateSuspendedYield;
	            return info;
	          }

	          context.delegate = null;
	        }

	        if (method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = arg;
	        } else if (method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw arg;
	          }

	          if (context.dispatchException(arg)) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            method = "next";
	            arg = undefined;
	          }
	        } else if (method === "return") {
	          context.abrupt("return", arg);
	        }

	        state = GenStateExecuting;

	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

	          var info = {
	            value: record.arg,
	            done: context.done
	          };

	          if (record.arg === ContinueSentinel) {
	            if (context.delegate && method === "next") {
	              // Deliberately forget the last sent value so that we don't
	              // accidentally pass it on to the delegate.
	              arg = undefined;
	            }
	          } else {
	            return info;
	          }
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(arg) call above.
	          method = "throw";
	          arg = record.arg;
	        }
	      }
	    };
	  }

	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);

	  Gp[iteratorSymbol] = function () {
	    return this;
	  };

	  Gp[toStringTagSymbol] = "Generator";

	  Gp.toString = function () {
	    return "[object Generator]";
	  };

	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };

	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }

	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }

	    this.tryEntries.push(entry);
	  }

	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }

	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }

	  runtime.keys = function (object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();

	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }

	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };

	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }

	      if (typeof iterable.next === "function") {
	        return iterable;
	      }

	      if (!isNaN(iterable.length)) {
	        var i = -1,
	            next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }

	          next.value = undefined;
	          next.done = true;

	          return next;
	        };

	        return next.next = next;
	      }
	    }

	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;

	  function doneResult() {
	    return { value: undefined, done: true };
	  }

	  Context.prototype = {
	    constructor: Context,

	    reset: function reset(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;

	      this.tryEntries.forEach(resetTryEntry);

	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },

	    stop: function stop() {
	      this.done = true;

	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }

	      return this.rval;
	    },

	    dispatchException: function dispatchException(exception) {
	      if (this.done) {
	        throw exception;
	      }

	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	        return !!caught;
	      }

	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;

	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }

	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");

	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },

	    abrupt: function abrupt(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }

	      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }

	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;

	      if (finallyEntry) {
	        this.next = finallyEntry.finallyLoc;
	      } else {
	        this.complete(record);
	      }

	      return ContinueSentinel;
	    },

	    complete: function complete(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }

	      if (record.type === "break" || record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = record.arg;
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	    },

	    finish: function finish(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },

	    "catch": function _catch(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }

	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },

	    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };

	      return ContinueSentinel;
	    }
	  };
	}(
	// Among the various tricks for obtaining a reference to the global
	// object, this seems to be the most reliable technique that does not
	// use indirect eval (which violates Content Security Policy).
	(typeof global === "undefined" ? "undefined" : _typeof(global)) === "object" ? global : (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" ? window : (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" ? self : undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(111)(module), __webpack_require__(64)))

/***/ },
/* 1005 */
/***/ function(module, exports) {

	/**
	 * Depth space coordinates
	 * @see https://msdn.microsoft.com/en-us/library/dn785530.aspx
	 */
	'use strict';

	exports.BOUND_WIDTH = 512;
	exports.BOUND_HEIGHT = 424;

/***/ },
/* 1006 */
/***/ function(module, exports) {

	/**
	 * Kinnect hand status
	 */
	'use strict';

	exports.UNKNOWN = 0;
	exports.NOT_TRACKED = 1;
	exports.OPEN = 2;
	exports.CLOSED = 3;
	exports.LASSO = 4;

/***/ },
/* 1007 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Constans of kinect
	 * @module sg-kinect-constants
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get depthSpace() {
	    return d(__webpack_require__(1005));
	  },
	  get handState() {
	    return d(__webpack_require__(1006));
	  },
	  get jointTypes() {
	    return d(__webpack_require__(1008));
	  }
	};

/***/ },
/* 1008 */
/***/ function(module, exports) {

	/**
	 * Joint types of kinnect2
	 * @see https://msdn.microsoft.com/en-us/library/microsoft.kinect.jointtype.aspx
	 */
	'use strict';

	exports.SPINE_BASE = 0;
	exports.SPINE_MID = 1;
	exports.NECK = 2;
	exports.HEAD = 3;
	exports.SHOULDER_LEFT = 4;
	exports.ELBOW_LEFT = 5;
	exports.WRIST_LEFT = 6;
	exports.HAND_LEFT = 7;
	exports.SHOULDER_RIGHT = 8;
	exports.ELBOW_RIGHT = 9;
	exports.WRIST_RIGHT = 10;
	exports.HAND_RIGHT = 11;
	exports.HIP_LEFT = 12;
	exports.KNEE_LEFT = 13;
	exports.ANKLE_LEFT = 14;
	exports.FOOT_LEFT = 15;
	exports.HIP_RIGHT = 16;
	exports.KNEE_RIGHT = 17;
	exports.ANKLE_RIGHT = 18;
	exports.FOOT_RIGHT = 19;
	exports.SPINE_SHOULDER = 20;
	exports.HAND_TIP_LEFT = 21;
	exports.THUMB_LEFT = 22;
	exports.HAND_TIP_RIGHT = 23;
	exports.THUMB_RIGHT = 24;

/***/ },
/* 1009 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create a SGQueue instance
	 * @function create
	 * @returns {SGQueue}
	 */
	'use strict';

	var SGQueue = __webpack_require__(348);

	/** @lends create */
	function create() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  return new (Function.prototype.bind.apply(SGQueue, [null].concat(args)))();
	}

	module.exports = create;

/***/ },
/* 1010 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tasks queue
	 * @module sg-queue
	 * @version 1.0.2
	 */

	'use strict';

	var create = __webpack_require__(1009);
	var SGQueue = __webpack_require__(348);

	var lib = create.bind(undefined);

	Object.assign(lib, {
	  create: create,
	  SGQueue: SGQueue
	});

	module.exports = lib;

/***/ },
/* 1011 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Helper function for colors
	 */
	'use strict';

	var apemancolor = __webpack_require__(260);

	module.exports = Object.assign(exports, {
	  /**
	   * Create a random color from base color.
	   * @param {string} base - Base color string
	   * @param {Object} options - Optional settings
	   * @returns {string} - Generated color
	   */
	  randomColor: function randomColor(base) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var amount = parseInt(Math.random() * 360.0);
	    return apemancolor.rotate(base, amount);
	  },

	  /**
	   * Define a colorizer to generate unique colors
	   * @param {string} base - Base color string
	   * @returns {function} - Generated function
	   */
	  uniqueColorizer: function uniqueColorizer(base) {
	    var colors = {};

	    /**
	     * Colorizer function
	     * @param {string} id - Unique identifier
	     * @returns {string} color - Color for the id
	     */
	    function colorizer(id) {
	      var color = colors[id];
	      if (color) {
	        return color;
	      }
	      color = exports.randomColor(base);
	      colors[id] = color;
	      return color;
	    }

	    Object.assign(colorizer, { base: base, colors: colors });
	    return colorizer;
	  }
	});

/***/ },
/* 1012 */
/***/ function(module, exports) {

	/**
	 * Helper functions for drawing
	 */
	'use strict';

	module.exports = Object.assign(exports, {
	  /**
	   * Draw a circle
	   * @param ctx
	   * @param {Point} point
	   * @param radius
	   */
	  drawCircle: function drawCircle(ctx, point, radius) {
	    ctx.beginPath();
	    ctx.arc(point.x, point.y, radius, 0, 2 * Math.PI);
	    ctx.fill();
	    ctx.closePath();
	  },

	  /**
	   * Draw a line
	   * @param ctx
	   * @param {...Point} points
	   */
	  drawLine: function drawLine(ctx) {
	    ctx.beginPath();

	    for (var _len = arguments.length, points = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      points[_key - 1] = arguments[_key];
	    }

	    for (var i = 0; i < points.length - 1; i++) {
	      var from = points[i];
	      var to = points[i + 1];
	      if (i === 0) {
	        ctx.moveTo(from.x, from.y);
	      }
	      ctx.lineTo(to.x, to.y);
	    }
	    ctx.stroke();
	    ctx.closePath();
	  }
	});

	module.exports = exports;

	/**
	 * @typedef {Object} Point
	 * @property {number} x
	 * @property {number} y
	 */

/***/ },
/* 1013 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactButton = __webpack_require__(17);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgAlbum */
	var SgAlbum = _react2.default.createClass({
	  displayName: 'SgAlbum',

	  propTypes: {
	    /**
	     * Width(px) of a image.
	     */
	    width: _react.PropTypes.number,
	    /**
	     * List of image src.
	     */
	    imageList: _react.PropTypes.array,
	    /**
	     * Number of images per 1 row in the thumbnail.
	     */
	    thumbnailCol: _react.PropTypes.number,
	    /**
	     * Border color of selected image in the thumbnail.
	     */
	    thumbnailSelectedColor: _react.PropTypes.string,
	    /**
	     * Called when update. Argument is index of imageList.
	     */
	    onChange: _react.PropTypes.func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      imageList: [],
	      width: 300,
	      thumbnailCol: 4,
	      thumbnailSelectedColor: 'yellow'
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      nth: 1
	    };
	  },
	  render: function render() {
	    var _this = this;

	    var s = this;
	    var props = s.props;
	    var state = s.state;
	    var imageList = props.imageList;

	    var style = s.getStyle();

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-album', props.className),
	      style: Object.assign({}, props.style) }, _react2.default.createElement('style', { className: 'sg-album-style', type: 'text/css' }, style), _react2.default.createElement('div', { className: 'sg-album-container' }, _react2.default.createElement('div', { className: 'sg-album-header' }, _react2.default.createElement(_apemanReactButton.ApPrevButton, { onTap: s.toLeft }), _react2.default.createElement(_apemanReactButton.ApNextButton, { onTap: s.toRight }), _react2.default.createElement('span', { className: 'sg-album-nth' }, ' ', state.nth, ' / ', imageList.length, ' ')), _react2.default.createElement('div', { className: 'sg-album-display' }, _react2.default.createElement('div', { className: 'sg-album-full-img' }, imageList.map(function (image, i) {
	      return _react2.default.createElement('img', { className: 'sg-album-img', src: image, key: i });
	    }))), _react2.default.createElement('div', { className: 'sg-album-thumbnail' }, _react2.default.createElement('div', { className: 'sg-album-thumbnail-selected' }), imageList.map(function (image, i) {
	      // 配列の前方から画像を挿入しても、各画像に対するkeyを不変にする。画像データをkeyにすると同じ画像を挿入するとエラーになる
	      var key = imageList.length - i;
	      return _react2.default.createElement('div', { className: 'sg-album-thumbnail-img-effect', key: key, data: i, onClick: _this.moveTo }, _react2.default.createElement('img', { className: 'sg-album-thumbnail-img', src: image, key: key }));
	    }))));
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    // 新しい画像がシフトされたら閲覧位置を戻す
	    if (this.props.imageList.length < nextProps.imageList.length) {
	      this.setState(this.getInitialState());
	    }
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    // 親コンポーネントからこのコンポーネントの状態を取得するのに使える
	    var onChange = this.props.onChange;
	    if (onChange) {
	      onChange(nextState.nth - 1);
	    }
	  },
	  getStyle: function getStyle() {
	    var s = this;
	    var props = s.props;
	    var state = s.state;
	    var imageList = props.imageList;
	    var width = props.width;
	    var thumbnailCol = props.thumbnailCol;
	    var thumbnailSelectedColor = props.thumbnailSelectedColor;

	    var displayRight = (state.nth - 1) * width;
	    var thumbnailWidth = width / thumbnailCol;
	    var thumbnailHeight = thumbnailWidth * 3 / 4;
	    var thumbnailLeft = thumbnailWidth * ((state.nth - 1) % thumbnailCol);
	    var thumbnailTop = thumbnailHeight * Math.floor((state.nth - 1) / thumbnailCol);
	    return '\n.sg-album-container {\n  width: ' + width + 'px;\n  margin: 5px;\n}\n.sg-album-display {\n  width: ' + width + 'px;\n  overflow: hidden;\n  border-bottom: 2px solid #666;\n}\n.sg-album-full-img {\n  width: ' + width * imageList.length + 'px;\n  position: relative;\n  white-space: nowrap;\n  right: ' + displayRight + 'px;\n  transition: all 0.3s ease;\n}\n.sg-album-img {\n  width: ' + width + 'px;\n}\n.sg-album-header {\n  position: relative;\n  text-align: center;\n}\n.sg-album-nth {\n  position: absolute;\n  right: 0;\n  top: 10px;\n}\n.sg-album-thumbnail {\n  width: ' + width + 'px;\n  position: relative;\n}\n.sg-album-thumbnail-img-effect {\n  z-index: 1;\n  display: inline-block;\n  position: relative;\n  width: ' + thumbnailWidth + 'px;\n}\n.sg-album-thumbnail-img-effect:hover:before {\n  content: "";\n  cursor: pointer;\n  position: absolute;\n  z-index: 3;\n  display: block;\n  width: ' + thumbnailWidth + 'px;\n  height: ' + thumbnailHeight + 'px;\n  top: 0;\n  left: 0;\n  background: rgba(255, 255, 255, 0.2);\n}\n.sg-album-thumbnail-img-effect:active:before {\n  content: "";\n  cursor: pointer;\n  position: absolute;\n  z-index: 3;\n  display: block;\n  width: ' + thumbnailWidth + 'px;\n  height: ' + thumbnailHeight + 'px;\n  top: 0;\n  left: 0;\n  background: rgba(255, 255, 255, 0.3);\n}\n.sg-album-thumbnail-img {\n  width: ' + thumbnailWidth + 'px;\n}\n.sg-album-thumbnail-selected {\n  position: absolute;\n  cursor: pointer;\n  z-index: 2;\n  width: ' + thumbnailWidth + 'px;\n  height: ' + thumbnailHeight + 'px;\n  transition: all 0.3s ease;\n  box-sizing: border-box;\n  border: 2px solid ' + thumbnailSelectedColor + ';\n  left: ' + thumbnailLeft + 'px;\n  top: ' + thumbnailTop + 'px;\n}\n';
	  },
	  toRight: function toRight() {
	    var props = this.props;
	    var state = this.state;

	    var nth = state.nth % props.imageList.length + 1;
	    this.setState({ nth: nth });
	  },
	  toLeft: function toLeft() {
	    var state = this.state;
	    var props = this.props;

	    var nth = (state.nth + props.imageList.length - 2) % props.imageList.length + 1;
	    this.setState({ nth: nth });
	  },
	  moveTo: function moveTo(e) {
	    var nth = Number(e.target.attributes.data.value) + 1;
	    this.setState({ nth: nth });
	  }
	});

	exports.default = SgAlbum;

/***/ },
/* 1014 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactBasic = __webpack_require__(83);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgBody */
	var SgBody = _react2.default.createClass({
	  displayName: 'SgBody',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactBasic.ApBody, _extends({}, props, {
	      className: (0, _classnames2.default)('sg-body', props.className),
	      style: Object.assign({}, props.style) }), props.children);
	  }
	});

	exports.default = SgBody;

/***/ },
/* 1015 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactButton = __webpack_require__(17);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgButton */
	var SgButton = _react2.default.createClass({
	  displayName: 'SgButton',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactButton.ApButton, _extends({}, props, {
	      className: (0, _classnames2.default)('sg-button', props.className),
	      style: Object.assign({}, props.style) }), props.children);
	  }
	});

	exports.default = SgButton;

/***/ },
/* 1016 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactBasic = __webpack_require__(83);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgHead */
	var SgHead = _react2.default.createClass({
	  displayName: 'SgHead',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactBasic.ApHead, _extends({}, props, {
	      className: (0, _classnames2.default)('sg-head', props.className),
	      style: Object.assign({}, props.style) }), props.children);
	  }
	});

	exports.default = SgHead;

/***/ },
/* 1017 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgHeader */
	var SgHeader = _react2.default.createClass({
	  displayName: 'SgHeader',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-header', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = SgHeader;

/***/ },
/* 1018 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SgHeart Component
	 * @class SgHeart
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactBasic = __webpack_require__(83);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}

	/** @lends SgHeart */
	var SgHeart = _react2.default.createClass({
	  displayName: 'SgHeart',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number,
	    heartRate: _react.PropTypes.number,
	    id: _react.PropTypes.string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      width: 44,
	      height: 44,
	      heartRate: 60
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      enlarged: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var style = s.getStyle();
	    var state = s.state;
	    var props = s.props;
	    var enlarged = state.enlarged;

	    var id = 'sg-heart-' + props.id;
	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-heart', {
	        'sg-heart-enlarged': enlarged
	      }),
	      id: id }, _react2.default.createElement(_apemanReactBasic.ApStyle, { data: style }), _react2.default.createElement(_apemanReactBasic.ApIcon, { className: 'fa fa-heart sg-heart-icon' }));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentWillMount: function componentWillMount() {
	    var s = this;
	    var props = s.props;

	    var period = 60 / (props.heartRate * 2);
	    s._period = period;
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s._animationTimer = setInterval(function () {
	      var state = s.state;

	      s.setState({
	        enlarged: !state.enlarged
	      });
	    }, s._period * 1000);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var s = this;
	    clearInterval(s._animationTimer);
	  },

	  // --------------------
	  // Custom
	  // --------------------

	  getStyle: function getStyle() {
	    var _ref;

	    var s = this;
	    var props = s.props;
	    var width = props.width;
	    var height = props.height;

	    var id = 'sg-heart-' + props.id;
	    return _ref = {}, _defineProperty(_ref, '.sg-heart#' + id, {
	      width: width,
	      height: height,
	      transitionDuration: s._period + 's',
	      fontSize: height * 0.5 + 'px',
	      transitionTimingFunction: 'ease-out'
	    }), _defineProperty(_ref, '.sg-heart-enlarged#' + id, {
	      fontSize: height * 0.8 + 'px',
	      transitionTimingFunction: 'ease-in'
	    }), _ref;
	  }
	});

	exports.default = SgHeart;

/***/ },
/* 1019 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemanReactBasic = __webpack_require__(83);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgHtml */
	var SgHtml = _react2.default.createClass({
	  displayName: 'SgHtml',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement(_apemanReactBasic.ApHtml, { className: (0, _classnames2.default)('sg-html', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = SgHtml;

/***/ },
/* 1020 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgKinectFrame
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _apemancolor = __webpack_require__(260);

	var _apemancolor2 = _interopRequireDefault(_apemancolor);

	var _sgKinectConstants = __webpack_require__(1007);

	var _draw_helper = __webpack_require__(1012);

	var drawHelper = _interopRequireWildcard(_draw_helper);

	var _color_helper = __webpack_require__(1011);

	var colorHelper = _interopRequireWildcard(_color_helper);

	function _interopRequireWildcard(obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
	      }
	    }newObj.default = obj;return newObj;
	  }
	}

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	/** @lends SgKinectFrame */
	var SgKinectFrame = _react2.default.createClass({
	  displayName: 'SgKinectFrame',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Body frame data from kinect */
	    bodies: _react.PropTypes.array,
	    /** Component width */
	    width: _react.PropTypes.number,
	    /** Component height */
	    height: _react.PropTypes.number,
	    /** Width of frames */
	    frameWidth: _react.PropTypes.number,
	    /** Radius of joint */
	    jointRadius: _react.PropTypes.number,
	    /** Scale rate of canvas */
	    scale: _react.PropTypes.number,
	    /** Alt message when no body found */
	    alt: _react.PropTypes.string,
	    /** Colorizer function */
	    colorizer: _react.PropTypes.func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      width: _sgKinectConstants.depthSpace.BOUND_WIDTH,
	      height: _sgKinectConstants.depthSpace.BOUND_HEIGHT,
	      frameWidth: 4,
	      jointRadius: 3,
	      scale: 2,
	      alt: 'NO BODY FOUND',
	      colorizer: colorHelper.uniqueColorizer('#CCCC33')
	    };
	  },

	  statics: {},

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;
	    var width = props.width;
	    var height = props.height;
	    var scale = props.scale;

	    var style = s.getStyle();
	    var isEmpty = s.getBodies().length === 0;
	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-kinnect-frame', props.className),
	      style: Object.assign({}, style.main, props.style) }, isEmpty ? s._renderAlt(style.alt) : null, _react2.default.createElement('canvas', { width: width * scale,
	      height: height * scale,
	      style: Object.assign({
	        width: width, height: height
	      }),
	      ref: function ref(canvas) {
	        return s.registerCanvas(canvas);
	      } }), props.children);
	  },
	  componentWillMount: function componentWillMount() {
	    var s = this;
	    s._trackingColors = {};
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var s = this;
	    s.drawBody(s.getBodies());
	  },
	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s.drawBody(s.getBodies());
	  },
	  componentDidUpdate: function componentDidUpdate() {
	    var s = this;
	    s.drawBody(s.getBodies());
	  },

	  // --------------------
	  // Specs
	  // --------------------

	  drawBody: function drawBody(bodies) {
	    var s = this;
	    var canvas = s.canvas;

	    if (!canvas) {
	      return;
	    }

	    var SPINE_BASE = _sgKinectConstants.jointTypes.SPINE_BASE;
	    var SPINE_MID = _sgKinectConstants.jointTypes.SPINE_MID;
	    var NECK = _sgKinectConstants.jointTypes.NECK;
	    var HEAD = _sgKinectConstants.jointTypes.HEAD;
	    var SHOULDER_LEFT = _sgKinectConstants.jointTypes.SHOULDER_LEFT;
	    var ELBOW_LEFT = _sgKinectConstants.jointTypes.ELBOW_LEFT;
	    var WRIST_LEFT = _sgKinectConstants.jointTypes.WRIST_LEFT;
	    var HAND_LEFT = _sgKinectConstants.jointTypes.HAND_LEFT;
	    var SHOULDER_RIGHT = _sgKinectConstants.jointTypes.SHOULDER_RIGHT;
	    var ELBOW_RIGHT = _sgKinectConstants.jointTypes.ELBOW_RIGHT;
	    var WRIST_RIGHT = _sgKinectConstants.jointTypes.WRIST_RIGHT;
	    var HAND_RIGHT = _sgKinectConstants.jointTypes.HAND_RIGHT;
	    var HIP_LEFT = _sgKinectConstants.jointTypes.HIP_LEFT;
	    var KNEE_LEFT = _sgKinectConstants.jointTypes.KNEE_LEFT;
	    var ANKLE_LEFT = _sgKinectConstants.jointTypes.ANKLE_LEFT;
	    var FOOT_LEFT = _sgKinectConstants.jointTypes.FOOT_LEFT;
	    var HIP_RIGHT = _sgKinectConstants.jointTypes.HIP_RIGHT;
	    var KNEE_RIGHT = _sgKinectConstants.jointTypes.KNEE_RIGHT;
	    var ANKLE_RIGHT = _sgKinectConstants.jointTypes.ANKLE_RIGHT;
	    var FOOT_RIGHT = _sgKinectConstants.jointTypes.FOOT_RIGHT;
	    var SPINE_SHOULDER = _sgKinectConstants.jointTypes.SPINE_SHOULDER;
	    var HAND_TIP_LEFT = _sgKinectConstants.jointTypes.HAND_TIP_LEFT;
	    var THUMB_LEFT = _sgKinectConstants.jointTypes.THUMB_LEFT;
	    var HAND_TIP_RIGHT = _sgKinectConstants.jointTypes.HAND_TIP_RIGHT;
	    var THUMB_RIGHT = _sgKinectConstants.jointTypes.THUMB_RIGHT;
	    var props = s.props;
	    var width = props.width;
	    var height = props.height;
	    var frameWidth = props.frameWidth;
	    var jointRadius = props.jointRadius;
	    var scale = props.scale;
	    var colorizer = props.colorizer;

	    var ctx = canvas.getContext('2d');
	    ctx.save();

	    var drawCircle = drawHelper.drawCircle;
	    var drawLine = drawHelper.drawLine;

	    var toPoint = function toPoint(joint) {
	      return {
	        x: joint.depthX * width,
	        y: joint.depthY * height
	      };
	    };

	    ctx.scale(scale, scale);
	    ctx.clearRect(0, 0, width, height);

	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = bodies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var body = _step.value;
	        var joints = body.joints;
	        var trackingId = body.trackingId;

	        var color = colorizer('tracking-' + trackingId);
	        var points = joints.map(toPoint);

	        ctx.fillStyle = color;
	        ctx.strokeStyle = _apemancolor2.default.parse(color).alpha(0.66).rgbaString();
	        ctx.lineWidth = frameWidth;

	        var spineB = points[SPINE_BASE];
	        var spineM = points[SPINE_MID];
	        var neck = points[NECK];
	        var head = points[HEAD];
	        var shoulderL = points[SHOULDER_LEFT];
	        var elbowL = points[ELBOW_LEFT];
	        var wristL = points[WRIST_LEFT];
	        var handL = points[HAND_LEFT];
	        var shoulderR = points[SHOULDER_RIGHT];
	        var elbowR = points[ELBOW_RIGHT];
	        var wristR = points[WRIST_RIGHT];
	        var handR = points[HAND_RIGHT];
	        var hipL = points[HIP_LEFT];
	        var kneeL = points[KNEE_LEFT];
	        var ankleL = points[ANKLE_LEFT];
	        var footL = points[FOOT_LEFT];
	        var hipR = points[HIP_RIGHT];
	        var kneeR = points[KNEE_RIGHT];
	        var ankleR = points[ANKLE_RIGHT];
	        var footR = points[FOOT_RIGHT];
	        var spineShoulder = points[SPINE_SHOULDER];
	        var handTipL = points[HAND_TIP_LEFT];
	        var thumbL = points[THUMB_LEFT];
	        var handTipR = points[HAND_TIP_RIGHT];
	        var thumbR = points[THUMB_RIGHT];

	        // Draw lines
	        {
	          var linePoints = [[head, neck, spineShoulder, spineM, spineB], [spineShoulder, shoulderL, elbowL, wristL, handL, handTipL, thumbL], [spineB, hipL, kneeL, ankleL, footL], [spineShoulder, shoulderR, elbowR, wristR, handR, handTipR, thumbR], [spineB, hipR, kneeR, ankleR, footR]];
	          var _iteratorNormalCompletion2 = true;
	          var _didIteratorError2 = false;
	          var _iteratorError2 = undefined;

	          try {
	            for (var _iterator2 = linePoints[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	              var linePoint = _step2.value;

	              drawLine.apply(undefined, [ctx].concat(_toConsumableArray(linePoint)));
	            }
	          } catch (err) {
	            _didIteratorError2 = true;
	            _iteratorError2 = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                _iterator2.return();
	              }
	            } finally {
	              if (_didIteratorError2) {
	                throw _iteratorError2;
	              }
	            }
	          }
	        }

	        // Draw circles
	        {
	          var RADIUS = jointRadius;
	          var circlePoints = [head, neck, spineShoulder, spineM, spineB, shoulderL, hipL, elbowL, wristL, shoulderR, hipR, elbowR, wristR, handL, handTipL, thumbL, handR, handTipR, thumbR];
	          var _iteratorNormalCompletion3 = true;
	          var _didIteratorError3 = false;
	          var _iteratorError3 = undefined;

	          try {
	            for (var _iterator3 = circlePoints[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	              var circlePoint = _step3.value;

	              drawCircle(ctx, circlePoint, RADIUS);
	            }
	          } catch (err) {
	            _didIteratorError3 = true;
	            _iteratorError3 = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                _iterator3.return();
	              }
	            } finally {
	              if (_didIteratorError3) {
	                throw _iteratorError3;
	              }
	            }
	          }
	        }
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    ctx.restore();
	  },

	  // --------------------
	  // Custom
	  // --------------------

	  registerCanvas: function registerCanvas(canvas) {
	    var s = this;
	    s.canvas = canvas;
	  },
	  getStyle: function getStyle() {
	    return {
	      main: {
	        position: 'relative'
	      },
	      alt: {
	        position: 'absolute',
	        display: 'flex',
	        justifyContent: 'center',
	        alignItems: 'center',
	        color: '#EEE',
	        left: 0,
	        top: 0,
	        right: 0,
	        bottom: 0,
	        background: 'rgba(0,0,0,0.1)',
	        fontSize: '36px',
	        zIndex: '4',
	        lineHeight: '1em',
	        wordBreak: 'break-word',
	        textAlign: 'center'
	      }
	    };
	  },
	  getBodies: function getBodies() {
	    var s = this;
	    var props = s.props;

	    return (props.bodies || []).filter(function (body) {
	      return !!body;
	    }).filter(function (body) {
	      return body.tracked;
	    });
	  },
	  _renderAlt: function _renderAlt(style) {
	    var s = this;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: 'sg-kinnect-frame-alt', style: style
	    }, props.alt);
	  },

	  canvas: null,

	  _trackingColors: null

	});

	exports.default = SgKinectFrame;

/***/ },
/* 1021 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgMain */
	var SgMain = _react2.default.createClass({
	  displayName: 'SgMain',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-main', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = SgMain;

/***/ },
/* 1022 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Microphone component
	 * @class SgMicrophone
	 */
	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactBasic = __webpack_require__(83);

	var _apemanReactMixinPure = __webpack_require__(28);

	var _apemanReactMixinTouch = __webpack_require__(519);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var _require = __webpack_require__(349);

	var MICROPHONE_TRANSITION = _require.MICROPHONE_TRANSITION;

	/** @lends SgMicrophone */

	var SgMicrophone = _react2.default.createClass({
	  displayName: 'SgMicrophone',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number,
	    on: _react.PropTypes.bool
	  },

	  statics: {
	    MICROPHONE_TRANSITION: MICROPHONE_TRANSITION
	  },

	  mixins: [_apemanReactMixinTouch.ApTouchMixin, _apemanReactMixinPure.ApPureMixin],

	  getDefaultProps: function getDefaultProps() {
	    return {
	      width: 44,
	      height: 44,
	      on: false
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      enlarged: false
	    };
	  },
	  render: function render() {
	    var s = this;
	    var style = s.getStyle();
	    var state = s.state;
	    var props = s.props;
	    var on = props.on;

	    return _react2.default.createElement('a', { className: (0, _classnames2.default)('sg-microphone', {
	        'sg-microphone-on': on
	      }),
	      style: style.root }, _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-microphone-back', {
	        'sg-microphone-back-enlarged': state.enlarged
	      }) }), _react2.default.createElement(_apemanReactBasic.ApIcon, { className: 'fa fa-microphone sg-microphone-icon',
	      style: style.icon
	    }));
	  },

	  // --------------------
	  // Lifecycle
	  // --------------------

	  componentDidMount: function componentDidMount() {
	    var s = this;
	    s._anmationTimer = setInterval(function () {
	      var state = s.state;
	      var props = s.props;

	      if (props.on) {
	        s.setState({
	          enlarged: !state.enlarged
	        });
	      }
	    }, MICROPHONE_TRANSITION);
	  },
	  componentWillUnMount: function componentWillUnMount() {
	    var s = this;
	    clearInterval(s._anmationTimer);
	  },

	  // --------------------
	  // Custom
	  // --------------------

	  getStyle: function getStyle() {
	    var s = this;
	    var props = s.props;
	    var width = props.width;
	    var height = props.height;

	    return {
	      root: {
	        width: width,
	        height: height
	      },
	      icon: {
	        fontSize: height * 0.66
	      }
	    };
	  }
	});

	module.exports = SgMicrophone;

/***/ },
/* 1023 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * HTML Component
	 * @class SgHtml
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgPage */
	var SgPage = _react2.default.createClass({
	  displayName: 'SgPage',

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-page', props.className),
	      style: Object.assign({}, props.style) }, props.children);
	  }
	});

	exports.default = SgPage;

/***/ },
/* 1024 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SgSwitch Component
	 * @class SgSwitch
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactSwitch = __webpack_require__(244);

	var _apemanReactStyle = __webpack_require__(4);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgSwitch */
	var SgSwitch = _react2.default.createClass({
	  displayName: 'SgSwitch',

	  propTypes: {
	    /**
	     * Width(px) of a switch.
	     */
	    width: _react.PropTypes.number,
	    /**
	     * The state of on/off.
	     */
	    on: _react.PropTypes.bool,
	    /**
	     * Function on tap.
	     */
	    onTap: _react.PropTypes.func,
	    onTitle: _react.PropTypes.string,
	    offTitle: _react.PropTypes.string,
	    highlightColor: _react.PropTypes.string,
	    backgroundColor: _react.PropTypes.string,
	    borderColor: _react.PropTypes.string,
	    handleSize: _react.PropTypes.number
	  },

	  getInitialState: function getInitialState() {
	    var style = this.customStyle();
	    return { style: style };
	  },

	  // --------------------
	  // Specs
	  // --------------------

	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var state = s.state;
	    var style = state.style;

	    return _react2.default.createElement('div', { className: (0, _classnames2.default)('sg-switch', props.className),
	      style: Object.assign({ display: 'inline-block', margin: '4px' }, props.style) }, _react2.default.createElement(_apemanReactStyle.ApStyle, { data: style }), _react2.default.createElement(_apemanReactSwitch.ApSwitch, props));
	  },
	  customStyle: function customStyle() {
	    var s = this;
	    var props = s.props;
	    var highlightColor = props.highlightColor;
	    var backgroundColor = props.backgroundColor;
	    var borderColor = props.borderColor;

	    var handleSize = props.handleSize || 24;
	    var minWidth = handleSize * 1.5;
	    var style = {
	      '.ap-switch-label': {
	        fontSize: '14px',
	        lineHeight: handleSize + 'px'
	      },
	      '.ap-switch-label-text': {
	        minWidth: minWidth
	      },
	      '.ap-switch-on-label': {
	        color: 'white',
	        marginRight: -1 * handleSize / 2
	      },
	      '.ap-switch-off-label': {
	        background: '#FAFAFA',
	        color: '#AAA',
	        marginLeft: -1 * handleSize / 2
	      },
	      '.ap-switch-on .ap-switch-off-label': {
	        width: handleSize / 2 + 2 + 'px !important'
	      },
	      '.ap-switch-off .ap-switch-on-label': {
	        width: handleSize / 2 + 2 + 'px !important'
	      },
	      '.ap-switch-inner': {
	        height: handleSize,
	        borderRadius: handleSize / 2 + 1,
	        minWidth: minWidth
	      },
	      '.ap-switch-handle': {
	        width: handleSize,
	        height: handleSize
	      }
	    };
	    if (highlightColor) {
	      Object.assign(style['.ap-switch-on-label'], {
	        background: highlightColor
	      });
	    }
	    if (backgroundColor) {
	      Object.assign(style['.ap-switch-inner'], {
	        backgroundColor: backgroundColor
	      });
	    }
	    if (borderColor) {
	      var borderColorOption = {
	        border: '1px solid ' + borderColor
	      };
	      Object.assign(style['.ap-switch-inner'], borderColorOption);
	      Object.assign(style['.ap-switch-handle'], borderColorOption);
	    }
	    return style;
	  }
	});

	exports.default = SgSwitch;

/***/ },
/* 1025 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Style for SgHtml.
	 * @constructor SgThemeStyle
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _apemanReactStyle = __webpack_require__(4);

	var _apemanReactTheme = __webpack_require__(609);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	var _require = __webpack_require__(349);

	var MICROPHONE_TRANSITION = _require.MICROPHONE_TRANSITION;

	/** @lends SgThemeStyle */

	var SgThemeStyle = _react2.default.createClass({
	  displayName: 'SgThemeStyle',

	  propTypes: {
	    style: _react.PropTypes.object,
	    dominant: _react.PropTypes.string
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      dominant: _apemanReactStyle.ApStyle.DEFAULT_HIGHLIGHT_COLOR
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var dominant = props.dominant;

	    var style = {
	      '.sg-html': {},
	      // SgMicrophone
	      '.sg-microphone': {
	        display: 'inline-flex',
	        justifyContent: 'center',
	        alignItems: 'center',
	        position: 'relative',
	        cursor: 'pointer',
	        color: 'inherit'
	      },
	      '.sg-microphone-back': {
	        position: 'absolute',
	        borderRadius: '50%',
	        backgroundColor: dominant,
	        display: 'none',
	        top: '9px',
	        left: '9px',
	        right: '9px',
	        bottom: '9px',
	        transition: 'transform ' + MICROPHONE_TRANSITION + 'ms',
	        transformOrigin: '50% 50%',
	        transform: 'scale(1, 1)'
	      },
	      '.sg-microphone-on .sg-microphone-back': {
	        display: 'block'
	      },
	      '.sg-microphone-on .sg-microphone-icon': {
	        color: 'white',
	        opacity: 0.9
	      },
	      '.sg-microphone-back-enlarged': {
	        transform: 'scale(2, 2)'
	      },
	      '.sg-microphone-icon': {
	        position: 'relative',
	        zIndex: 4,
	        opacity: 0.75
	      },
	      '.sg-microphone:hover .sg-microphone-icon': {
	        opacity: 1
	      },
	      '.sg-microphone:active .sg-microphone-icon': {
	        opacity: 0.9
	      },
	      // SgHeart
	      '.sg-heart': {
	        display: 'flex',
	        justifyContent: 'center',
	        alignItems: 'center',
	        position: 'relative',
	        cursor: 'pointer',
	        color: '#D80000',
	        transitionProperty: 'font-size'
	      }
	    };
	    return _react2.default.createElement(_apemanReactTheme.ApThemeStyle, _extends({}, props, {
	      style: Object.assign(style, props.style)
	    }), props.children);
	  }
	});

	exports.default = SgThemeStyle;

/***/ },
/* 1026 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SgVideo Component
	 * @class SgVideo
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	/** @lends SgVideo */
	var SgVideo = _react2.default.createClass({
	  displayName: 'SgVideo',

	  // --------------------
	  // Specs
	  // --------------------

	  propTypes: {
	    /** Video source URL */
	    src: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
	    /** Register player */
	    playerRef: _react.PropTypes.func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      playerRef: function playerRef() {}
	    };
	  },
	  render: function render() {
	    var s = this;
	    var state = s.state;
	    var props = s.props;

	    var src = [].concat(props.src || []);
	    var videoProps = Object.assign({}, props);
	    delete videoProps.playerRef;
	    return _react2.default.createElement('video', _extends({}, videoProps, {
	      className: (0, _classnames2.default)('sg-video', props.className),
	      style: Object.assign({}, props.style),
	      ref: function ref(player) {
	        return props.playerRef(player);
	      }
	    }), src.map(function (src) {
	      return _react2.default.createElement('source', { src: src, key: src });
	    }), props.children);
	  }
	});

	exports.default = SgVideo;

/***/ },
/* 1027 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Scheams for SUGOS
	 * @module sg-schemas
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get moduleSpec() {
	    return d(__webpack_require__(1108));
	  },
	  get performConfig() {
	    return d(__webpack_require__(1109));
	  }
	};

/***/ },
/* 1028 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Deserialize serialized data
	 * @function deserialize
	 * @param {string} serialized - Serialized string
	 * @param {Object} [options={}] - Optional settings
	 * @returns {Object} - Deserialize data
	 */
	'use strict';

	var parse = __webpack_require__(351);

	var _require = __webpack_require__(134);

	var has = _require.has;
	var get = _require.get;
	var remove = _require.remove;
	/** @lends deserialize */

	function deserialize(serialized) {
	  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var _options$metaPointer = options.metaPointer;
	  var metaPointer = _options$metaPointer === undefined ? '/$$types' : _options$metaPointer;
	  var converters = options.converters;

	  var payload = JSON.parse(serialized);

	  var meta = has(payload, metaPointer) && get(payload, metaPointer);
	  remove(payload, metaPointer);
	  return parse(payload, meta, { converters: converters });
	}

	module.exports = deserialize;

/***/ },
/* 1029 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Serializer for SUGOS
	 * @module sg-serializer
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get converters() {
	    return d(__webpack_require__(215));
	  },
	  get deserialize() {
	    return d(__webpack_require__(1028));
	  },
	  get format() {
	    return d(__webpack_require__(350));
	  },
	  get parse() {
	    return d(__webpack_require__(351));
	  },
	  get serialize() {
	    return d(__webpack_require__(1030));
	  }
	};

/***/ },
/* 1030 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Serialize an object
	 * @function serialize
	 * @param {Object} data - Data to serialize
	 * @param {Object} [options={}] - Optional settings.
	 * @returns {string} - Serialized string
	 *
	 */
	'use strict';

	var _require = __webpack_require__(134);

	var set = _require.set;

	var format = __webpack_require__(350);

	/** @lends serialize */
	function serialize(data) {
	  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var _options$indent = options.indent;
	  var indent = _options$indent === undefined ? null : _options$indent;
	  var _options$metaPointer = options.metaPointer;
	  var metaPointer = _options$metaPointer === undefined ? '/$$types' : _options$metaPointer;
	  var converters = options.converters;

	  var _format = format(data, { converters: converters });

	  var payload = _format.payload;
	  var meta = _format.meta;

	  set(payload, metaPointer, meta);
	  return JSON.stringify(payload, null, indent);
	}

	module.exports = serialize;

/***/ },
/* 1031 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Extension for calling
	 * @mixin CallExtension
	 */
	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	var co = __webpack_require__(79);

	var _require = __webpack_require__(96);

	var AcknowledgeStatus = _require.AcknowledgeStatus;
	var OK = AcknowledgeStatus.OK;
	var NG = AcknowledgeStatus.NG;

	/** @lends CallExtension */

	var CallExtension = Object.freeze({
	  /**
	   * Send and wait for reply
	   * @param {string} event - Name of event to send.
	   * @param {Object} data - Data to send.
	   * @param {Object} [options]
	   * @param {string} [options.timeout] - Timeout
	   * @returns {Promise} - Reply from server.
	   */
	  call: function call(event, data) {
	    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	    var s = this;
	    return co(regeneratorRuntime.mark(function _callee() {
	      var timeout;
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              timeout = options.timeout;
	              _context.next = 3;
	              return new Promise(function (resolve, reject) {
	                var done = false;
	                var timer = null;

	                function unlessDone(action) {
	                  if (done) {
	                    return;
	                  }
	                  action();
	                  clearTimeout(timer);
	                  done = true;
	                }

	                if (timeout) {
	                  timer = setTimeout(function () {
	                    unlessDone(function () {
	                      return reject(new Error('[sg-socket-client] Calling timeout'));
	                    });
	                  }, timeout).unref();
	                }

	                s.emit(event, data, function (reply) {
	                  var status = reply.status;
	                  var payload = reply.payload;

	                  if (status === NG) {
	                    var _ret = function () {
	                      var message = (payload.message || payload) + ' ( event: "' + event + '", data: "' + JSON.stringify(data) + '" )';
	                      unlessDone(function () {
	                        return reject(new Error(message));
	                      });
	                      return {
	                        v: void 0
	                      };
	                    }();

	                    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	                  }
	                  unlessDone(function () {
	                    return resolve(reply);
	                  });
	                });
	              });

	            case 3:
	              return _context.abrupt('return', _context.sent);

	            case 4:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));
	  }
	});

	module.exports = CallExtension;

/***/ },
/* 1032 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Extension modules
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get CallExtension() {
	    return d(__webpack_require__(1031));
	  },
	  get LockExtension() {
	    return d(__webpack_require__(1033));
	  },
	  get PubsubExtension() {
	    return d(__webpack_require__(1034));
	  },
	  get WrapExtension() {
	    return d(__webpack_require__(1035));
	  }
	};

/***/ },
/* 1033 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Extension for locking
	 * @mixin LockExtension
	 */
	'use strict';

	var _require = __webpack_require__(96);

	var LockingEvents = _require.LockingEvents;
	var LOCK = LockingEvents.LOCK;
	var UNLOCK = LockingEvents.UNLOCK;

	/** @lends LockExtension */

	var LockExtension = Object.freeze({
	  /**
	   * Lock a resource
	   * @param {string} name - Name of resource to lock
	   * @param {Object} [options] - Optional settings
	   * @returns {Promise}
	   */
	  lock: function lock(name) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];

	    var s = this;
	    var id = s.id;

	    return s.call(LOCK, { name: name, by: id }, options);
	  },

	  /**
	   * Lock a resource
	   * @param {string} name - Name of resource to unlock
	   * @param {Object} [options] - Optional settings
	   * @returns {Promise}
	   */
	  unlock: function unlock(name) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var s = this;
	    var id = s.id;

	    return s.call(UNLOCK, { name: name, by: id });
	  }
	});

	module.exports = LockExtension;

/***/ },
/* 1034 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Publish/Subscribe feature
	 * @mixin PubsubExtension
	 */
	'use strict';

	var co = __webpack_require__(79);

	var _require = __webpack_require__(96);

	var PubsubEvents = _require.PubsubEvents;
	var SUBSCRIBE = PubsubEvents.SUBSCRIBE;
	var UNSUBSCRIBE = PubsubEvents.UNSUBSCRIBE;
	var RAISE = PubsubEvents.RAISE;
	var SHUT = PubsubEvents.SHUT;
	var PUBLISH = PubsubEvents.PUBLISH;
	var RECEIVE = PubsubEvents.RECEIVE;
	var COUNT = PubsubEvents.COUNT;

	/** @lends PubsubExtension */

	var PubsubExtension = Object.freeze({
	  /**
	   * Subscribe topic
	   * @param {string} topic - Name of topic to subscribe
	   * @param {function} handler - Event handler
	   * @returns {Promise}
	   */
	  subscribe: function subscribe(topic, handler) {
	    var s = this;
	    return co(regeneratorRuntime.mark(function _callee() {
	      var result, receiver;
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              receiver = function receiver(data) {
	                handler(data.payload);
	              };

	              s._pubsubReceivers = s._pubsubReceivers || {};
	              _context.next = 4;
	              return s.call(SUBSCRIBE, { topic: topic });

	            case 4:
	              result = _context.sent;

	              Object.assign(receiver, {
	                handler: handler
	              });

	              s._pubsubReceivers[topic] = (s._pubsubReceivers[topic] || []).concat(receiver);
	              s.on(RECEIVE, receiver);
	              return _context.abrupt('return', result);

	            case 9:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));
	  },

	  /**
	   * Unsubscribe topic
	   * @param {string} topic - Name of topic to subscribe
	   * @param {function} handler - Event handler
	   * @returns {Promise}
	   */
	  unsubscribe: function unsubscribe(topic, handler) {
	    var s = this;
	    return co(regeneratorRuntime.mark(function _callee2() {
	      var result;
	      return regeneratorRuntime.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              s._pubsubReceivers = s._pubsubReceivers || {};
	              _context2.next = 3;
	              return s.call(UNSUBSCRIBE, { topic: topic });

	            case 3:
	              result = _context2.sent;

	              s._pubsubReceivers[topic] = (s._pubsubReceivers[topic] || []).filter(function (receiver) {
	                var removing = !handler || receiver.handler === handler;
	                if (removing) {
	                  s.off(RECEIVE, receiver);
	                }
	                return !removing;
	              });
	              return _context2.abrupt('return', result);

	            case 6:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this);
	    }));
	  },

	  /**
	   * Raise as a publisher
	   * @param {string} topic - Name of topic
	   * @returns {Promise}
	   */
	  raiseAsPublisher: function raiseAsPublisher(topic) {
	    var s = this;
	    return co(regeneratorRuntime.mark(function _callee3() {
	      var result, sender;
	      return regeneratorRuntime.wrap(function _callee3$(_context3) {
	        while (1) {
	          switch (_context3.prev = _context3.next) {
	            case 0:
	              sender = function sender(payload) {
	                return s.call(PUBLISH, { topic: topic, payload: payload });
	              };

	              s._pubsubSenders = s._pubsubSenders || {};
	              _context3.next = 4;
	              return s.call(RAISE, { topic: topic });

	            case 4:
	              result = _context3.sent;

	              Object.assign(sender, {
	                topic: topic,
	                subCount: 0
	              });

	              s._pubsubSenders[topic] = sender;

	              s.on(COUNT, function (counts) {
	                sender.subCount = counts.sub;
	              });
	              return _context3.abrupt('return', result);

	            case 9:
	            case 'end':
	              return _context3.stop();
	          }
	        }
	      }, _callee3, this);
	    }));
	  },

	  /**
	   * Shut as publisher
	   * @param {Object} payload - Payload data
	   * @returns {Promise}
	   */
	  shutAsPublisher: function shutAsPublisher(topic) {
	    var s = this;
	    return co(regeneratorRuntime.mark(function _callee4() {
	      var result;
	      return regeneratorRuntime.wrap(function _callee4$(_context4) {
	        while (1) {
	          switch (_context4.prev = _context4.next) {
	            case 0:
	              s._pubsubSenders = s._pubsubSenders || {};
	              _context4.next = 3;
	              return s.call(SHUT, { topic: topic });

	            case 3:
	              result = _context4.sent;

	              delete s._pubsubSenders[topic];
	              return _context4.abrupt('return', result);

	            case 6:
	            case 'end':
	              return _context4.stop();
	          }
	        }
	      }, _callee4, this);
	    }));
	  },

	  /**
	   * Publish topic
	   * @param {string} topic - Name of topic to subscribe
	   * @param {Object} payload - Payload data
	   * @returns {Promise}
	   */
	  publish: function publish(topic, payload) {
	    var s = this;
	    return co(regeneratorRuntime.mark(function _callee5() {
	      var sender;
	      return regeneratorRuntime.wrap(function _callee5$(_context5) {
	        while (1) {
	          switch (_context5.prev = _context5.next) {
	            case 0:
	              sender = (s._pubsubSenders || {})[topic];

	              if (sender) {
	                _context5.next = 3;
	                break;
	              }

	              throw new Error('Not ready to publish topic: ' + topic);

	            case 3:
	              _context5.next = 5;
	              return sender(payload);

	            case 5:
	              return _context5.abrupt('return', _context5.sent);

	            case 6:
	            case 'end':
	              return _context5.stop();
	          }
	        }
	      }, _callee5, this);
	    }));
	  }
	});

	module.exports = PubsubExtension;

/***/ },
/* 1035 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Extensions for wrapping
	 * @module WrapExtension
	 */
	'use strict';

	// See https://github.com/component/emitter/blob/master/index.js

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	var wrappableNames = ['on', 'addEventListener', 'off', 'emit', 'removeListener', 'removeAllListeners', 'removeEventListener'];

	/* @lends WrapExtension */
	var WrapExtension = Object.freeze({
	  /**
	   * Wrap events with prefix
	   * @param {string} prefix - Event name prefix
	   * @param {Object} options - Optional settings
	   * @returns {Object} - Socket.IO client instnace.
	   */
	  wrap: function wrap(prefix) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var s = this;
	    var sgSocketClient = __webpack_require__(352);
	    var client = sgSocketClient.apply(undefined, _toConsumableArray(s.$initial));

	    var prefixed = function prefixed(ev) {
	      return ev && [prefix, ev].join(':') || ev;
	    };
	    wrappableNames.forEach(function (name) {
	      var wrapping = client[name];
	      client[name] = function wrap(ev) {
	        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	          args[_key - 1] = arguments[_key];
	        }

	        wrapping.call.apply(wrapping, [client, prefixed(ev)].concat(args));
	      };
	    });
	    return client;
	  }
	});

	module.exports = WrapExtension;

/***/ },
/* 1036 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Web socket client for SUGOS
	 * @module sg-socket-client
	 * @version 1.2.17
	 */
	'use strict';

	var sgSocketClient = __webpack_require__(352);

	var lib = sgSocketClient.bind(undefined);

	Object.assign(lib, sgSocketClient, {
	  sgSocketClient: sgSocketClient
	});

	module.exports = lib;

/***/ },
/* 1037 */
/***/ function(module, exports) {

	/**
	 * Status for acknowledgements
	 * @namespace AcknowledgeEvents
	 * @see http://socket.io/docs/#sending-and-getting-data-(acknowledgements)
	 */

	'use strict';

	/** Succeeded to handle the event */

	exports.OK = 'sg:acknowledge:ok';
	/** Something wrong with the event */
	exports.NG = 'sg:acknowledge:ng';

/***/ },
/* 1038 */
/***/ function(module, exports) {

	/**
	 * Events for auth
	 * @see https://github.com/facundoolano/socketio-auth
	 */
	'use strict';

	// Client -> Server
	/** Require authentication */

	exports.AUTHENTICATION = 'authentication';

	// Server -> Client

	/** Authentication approved */
	exports.AUTHENTICATED = 'authenticated';

	/** Authentication rejected */
	exports.UNAUTHORIZED = 'unauthorized';

/***/ },
/* 1039 */
/***/ function(module, exports) {

	/**
	 * Events for greeting
	 * @namespace GreetingEvents
	 */

	'use strict';

	// -- Edge -> Cloud
	/** Say hello */

	exports.HI = 'sg:greet:hi';
	/** Say bye */
	exports.BYE = 'sg:greet:bye';

/***/ },
/* 1040 */
/***/ function(module, exports) {

	/**
	 * Event for locking
	 * @namespace LockingEvents
	 */

	'use strict';

	// -- Cloud -> Edge

	/** A lock allocated  */

	exports.ALLOC = 'sg:lock:alloc';
	/** A lock released */
	exports.RELEASE = 'sg:lock:release';

	// -- Edge -> Cloud

	/** Require locking */
	exports.LOCK = 'sg:lock:lock';
	/** Require unlocking */
	exports.UNLOCK = 'sg:lock:unlock';

/***/ },
/* 1041 */
/***/ function(module, exports) {

	/**
	 * Events for observing
	 * @namespace ObservingEvents
	 */

	'use strict';

	// --- Observer -> Hub ---

	/** Observing start */

	exports.START = 'sg:remote:start';

	/** Observing stop */
	exports.STOP = 'sg:remote:stop';

	// --- Hub -> Observer ---

	/** Notify change */
	exports.CHANGE = 'sg:remote:change';

/***/ },
/* 1042 */
/***/ function(module, exports) {

	/**
	 * Events for subscribing
	 * @namespace SubscribingEvents
	 * @deprecated
	 */

	'use strict';

	// -- publisher -> cloud

	/**
	 * @deprecated
	 * Ready to accept subscribes
	 */

	exports.RAISE = 'sg:pubsub:raise';
	/**
	 * @deprecated
	 * No longer accepts subscribes
	 */
	exports.SHUT = 'sg:pubsub:shut';
	/**
	 * @deprecated
	 * Publish event
	 */
	exports.PUBLISH = 'sg:pubsub:publish';

	// -- cloud -> publisher

	/**
	 * @deprecated
	 * Number of subscribers
	 */
	exports.COUNT = 'sg:pubsub:count';

	// -- subscriber -> cloud

	/**
	 * @deprecated
	 * Start subscribing
	 */
	exports.SUBSCRIBE = 'sg:pubsub:subscribe';
	/**
	 * @deprecated
	 * Stop subscribing
	 */
	exports.UNSUBSCRIBE = 'sg:pubsub:unsubscribe';

	// -- cloud -> subscriber

	/**
	 * @deprecated
	 * Receive published event
	 */
	exports.RECEIVE = 'sg:pubsub:receive';

/***/ },
/* 1043 */
/***/ function(module, exports) {

	/**
	 * Events for remote control
	 * @namespace RemoteEvents
	 */

	'use strict';

	// --- Actor -> Cloud ---

	/** Tell spec */

	exports.SPEC = 'sg:remote:spec';
	/** Delete spec */
	exports.DESPEC = 'sg:remote:despec';

	// --- Caller -> Cloud ---

	/** Join to remote end point */
	exports.JOIN = 'sg:remote:join';
	/** Leave from remote end point */
	exports.LEAVE = 'sg:remote:leave';
	/** Perform an action */
	exports.PERFORM = 'sg:remote:perform';

	// --- Actor <-> Cloud <-> Caller ---
	exports.PIPE = 'sg:remote:pipe';

/***/ },
/* 1044 */
/***/ function(module, exports) {

	/**
	 * Events reserved by Socket.IO
	 * @namespace ReservedEvents
	 * @see http://socket.io/docs/server-api/
	 * @see http://socket.io/docs/client-api/
	 */

	'use strict';

	/** New connection established */

	exports.CONNECTION = 'connection';

	/** Connected to server */
	exports.CONNECT = 'connect';
	/** Re-connected to server */
	exports.RECONNECT = 'reconnect';

	/** Failed  to connected to server */
	exports.CONNECT_ERROR = 'connect_error';
	/** Connected timeout occuor */
	exports.CONNECT_TIMEOUT = 'connect_timeout';
	/** Disconnected from server */
	exports.DISCONNECT = 'disconnect';

	/** Error */
	exports.ERROR = 'error';

/***/ },
/* 1045 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create a sg validator instance
	 * @function create
	 */
	'use strict';

	var SgValidator = __webpack_require__(353);

	/** @lends create */
	function create() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  return new (Function.prototype.bind.apply(SgValidator, [null].concat(args)))();
	}

	module.exports = create;

/***/ },
/* 1046 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * JSON Schema validator
	 * @module sg-validator
	 */

	'use strict';

	var create = __webpack_require__(1045);
	var SgValidator = __webpack_require__(353);

	var lib = create.bind(undefined);

	Object.assign(lib, SgValidator, {
	  create: create,
	  SgValidator: SgValidator
	});

	module.exports = lib;

/***/ },
/* 1047 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * Module dependencies.
	 */

	var url = __webpack_require__(1048);
	var parser = __webpack_require__(216);
	var Manager = __webpack_require__(354);
	var debug = __webpack_require__(24)('socket.io-client');

	/**
	 * Module exports.
	 */

	module.exports = exports = lookup;

	/**
	 * Managers cache.
	 */

	var cache = exports.managers = {};

	/**
	 * Looks up an existing `Manager` for multiplexing.
	 * If the user summons:
	 *
	 *   `io('http://localhost/a');`
	 *   `io('http://localhost/b');`
	 *
	 * We reuse the existing instance based on same scheme/port/host,
	 * and we initialize sockets for each namespace.
	 *
	 * @api public
	 */

	function lookup(uri, opts) {
	  if ((typeof uri === 'undefined' ? 'undefined' : _typeof(uri)) == 'object') {
	    opts = uri;
	    uri = undefined;
	  }

	  opts = opts || {};

	  var parsed = url(uri);
	  var source = parsed.source;
	  var id = parsed.id;
	  var path = parsed.path;
	  var sameNamespace = cache[id] && path in cache[id].nsps;
	  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;

	  var io;

	  if (newConnection) {
	    debug('ignoring socket cache for %s', source);
	    io = Manager(source, opts);
	  } else {
	    if (!cache[id]) {
	      debug('new io instance for %s', source);
	      cache[id] = Manager(source, opts);
	    }
	    io = cache[id];
	  }

	  return io.socket(parsed.path);
	}

	/**
	 * Protocol version.
	 *
	 * @api public
	 */

	exports.protocol = parser.protocol;

	/**
	 * `connect`.
	 *
	 * @param {String} uri
	 * @api public
	 */

	exports.connect = lookup;

	/**
	 * Expose constructors for standalone build.
	 *
	 * @api public
	 */

	exports.Manager = __webpack_require__(354);
	exports.Socket = __webpack_require__(356);

/***/ },
/* 1048 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Module dependencies.
	 */

	var parseuri = __webpack_require__(311);
	var debug = __webpack_require__(24)('socket.io-client:url');

	/**
	 * Module exports.
	 */

	module.exports = url;

	/**
	 * URL parser.
	 *
	 * @param {String} url
	 * @param {Object} An object meant to mimic window.location.
	 *                 Defaults to window.location.
	 * @api public
	 */

	function url(uri, loc) {
	  var obj = uri;

	  // default to window.location
	  var loc = loc || global.location;
	  if (null == uri) uri = loc.protocol + '//' + loc.host;

	  // relative path support
	  if ('string' == typeof uri) {
	    if ('/' == uri.charAt(0)) {
	      if ('/' == uri.charAt(1)) {
	        uri = loc.protocol + uri;
	      } else {
	        uri = loc.host + uri;
	      }
	    }

	    if (!/^(https?|wss?):\/\//.test(uri)) {
	      debug('protocol-less url %s', uri);
	      if ('undefined' != typeof loc) {
	        uri = loc.protocol + '//' + uri;
	      } else {
	        uri = 'https://' + uri;
	      }
	    }

	    // parse
	    debug('parse %s', uri);
	    obj = parseuri(uri);
	  }

	  // make sure we treat `localhost:80` and `localhost` equally
	  if (!obj.port) {
	    if (/^(http|ws)$/.test(obj.protocol)) {
	      obj.port = '80';
	    } else if (/^(http|ws)s$/.test(obj.protocol)) {
	      obj.port = '443';
	    }
	  }

	  obj.path = obj.path || '/';

	  var ipv6 = obj.host.indexOf(':') !== -1;
	  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

	  // define unique id
	  obj.id = obj.protocol + '://' + host + ':' + obj.port;
	  // define href
	  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : ':' + obj.port);

	  return obj;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 1049 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*global Blob,File*/

	/**
	 * Module requirements
	 */

	var isArray = __webpack_require__(358);
	var isBuf = __webpack_require__(357);

	/**
	 * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
	 * Anything with blobs or files should be fed through removeBlobs before coming
	 * here.
	 *
	 * @param {Object} packet - socket.io event packet
	 * @return {Object} with deconstructed packet and list of buffers
	 * @api public
	 */

	exports.deconstructPacket = function (packet) {
	  var buffers = [];
	  var packetData = packet.data;

	  function _deconstructPacket(data) {
	    if (!data) return data;

	    if (isBuf(data)) {
	      var placeholder = { _placeholder: true, num: buffers.length };
	      buffers.push(data);
	      return placeholder;
	    } else if (isArray(data)) {
	      var newData = new Array(data.length);
	      for (var i = 0; i < data.length; i++) {
	        newData[i] = _deconstructPacket(data[i]);
	      }
	      return newData;
	    } else if ('object' == (typeof data === 'undefined' ? 'undefined' : _typeof(data)) && !(data instanceof Date)) {
	      var newData = {};
	      for (var key in data) {
	        newData[key] = _deconstructPacket(data[key]);
	      }
	      return newData;
	    }
	    return data;
	  }

	  var pack = packet;
	  pack.data = _deconstructPacket(packetData);
	  pack.attachments = buffers.length; // number of binary 'attachments'
	  return { packet: pack, buffers: buffers };
	};

	/**
	 * Reconstructs a binary packet from its placeholder packet and buffers
	 *
	 * @param {Object} packet - event packet with placeholders
	 * @param {Array} buffers - binary buffers to put in placeholder positions
	 * @return {Object} reconstructed packet
	 * @api public
	 */

	exports.reconstructPacket = function (packet, buffers) {
	  var curPlaceHolder = 0;

	  function _reconstructPacket(data) {
	    if (data && data._placeholder) {
	      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)
	      return buf;
	    } else if (isArray(data)) {
	      for (var i = 0; i < data.length; i++) {
	        data[i] = _reconstructPacket(data[i]);
	      }
	      return data;
	    } else if (data && 'object' == (typeof data === 'undefined' ? 'undefined' : _typeof(data))) {
	      for (var key in data) {
	        data[key] = _reconstructPacket(data[key]);
	      }
	      return data;
	    }
	    return data;
	  }

	  packet.data = _reconstructPacket(packet.data);
	  packet.attachments = undefined; // no longer useful
	  return packet;
	};

	/**
	 * Asynchronously removes Blobs or Files from data via
	 * FileReader's readAsArrayBuffer method. Used before encoding
	 * data as msgpack. Calls callback with the blobless data.
	 *
	 * @param {Object} data
	 * @param {Function} callback
	 * @api private
	 */

	exports.removeBlobs = function (data, callback) {
	  function _removeBlobs(obj, curKey, containingObject) {
	    if (!obj) return obj;

	    // convert any blob
	    if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {
	      pendingBlobs++;

	      // async filereader
	      var fileReader = new FileReader();
	      fileReader.onload = function () {
	        // this.result == arraybuffer
	        if (containingObject) {
	          containingObject[curKey] = this.result;
	        } else {
	          bloblessData = this.result;
	        }

	        // if nothing pending its callback time
	        if (! --pendingBlobs) {
	          callback(bloblessData);
	        }
	      };

	      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
	    } else if (isArray(obj)) {
	      // handle array
	      for (var i = 0; i < obj.length; i++) {
	        _removeBlobs(obj[i], i, obj);
	      }
	    } else if (obj && 'object' == (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) && !isBuf(obj)) {
	      // and object
	      for (var key in obj) {
	        _removeBlobs(obj[key], key, obj);
	      }
	    }
	  }

	  var pendingBlobs = 0;
	  var bloblessData = data;
	  _removeBlobs(bloblessData);
	  if (!pendingBlobs) {
	    callback(bloblessData);
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 1050 */
182,
/* 1051 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into upper snake case.
	 * Join punctuation with underscore and convert letters into uppercase.
	 * @memberof module:stringcase/lib
	 * @function constcase
	 * @param {string} str - String to convert.
	 * @returns {string} Const cased string.
	 */

	'use strict';

	var uppercase = __webpack_require__(110);
	var snakecase = __webpack_require__(67);

	/** @lends constcase */
	function constcase(str) {
	  if (constcase.isConstcase(str)) {
	    return str;
	  }
	  return uppercase(snakecase(str));
	}

	/**
	 * Checks whether the string are constcase.
	 * @memberof module:stringcase/lib
	 * @function constcase.isConstcase
	 * @param {string} str - String to check.
	 * @returns {boolean} - True if the string are constcase.
	 */
	constcase.isConstcase = function (str) {
	  return str && /^[A-Z_]+$/.test(str);
	};

	module.exports = constcase;

/***/ },
/* 1052 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into de-capitalized case.
	 * First letters will be lowercase.
	 * @memberof module:stringcase/lib
	 * @function decapitalcase
	 * @param {string} str - String to convert.
	 * @returns {string} Capital case string.
	 */

	'use strict';

	var lowercase = __webpack_require__(98);

	/** @lends capitalcase */
	function capitalcase(str) {
	  str = String(str);
	  if (!str) {
	    return str;
	  }
	  return lowercase(str[0]) + str.slice(1);
	}

	module.exports = capitalcase;

/***/ },
/* 1053 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into enum case.
	 * Join punctuation with slash.
	 * @memberof module:stringcase/lib
	 * @function enumcase
	 * @param {string} str - String to convert.
	 * @returns {string} Enum cased string.
	 */

	'use strict';

	var snakecase = __webpack_require__(67);

	/** @lends enumcase */
	function enumcase(str) {
	  return snakecase(str).replace(/_/g, ':');
	}

	module.exports = enumcase;

/***/ },
/* 1054 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into pascal case.
	 * @memberof module:stringcase/lib
	 * @function pascalcase
	 * @param {string} str - String to convert.
	 * @returns {string} Pascal case string.
	 */

	'use strict';

	var camelcase = __webpack_require__(359);
	var capitalcase = __webpack_require__(142);

	/** @lends pascalcase */
	function pascalcase(str) {
	  return capitalcase(camelcase(str));
	}

	module.exports = pascalcase;

/***/ },
/* 1055 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into path case.
	 * Join punctuation with slash.
	 * @memberof module:stringcase/lib
	 * @function pathcase
	 * @param {string} str - String to convert.
	 * @returns {string} Path cased string.
	 */

	'use strict';

	var snakecase = __webpack_require__(67);

	/** @lends pathcase */
	function pathcase(str) {
	  return snakecase(str).replace(/_/g, '/');
	}

	module.exports = pathcase;

/***/ },
/* 1056 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into sentence case.
	 * First letter capped and each punctuations are joined with space.
	 * @memberof module:stringcase/lib
	 * @function sentencecase
	 * @param {string} str - String to convert.
	 * @returns {string} Sentence cased string.
	 */

	'use strict';

	var lowercase = __webpack_require__(98);
	var trimcase = __webpack_require__(217);
	var snakecase = __webpack_require__(67);
	var capitalcase = __webpack_require__(142);

	var JOINER = ' ';

	/** @lends sentencecase*/
	function sentencecase(str) {
	  str = String(str).replace(/^[\-_\.\s]/g, JOINER);
	  if (!str) {
	    return str;
	  }
	  return capitalcase(snakecase(trimcase(str)).replace(/_/g, JOINER));
	}

	module.exports = sentencecase;

/***/ },
/* 1057 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into path case.
	 * Join punctuation with space.
	 * @memberof module:stringcase/lib
	 * @function spacecase
	 * @param {string} str - String to convert.
	 * @returns {string} Path cased string.
	 */

	'use strict';

	var snakecase = __webpack_require__(67);

	/** @lends spacecase */
	function spacecase(str) {
	  return snakecase(str).replace(/_/g, ' ');
	}

	module.exports = spacecase;

/***/ },
/* 1058 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into spinal case.
	 * Join punctuation with hyphen.
	 * @memberof module:stringcase/lib
	 * @function spinalcase
	 * @param {string} str - String to convert.
	 * @returns {string} Spinal cased string.
	 */

	'use strict';

	var snakecase = __webpack_require__(67);

	/** @lends spinalcase */
	function spinalcase(str) {
	  return snakecase(str).replace(/_/g, '-');
	}

	module.exports = spinalcase;

/***/ },
/* 1059 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Convert string into sentence case.
	 * First letter capped and each punctuations is capitalcase and joined with space.
	 * @memberof module:stringcase/lib
	 * @function titlecase
	 * @param {string} str - String to convert.
	 * @returns {string} Title cased string.
	 */

	'use strict';

	var snakecase = __webpack_require__(67);
	var lowercase = __webpack_require__(98);
	var trimcase = __webpack_require__(217);
	var capitalcase = __webpack_require__(142);

	var LOWERCASE_WORDS = 'a,the,and,or,not,but,for,of'.split(',');

	/** @lends titlecase*/
	function titlecase(str) {
	  return snakecase(str).split(/_/g).map(trimcase).map(function (word) {
	    var lower = !!~LOWERCASE_WORDS.indexOf(word);
	    if (lower) {
	      return lowercase(word);
	    } else {
	      return capitalcase(word);
	    }
	  }).join(' ');
	}

	module.exports = titlecase;

/***/ },
/* 1060 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Access to actor module
	 * @class ActorAccess
	 */
	'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var co = __webpack_require__(79);

	var _require = __webpack_require__(130);

	var EventEmitter = _require.EventEmitter;

	/** @lends ActorAccess */

	var ActorAccess = function () {
	  function ActorAccess(config) {
	    _classCallCheck(this, ActorAccess);

	    var specs = config.specs;
	    var connector = config.connector;
	    var validator = config.validator;

	    var s = this;
	    s.modules = {};
	    s.methods = {};
	    s.registerSpecs(specs, connector);
	    s.bundle = s.newBundle(specs, validator);
	  }

	  /**
	   * Create a new bundle.
	   * @param {Object} specs - Spec data of actor
	   * @param {Object} validator - A caller validator
	   * @returns {Object}
	   */

	  _createClass(ActorAccess, [{
	    key: 'newBundle',
	    value: function newBundle(specs, validator) {
	      var s = this;

	      function getModule(moduleName) {
	        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	        var module = s.modules[moduleName];
	        var $spec = specs[moduleName];
	        var expect = options.expect;

	        if (expect) {
	          var vError = validator.validateInterfaceSpecWithExpected($spec, expect);
	          if (vError) {
	            throw vError;
	          }
	        }
	        if (!moduleName) {
	          throw new Error('Unknown module: "' + moduleName);
	        }
	        return module;
	      }

	      function hasModule(moduleName) {
	        return s.modules.hasOwnProperty(moduleName);
	      }

	      var bundle = {
	        /**
	         * Get a module
	         * @method get
	         * @param {string} name - Name of module
	         * @returns {Module} - Found module
	         */
	        get: getModule,
	        /**
	         * Check if module exists
	         * @method has
	         * @param {string} name - Name of module
	         * @returns {Boolean} - Has the module or not
	         */
	        has: hasModule,
	        /**
	         * Describe a module
	         * @method describe
	         * @param {string} name - Name of module
	         * @returns {Object} - Module description
	         */
	        describe: function describe(name) {
	          return specs[name];
	        },

	        /** @deprecated */
	        module: function module() {
	          console.warn('[SUGO-Caller] `.module(name)` is now deprecated. Use `.get(name)` instead');
	          return getModule.apply(undefined, arguments);
	        }
	      };
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        var _loop = function _loop() {
	          var moduleName = _step.value;

	          /** @deprecated */
	          bundle[moduleName] = function accessToModule() {
	            var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	            console.warn('[SUGO-Caller] Dynamic module access is now deprecated. Use ' + '`' + '.get(\'' + moduleName + '\')' + '`' + ' instead.');
	            return getModule(moduleName, options);
	          };
	        };

	        for (var _iterator = Object.keys(s.modules || {})[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          _loop();
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      return bundle;
	    }

	    /**
	     * Register module specs.
	     * @param {Object} specs - Spec data of actor
	     * @param {Object} connector - Connector functions
	     */

	  }, {
	    key: 'registerSpecs',
	    value: function registerSpecs(specs, connector) {
	      var s = this;
	      var moduleNames = Object.keys(specs).sort(function (a, b) {
	        return a.length - b.length;
	      });

	      // Register as top level
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;

	      try {
	        var _loop2 = function _loop2() {
	          var moduleName = _step2.value;

	          var _ref = specs[moduleName] || {};

	          var methods = _ref.methods;

	          var $invoke = function $invoke(name, params) {
	            return connector.invoke(moduleName, name, params);
	          };
	          var $fire = function $fire(event, data) {
	            return connector.fire(moduleName, event, data);
	          };
	          var $listen = function $listen(event, callback) {
	            return connector.listen(moduleName, event, callback);
	          };
	          var $delisten = function $delisten(event, callback) {
	            return connector.delisten(moduleName, event, callback);
	          };
	          s.modules[moduleName] = actorAccessModule(methods, {
	            $invoke: $invoke, $fire: $fire, $listen: $listen, $delisten: $delisten
	          });
	        };

	        for (var _iterator2 = moduleNames[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          _loop2();
	        }
	        // Register as sub
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }

	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;

	      try {
	        var _loop3 = function _loop3() {
	          var moduleName = _step3.value;

	          var subModuleNames = moduleNames.filter(function (name) {
	            return name.indexOf(moduleName + '.') === 0;
	          });
	          var _iteratorNormalCompletion4 = true;
	          var _didIteratorError4 = false;
	          var _iteratorError4 = undefined;

	          try {
	            for (var _iterator4 = subModuleNames[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	              var subModuleName = _step4.value;

	              var as = subModuleName.slice(moduleName.length + 1);
	              s.modules[moduleName] = s.modules[moduleName] || {};
	              s.modules[moduleName][as] = s.modules[subModuleName];
	            }
	          } catch (err) {
	            _didIteratorError4 = true;
	            _iteratorError4 = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion4 && _iterator4.return) {
	                _iterator4.return();
	              }
	            } finally {
	              if (_didIteratorError4) {
	                throw _iteratorError4;
	              }
	            }
	          }
	        };

	        for (var _iterator3 = Object.keys(s.modules || {})[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          _loop3();
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }

	    /**
	     * De-register module specs.
	     * @param {...string} moduleNames - Spec data of actor
	     */

	  }, {
	    key: 'deregisterSpecs',
	    value: function deregisterSpecs() {
	      var s = this;
	      // Delete modules

	      for (var _len = arguments.length, moduleNames = Array(_len), _key = 0; _key < _len; _key++) {
	        moduleNames[_key] = arguments[_key];
	      }

	      var _iteratorNormalCompletion5 = true;
	      var _didIteratorError5 = false;
	      var _iteratorError5 = undefined;

	      try {
	        for (var _iterator5 = moduleNames[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
	          var _subModuleNames = _step5.value;

	          delete s.modules[_subModuleNames];
	        }
	        // Register as sub
	      } catch (err) {
	        _didIteratorError5 = true;
	        _iteratorError5 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion5 && _iterator5.return) {
	            _iterator5.return();
	          }
	        } finally {
	          if (_didIteratorError5) {
	            throw _iteratorError5;
	          }
	        }
	      }

	      var _iteratorNormalCompletion6 = true;
	      var _didIteratorError6 = false;
	      var _iteratorError6 = undefined;

	      try {
	        var _loop4 = function _loop4() {
	          var moduleName = _step6.value;

	          var subModuleNames = moduleNames.filter(function (name) {
	            return name.indexOf(moduleName + '.') === 0;
	          });
	          var _iteratorNormalCompletion7 = true;
	          var _didIteratorError7 = false;
	          var _iteratorError7 = undefined;

	          try {
	            for (var _iterator7 = subModuleNames[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
	              var subModuleName = _step7.value;

	              var as = subModuleName.slice(moduleName.length + 1);
	              if (s.modules[moduleName]) {
	                delete s.modules[moduleName][as];
	              }
	            }
	          } catch (err) {
	            _didIteratorError7 = true;
	            _iteratorError7 = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion7 && _iterator7.return) {
	                _iterator7.return();
	              }
	            } finally {
	              if (_didIteratorError7) {
	                throw _iteratorError7;
	              }
	            }
	          }
	        };

	        for (var _iterator6 = Object.keys(s.modules || {})[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
	          _loop4();
	        }
	      } catch (err) {
	        _didIteratorError6 = true;
	        _iteratorError6 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion6 && _iterator6.return) {
	            _iterator6.return();
	          }
	        } finally {
	          if (_didIteratorError6) {
	            throw _iteratorError6;
	          }
	        }
	      }
	    }
	  }]);

	  return ActorAccess;
	}();

	/**
	 * Create a module no actor access
	 * @param {Object} methods - Module methods
	 * @param {Object} connection - Hub connection
	 * @return {Object} - Defined module
	 */

	function actorAccessModule(methods, connection) {
	  var getterPrefix = /^get\$/;
	  var setterPrefix = /^set\$/;

	  var emitter = new EventEmitter();
	  var module = function callDefault() {
	    return module.default.apply(module, arguments);
	  };
	  var $invoke = connection.$invoke;
	  var $fire = connection.$fire;
	  var $listen = connection.$listen;
	  var $delisten = connection.$delisten;

	  // Define methods

	  {
	    var names = Object.keys(methods || {});
	    var dynamicProps = {};
	    var _iteratorNormalCompletion8 = true;
	    var _didIteratorError8 = false;
	    var _iteratorError8 = undefined;

	    try {
	      var _loop5 = function _loop5() {
	        var name = _step8.value;

	        module[name] = co.wrap(regeneratorRuntime.mark(function methodRedirect() {
	          for (var _len2 = arguments.length, params = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	            params[_key2] = arguments[_key2];
	          }

	          return regeneratorRuntime.wrap(function methodRedirect$(_context) {
	            while (1) {
	              switch (_context.prev = _context.next) {
	                case 0:
	                  _context.next = 2;
	                  return $invoke(name, params);

	                case 2:
	                  return _context.abrupt('return', _context.sent);

	                case 3:
	                case 'end':
	                  return _context.stop();
	              }
	            }
	          }, methodRedirect, this);
	        }));
	        if (getterPrefix.test(name)) {
	          var dynamicName = name.replace(getterPrefix, '');
	          dynamicProps[dynamicName] = Object.assign({
	            get: module[name]
	          }, dynamicProps[dynamicName]);
	        }
	        if (setterPrefix.test(name)) {
	          var _dynamicName = name.replace(setterPrefix, '');
	          dynamicProps[_dynamicName] = Object.assign({
	            set: module[name]
	          }, dynamicProps[_dynamicName]);
	        }
	      };

	      for (var _iterator8 = names[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
	        _loop5();
	      }
	    } catch (err) {
	      _didIteratorError8 = true;
	      _iteratorError8 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion8 && _iterator8.return) {
	          _iterator8.return();
	        }
	      } finally {
	        if (_didIteratorError8) {
	          throw _iteratorError8;
	        }
	      }
	    }

	    Object.defineProperties(module, Object.assign({}, dynamicProps));
	  }

	  Object.assign(module, {
	    emit: function emit(event, data) {
	      $fire(event, data);
	      return emitter.emit.apply(emitter, arguments);
	    },
	    on: function on(event, listener) {
	      return module.addListener.apply(module, arguments);
	    },
	    off: function off(event, listener) {
	      return module.removeListener.apply(module, arguments);
	    },
	    addListener: function addListener(event, listener) {
	      $listen(event, listener);
	      return emitter.addListener.apply(emitter, arguments);
	    },
	    removeListener: function removeListener(event, listener) {
	      $delisten(event, listener);
	      return emitter.removeListener.apply(emitter, arguments);
	    },
	    removeAllListeners: function removeAllListeners(event) {
	      var _iteratorNormalCompletion9 = true;
	      var _didIteratorError9 = false;
	      var _iteratorError9 = undefined;

	      try {
	        for (var _iterator9 = module.listeners(event)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
	          var listener = _step9.value;

	          $delisten(event, listener);
	        }
	      } catch (err) {
	        _didIteratorError9 = true;
	        _iteratorError9 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion9 && _iterator9.return) {
	            _iterator9.return();
	          }
	        } finally {
	          if (_didIteratorError9) {
	            throw _iteratorError9;
	          }
	        }
	      }

	      return emitter.removeAllListeners.apply(emitter, arguments);
	    },
	    once: function once(event, listener) {
	      var listenerWrap = function listenerWrap() {
	        listener.apply(undefined, arguments);
	        module.off(event, listenerWrap());
	      };
	      return module.on(event, listenerWrap);
	    }
	  });
	  var inherits = ['listeners', 'listenerCount', 'setMaxListeners', 'getMaxListeners', 'eventNames'];
	  var _iteratorNormalCompletion10 = true;
	  var _didIteratorError10 = false;
	  var _iteratorError10 = undefined;

	  try {
	    var _loop6 = function _loop6() {
	      var inherit = _step10.value;

	      if (emitter[inherit]) {
	        module[inherit] = emitter[inherit].bind(emitter);
	      } else {
	        module[inherit] = function () {
	          throw new Error(inherit + ' is not supported!');
	        };
	      }
	    };

	    for (var _iterator10 = inherits[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
	      _loop6();
	    }
	  } catch (err) {
	    _didIteratorError10 = true;
	    _iteratorError10 = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion10 && _iterator10.return) {
	        _iterator10.return();
	      }
	    } finally {
	      if (_didIteratorError10) {
	        throw _iteratorError10;
	      }
	    }
	  }

	  return module;
	}

	module.exports = ActorAccess;

/***/ },
/* 1061 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Authorize socket
	 * @function authorize
	 * @returns {Promise}
	 */
	'use strict';

	var _require = __webpack_require__(96);

	var AuthEvents = _require.AuthEvents;
	var AUTHENTICATION = AuthEvents.AUTHENTICATION;
	var AUTHENTICATED = AuthEvents.AUTHENTICATED;
	var UNAUTHORIZED = AuthEvents.UNAUTHORIZED;

	/** @lends authorize */

	function authorize(socket, auth) {
	  return new Promise(function (resolve, reject) {
	    socket.emit(AUTHENTICATION, auth);
	    var unauthorized = function unauthorized(err) {
	      socket.off(AUTHENTICATED, authenticated);
	      reject(err);
	    };
	    var authenticated = function authenticated() {
	      socket.off(UNAUTHORIZED, unauthorized);
	      resolve();
	    };
	    socket.once(UNAUTHORIZED, unauthorized);
	    socket.once(AUTHENTICATED, authenticated);
	  });
	}

	module.exports = authorize;

/***/ },
/* 1062 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create a caller instance
	 * @function create
	 * @returns {Object}
	 */
	'use strict';

	var SugoCaller = __webpack_require__(360);

	/** @lends create */
	function create() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  return new (Function.prototype.bind.apply(SugoCaller, [null].concat(args)))();
	}

	module.exports = create;

/***/ },
/* 1063 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 
	 * @module sugo-caller
	 */

	'use strict';

	var SugoCaller = __webpack_require__(360);
	var create = __webpack_require__(1062);

	var lib = create.bind(undefined);

	Object.assign(lib, SugoCaller, {
	  create: create,
	  SugoCaller: SugoCaller
	});

	module.exports = lib;

/***/ },
/* 1064 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Validator for caller
	 * @class CallerValidator
	 */
	'use strict';

	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var sgValidator = __webpack_require__(1046);
	var sgSchemas = __webpack_require__(1027);

	/** @lends CallerValidator */

	var ActorValidator = function () {
	  function ActorValidator() {
	    _classCallCheck(this, ActorValidator);

	    var s = this;
	  }

	  /**
	   * Validate spec of module
	   * @param {Object} specs
	   * @returns {?Error} - Found errors
	   */

	  _createClass(ActorValidator, [{
	    key: 'validateInterfaceSpecs',
	    value: function validateInterfaceSpecs(specs) {
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = Object.keys(specs)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var name = _step.value;

	          var errors = sgValidator(sgSchemas.moduleSpec).validate(specs[name]);
	          if (errors && errors.length > 0) {
	            var _errors$ = errors[0];
	            var dataPath = _errors$.dataPath;
	            var message = _errors$.message;

	            return new Error('[SUGO-Caller] spec "' + name + ' is invalid. ' + message + ' ( dataPath: "' + dataPath + '" )');
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      return null;
	    }

	    /**
	     * Validate spec of module with expected schema
	     * @param {Object} $spec - Specs to validate
	     * @param {Object} expected - JSON schema for expectation
	     */

	  }, {
	    key: 'validateInterfaceSpecWithExpected',
	    value: function validateInterfaceSpecWithExpected($spec) {
	      var expected = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	      var errors = sgValidator(expected).validate($spec);
	      if (errors && errors.length > 0) {
	        var _errors$2 = errors[0];
	        var dataPath = _errors$2.dataPath;
	        var message = _errors$2.message;

	        return new Error('[SUGO-Caller] Interface "' + $spec.name + '" is invalid. ' + message + ' ( dataPath: "' + dataPath + '" )');
	      }
	      return null;
	    }
	  }]);

	  return ActorValidator;
	}();

	module.exports = ActorValidator;

/***/ },
/* 1065 */
/***/ function(module, exports) {

	/**
	 * Events for actor
	 * @namespace ActorEvents
	 */
	'use strict';

	/** Setup actor */

	exports.SETUP = 'actor:setup';

	/** Teardown actor */
	exports.TEARDOWN = 'actor:teardown';

	/** Update actor */
	exports.UPDATE = 'actor:update';

/***/ },
/* 1066 */
/***/ function(module, exports) {

	/**
	 * Events for caller
	 * @namespace CallerEvents
	 */
	'use strict';

	/** Jon caller */

	exports.JOIN = 'caller:join';

	/** Leave caller */
	exports.LEAVE = 'caller:leave';

/***/ },
/* 1067 */
/***/ function(module, exports) {

	/**
	 * Constants of url
	 * @namespace HubUrl
	 */
	'use strict';

	module.exports = Object.assign(exports, {
	  /** URL for actors */
	  ACTOR_URL: '/actors',
	  /** URL for callers */
	  CALLER_URL: '/callers',
	  /** URL for observers */
	  OBSERVER_URL: '/observers',
	  /** URL for other hubs */
	  HUB_URL: '/hubs'
	});

/***/ },
/* 1068 */
/***/ function(module, exports) {

	/**
	 *  Names reserved
	 */
	'use strict';

	/** Reserved module names */

	exports.MODULE = 'module';

	/** Reserved method names */
	exports.METHOD = 'constructor,emit,addListener,removeListener,removeAllListeners,listeners,listenerCount,setMaxListeners,getMaxListeners,eventNames,on,off,once';

/***/ },
/* 1069 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Browser side agent for spot
	 * @function agent
	 */
	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var co = __webpack_require__(79);

	var brequest = __webpack_require__(857);

	var _require = __webpack_require__(361);

	var HubUrls = _require.HubUrls;
	var ACTOR_URL = HubUrls.ACTOR_URL;
	var CALLER_URL = HubUrls.CALLER_URL;
	var OBSERVER_URL = HubUrls.OBSERVER_URL;

	var SugoCloudAgent = function () {
	  function SugoCloudAgent() {
	    var url = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];

	    _classCallCheck(this, SugoCloudAgent);

	    var s = this;
	    s.baseUrl = url;
	  }

	  _createClass(SugoCloudAgent, [{
	    key: 'get',
	    value: function get(path, query) {
	      var s = this;
	      var url = s.baseUrl ? s.baseUrl + path : path;
	      return brequest.get(url, query);
	    }

	    /**
	     * List actors
	     * @returns {Promise}
	     */

	  }, {
	    key: 'actors',
	    value: function actors() {
	      var s = this;
	      return co(regeneratorRuntime.mark(function _callee() {
	        var _ref, body, data, included, includedDict;

	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return s.get(ACTOR_URL, {});

	              case 2:
	                _ref = _context.sent;
	                body = _ref.body;
	                data = body.data;
	                included = body.included;
	                includedDict = s._includedToDict(included);
	                return _context.abrupt('return', data.map(function (data) {
	                  return includedDict[data.type][data.id];
	                }));

	              case 8:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));
	    }

	    /**
	     * List callers
	     * @returns {Promise}
	     */

	  }, {
	    key: 'callers',
	    value: function callers() {
	      var s = this;
	      return co(regeneratorRuntime.mark(function _callee2() {
	        var _ref2, body, data, included, includedDict;

	        return regeneratorRuntime.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                _context2.next = 2;
	                return s.get(CALLER_URL, {});

	              case 2:
	                _ref2 = _context2.sent;
	                body = _ref2.body;
	                data = body.data;
	                included = body.included;
	                includedDict = s._includedToDict(included);
	                return _context2.abrupt('return', data.map(function (data) {
	                  return includedDict[data.type][data.id];
	                }));

	              case 8:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, this);
	      }));
	    }
	  }, {
	    key: '_includedToDict',
	    value: function _includedToDict(included) {
	      var dict = {};
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = included[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var entry = _step.value;
	          var type = entry.type;
	          var id = entry.id;

	          dict[type] = dict[type] || {};
	          dict[type][id] = entry.attributes;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      return dict;
	    }
	  }]);

	  return SugoCloudAgent;
	}();

	/** @lends agent */


	function agent(url) {
	  return new SugoCloudAgent(url);
	}

	Object.assign(agent, {
	  SugoCloudAgent: SugoCloudAgent
	});

	module.exports = agent;

/***/ },
/* 1070 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Root reference for iframes.
	 */

	var root;
	if (typeof window !== 'undefined') {
	  // Browser window
	  root = window;
	} else if (typeof self !== 'undefined') {
	  // Web Worker
	  root = self;
	} else {
	  // Other environments
	  console.warn("Using browser-only version of superagent in non-browser environment");
	  root = undefined;
	}

	var Emitter = __webpack_require__(179);
	var requestBase = __webpack_require__(1071);
	var isObject = __webpack_require__(362);

	/**
	 * Noop.
	 */

	function noop() {};

	/**
	 * Expose `request`.
	 */

	var request = module.exports = __webpack_require__(1072).bind(null, Request);

	/**
	 * Determine XHR.
	 */

	request.getXHR = function () {
	  if (root.XMLHttpRequest && (!root.location || 'file:' != root.location.protocol || !root.ActiveXObject)) {
	    return new XMLHttpRequest();
	  } else {
	    try {
	      return new ActiveXObject('Microsoft.XMLHTTP');
	    } catch (e) {}
	    try {
	      return new ActiveXObject('Msxml2.XMLHTTP.6.0');
	    } catch (e) {}
	    try {
	      return new ActiveXObject('Msxml2.XMLHTTP.3.0');
	    } catch (e) {}
	    try {
	      return new ActiveXObject('Msxml2.XMLHTTP');
	    } catch (e) {}
	  }
	  throw Error("Browser-only verison of superagent could not find XHR");
	};

	/**
	 * Removes leading and trailing whitespace, added to support IE.
	 *
	 * @param {String} s
	 * @return {String}
	 * @api private
	 */

	var trim = ''.trim ? function (s) {
	  return s.trim();
	} : function (s) {
	  return s.replace(/(^\s*|\s*$)/g, '');
	};

	/**
	 * Serialize the given `obj`.
	 *
	 * @param {Object} obj
	 * @return {String}
	 * @api private
	 */

	function serialize(obj) {
	  if (!isObject(obj)) return obj;
	  var pairs = [];
	  for (var key in obj) {
	    pushEncodedKeyValuePair(pairs, key, obj[key]);
	  }
	  return pairs.join('&');
	}

	/**
	 * Helps 'serialize' with serializing arrays.
	 * Mutates the pairs array.
	 *
	 * @param {Array} pairs
	 * @param {String} key
	 * @param {Mixed} val
	 */

	function pushEncodedKeyValuePair(pairs, key, val) {
	  if (val != null) {
	    if (Array.isArray(val)) {
	      val.forEach(function (v) {
	        pushEncodedKeyValuePair(pairs, key, v);
	      });
	    } else if (isObject(val)) {
	      for (var subkey in val) {
	        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);
	      }
	    } else {
	      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));
	    }
	  } else if (val === null) {
	    pairs.push(encodeURIComponent(key));
	  }
	}

	/**
	 * Expose serialization method.
	 */

	request.serializeObject = serialize;

	/**
	 * Parse the given x-www-form-urlencoded `str`.
	 *
	 * @param {String} str
	 * @return {Object}
	 * @api private
	 */

	function parseString(str) {
	  var obj = {};
	  var pairs = str.split('&');
	  var pair;
	  var pos;

	  for (var i = 0, len = pairs.length; i < len; ++i) {
	    pair = pairs[i];
	    pos = pair.indexOf('=');
	    if (pos == -1) {
	      obj[decodeURIComponent(pair)] = '';
	    } else {
	      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));
	    }
	  }

	  return obj;
	}

	/**
	 * Expose parser.
	 */

	request.parseString = parseString;

	/**
	 * Default MIME type map.
	 *
	 *     superagent.types.xml = 'application/xml';
	 *
	 */

	request.types = {
	  html: 'text/html',
	  json: 'application/json',
	  xml: 'application/xml',
	  urlencoded: 'application/x-www-form-urlencoded',
	  'form': 'application/x-www-form-urlencoded',
	  'form-data': 'application/x-www-form-urlencoded'
	};

	/**
	 * Default serialization map.
	 *
	 *     superagent.serialize['application/xml'] = function(obj){
	 *       return 'generated xml here';
	 *     };
	 *
	 */

	request.serialize = {
	  'application/x-www-form-urlencoded': serialize,
	  'application/json': JSON.stringify
	};

	/**
	 * Default parsers.
	 *
	 *     superagent.parse['application/xml'] = function(str){
	 *       return { object parsed from str };
	 *     };
	 *
	 */

	request.parse = {
	  'application/x-www-form-urlencoded': parseString,
	  'application/json': JSON.parse
	};

	/**
	 * Parse the given header `str` into
	 * an object containing the mapped fields.
	 *
	 * @param {String} str
	 * @return {Object}
	 * @api private
	 */

	function parseHeader(str) {
	  var lines = str.split(/\r?\n/);
	  var fields = {};
	  var index;
	  var line;
	  var field;
	  var val;

	  lines.pop(); // trailing CRLF

	  for (var i = 0, len = lines.length; i < len; ++i) {
	    line = lines[i];
	    index = line.indexOf(':');
	    field = line.slice(0, index).toLowerCase();
	    val = trim(line.slice(index + 1));
	    fields[field] = val;
	  }

	  return fields;
	}

	/**
	 * Check if `mime` is json or has +json structured syntax suffix.
	 *
	 * @param {String} mime
	 * @return {Boolean}
	 * @api private
	 */

	function isJSON(mime) {
	  return (/[\/+]json\b/.test(mime)
	  );
	}

	/**
	 * Return the mime type for the given `str`.
	 *
	 * @param {String} str
	 * @return {String}
	 * @api private
	 */

	function type(str) {
	  return str.split(/ *; */).shift();
	};

	/**
	 * Return header field parameters.
	 *
	 * @param {String} str
	 * @return {Object}
	 * @api private
	 */

	function params(str) {
	  return str.split(/ *; */).reduce(function (obj, str) {
	    var parts = str.split(/ *= */),
	        key = parts.shift(),
	        val = parts.shift();

	    if (key && val) obj[key] = val;
	    return obj;
	  }, {});
	};

	/**
	 * Initialize a new `Response` with the given `xhr`.
	 *
	 *  - set flags (.ok, .error, etc)
	 *  - parse header
	 *
	 * Examples:
	 *
	 *  Aliasing `superagent` as `request` is nice:
	 *
	 *      request = superagent;
	 *
	 *  We can use the promise-like API, or pass callbacks:
	 *
	 *      request.get('/').end(function(res){});
	 *      request.get('/', function(res){});
	 *
	 *  Sending data can be chained:
	 *
	 *      request
	 *        .post('/user')
	 *        .send({ name: 'tj' })
	 *        .end(function(res){});
	 *
	 *  Or passed to `.send()`:
	 *
	 *      request
	 *        .post('/user')
	 *        .send({ name: 'tj' }, function(res){});
	 *
	 *  Or passed to `.post()`:
	 *
	 *      request
	 *        .post('/user', { name: 'tj' })
	 *        .end(function(res){});
	 *
	 * Or further reduced to a single call for simple cases:
	 *
	 *      request
	 *        .post('/user', { name: 'tj' }, function(res){});
	 *
	 * @param {XMLHTTPRequest} xhr
	 * @param {Object} options
	 * @api private
	 */

	function Response(req, options) {
	  options = options || {};
	  this.req = req;
	  this.xhr = this.req.xhr;
	  // responseText is accessible only if responseType is '' or 'text' and on older browsers
	  this.text = this.req.method != 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;
	  this.statusText = this.req.xhr.statusText;
	  this._setStatusProperties(this.xhr.status);
	  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());
	  // getAllResponseHeaders sometimes falsely returns "" for CORS requests, but
	  // getResponseHeader still works. so we get content-type even if getting
	  // other headers fails.
	  this.header['content-type'] = this.xhr.getResponseHeader('content-type');
	  this._setHeaderProperties(this.header);
	  this.body = this.req.method != 'HEAD' ? this._parseBody(this.text ? this.text : this.xhr.response) : null;
	}

	/**
	 * Get case-insensitive `field` value.
	 *
	 * @param {String} field
	 * @return {String}
	 * @api public
	 */

	Response.prototype.get = function (field) {
	  return this.header[field.toLowerCase()];
	};

	/**
	 * Set header related properties:
	 *
	 *   - `.type` the content type without params
	 *
	 * A response of "Content-Type: text/plain; charset=utf-8"
	 * will provide you with a `.type` of "text/plain".
	 *
	 * @param {Object} header
	 * @api private
	 */

	Response.prototype._setHeaderProperties = function (header) {
	  // content-type
	  var ct = this.header['content-type'] || '';
	  this.type = type(ct);

	  // params
	  var obj = params(ct);
	  for (var key in obj) {
	    this[key] = obj[key];
	  }
	};

	/**
	 * Parse the given body `str`.
	 *
	 * Used for auto-parsing of bodies. Parsers
	 * are defined on the `superagent.parse` object.
	 *
	 * @param {String} str
	 * @return {Mixed}
	 * @api private
	 */

	Response.prototype._parseBody = function (str) {
	  var parse = request.parse[this.type];
	  if (!parse && isJSON(this.type)) {
	    parse = request.parse['application/json'];
	  }
	  return parse && str && (str.length || str instanceof Object) ? parse(str) : null;
	};

	/**
	 * Set flags such as `.ok` based on `status`.
	 *
	 * For example a 2xx response will give you a `.ok` of __true__
	 * whereas 5xx will be __false__ and `.error` will be __true__. The
	 * `.clientError` and `.serverError` are also available to be more
	 * specific, and `.statusType` is the class of error ranging from 1..5
	 * sometimes useful for mapping respond colors etc.
	 *
	 * "sugar" properties are also defined for common cases. Currently providing:
	 *
	 *   - .noContent
	 *   - .badRequest
	 *   - .unauthorized
	 *   - .notAcceptable
	 *   - .notFound
	 *
	 * @param {Number} status
	 * @api private
	 */

	Response.prototype._setStatusProperties = function (status) {
	  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
	  if (status === 1223) {
	    status = 204;
	  }

	  var type = status / 100 | 0;

	  // status / class
	  this.status = this.statusCode = status;
	  this.statusType = type;

	  // basics
	  this.info = 1 == type;
	  this.ok = 2 == type;
	  this.clientError = 4 == type;
	  this.serverError = 5 == type;
	  this.error = 4 == type || 5 == type ? this.toError() : false;

	  // sugar
	  this.accepted = 202 == status;
	  this.noContent = 204 == status;
	  this.badRequest = 400 == status;
	  this.unauthorized = 401 == status;
	  this.notAcceptable = 406 == status;
	  this.notFound = 404 == status;
	  this.forbidden = 403 == status;
	};

	/**
	 * Return an `Error` representative of this response.
	 *
	 * @return {Error}
	 * @api public
	 */

	Response.prototype.toError = function () {
	  var req = this.req;
	  var method = req.method;
	  var url = req.url;

	  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';
	  var err = new Error(msg);
	  err.status = this.status;
	  err.method = method;
	  err.url = url;

	  return err;
	};

	/**
	 * Expose `Response`.
	 */

	request.Response = Response;

	/**
	 * Initialize a new `Request` with the given `method` and `url`.
	 *
	 * @param {String} method
	 * @param {String} url
	 * @api public
	 */

	function Request(method, url) {
	  var self = this;
	  this._query = this._query || [];
	  this.method = method;
	  this.url = url;
	  this.header = {}; // preserves header name case
	  this._header = {}; // coerces header names to lowercase
	  this.on('end', function () {
	    var err = null;
	    var res = null;

	    try {
	      res = new Response(self);
	    } catch (e) {
	      err = new Error('Parser is unable to parse the response');
	      err.parse = true;
	      err.original = e;
	      // issue #675: return the raw response if the response parsing fails
	      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;
	      // issue #876: return the http status code if the response parsing fails
	      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;
	      return self.callback(err);
	    }

	    self.emit('response', res);

	    var new_err;
	    try {
	      if (res.status < 200 || res.status >= 300) {
	        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');
	        new_err.original = err;
	        new_err.response = res;
	        new_err.status = res.status;
	      }
	    } catch (e) {
	      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android
	    }

	    // #1000 don't catch errors from the callback to avoid double calling it
	    if (new_err) {
	      self.callback(new_err, res);
	    } else {
	      self.callback(null, res);
	    }
	  });
	}

	/**
	 * Mixin `Emitter` and `requestBase`.
	 */

	Emitter(Request.prototype);
	for (var key in requestBase) {
	  Request.prototype[key] = requestBase[key];
	}

	/**
	 * Set Content-Type to `type`, mapping values from `request.types`.
	 *
	 * Examples:
	 *
	 *      superagent.types.xml = 'application/xml';
	 *
	 *      request.post('/')
	 *        .type('xml')
	 *        .send(xmlstring)
	 *        .end(callback);
	 *
	 *      request.post('/')
	 *        .type('application/xml')
	 *        .send(xmlstring)
	 *        .end(callback);
	 *
	 * @param {String} type
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.type = function (type) {
	  this.set('Content-Type', request.types[type] || type);
	  return this;
	};

	/**
	 * Set responseType to `val`. Presently valid responseTypes are 'blob' and
	 * 'arraybuffer'.
	 *
	 * Examples:
	 *
	 *      req.get('/')
	 *        .responseType('blob')
	 *        .end(callback);
	 *
	 * @param {String} val
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.responseType = function (val) {
	  this._responseType = val;
	  return this;
	};

	/**
	 * Set Accept to `type`, mapping values from `request.types`.
	 *
	 * Examples:
	 *
	 *      superagent.types.json = 'application/json';
	 *
	 *      request.get('/agent')
	 *        .accept('json')
	 *        .end(callback);
	 *
	 *      request.get('/agent')
	 *        .accept('application/json')
	 *        .end(callback);
	 *
	 * @param {String} accept
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.accept = function (type) {
	  this.set('Accept', request.types[type] || type);
	  return this;
	};

	/**
	 * Set Authorization field value with `user` and `pass`.
	 *
	 * @param {String} user
	 * @param {String} pass
	 * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.auth = function (user, pass, options) {
	  if (!options) {
	    options = {
	      type: 'basic'
	    };
	  }

	  switch (options.type) {
	    case 'basic':
	      var str = btoa(user + ':' + pass);
	      this.set('Authorization', 'Basic ' + str);
	      break;

	    case 'auto':
	      this.username = user;
	      this.password = pass;
	      break;
	  }
	  return this;
	};

	/**
	* Add query-string `val`.
	*
	* Examples:
	*
	*   request.get('/shoes')
	*     .query('size=10')
	*     .query({ color: 'blue' })
	*
	* @param {Object|String} val
	* @return {Request} for chaining
	* @api public
	*/

	Request.prototype.query = function (val) {
	  if ('string' != typeof val) val = serialize(val);
	  if (val) this._query.push(val);
	  return this;
	};

	/**
	 * Queue the given `file` as an attachment to the specified `field`,
	 * with optional `filename`.
	 *
	 * ``` js
	 * request.post('/upload')
	 *   .attach('content', new Blob(['<a id="a"><b id="b">hey!</b></a>'], { type: "text/html"}))
	 *   .end(callback);
	 * ```
	 *
	 * @param {String} field
	 * @param {Blob|File} file
	 * @param {String} filename
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.attach = function (field, file, filename) {
	  this._getFormData().append(field, file, filename || file.name);
	  return this;
	};

	Request.prototype._getFormData = function () {
	  if (!this._formData) {
	    this._formData = new root.FormData();
	  }
	  return this._formData;
	};

	/**
	 * Invoke the callback with `err` and `res`
	 * and handle arity check.
	 *
	 * @param {Error} err
	 * @param {Response} res
	 * @api private
	 */

	Request.prototype.callback = function (err, res) {
	  var fn = this._callback;
	  this.clearTimeout();
	  fn(err, res);
	};

	/**
	 * Invoke callback with x-domain error.
	 *
	 * @api private
	 */

	Request.prototype.crossDomainError = function () {
	  var err = new Error('Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');
	  err.crossDomain = true;

	  err.status = this.status;
	  err.method = this.method;
	  err.url = this.url;

	  this.callback(err);
	};

	/**
	 * Invoke callback with timeout error.
	 *
	 * @api private
	 */

	Request.prototype._timeoutError = function () {
	  var timeout = this._timeout;
	  var err = new Error('timeout of ' + timeout + 'ms exceeded');
	  err.timeout = timeout;
	  this.callback(err);
	};

	/**
	 * Compose querystring to append to req.url
	 *
	 * @api private
	 */

	Request.prototype._appendQueryString = function () {
	  var query = this._query.join('&');
	  if (query) {
	    this.url += ~this.url.indexOf('?') ? '&' + query : '?' + query;
	  }
	};

	/**
	 * Initiate request, invoking callback `fn(res)`
	 * with an instanceof `Response`.
	 *
	 * @param {Function} fn
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.end = function (fn) {
	  var self = this;
	  var xhr = this.xhr = request.getXHR();
	  var timeout = this._timeout;
	  var data = this._formData || this._data;

	  // store callback
	  this._callback = fn || noop;

	  // state change
	  xhr.onreadystatechange = function () {
	    if (4 != xhr.readyState) return;

	    // In IE9, reads to any property (e.g. status) off of an aborted XHR will
	    // result in the error "Could not complete the operation due to error c00c023f"
	    var status;
	    try {
	      status = xhr.status;
	    } catch (e) {
	      status = 0;
	    }

	    if (0 == status) {
	      if (self.timedout) return self._timeoutError();
	      if (self._aborted) return;
	      return self.crossDomainError();
	    }
	    self.emit('end');
	  };

	  // progress
	  var handleProgress = function handleProgress(e) {
	    if (e.total > 0) {
	      e.percent = e.loaded / e.total * 100;
	    }
	    e.direction = 'download';
	    self.emit('progress', e);
	  };
	  if (this.hasListeners('progress')) {
	    xhr.onprogress = handleProgress;
	  }
	  try {
	    if (xhr.upload && this.hasListeners('progress')) {
	      xhr.upload.onprogress = handleProgress;
	    }
	  } catch (e) {}
	  // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.
	  // Reported here:
	  // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context


	  // timeout
	  if (timeout && !this._timer) {
	    this._timer = setTimeout(function () {
	      self.timedout = true;
	      self.abort();
	    }, timeout);
	  }

	  // querystring
	  this._appendQueryString();

	  // initiate request
	  if (this.username && this.password) {
	    xhr.open(this.method, this.url, true, this.username, this.password);
	  } else {
	    xhr.open(this.method, this.url, true);
	  }

	  // CORS
	  if (this._withCredentials) xhr.withCredentials = true;

	  // body
	  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {
	    // serialize stuff
	    var contentType = this._header['content-type'];
	    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];
	    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];
	    if (serialize) data = serialize(data);
	  }

	  // set header fields
	  for (var field in this.header) {
	    if (null == this.header[field]) continue;
	    xhr.setRequestHeader(field, this.header[field]);
	  }

	  if (this._responseType) {
	    xhr.responseType = this._responseType;
	  }

	  // send stuff
	  this.emit('request', this);

	  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)
	  // We need null here if data is undefined
	  xhr.send(typeof data !== 'undefined' ? data : null);
	  return this;
	};

	/**
	 * Expose `Request`.
	 */

	request.Request = Request;

	/**
	 * GET `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} [data] or fn
	 * @param {Function} [fn]
	 * @return {Request}
	 * @api public
	 */

	request.get = function (url, data, fn) {
	  var req = request('GET', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.query(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * HEAD `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} [data] or fn
	 * @param {Function} [fn]
	 * @return {Request}
	 * @api public
	 */

	request.head = function (url, data, fn) {
	  var req = request('HEAD', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * OPTIONS query to `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} [data] or fn
	 * @param {Function} [fn]
	 * @return {Request}
	 * @api public
	 */

	request.options = function (url, data, fn) {
	  var req = request('OPTIONS', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * DELETE `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Function} [fn]
	 * @return {Request}
	 * @api public
	 */

	function del(url, fn) {
	  var req = request('DELETE', url);
	  if (fn) req.end(fn);
	  return req;
	};

	request['del'] = del;
	request['delete'] = del;

	/**
	 * PATCH `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed} [data]
	 * @param {Function} [fn]
	 * @return {Request}
	 * @api public
	 */

	request.patch = function (url, data, fn) {
	  var req = request('PATCH', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * POST `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed} [data]
	 * @param {Function} [fn]
	 * @return {Request}
	 * @api public
	 */

	request.post = function (url, data, fn) {
	  var req = request('POST', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * PUT `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} [data] or fn
	 * @param {Function} [fn]
	 * @return {Request}
	 * @api public
	 */

	request.put = function (url, data, fn) {
	  var req = request('PUT', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

/***/ },
/* 1071 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Module of mixed-in functions shared between node and client code
	 */
	var isObject = __webpack_require__(362);

	/**
	 * Clear previous timeout.
	 *
	 * @return {Request} for chaining
	 * @api public
	 */

	exports.clearTimeout = function _clearTimeout() {
	  this._timeout = 0;
	  clearTimeout(this._timer);
	  return this;
	};

	/**
	 * Override default response body parser
	 *
	 * This function will be called to convert incoming data into request.body
	 *
	 * @param {Function}
	 * @api public
	 */

	exports.parse = function parse(fn) {
	  this._parser = fn;
	  return this;
	};

	/**
	 * Override default request body serializer
	 *
	 * This function will be called to convert data set via .send or .attach into payload to send
	 *
	 * @param {Function}
	 * @api public
	 */

	exports.serialize = function serialize(fn) {
	  this._serializer = fn;
	  return this;
	};

	/**
	 * Set timeout to `ms`.
	 *
	 * @param {Number} ms
	 * @return {Request} for chaining
	 * @api public
	 */

	exports.timeout = function timeout(ms) {
	  this._timeout = ms;
	  return this;
	};

	/**
	 * Promise support
	 *
	 * @param {Function} resolve
	 * @param {Function} reject
	 * @return {Request}
	 */

	exports.then = function then(resolve, reject) {
	  if (!this._fullfilledPromise) {
	    var self = this;
	    this._fullfilledPromise = new Promise(function (innerResolve, innerReject) {
	      self.end(function (err, res) {
	        if (err) innerReject(err);else innerResolve(res);
	      });
	    });
	  }
	  return this._fullfilledPromise.then(resolve, reject);
	};

	/**
	 * Allow for extension
	 */

	exports.use = function use(fn) {
	  fn(this);
	  return this;
	};

	/**
	 * Get request header `field`.
	 * Case-insensitive.
	 *
	 * @param {String} field
	 * @return {String}
	 * @api public
	 */

	exports.get = function (field) {
	  return this._header[field.toLowerCase()];
	};

	/**
	 * Get case-insensitive header `field` value.
	 * This is a deprecated internal API. Use `.get(field)` instead.
	 *
	 * (getHeader is no longer used internally by the superagent code base)
	 *
	 * @param {String} field
	 * @return {String}
	 * @api private
	 * @deprecated
	 */

	exports.getHeader = exports.get;

	/**
	 * Set header `field` to `val`, or multiple fields with one object.
	 * Case-insensitive.
	 *
	 * Examples:
	 *
	 *      req.get('/')
	 *        .set('Accept', 'application/json')
	 *        .set('X-API-Key', 'foobar')
	 *        .end(callback);
	 *
	 *      req.get('/')
	 *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })
	 *        .end(callback);
	 *
	 * @param {String|Object} field
	 * @param {String} val
	 * @return {Request} for chaining
	 * @api public
	 */

	exports.set = function (field, val) {
	  if (isObject(field)) {
	    for (var key in field) {
	      this.set(key, field[key]);
	    }
	    return this;
	  }
	  this._header[field.toLowerCase()] = val;
	  this.header[field] = val;
	  return this;
	};

	/**
	 * Remove header `field`.
	 * Case-insensitive.
	 *
	 * Example:
	 *
	 *      req.get('/')
	 *        .unset('User-Agent')
	 *        .end(callback);
	 *
	 * @param {String} field
	 */
	exports.unset = function (field) {
	  delete this._header[field.toLowerCase()];
	  delete this.header[field];
	  return this;
	};

	/**
	 * Write the field `name` and `val` for "multipart/form-data"
	 * request bodies.
	 *
	 * ``` js
	 * request.post('/upload')
	 *   .field('foo', 'bar')
	 *   .end(callback);
	 * ```
	 *
	 * @param {String} name
	 * @param {String|Blob|File|Buffer|fs.ReadStream} val
	 * @return {Request} for chaining
	 * @api public
	 */
	exports.field = function (name, val) {
	  this._getFormData().append(name, val);
	  return this;
	};

	/**
	 * Abort the request, and clear potential timeout.
	 *
	 * @return {Request}
	 * @api public
	 */
	exports.abort = function () {
	  if (this._aborted) {
	    return this;
	  }
	  this._aborted = true;
	  this.xhr && this.xhr.abort(); // browser
	  this.req && this.req.abort(); // node
	  this.clearTimeout();
	  this.emit('abort');
	  return this;
	};

	/**
	 * Enable transmission of cookies with x-domain requests.
	 *
	 * Note that for this to work the origin must not be
	 * using "Access-Control-Allow-Origin" with a wildcard,
	 * and also must set "Access-Control-Allow-Credentials"
	 * to "true".
	 *
	 * @api public
	 */

	exports.withCredentials = function () {
	  // This is browser-only functionality. Node side is no-op.
	  this._withCredentials = true;
	  return this;
	};

	/**
	 * Set the max redirects to `n`. Does noting in browser XHR implementation.
	 *
	 * @param {Number} n
	 * @return {Request} for chaining
	 * @api public
	 */

	exports.redirects = function (n) {
	  this._maxRedirects = n;
	  return this;
	};

	/**
	 * Convert to a plain javascript object (not JSON string) of scalar properties.
	 * Note as this method is designed to return a useful non-this value,
	 * it cannot be chained.
	 *
	 * @return {Object} describing method, url, and data of this request
	 * @api public
	 */

	exports.toJSON = function () {
	  return {
	    method: this.method,
	    url: this.url,
	    data: this._data,
	    headers: this._header
	  };
	};

	/**
	 * Check if `obj` is a host object,
	 * we don't want to serialize these :)
	 *
	 * TODO: future proof, move to compoent land
	 *
	 * @param {Object} obj
	 * @return {Boolean}
	 * @api private
	 */

	exports._isHost = function _isHost(obj) {
	  var str = {}.toString.call(obj);

	  switch (str) {
	    case '[object File]':
	    case '[object Blob]':
	    case '[object FormData]':
	      return true;
	    default:
	      return false;
	  }
	};

	/**
	 * Send `data` as the request body, defaulting the `.type()` to "json" when
	 * an object is given.
	 *
	 * Examples:
	 *
	 *       // manual json
	 *       request.post('/user')
	 *         .type('json')
	 *         .send('{"name":"tj"}')
	 *         .end(callback)
	 *
	 *       // auto json
	 *       request.post('/user')
	 *         .send({ name: 'tj' })
	 *         .end(callback)
	 *
	 *       // manual x-www-form-urlencoded
	 *       request.post('/user')
	 *         .type('form')
	 *         .send('name=tj')
	 *         .end(callback)
	 *
	 *       // auto x-www-form-urlencoded
	 *       request.post('/user')
	 *         .type('form')
	 *         .send({ name: 'tj' })
	 *         .end(callback)
	 *
	 *       // defaults to x-www-form-urlencoded
	 *      request.post('/user')
	 *        .send('name=tobi')
	 *        .send('species=ferret')
	 *        .end(callback)
	 *
	 * @param {String|Object} data
	 * @return {Request} for chaining
	 * @api public
	 */

	exports.send = function (data) {
	  var obj = isObject(data);
	  var type = this._header['content-type'];

	  // merge
	  if (obj && isObject(this._data)) {
	    for (var key in data) {
	      this._data[key] = data[key];
	    }
	  } else if ('string' == typeof data) {
	    // default to x-www-form-urlencoded
	    if (!type) this.type('form');
	    type = this._header['content-type'];
	    if ('application/x-www-form-urlencoded' == type) {
	      this._data = this._data ? this._data + '&' + data : data;
	    } else {
	      this._data = (this._data || '') + data;
	    }
	  } else {
	    this._data = data;
	  }

	  if (!obj || this._isHost(data)) return this;

	  // default to json
	  if (!type) this.type('json');
	  return this;
	};

/***/ },
/* 1072 */
/***/ function(module, exports) {

	'use strict';

	// The node and browser modules expose versions of this with the
	// appropriate constructor function bound as first argument
	/**
	 * Issue a request:
	 *
	 * Examples:
	 *
	 *    request('GET', '/users').end(callback)
	 *    request('/users').end(callback)
	 *    request('/users', callback)
	 *
	 * @param {String} method
	 * @param {String|Function} url or callback
	 * @return {Request}
	 * @api public
	 */

	function request(RequestConstructor, method, url) {
	  // callback
	  if ('function' == typeof url) {
	    return new RequestConstructor('GET', method).end(url);
	  }

	  // url first
	  if (2 == arguments.length) {
	    return new RequestConstructor('GET', method);
	  }

	  return new RequestConstructor(method, url);
	}

	module.exports = request;

/***/ },
/* 1073 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(1074);

/***/ },
/* 1074 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _ponyfill = __webpack_require__(1075);

	var _ponyfill2 = _interopRequireDefault(_ponyfill);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var root = undefined; /* global window */

	if (typeof global !== 'undefined') {
		root = global;
	} else if (typeof window !== 'undefined') {
		root = window;
	}

	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 1075 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;

		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}

		return result;
	};

/***/ },
/* 1076 */
64,
/* 1077 */
/***/ function(module, exports) {

	"use strict";

	module.exports = toArray;

	function toArray(list, index) {
	    var array = [];

	    index = index || 0;

	    for (var i = index || 0; i < list.length; i++) {
	        array[i - index] = list[i];
	    }

	    return array;
	}

/***/ },
/* 1078 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*
	Author: Geraint Luff and others
	Year: 2013

	This code is released into the "public domain" by its author(s).  Anybody may use, alter and distribute the code without restriction.  The author makes no guarantees, and takes no liability of any kind for use of this code.

	If you find a bug or make an improvement, it would be courteous to let the author know, but it is not compulsory.
	*/
	(function (global, factory) {
		if (true) {
			// AMD. Register as an anonymous module.
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			// CommonJS. Define export.
			module.exports = factory();
		} else {
			// Browser globals
			global.tv4 = factory();
		}
	})(undefined, function () {

		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FObject%2Fkeys
		if (!Object.keys) {
			Object.keys = function () {
				var hasOwnProperty = Object.prototype.hasOwnProperty,
				    hasDontEnumBug = !{ toString: null }.propertyIsEnumerable('toString'),
				    dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],
				    dontEnumsLength = dontEnums.length;

				return function (obj) {
					if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && typeof obj !== 'function' || obj === null) {
						throw new TypeError('Object.keys called on non-object');
					}

					var result = [];

					for (var prop in obj) {
						if (hasOwnProperty.call(obj, prop)) {
							result.push(prop);
						}
					}

					if (hasDontEnumBug) {
						for (var i = 0; i < dontEnumsLength; i++) {
							if (hasOwnProperty.call(obj, dontEnums[i])) {
								result.push(dontEnums[i]);
							}
						}
					}
					return result;
				};
			}();
		}
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create
		if (!Object.create) {
			Object.create = function () {
				function F() {}

				return function (o) {
					if (arguments.length !== 1) {
						throw new Error('Object.create implementation only accepts one parameter.');
					}
					F.prototype = o;
					return new F();
				};
			}();
		}
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FisArray
		if (!Array.isArray) {
			Array.isArray = function (vArg) {
				return Object.prototype.toString.call(vArg) === "[object Array]";
			};
		}
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FindexOf
		if (!Array.prototype.indexOf) {
			Array.prototype.indexOf = function (searchElement /*, fromIndex */) {
				if (this === null) {
					throw new TypeError();
				}
				var t = Object(this);
				var len = t.length >>> 0;

				if (len === 0) {
					return -1;
				}
				var n = 0;
				if (arguments.length > 1) {
					n = Number(arguments[1]);
					if (n !== n) {
						// shortcut for verifying if it's NaN
						n = 0;
					} else if (n !== 0 && n !== Infinity && n !== -Infinity) {
						n = (n > 0 || -1) * Math.floor(Math.abs(n));
					}
				}
				if (n >= len) {
					return -1;
				}
				var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
				for (; k < len; k++) {
					if (k in t && t[k] === searchElement) {
						return k;
					}
				}
				return -1;
			};
		}

		// Grungey Object.isFrozen hack
		if (!Object.isFrozen) {
			Object.isFrozen = function (obj) {
				var key = "tv4_test_frozen_key";
				while (obj.hasOwnProperty(key)) {
					key += Math.random();
				}
				try {
					obj[key] = true;
					delete obj[key];
					return false;
				} catch (e) {
					return true;
				}
			};
		}
		// Based on: https://github.com/geraintluff/uri-templates, but with all the de-substitution stuff removed

		var uriTemplateGlobalModifiers = {
			"+": true,
			"#": true,
			".": true,
			"/": true,
			";": true,
			"?": true,
			"&": true
		};
		var uriTemplateSuffices = {
			"*": true
		};

		function notReallyPercentEncode(string) {
			return encodeURI(string).replace(/%25[0-9][0-9]/g, function (doubleEncoded) {
				return "%" + doubleEncoded.substring(3);
			});
		}

		function uriTemplateSubstitution(spec) {
			var modifier = "";
			if (uriTemplateGlobalModifiers[spec.charAt(0)]) {
				modifier = spec.charAt(0);
				spec = spec.substring(1);
			}
			var separator = "";
			var prefix = "";
			var shouldEscape = true;
			var showVariables = false;
			var trimEmptyString = false;
			if (modifier === '+') {
				shouldEscape = false;
			} else if (modifier === ".") {
				prefix = ".";
				separator = ".";
			} else if (modifier === "/") {
				prefix = "/";
				separator = "/";
			} else if (modifier === '#') {
				prefix = "#";
				shouldEscape = false;
			} else if (modifier === ';') {
				prefix = ";";
				separator = ";";
				showVariables = true;
				trimEmptyString = true;
			} else if (modifier === '?') {
				prefix = "?";
				separator = "&";
				showVariables = true;
			} else if (modifier === '&') {
				prefix = "&";
				separator = "&";
				showVariables = true;
			}

			var varNames = [];
			var varList = spec.split(",");
			var varSpecs = [];
			var varSpecMap = {};
			for (var i = 0; i < varList.length; i++) {
				var varName = varList[i];
				var truncate = null;
				if (varName.indexOf(":") !== -1) {
					var parts = varName.split(":");
					varName = parts[0];
					truncate = parseInt(parts[1], 10);
				}
				var suffices = {};
				while (uriTemplateSuffices[varName.charAt(varName.length - 1)]) {
					suffices[varName.charAt(varName.length - 1)] = true;
					varName = varName.substring(0, varName.length - 1);
				}
				var varSpec = {
					truncate: truncate,
					name: varName,
					suffices: suffices
				};
				varSpecs.push(varSpec);
				varSpecMap[varName] = varSpec;
				varNames.push(varName);
			}
			var subFunction = function subFunction(valueFunction) {
				var result = "";
				var startIndex = 0;
				for (var i = 0; i < varSpecs.length; i++) {
					var varSpec = varSpecs[i];
					var value = valueFunction(varSpec.name);
					if (value === null || value === undefined || Array.isArray(value) && value.length === 0 || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && Object.keys(value).length === 0) {
						startIndex++;
						continue;
					}
					if (i === startIndex) {
						result += prefix;
					} else {
						result += separator || ",";
					}
					if (Array.isArray(value)) {
						if (showVariables) {
							result += varSpec.name + "=";
						}
						for (var j = 0; j < value.length; j++) {
							if (j > 0) {
								result += varSpec.suffices['*'] ? separator || "," : ",";
								if (varSpec.suffices['*'] && showVariables) {
									result += varSpec.name + "=";
								}
							}
							result += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, "%21") : notReallyPercentEncode(value[j]);
						}
					} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === "object") {
						if (showVariables && !varSpec.suffices['*']) {
							result += varSpec.name + "=";
						}
						var first = true;
						for (var key in value) {
							if (!first) {
								result += varSpec.suffices['*'] ? separator || "," : ",";
							}
							first = false;
							result += shouldEscape ? encodeURIComponent(key).replace(/!/g, "%21") : notReallyPercentEncode(key);
							result += varSpec.suffices['*'] ? '=' : ",";
							result += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, "%21") : notReallyPercentEncode(value[key]);
						}
					} else {
						if (showVariables) {
							result += varSpec.name;
							if (!trimEmptyString || value !== "") {
								result += "=";
							}
						}
						if (varSpec.truncate != null) {
							value = value.substring(0, varSpec.truncate);
						}
						result += shouldEscape ? encodeURIComponent(value).replace(/!/g, "%21") : notReallyPercentEncode(value);
					}
				}
				return result;
			};
			subFunction.varNames = varNames;
			return {
				prefix: prefix,
				substitution: subFunction
			};
		}

		function UriTemplate(template) {
			if (!(this instanceof UriTemplate)) {
				return new UriTemplate(template);
			}
			var parts = template.split("{");
			var textParts = [parts.shift()];
			var prefixes = [];
			var substitutions = [];
			var varNames = [];
			while (parts.length > 0) {
				var part = parts.shift();
				var spec = part.split("}")[0];
				var remainder = part.substring(spec.length + 1);
				var funcs = uriTemplateSubstitution(spec);
				substitutions.push(funcs.substitution);
				prefixes.push(funcs.prefix);
				textParts.push(remainder);
				varNames = varNames.concat(funcs.substitution.varNames);
			}
			this.fill = function (valueFunction) {
				var result = textParts[0];
				for (var i = 0; i < substitutions.length; i++) {
					var substitution = substitutions[i];
					result += substitution(valueFunction);
					result += textParts[i + 1];
				}
				return result;
			};
			this.varNames = varNames;
			this.template = template;
		}
		UriTemplate.prototype = {
			toString: function toString() {
				return this.template;
			},
			fillFromObject: function fillFromObject(obj) {
				return this.fill(function (varName) {
					return obj[varName];
				});
			}
		};
		var ValidatorContext = function ValidatorContext(parent, collectMultiple, errorReporter, checkRecursive, trackUnknownProperties) {
			this.missing = [];
			this.missingMap = {};
			this.formatValidators = parent ? Object.create(parent.formatValidators) : {};
			this.schemas = parent ? Object.create(parent.schemas) : {};
			this.collectMultiple = collectMultiple;
			this.errors = [];
			this.handleError = collectMultiple ? this.collectError : this.returnError;
			if (checkRecursive) {
				this.checkRecursive = true;
				this.scanned = [];
				this.scannedFrozen = [];
				this.scannedFrozenSchemas = [];
				this.scannedFrozenValidationErrors = [];
				this.validatedSchemasKey = 'tv4_validation_id';
				this.validationErrorsKey = 'tv4_validation_errors_id';
			}
			if (trackUnknownProperties) {
				this.trackUnknownProperties = true;
				this.knownPropertyPaths = {};
				this.unknownPropertyPaths = {};
			}
			this.errorReporter = errorReporter || defaultErrorReporter('en');
			if (typeof this.errorReporter === 'string') {
				throw new Error('debug');
			}
			this.definedKeywords = {};
			if (parent) {
				for (var key in parent.definedKeywords) {
					this.definedKeywords[key] = parent.definedKeywords[key].slice(0);
				}
			}
		};
		ValidatorContext.prototype.defineKeyword = function (keyword, keywordFunction) {
			this.definedKeywords[keyword] = this.definedKeywords[keyword] || [];
			this.definedKeywords[keyword].push(keywordFunction);
		};
		ValidatorContext.prototype.createError = function (code, messageParams, dataPath, schemaPath, subErrors, data, schema) {
			var error = new ValidationError(code, messageParams, dataPath, schemaPath, subErrors);
			error.message = this.errorReporter(error, data, schema);
			return error;
		};
		ValidatorContext.prototype.returnError = function (error) {
			return error;
		};
		ValidatorContext.prototype.collectError = function (error) {
			if (error) {
				this.errors.push(error);
			}
			return null;
		};
		ValidatorContext.prototype.prefixErrors = function (startIndex, dataPath, schemaPath) {
			for (var i = startIndex; i < this.errors.length; i++) {
				this.errors[i] = this.errors[i].prefixWith(dataPath, schemaPath);
			}
			return this;
		};
		ValidatorContext.prototype.banUnknownProperties = function (data, schema) {
			for (var unknownPath in this.unknownPropertyPaths) {
				var error = this.createError(ErrorCodes.UNKNOWN_PROPERTY, { path: unknownPath }, unknownPath, "", null, data, schema);
				var result = this.handleError(error);
				if (result) {
					return result;
				}
			}
			return null;
		};

		ValidatorContext.prototype.addFormat = function (format, validator) {
			if ((typeof format === 'undefined' ? 'undefined' : _typeof(format)) === 'object') {
				for (var key in format) {
					this.addFormat(key, format[key]);
				}
				return this;
			}
			this.formatValidators[format] = validator;
		};
		ValidatorContext.prototype.resolveRefs = function (schema, urlHistory) {
			if (schema['$ref'] !== undefined) {
				urlHistory = urlHistory || {};
				if (urlHistory[schema['$ref']]) {
					return this.createError(ErrorCodes.CIRCULAR_REFERENCE, { urls: Object.keys(urlHistory).join(', ') }, '', '', null, undefined, schema);
				}
				urlHistory[schema['$ref']] = true;
				schema = this.getSchema(schema['$ref'], urlHistory);
			}
			return schema;
		};
		ValidatorContext.prototype.getSchema = function (url, urlHistory) {
			var schema;
			if (this.schemas[url] !== undefined) {
				schema = this.schemas[url];
				return this.resolveRefs(schema, urlHistory);
			}
			var baseUrl = url;
			var fragment = "";
			if (url.indexOf('#') !== -1) {
				fragment = url.substring(url.indexOf("#") + 1);
				baseUrl = url.substring(0, url.indexOf("#"));
			}
			if (_typeof(this.schemas[baseUrl]) === 'object') {
				schema = this.schemas[baseUrl];
				var pointerPath = decodeURIComponent(fragment);
				if (pointerPath === "") {
					return this.resolveRefs(schema, urlHistory);
				} else if (pointerPath.charAt(0) !== "/") {
					return undefined;
				}
				var parts = pointerPath.split("/").slice(1);
				for (var i = 0; i < parts.length; i++) {
					var component = parts[i].replace(/~1/g, "/").replace(/~0/g, "~");
					if (schema[component] === undefined) {
						schema = undefined;
						break;
					}
					schema = schema[component];
				}
				if (schema !== undefined) {
					return this.resolveRefs(schema, urlHistory);
				}
			}
			if (this.missing[baseUrl] === undefined) {
				this.missing.push(baseUrl);
				this.missing[baseUrl] = baseUrl;
				this.missingMap[baseUrl] = baseUrl;
			}
		};
		ValidatorContext.prototype.searchSchemas = function (schema, url) {
			if (Array.isArray(schema)) {
				for (var i = 0; i < schema.length; i++) {
					this.searchSchemas(schema[i], url);
				}
			} else if (schema && (typeof schema === 'undefined' ? 'undefined' : _typeof(schema)) === "object") {
				if (typeof schema.id === "string") {
					if (isTrustedUrl(url, schema.id)) {
						if (this.schemas[schema.id] === undefined) {
							this.schemas[schema.id] = schema;
						}
					}
				}
				for (var key in schema) {
					if (key !== "enum") {
						if (_typeof(schema[key]) === "object") {
							this.searchSchemas(schema[key], url);
						} else if (key === "$ref") {
							var uri = getDocumentUri(schema[key]);
							if (uri && this.schemas[uri] === undefined && this.missingMap[uri] === undefined) {
								this.missingMap[uri] = uri;
							}
						}
					}
				}
			}
		};
		ValidatorContext.prototype.addSchema = function (url, schema) {
			//overload
			if (typeof url !== 'string' || typeof schema === 'undefined') {
				if ((typeof url === 'undefined' ? 'undefined' : _typeof(url)) === 'object' && typeof url.id === 'string') {
					schema = url;
					url = schema.id;
				} else {
					return;
				}
			}
			if (url === getDocumentUri(url) + "#") {
				// Remove empty fragment
				url = getDocumentUri(url);
			}
			this.schemas[url] = schema;
			delete this.missingMap[url];
			normSchema(schema, url);
			this.searchSchemas(schema, url);
		};

		ValidatorContext.prototype.getSchemaMap = function () {
			var map = {};
			for (var key in this.schemas) {
				map[key] = this.schemas[key];
			}
			return map;
		};

		ValidatorContext.prototype.getSchemaUris = function (filterRegExp) {
			var list = [];
			for (var key in this.schemas) {
				if (!filterRegExp || filterRegExp.test(key)) {
					list.push(key);
				}
			}
			return list;
		};

		ValidatorContext.prototype.getMissingUris = function (filterRegExp) {
			var list = [];
			for (var key in this.missingMap) {
				if (!filterRegExp || filterRegExp.test(key)) {
					list.push(key);
				}
			}
			return list;
		};

		ValidatorContext.prototype.dropSchemas = function () {
			this.schemas = {};
			this.reset();
		};
		ValidatorContext.prototype.reset = function () {
			this.missing = [];
			this.missingMap = {};
			this.errors = [];
		};

		ValidatorContext.prototype.validateAll = function (data, schema, dataPathParts, schemaPathParts, dataPointerPath) {
			var topLevel;
			schema = this.resolveRefs(schema);
			if (!schema) {
				return null;
			} else if (schema instanceof ValidationError) {
				this.errors.push(schema);
				return schema;
			}

			var startErrorCount = this.errors.length;
			var frozenIndex,
			    scannedFrozenSchemaIndex = null,
			    scannedSchemasIndex = null;
			if (this.checkRecursive && data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {
				topLevel = !this.scanned.length;
				if (data[this.validatedSchemasKey]) {
					var schemaIndex = data[this.validatedSchemasKey].indexOf(schema);
					if (schemaIndex !== -1) {
						this.errors = this.errors.concat(data[this.validationErrorsKey][schemaIndex]);
						return null;
					}
				}
				if (Object.isFrozen(data)) {
					frozenIndex = this.scannedFrozen.indexOf(data);
					if (frozenIndex !== -1) {
						var frozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].indexOf(schema);
						if (frozenSchemaIndex !== -1) {
							this.errors = this.errors.concat(this.scannedFrozenValidationErrors[frozenIndex][frozenSchemaIndex]);
							return null;
						}
					}
				}
				this.scanned.push(data);
				if (Object.isFrozen(data)) {
					if (frozenIndex === -1) {
						frozenIndex = this.scannedFrozen.length;
						this.scannedFrozen.push(data);
						this.scannedFrozenSchemas.push([]);
					}
					scannedFrozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].length;
					this.scannedFrozenSchemas[frozenIndex][scannedFrozenSchemaIndex] = schema;
					this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = [];
				} else {
					if (!data[this.validatedSchemasKey]) {
						try {
							Object.defineProperty(data, this.validatedSchemasKey, {
								value: [],
								configurable: true
							});
							Object.defineProperty(data, this.validationErrorsKey, {
								value: [],
								configurable: true
							});
						} catch (e) {
							//IE 7/8 workaround
							data[this.validatedSchemasKey] = [];
							data[this.validationErrorsKey] = [];
						}
					}
					scannedSchemasIndex = data[this.validatedSchemasKey].length;
					data[this.validatedSchemasKey][scannedSchemasIndex] = schema;
					data[this.validationErrorsKey][scannedSchemasIndex] = [];
				}
			}

			var errorCount = this.errors.length;
			var error = this.validateBasic(data, schema, dataPointerPath) || this.validateNumeric(data, schema, dataPointerPath) || this.validateString(data, schema, dataPointerPath) || this.validateArray(data, schema, dataPointerPath) || this.validateObject(data, schema, dataPointerPath) || this.validateCombinations(data, schema, dataPointerPath) || this.validateHypermedia(data, schema, dataPointerPath) || this.validateFormat(data, schema, dataPointerPath) || this.validateDefinedKeywords(data, schema, dataPointerPath) || null;

			if (topLevel) {
				while (this.scanned.length) {
					var item = this.scanned.pop();
					delete item[this.validatedSchemasKey];
				}
				this.scannedFrozen = [];
				this.scannedFrozenSchemas = [];
			}

			if (error || errorCount !== this.errors.length) {
				while (dataPathParts && dataPathParts.length || schemaPathParts && schemaPathParts.length) {
					var dataPart = dataPathParts && dataPathParts.length ? "" + dataPathParts.pop() : null;
					var schemaPart = schemaPathParts && schemaPathParts.length ? "" + schemaPathParts.pop() : null;
					if (error) {
						error = error.prefixWith(dataPart, schemaPart);
					}
					this.prefixErrors(errorCount, dataPart, schemaPart);
				}
			}

			if (scannedFrozenSchemaIndex !== null) {
				this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = this.errors.slice(startErrorCount);
			} else if (scannedSchemasIndex !== null) {
				data[this.validationErrorsKey][scannedSchemasIndex] = this.errors.slice(startErrorCount);
			}

			return this.handleError(error);
		};
		ValidatorContext.prototype.validateFormat = function (data, schema) {
			if (typeof schema.format !== 'string' || !this.formatValidators[schema.format]) {
				return null;
			}
			var errorMessage = this.formatValidators[schema.format].call(null, data, schema);
			if (typeof errorMessage === 'string' || typeof errorMessage === 'number') {
				return this.createError(ErrorCodes.FORMAT_CUSTOM, { message: errorMessage }, '', '/format', null, data, schema);
			} else if (errorMessage && (typeof errorMessage === 'undefined' ? 'undefined' : _typeof(errorMessage)) === 'object') {
				return this.createError(ErrorCodes.FORMAT_CUSTOM, { message: errorMessage.message || "?" }, errorMessage.dataPath || '', errorMessage.schemaPath || "/format", null, data, schema);
			}
			return null;
		};
		ValidatorContext.prototype.validateDefinedKeywords = function (data, schema, dataPointerPath) {
			for (var key in this.definedKeywords) {
				if (typeof schema[key] === 'undefined') {
					continue;
				}
				var validationFunctions = this.definedKeywords[key];
				for (var i = 0; i < validationFunctions.length; i++) {
					var func = validationFunctions[i];
					var result = func(data, schema[key], schema, dataPointerPath);
					if (typeof result === 'string' || typeof result === 'number') {
						return this.createError(ErrorCodes.KEYWORD_CUSTOM, { key: key, message: result }, '', '', null, data, schema).prefixWith(null, key);
					} else if (result && (typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {
						var code = result.code;
						if (typeof code === 'string') {
							if (!ErrorCodes[code]) {
								throw new Error('Undefined error code (use defineError): ' + code);
							}
							code = ErrorCodes[code];
						} else if (typeof code !== 'number') {
							code = ErrorCodes.KEYWORD_CUSTOM;
						}
						var messageParams = _typeof(result.message) === 'object' ? result.message : { key: key, message: result.message || "?" };
						var schemaPath = result.schemaPath || "/" + key.replace(/~/g, '~0').replace(/\//g, '~1');
						return this.createError(code, messageParams, result.dataPath || null, schemaPath, null, data, schema);
					}
				}
			}
			return null;
		};

		function recursiveCompare(A, B) {
			if (A === B) {
				return true;
			}
			if (A && B && (typeof A === 'undefined' ? 'undefined' : _typeof(A)) === "object" && (typeof B === 'undefined' ? 'undefined' : _typeof(B)) === "object") {
				if (Array.isArray(A) !== Array.isArray(B)) {
					return false;
				} else if (Array.isArray(A)) {
					if (A.length !== B.length) {
						return false;
					}
					for (var i = 0; i < A.length; i++) {
						if (!recursiveCompare(A[i], B[i])) {
							return false;
						}
					}
				} else {
					var key;
					for (key in A) {
						if (B[key] === undefined && A[key] !== undefined) {
							return false;
						}
					}
					for (key in B) {
						if (A[key] === undefined && B[key] !== undefined) {
							return false;
						}
					}
					for (key in A) {
						if (!recursiveCompare(A[key], B[key])) {
							return false;
						}
					}
				}
				return true;
			}
			return false;
		}

		ValidatorContext.prototype.validateBasic = function validateBasic(data, schema, dataPointerPath) {
			var error;
			if (error = this.validateType(data, schema, dataPointerPath)) {
				return error.prefixWith(null, "type");
			}
			if (error = this.validateEnum(data, schema, dataPointerPath)) {
				return error.prefixWith(null, "type");
			}
			return null;
		};

		ValidatorContext.prototype.validateType = function validateType(data, schema) {
			if (schema.type === undefined) {
				return null;
			}
			var dataType = typeof data === 'undefined' ? 'undefined' : _typeof(data);
			if (data === null) {
				dataType = "null";
			} else if (Array.isArray(data)) {
				dataType = "array";
			}
			var allowedTypes = schema.type;
			if (!Array.isArray(allowedTypes)) {
				allowedTypes = [allowedTypes];
			}

			for (var i = 0; i < allowedTypes.length; i++) {
				var type = allowedTypes[i];
				if (type === dataType || type === "integer" && dataType === "number" && data % 1 === 0) {
					return null;
				}
			}
			return this.createError(ErrorCodes.INVALID_TYPE, { type: dataType, expected: allowedTypes.join("/") }, '', '', null, data, schema);
		};

		ValidatorContext.prototype.validateEnum = function validateEnum(data, schema) {
			if (schema["enum"] === undefined) {
				return null;
			}
			for (var i = 0; i < schema["enum"].length; i++) {
				var enumVal = schema["enum"][i];
				if (recursiveCompare(data, enumVal)) {
					return null;
				}
			}
			return this.createError(ErrorCodes.ENUM_MISMATCH, { value: typeof JSON !== 'undefined' ? JSON.stringify(data) : data }, '', '', null, data, schema);
		};

		ValidatorContext.prototype.validateNumeric = function validateNumeric(data, schema, dataPointerPath) {
			return this.validateMultipleOf(data, schema, dataPointerPath) || this.validateMinMax(data, schema, dataPointerPath) || this.validateNaN(data, schema, dataPointerPath) || null;
		};

		var CLOSE_ENOUGH_LOW = Math.pow(2, -51);
		var CLOSE_ENOUGH_HIGH = 1 - CLOSE_ENOUGH_LOW;
		ValidatorContext.prototype.validateMultipleOf = function validateMultipleOf(data, schema) {
			var multipleOf = schema.multipleOf || schema.divisibleBy;
			if (multipleOf === undefined) {
				return null;
			}
			if (typeof data === "number") {
				var remainder = data / multipleOf % 1;
				if (remainder >= CLOSE_ENOUGH_LOW && remainder < CLOSE_ENOUGH_HIGH) {
					return this.createError(ErrorCodes.NUMBER_MULTIPLE_OF, { value: data, multipleOf: multipleOf }, '', '', null, data, schema);
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateMinMax = function validateMinMax(data, schema) {
			if (typeof data !== "number") {
				return null;
			}
			if (schema.minimum !== undefined) {
				if (data < schema.minimum) {
					return this.createError(ErrorCodes.NUMBER_MINIMUM, { value: data, minimum: schema.minimum }, '', '/minimum', null, data, schema);
				}
				if (schema.exclusiveMinimum && data === schema.minimum) {
					return this.createError(ErrorCodes.NUMBER_MINIMUM_EXCLUSIVE, { value: data, minimum: schema.minimum }, '', '/exclusiveMinimum', null, data, schema);
				}
			}
			if (schema.maximum !== undefined) {
				if (data > schema.maximum) {
					return this.createError(ErrorCodes.NUMBER_MAXIMUM, { value: data, maximum: schema.maximum }, '', '/maximum', null, data, schema);
				}
				if (schema.exclusiveMaximum && data === schema.maximum) {
					return this.createError(ErrorCodes.NUMBER_MAXIMUM_EXCLUSIVE, { value: data, maximum: schema.maximum }, '', '/exclusiveMaximum', null, data, schema);
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateNaN = function validateNaN(data, schema) {
			if (typeof data !== "number") {
				return null;
			}
			if (isNaN(data) === true || data === Infinity || data === -Infinity) {
				return this.createError(ErrorCodes.NUMBER_NOT_A_NUMBER, { value: data }, '', '/type', null, data, schema);
			}
			return null;
		};

		ValidatorContext.prototype.validateString = function validateString(data, schema, dataPointerPath) {
			return this.validateStringLength(data, schema, dataPointerPath) || this.validateStringPattern(data, schema, dataPointerPath) || null;
		};

		ValidatorContext.prototype.validateStringLength = function validateStringLength(data, schema) {
			if (typeof data !== "string") {
				return null;
			}
			if (schema.minLength !== undefined) {
				if (data.length < schema.minLength) {
					return this.createError(ErrorCodes.STRING_LENGTH_SHORT, { length: data.length, minimum: schema.minLength }, '', '/minLength', null, data, schema);
				}
			}
			if (schema.maxLength !== undefined) {
				if (data.length > schema.maxLength) {
					return this.createError(ErrorCodes.STRING_LENGTH_LONG, { length: data.length, maximum: schema.maxLength }, '', '/maxLength', null, data, schema);
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateStringPattern = function validateStringPattern(data, schema) {
			if (typeof data !== "string" || typeof schema.pattern !== "string" && !(schema.pattern instanceof RegExp)) {
				return null;
			}
			var regexp;
			if (schema.pattern instanceof RegExp) {
				regexp = schema.pattern;
			} else {
				var body,
				    flags = '';
				// Check for regular expression literals
				// @see http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5
				var literal = schema.pattern.match(/^\/(.+)\/([img]*)$/);
				if (literal) {
					body = literal[1];
					flags = literal[2];
				} else {
					body = schema.pattern;
				}
				regexp = new RegExp(body, flags);
			}
			if (!regexp.test(data)) {
				return this.createError(ErrorCodes.STRING_PATTERN, { pattern: schema.pattern }, '', '/pattern', null, data, schema);
			}
			return null;
		};

		ValidatorContext.prototype.validateArray = function validateArray(data, schema, dataPointerPath) {
			if (!Array.isArray(data)) {
				return null;
			}
			return this.validateArrayLength(data, schema, dataPointerPath) || this.validateArrayUniqueItems(data, schema, dataPointerPath) || this.validateArrayItems(data, schema, dataPointerPath) || null;
		};

		ValidatorContext.prototype.validateArrayLength = function validateArrayLength(data, schema) {
			var error;
			if (schema.minItems !== undefined) {
				if (data.length < schema.minItems) {
					error = this.createError(ErrorCodes.ARRAY_LENGTH_SHORT, { length: data.length, minimum: schema.minItems }, '', '/minItems', null, data, schema);
					if (this.handleError(error)) {
						return error;
					}
				}
			}
			if (schema.maxItems !== undefined) {
				if (data.length > schema.maxItems) {
					error = this.createError(ErrorCodes.ARRAY_LENGTH_LONG, { length: data.length, maximum: schema.maxItems }, '', '/maxItems', null, data, schema);
					if (this.handleError(error)) {
						return error;
					}
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateArrayUniqueItems = function validateArrayUniqueItems(data, schema) {
			if (schema.uniqueItems) {
				for (var i = 0; i < data.length; i++) {
					for (var j = i + 1; j < data.length; j++) {
						if (recursiveCompare(data[i], data[j])) {
							var error = this.createError(ErrorCodes.ARRAY_UNIQUE, { match1: i, match2: j }, '', '/uniqueItems', null, data, schema);
							if (this.handleError(error)) {
								return error;
							}
						}
					}
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateArrayItems = function validateArrayItems(data, schema, dataPointerPath) {
			if (schema.items === undefined) {
				return null;
			}
			var error, i;
			if (Array.isArray(schema.items)) {
				for (i = 0; i < data.length; i++) {
					if (i < schema.items.length) {
						if (error = this.validateAll(data[i], schema.items[i], [i], ["items", i], dataPointerPath + "/" + i)) {
							return error;
						}
					} else if (schema.additionalItems !== undefined) {
						if (typeof schema.additionalItems === "boolean") {
							if (!schema.additionalItems) {
								error = this.createError(ErrorCodes.ARRAY_ADDITIONAL_ITEMS, {}, '/' + i, '/additionalItems', null, data, schema);
								if (this.handleError(error)) {
									return error;
								}
							}
						} else if (error = this.validateAll(data[i], schema.additionalItems, [i], ["additionalItems"], dataPointerPath + "/" + i)) {
							return error;
						}
					}
				}
			} else {
				for (i = 0; i < data.length; i++) {
					if (error = this.validateAll(data[i], schema.items, [i], ["items"], dataPointerPath + "/" + i)) {
						return error;
					}
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateObject = function validateObject(data, schema, dataPointerPath) {
			if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== "object" || data === null || Array.isArray(data)) {
				return null;
			}
			return this.validateObjectMinMaxProperties(data, schema, dataPointerPath) || this.validateObjectRequiredProperties(data, schema, dataPointerPath) || this.validateObjectProperties(data, schema, dataPointerPath) || this.validateObjectDependencies(data, schema, dataPointerPath) || null;
		};

		ValidatorContext.prototype.validateObjectMinMaxProperties = function validateObjectMinMaxProperties(data, schema) {
			var keys = Object.keys(data);
			var error;
			if (schema.minProperties !== undefined) {
				if (keys.length < schema.minProperties) {
					error = this.createError(ErrorCodes.OBJECT_PROPERTIES_MINIMUM, { propertyCount: keys.length, minimum: schema.minProperties }, '', '/minProperties', null, data, schema);
					if (this.handleError(error)) {
						return error;
					}
				}
			}
			if (schema.maxProperties !== undefined) {
				if (keys.length > schema.maxProperties) {
					error = this.createError(ErrorCodes.OBJECT_PROPERTIES_MAXIMUM, { propertyCount: keys.length, maximum: schema.maxProperties }, '', '/maxProperties', null, data, schema);
					if (this.handleError(error)) {
						return error;
					}
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateObjectRequiredProperties = function validateObjectRequiredProperties(data, schema) {
			if (schema.required !== undefined) {
				for (var i = 0; i < schema.required.length; i++) {
					var key = schema.required[i];
					if (data[key] === undefined) {
						var error = this.createError(ErrorCodes.OBJECT_REQUIRED, { key: key }, '', '/required/' + i, null, data, schema);
						if (this.handleError(error)) {
							return error;
						}
					}
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateObjectProperties = function validateObjectProperties(data, schema, dataPointerPath) {
			var error;
			for (var key in data) {
				var keyPointerPath = dataPointerPath + "/" + key.replace(/~/g, '~0').replace(/\//g, '~1');
				var foundMatch = false;
				if (schema.properties !== undefined && schema.properties[key] !== undefined) {
					foundMatch = true;
					if (error = this.validateAll(data[key], schema.properties[key], [key], ["properties", key], keyPointerPath)) {
						return error;
					}
				}
				if (schema.patternProperties !== undefined) {
					for (var patternKey in schema.patternProperties) {
						var regexp = new RegExp(patternKey);
						if (regexp.test(key)) {
							foundMatch = true;
							if (error = this.validateAll(data[key], schema.patternProperties[patternKey], [key], ["patternProperties", patternKey], keyPointerPath)) {
								return error;
							}
						}
					}
				}
				if (!foundMatch) {
					if (schema.additionalProperties !== undefined) {
						if (this.trackUnknownProperties) {
							this.knownPropertyPaths[keyPointerPath] = true;
							delete this.unknownPropertyPaths[keyPointerPath];
						}
						if (typeof schema.additionalProperties === "boolean") {
							if (!schema.additionalProperties) {
								error = this.createError(ErrorCodes.OBJECT_ADDITIONAL_PROPERTIES, { key: key }, '', '/additionalProperties', null, data, schema).prefixWith(key, null);
								if (this.handleError(error)) {
									return error;
								}
							}
						} else {
							if (error = this.validateAll(data[key], schema.additionalProperties, [key], ["additionalProperties"], keyPointerPath)) {
								return error;
							}
						}
					} else if (this.trackUnknownProperties && !this.knownPropertyPaths[keyPointerPath]) {
						this.unknownPropertyPaths[keyPointerPath] = true;
					}
				} else if (this.trackUnknownProperties) {
					this.knownPropertyPaths[keyPointerPath] = true;
					delete this.unknownPropertyPaths[keyPointerPath];
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateObjectDependencies = function validateObjectDependencies(data, schema, dataPointerPath) {
			var error;
			if (schema.dependencies !== undefined) {
				for (var depKey in schema.dependencies) {
					if (data[depKey] !== undefined) {
						var dep = schema.dependencies[depKey];
						if (typeof dep === "string") {
							if (data[dep] === undefined) {
								error = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, { key: depKey, missing: dep }, '', '', null, data, schema).prefixWith(null, depKey).prefixWith(null, "dependencies");
								if (this.handleError(error)) {
									return error;
								}
							}
						} else if (Array.isArray(dep)) {
							for (var i = 0; i < dep.length; i++) {
								var requiredKey = dep[i];
								if (data[requiredKey] === undefined) {
									error = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, { key: depKey, missing: requiredKey }, '', '/' + i, null, data, schema).prefixWith(null, depKey).prefixWith(null, "dependencies");
									if (this.handleError(error)) {
										return error;
									}
								}
							}
						} else {
							if (error = this.validateAll(data, dep, [], ["dependencies", depKey], dataPointerPath)) {
								return error;
							}
						}
					}
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateCombinations = function validateCombinations(data, schema, dataPointerPath) {
			return this.validateAllOf(data, schema, dataPointerPath) || this.validateAnyOf(data, schema, dataPointerPath) || this.validateOneOf(data, schema, dataPointerPath) || this.validateNot(data, schema, dataPointerPath) || null;
		};

		ValidatorContext.prototype.validateAllOf = function validateAllOf(data, schema, dataPointerPath) {
			if (schema.allOf === undefined) {
				return null;
			}
			var error;
			for (var i = 0; i < schema.allOf.length; i++) {
				var subSchema = schema.allOf[i];
				if (error = this.validateAll(data, subSchema, [], ["allOf", i], dataPointerPath)) {
					return error;
				}
			}
			return null;
		};

		ValidatorContext.prototype.validateAnyOf = function validateAnyOf(data, schema, dataPointerPath) {
			if (schema.anyOf === undefined) {
				return null;
			}
			var errors = [];
			var startErrorCount = this.errors.length;
			var oldUnknownPropertyPaths, oldKnownPropertyPaths;
			if (this.trackUnknownProperties) {
				oldUnknownPropertyPaths = this.unknownPropertyPaths;
				oldKnownPropertyPaths = this.knownPropertyPaths;
			}
			var errorAtEnd = true;
			for (var i = 0; i < schema.anyOf.length; i++) {
				if (this.trackUnknownProperties) {
					this.unknownPropertyPaths = {};
					this.knownPropertyPaths = {};
				}
				var subSchema = schema.anyOf[i];

				var errorCount = this.errors.length;
				var error = this.validateAll(data, subSchema, [], ["anyOf", i], dataPointerPath);

				if (error === null && errorCount === this.errors.length) {
					this.errors = this.errors.slice(0, startErrorCount);

					if (this.trackUnknownProperties) {
						for (var knownKey in this.knownPropertyPaths) {
							oldKnownPropertyPaths[knownKey] = true;
							delete oldUnknownPropertyPaths[knownKey];
						}
						for (var unknownKey in this.unknownPropertyPaths) {
							if (!oldKnownPropertyPaths[unknownKey]) {
								oldUnknownPropertyPaths[unknownKey] = true;
							}
						}
						// We need to continue looping so we catch all the property definitions, but we don't want to return an error
						errorAtEnd = false;
						continue;
					}

					return null;
				}
				if (error) {
					errors.push(error.prefixWith(null, "" + i).prefixWith(null, "anyOf"));
				}
			}
			if (this.trackUnknownProperties) {
				this.unknownPropertyPaths = oldUnknownPropertyPaths;
				this.knownPropertyPaths = oldKnownPropertyPaths;
			}
			if (errorAtEnd) {
				errors = errors.concat(this.errors.slice(startErrorCount));
				this.errors = this.errors.slice(0, startErrorCount);
				return this.createError(ErrorCodes.ANY_OF_MISSING, {}, "", "/anyOf", errors, data, schema);
			}
		};

		ValidatorContext.prototype.validateOneOf = function validateOneOf(data, schema, dataPointerPath) {
			if (schema.oneOf === undefined) {
				return null;
			}
			var validIndex = null;
			var errors = [];
			var startErrorCount = this.errors.length;
			var oldUnknownPropertyPaths, oldKnownPropertyPaths;
			if (this.trackUnknownProperties) {
				oldUnknownPropertyPaths = this.unknownPropertyPaths;
				oldKnownPropertyPaths = this.knownPropertyPaths;
			}
			for (var i = 0; i < schema.oneOf.length; i++) {
				if (this.trackUnknownProperties) {
					this.unknownPropertyPaths = {};
					this.knownPropertyPaths = {};
				}
				var subSchema = schema.oneOf[i];

				var errorCount = this.errors.length;
				var error = this.validateAll(data, subSchema, [], ["oneOf", i], dataPointerPath);

				if (error === null && errorCount === this.errors.length) {
					if (validIndex === null) {
						validIndex = i;
					} else {
						this.errors = this.errors.slice(0, startErrorCount);
						return this.createError(ErrorCodes.ONE_OF_MULTIPLE, { index1: validIndex, index2: i }, "", "/oneOf", null, data, schema);
					}
					if (this.trackUnknownProperties) {
						for (var knownKey in this.knownPropertyPaths) {
							oldKnownPropertyPaths[knownKey] = true;
							delete oldUnknownPropertyPaths[knownKey];
						}
						for (var unknownKey in this.unknownPropertyPaths) {
							if (!oldKnownPropertyPaths[unknownKey]) {
								oldUnknownPropertyPaths[unknownKey] = true;
							}
						}
					}
				} else if (error) {
					errors.push(error);
				}
			}
			if (this.trackUnknownProperties) {
				this.unknownPropertyPaths = oldUnknownPropertyPaths;
				this.knownPropertyPaths = oldKnownPropertyPaths;
			}
			if (validIndex === null) {
				errors = errors.concat(this.errors.slice(startErrorCount));
				this.errors = this.errors.slice(0, startErrorCount);
				return this.createError(ErrorCodes.ONE_OF_MISSING, {}, "", "/oneOf", errors, data, schema);
			} else {
				this.errors = this.errors.slice(0, startErrorCount);
			}
			return null;
		};

		ValidatorContext.prototype.validateNot = function validateNot(data, schema, dataPointerPath) {
			if (schema.not === undefined) {
				return null;
			}
			var oldErrorCount = this.errors.length;
			var oldUnknownPropertyPaths, oldKnownPropertyPaths;
			if (this.trackUnknownProperties) {
				oldUnknownPropertyPaths = this.unknownPropertyPaths;
				oldKnownPropertyPaths = this.knownPropertyPaths;
				this.unknownPropertyPaths = {};
				this.knownPropertyPaths = {};
			}
			var error = this.validateAll(data, schema.not, null, null, dataPointerPath);
			var notErrors = this.errors.slice(oldErrorCount);
			this.errors = this.errors.slice(0, oldErrorCount);
			if (this.trackUnknownProperties) {
				this.unknownPropertyPaths = oldUnknownPropertyPaths;
				this.knownPropertyPaths = oldKnownPropertyPaths;
			}
			if (error === null && notErrors.length === 0) {
				return this.createError(ErrorCodes.NOT_PASSED, {}, "", "/not", null, data, schema);
			}
			return null;
		};

		ValidatorContext.prototype.validateHypermedia = function validateCombinations(data, schema, dataPointerPath) {
			if (!schema.links) {
				return null;
			}
			var error;
			for (var i = 0; i < schema.links.length; i++) {
				var ldo = schema.links[i];
				if (ldo.rel === "describedby") {
					var template = new UriTemplate(ldo.href);
					var allPresent = true;
					for (var j = 0; j < template.varNames.length; j++) {
						if (!(template.varNames[j] in data)) {
							allPresent = false;
							break;
						}
					}
					if (allPresent) {
						var schemaUrl = template.fillFromObject(data);
						var subSchema = { "$ref": schemaUrl };
						if (error = this.validateAll(data, subSchema, [], ["links", i], dataPointerPath)) {
							return error;
						}
					}
				}
			}
		};

		// parseURI() and resolveUrl() are from https://gist.github.com/1088850
		//   -  released as public domain by author ("Yaffle") - see comments on gist

		function parseURI(url) {
			var m = String(url).replace(/^\s+|\s+$/g, '').match(/^([^:\/?#]+:)?(\/\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
			// authority = '//' + user + ':' + pass '@' + hostname + ':' port
			return m ? {
				href: m[0] || '',
				protocol: m[1] || '',
				authority: m[2] || '',
				host: m[3] || '',
				hostname: m[4] || '',
				port: m[5] || '',
				pathname: m[6] || '',
				search: m[7] || '',
				hash: m[8] || ''
			} : null;
		}

		function resolveUrl(base, href) {
			// RFC 3986

			function removeDotSegments(input) {
				var output = [];
				input.replace(/^(\.\.?(\/|$))+/, '').replace(/\/(\.(\/|$))+/g, '/').replace(/\/\.\.$/, '/../').replace(/\/?[^\/]*/g, function (p) {
					if (p === '/..') {
						output.pop();
					} else {
						output.push(p);
					}
				});
				return output.join('').replace(/^\//, input.charAt(0) === '/' ? '/' : '');
			}

			href = parseURI(href || '');
			base = parseURI(base || '');

			return !href || !base ? null : (href.protocol || base.protocol) + (href.protocol || href.authority ? href.authority : base.authority) + removeDotSegments(href.protocol || href.authority || href.pathname.charAt(0) === '/' ? href.pathname : href.pathname ? (base.authority && !base.pathname ? '/' : '') + base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + href.pathname : base.pathname) + (href.protocol || href.authority || href.pathname ? href.search : href.search || base.search) + href.hash;
		}

		function getDocumentUri(uri) {
			return uri.split('#')[0];
		}
		function normSchema(schema, baseUri) {
			if (schema && (typeof schema === 'undefined' ? 'undefined' : _typeof(schema)) === "object") {
				if (baseUri === undefined) {
					baseUri = schema.id;
				} else if (typeof schema.id === "string") {
					baseUri = resolveUrl(baseUri, schema.id);
					schema.id = baseUri;
				}
				if (Array.isArray(schema)) {
					for (var i = 0; i < schema.length; i++) {
						normSchema(schema[i], baseUri);
					}
				} else {
					if (typeof schema['$ref'] === "string") {
						schema['$ref'] = resolveUrl(baseUri, schema['$ref']);
					}
					for (var key in schema) {
						if (key !== "enum") {
							normSchema(schema[key], baseUri);
						}
					}
				}
			}
		}

		function defaultErrorReporter(language) {
			language = language || 'en';

			var errorMessages = languages[language];

			return function (error) {
				var messageTemplate = errorMessages[error.code] || ErrorMessagesDefault[error.code];
				if (typeof messageTemplate !== 'string') {
					return "Unknown error code " + error.code + ": " + JSON.stringify(error.messageParams);
				}
				var messageParams = error.params;
				// Adapted from Crockford's supplant()
				return messageTemplate.replace(/\{([^{}]*)\}/g, function (whole, varName) {
					var subValue = messageParams[varName];
					return typeof subValue === 'string' || typeof subValue === 'number' ? subValue : whole;
				});
			};
		}

		var ErrorCodes = {
			INVALID_TYPE: 0,
			ENUM_MISMATCH: 1,
			ANY_OF_MISSING: 10,
			ONE_OF_MISSING: 11,
			ONE_OF_MULTIPLE: 12,
			NOT_PASSED: 13,
			// Numeric errors
			NUMBER_MULTIPLE_OF: 100,
			NUMBER_MINIMUM: 101,
			NUMBER_MINIMUM_EXCLUSIVE: 102,
			NUMBER_MAXIMUM: 103,
			NUMBER_MAXIMUM_EXCLUSIVE: 104,
			NUMBER_NOT_A_NUMBER: 105,
			// String errors
			STRING_LENGTH_SHORT: 200,
			STRING_LENGTH_LONG: 201,
			STRING_PATTERN: 202,
			// Object errors
			OBJECT_PROPERTIES_MINIMUM: 300,
			OBJECT_PROPERTIES_MAXIMUM: 301,
			OBJECT_REQUIRED: 302,
			OBJECT_ADDITIONAL_PROPERTIES: 303,
			OBJECT_DEPENDENCY_KEY: 304,
			// Array errors
			ARRAY_LENGTH_SHORT: 400,
			ARRAY_LENGTH_LONG: 401,
			ARRAY_UNIQUE: 402,
			ARRAY_ADDITIONAL_ITEMS: 403,
			// Custom/user-defined errors
			FORMAT_CUSTOM: 500,
			KEYWORD_CUSTOM: 501,
			// Schema structure
			CIRCULAR_REFERENCE: 600,
			// Non-standard validation options
			UNKNOWN_PROPERTY: 1000
		};
		var ErrorCodeLookup = {};
		for (var key in ErrorCodes) {
			ErrorCodeLookup[ErrorCodes[key]] = key;
		}
		var ErrorMessagesDefault = {
			INVALID_TYPE: "Invalid type: {type} (expected {expected})",
			ENUM_MISMATCH: "No enum match for: {value}",
			ANY_OF_MISSING: "Data does not match any schemas from \"anyOf\"",
			ONE_OF_MISSING: "Data does not match any schemas from \"oneOf\"",
			ONE_OF_MULTIPLE: "Data is valid against more than one schema from \"oneOf\": indices {index1} and {index2}",
			NOT_PASSED: "Data matches schema from \"not\"",
			// Numeric errors
			NUMBER_MULTIPLE_OF: "Value {value} is not a multiple of {multipleOf}",
			NUMBER_MINIMUM: "Value {value} is less than minimum {minimum}",
			NUMBER_MINIMUM_EXCLUSIVE: "Value {value} is equal to exclusive minimum {minimum}",
			NUMBER_MAXIMUM: "Value {value} is greater than maximum {maximum}",
			NUMBER_MAXIMUM_EXCLUSIVE: "Value {value} is equal to exclusive maximum {maximum}",
			NUMBER_NOT_A_NUMBER: "Value {value} is not a valid number",
			// String errors
			STRING_LENGTH_SHORT: "String is too short ({length} chars), minimum {minimum}",
			STRING_LENGTH_LONG: "String is too long ({length} chars), maximum {maximum}",
			STRING_PATTERN: "String does not match pattern: {pattern}",
			// Object errors
			OBJECT_PROPERTIES_MINIMUM: "Too few properties defined ({propertyCount}), minimum {minimum}",
			OBJECT_PROPERTIES_MAXIMUM: "Too many properties defined ({propertyCount}), maximum {maximum}",
			OBJECT_REQUIRED: "Missing required property: {key}",
			OBJECT_ADDITIONAL_PROPERTIES: "Additional properties not allowed",
			OBJECT_DEPENDENCY_KEY: "Dependency failed - key must exist: {missing} (due to key: {key})",
			// Array errors
			ARRAY_LENGTH_SHORT: "Array is too short ({length}), minimum {minimum}",
			ARRAY_LENGTH_LONG: "Array is too long ({length}), maximum {maximum}",
			ARRAY_UNIQUE: "Array items are not unique (indices {match1} and {match2})",
			ARRAY_ADDITIONAL_ITEMS: "Additional items not allowed",
			// Format errors
			FORMAT_CUSTOM: "Format validation failed ({message})",
			KEYWORD_CUSTOM: "Keyword failed: {key} ({message})",
			// Schema structure
			CIRCULAR_REFERENCE: "Circular $refs: {urls}",
			// Non-standard validation options
			UNKNOWN_PROPERTY: "Unknown property (not in schema)"
		};

		function ValidationError(code, params, dataPath, schemaPath, subErrors) {
			Error.call(this);
			if (code === undefined) {
				throw new Error("No error code supplied: " + schemaPath);
			}
			this.message = '';
			this.params = params;
			this.code = code;
			this.dataPath = dataPath || "";
			this.schemaPath = schemaPath || "";
			this.subErrors = subErrors || null;

			var err = new Error(this.message);
			this.stack = err.stack || err.stacktrace;
			if (!this.stack) {
				try {
					throw err;
				} catch (err) {
					this.stack = err.stack || err.stacktrace;
				}
			}
		}
		ValidationError.prototype = Object.create(Error.prototype);
		ValidationError.prototype.constructor = ValidationError;
		ValidationError.prototype.name = 'ValidationError';

		ValidationError.prototype.prefixWith = function (dataPrefix, schemaPrefix) {
			if (dataPrefix !== null) {
				dataPrefix = dataPrefix.replace(/~/g, "~0").replace(/\//g, "~1");
				this.dataPath = "/" + dataPrefix + this.dataPath;
			}
			if (schemaPrefix !== null) {
				schemaPrefix = schemaPrefix.replace(/~/g, "~0").replace(/\//g, "~1");
				this.schemaPath = "/" + schemaPrefix + this.schemaPath;
			}
			if (this.subErrors !== null) {
				for (var i = 0; i < this.subErrors.length; i++) {
					this.subErrors[i].prefixWith(dataPrefix, schemaPrefix);
				}
			}
			return this;
		};

		function isTrustedUrl(baseUrl, testUrl) {
			if (testUrl.substring(0, baseUrl.length) === baseUrl) {
				var remainder = testUrl.substring(baseUrl.length);
				if (testUrl.length > 0 && testUrl.charAt(baseUrl.length - 1) === "/" || remainder.charAt(0) === "#" || remainder.charAt(0) === "?") {
					return true;
				}
			}
			return false;
		}

		var languages = {};
		function createApi(language) {
			var globalContext = new ValidatorContext();
			var currentLanguage;
			var customErrorReporter;
			var api = {
				setErrorReporter: function setErrorReporter(reporter) {
					if (typeof reporter === 'string') {
						return this.language(reporter);
					}
					customErrorReporter = reporter;
					return true;
				},
				addFormat: function addFormat() {
					globalContext.addFormat.apply(globalContext, arguments);
				},
				language: function language(code) {
					if (!code) {
						return currentLanguage;
					}
					if (!languages[code]) {
						code = code.split('-')[0]; // fall back to base language
					}
					if (languages[code]) {
						currentLanguage = code;
						return code; // so you can tell if fall-back has happened
					}
					return false;
				},
				addLanguage: function addLanguage(code, messageMap) {
					var key;
					for (key in ErrorCodes) {
						if (messageMap[key] && !messageMap[ErrorCodes[key]]) {
							messageMap[ErrorCodes[key]] = messageMap[key];
						}
					}
					var rootCode = code.split('-')[0];
					if (!languages[rootCode]) {
						// use for base language if not yet defined
						languages[code] = messageMap;
						languages[rootCode] = messageMap;
					} else {
						languages[code] = Object.create(languages[rootCode]);
						for (key in messageMap) {
							if (typeof languages[rootCode][key] === 'undefined') {
								languages[rootCode][key] = messageMap[key];
							}
							languages[code][key] = messageMap[key];
						}
					}
					return this;
				},
				freshApi: function freshApi(language) {
					var result = createApi();
					if (language) {
						result.language(language);
					}
					return result;
				},
				validate: function validate(data, schema, checkRecursive, banUnknownProperties) {
					var def = defaultErrorReporter(currentLanguage);
					var errorReporter = customErrorReporter ? function (error, data, schema) {
						return customErrorReporter(error, data, schema) || def(error, data, schema);
					} : def;
					var context = new ValidatorContext(globalContext, false, errorReporter, checkRecursive, banUnknownProperties);
					if (typeof schema === "string") {
						schema = { "$ref": schema };
					}
					context.addSchema("", schema);
					var error = context.validateAll(data, schema, null, null, "");
					if (!error && banUnknownProperties) {
						error = context.banUnknownProperties(data, schema);
					}
					this.error = error;
					this.missing = context.missing;
					this.valid = error === null;
					return this.valid;
				},
				validateResult: function validateResult() {
					var result = {};
					this.validate.apply(result, arguments);
					return result;
				},
				validateMultiple: function validateMultiple(data, schema, checkRecursive, banUnknownProperties) {
					var def = defaultErrorReporter(currentLanguage);
					var errorReporter = customErrorReporter ? function (error, data, schema) {
						return customErrorReporter(error, data, schema) || def(error, data, schema);
					} : def;
					var context = new ValidatorContext(globalContext, true, errorReporter, checkRecursive, banUnknownProperties);
					if (typeof schema === "string") {
						schema = { "$ref": schema };
					}
					context.addSchema("", schema);
					context.validateAll(data, schema, null, null, "");
					if (banUnknownProperties) {
						context.banUnknownProperties(data, schema);
					}
					var result = {};
					result.errors = context.errors;
					result.missing = context.missing;
					result.valid = result.errors.length === 0;
					return result;
				},
				addSchema: function addSchema() {
					return globalContext.addSchema.apply(globalContext, arguments);
				},
				getSchema: function getSchema() {
					return globalContext.getSchema.apply(globalContext, arguments);
				},
				getSchemaMap: function getSchemaMap() {
					return globalContext.getSchemaMap.apply(globalContext, arguments);
				},
				getSchemaUris: function getSchemaUris() {
					return globalContext.getSchemaUris.apply(globalContext, arguments);
				},
				getMissingUris: function getMissingUris() {
					return globalContext.getMissingUris.apply(globalContext, arguments);
				},
				dropSchemas: function dropSchemas() {
					globalContext.dropSchemas.apply(globalContext, arguments);
				},
				defineKeyword: function defineKeyword() {
					globalContext.defineKeyword.apply(globalContext, arguments);
				},
				defineError: function defineError(codeName, codeNumber, defaultMessage) {
					if (typeof codeName !== 'string' || !/^[A-Z]+(_[A-Z]+)*$/.test(codeName)) {
						throw new Error('Code name must be a string in UPPER_CASE_WITH_UNDERSCORES');
					}
					if (typeof codeNumber !== 'number' || codeNumber % 1 !== 0 || codeNumber < 10000) {
						throw new Error('Code number must be an integer > 10000');
					}
					if (typeof ErrorCodes[codeName] !== 'undefined') {
						throw new Error('Error already defined: ' + codeName + ' as ' + ErrorCodes[codeName]);
					}
					if (typeof ErrorCodeLookup[codeNumber] !== 'undefined') {
						throw new Error('Error code already used: ' + ErrorCodeLookup[codeNumber] + ' as ' + codeNumber);
					}
					ErrorCodes[codeName] = codeNumber;
					ErrorCodeLookup[codeNumber] = codeName;
					ErrorMessagesDefault[codeName] = ErrorMessagesDefault[codeNumber] = defaultMessage;
					for (var langCode in languages) {
						var language = languages[langCode];
						if (language[codeName]) {
							language[codeNumber] = language[codeNumber] || language[codeName];
						}
					}
				},
				reset: function reset() {
					globalContext.reset();
					this.error = null;
					this.missing = [];
					this.valid = true;
				},
				missing: [],
				error: null,
				valid: true,
				normSchema: normSchema,
				resolveUrl: resolveUrl,
				getDocumentUri: getDocumentUri,
				errorCodes: ErrorCodes
			};
			api.language(language || 'en');
			return api;
		}

		var tv4 = createApi();
		tv4.addLanguage('en-gb', ErrorMessagesDefault);

		//legacy property
		tv4.tv4 = tv4;

		return tv4; // used by _header.js to globalise.
	});

/***/ },
/* 1079 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*! https://mths.be/punycode v1.3.2 by @mathias */
	;(function (root) {

		/** Detect free variables */
		var freeExports = ( false ? 'undefined' : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;
		var freeModule = ( false ? 'undefined' : _typeof(module)) == 'object' && module && !module.nodeType && module;
		var freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global;
		if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
			root = freeGlobal;
		}

		/**
	  * The `punycode` object.
	  * @name punycode
	  * @type Object
	  */
		var punycode,


		/** Highest positive signed 32-bit float value */
		maxInt = 2147483647,
		    // aka. 0x7FFFFFFF or 2^31-1

		/** Bootstring parameters */
		base = 36,
		    tMin = 1,
		    tMax = 26,
		    skew = 38,
		    damp = 700,
		    initialBias = 72,
		    initialN = 128,
		    // 0x80
		delimiter = '-',
		    // '\x2D'

		/** Regular expressions */
		regexPunycode = /^xn--/,
		    regexNonASCII = /[^\x20-\x7E]/,
		    // unprintable ASCII chars + non-ASCII chars
		regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
		    // RFC 3490 separators

		/** Error messages */
		errors = {
			'overflow': 'Overflow: input needs wider integers to process',
			'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
			'invalid-input': 'Invalid input'
		},


		/** Convenience shortcuts */
		baseMinusTMin = base - tMin,
		    floor = Math.floor,
		    stringFromCharCode = String.fromCharCode,


		/** Temporary variable */
		key;

		/*--------------------------------------------------------------------------*/

		/**
	  * A generic error utility function.
	  * @private
	  * @param {String} type The error type.
	  * @returns {Error} Throws a `RangeError` with the applicable error message.
	  */
		function error(type) {
			throw RangeError(errors[type]);
		}

		/**
	  * A generic `Array#map` utility function.
	  * @private
	  * @param {Array} array The array to iterate over.
	  * @param {Function} callback The function that gets called for every array
	  * item.
	  * @returns {Array} A new array of values returned by the callback function.
	  */
		function map(array, fn) {
			var length = array.length;
			var result = [];
			while (length--) {
				result[length] = fn(array[length]);
			}
			return result;
		}

		/**
	  * A simple `Array#map`-like wrapper to work with domain name strings or email
	  * addresses.
	  * @private
	  * @param {String} domain The domain name or email address.
	  * @param {Function} callback The function that gets called for every
	  * character.
	  * @returns {Array} A new string of characters returned by the callback
	  * function.
	  */
		function mapDomain(string, fn) {
			var parts = string.split('@');
			var result = '';
			if (parts.length > 1) {
				// In email addresses, only the domain name should be punycoded. Leave
				// the local part (i.e. everything up to `@`) intact.
				result = parts[0] + '@';
				string = parts[1];
			}
			// Avoid `split(regex)` for IE8 compatibility. See #17.
			string = string.replace(regexSeparators, '\x2E');
			var labels = string.split('.');
			var encoded = map(labels, fn).join('.');
			return result + encoded;
		}

		/**
	  * Creates an array containing the numeric code points of each Unicode
	  * character in the string. While JavaScript uses UCS-2 internally,
	  * this function will convert a pair of surrogate halves (each of which
	  * UCS-2 exposes as separate characters) into a single code point,
	  * matching UTF-16.
	  * @see `punycode.ucs2.encode`
	  * @see <https://mathiasbynens.be/notes/javascript-encoding>
	  * @memberOf punycode.ucs2
	  * @name decode
	  * @param {String} string The Unicode input string (UCS-2).
	  * @returns {Array} The new array of code points.
	  */
		function ucs2decode(string) {
			var output = [],
			    counter = 0,
			    length = string.length,
			    value,
			    extra;
			while (counter < length) {
				value = string.charCodeAt(counter++);
				if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
					// high surrogate, and there is a next character
					extra = string.charCodeAt(counter++);
					if ((extra & 0xFC00) == 0xDC00) {
						// low surrogate
						output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
					} else {
						// unmatched surrogate; only append this code unit, in case the next
						// code unit is the high surrogate of a surrogate pair
						output.push(value);
						counter--;
					}
				} else {
					output.push(value);
				}
			}
			return output;
		}

		/**
	  * Creates a string based on an array of numeric code points.
	  * @see `punycode.ucs2.decode`
	  * @memberOf punycode.ucs2
	  * @name encode
	  * @param {Array} codePoints The array of numeric code points.
	  * @returns {String} The new Unicode string (UCS-2).
	  */
		function ucs2encode(array) {
			return map(array, function (value) {
				var output = '';
				if (value > 0xFFFF) {
					value -= 0x10000;
					output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
					value = 0xDC00 | value & 0x3FF;
				}
				output += stringFromCharCode(value);
				return output;
			}).join('');
		}

		/**
	  * Converts a basic code point into a digit/integer.
	  * @see `digitToBasic()`
	  * @private
	  * @param {Number} codePoint The basic numeric code point value.
	  * @returns {Number} The numeric value of a basic code point (for use in
	  * representing integers) in the range `0` to `base - 1`, or `base` if
	  * the code point does not represent a value.
	  */
		function basicToDigit(codePoint) {
			if (codePoint - 48 < 10) {
				return codePoint - 22;
			}
			if (codePoint - 65 < 26) {
				return codePoint - 65;
			}
			if (codePoint - 97 < 26) {
				return codePoint - 97;
			}
			return base;
		}

		/**
	  * Converts a digit/integer into a basic code point.
	  * @see `basicToDigit()`
	  * @private
	  * @param {Number} digit The numeric value of a basic code point.
	  * @returns {Number} The basic code point whose value (when used for
	  * representing integers) is `digit`, which needs to be in the range
	  * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	  * used; else, the lowercase form is used. The behavior is undefined
	  * if `flag` is non-zero and `digit` has no uppercase form.
	  */
		function digitToBasic(digit, flag) {
			//  0..25 map to ASCII a..z or A..Z
			// 26..35 map to ASCII 0..9
			return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
		}

		/**
	  * Bias adaptation function as per section 3.4 of RFC 3492.
	  * http://tools.ietf.org/html/rfc3492#section-3.4
	  * @private
	  */
		function adapt(delta, numPoints, firstTime) {
			var k = 0;
			delta = firstTime ? floor(delta / damp) : delta >> 1;
			delta += floor(delta / numPoints);
			for (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {
				delta = floor(delta / baseMinusTMin);
			}
			return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
		}

		/**
	  * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	  * symbols.
	  * @memberOf punycode
	  * @param {String} input The Punycode string of ASCII-only symbols.
	  * @returns {String} The resulting string of Unicode symbols.
	  */
		function decode(input) {
			// Don't use UCS-2
			var output = [],
			    inputLength = input.length,
			    out,
			    i = 0,
			    n = initialN,
			    bias = initialBias,
			    basic,
			    j,
			    index,
			    oldi,
			    w,
			    k,
			    digit,
			    t,

			/** Cached calculation results */
			baseMinusT;

			// Handle the basic code points: let `basic` be the number of input code
			// points before the last delimiter, or `0` if there is none, then copy
			// the first basic code points to the output.

			basic = input.lastIndexOf(delimiter);
			if (basic < 0) {
				basic = 0;
			}

			for (j = 0; j < basic; ++j) {
				// if it's not a basic code point
				if (input.charCodeAt(j) >= 0x80) {
					error('not-basic');
				}
				output.push(input.charCodeAt(j));
			}

			// Main decoding loop: start just after the last delimiter if any basic code
			// points were copied; start at the beginning otherwise.

			for (index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{

				// `index` is the index of the next character to be consumed.
				// Decode a generalized variable-length integer into `delta`,
				// which gets added to `i`. The overflow checking is easier
				// if we increase `i` as we go, then subtract off its starting
				// value at the end to obtain `delta`.
				for (oldi = i, w = 1, k = base;; /* no condition */k += base) {

					if (index >= inputLength) {
						error('invalid-input');
					}

					digit = basicToDigit(input.charCodeAt(index++));

					if (digit >= base || digit > floor((maxInt - i) / w)) {
						error('overflow');
					}

					i += digit * w;
					t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

					if (digit < t) {
						break;
					}

					baseMinusT = base - t;
					if (w > floor(maxInt / baseMinusT)) {
						error('overflow');
					}

					w *= baseMinusT;
				}

				out = output.length + 1;
				bias = adapt(i - oldi, out, oldi == 0);

				// `i` was supposed to wrap around from `out` to `0`,
				// incrementing `n` each time, so we'll fix that now:
				if (floor(i / out) > maxInt - n) {
					error('overflow');
				}

				n += floor(i / out);
				i %= out;

				// Insert `n` at position `i` of the output
				output.splice(i++, 0, n);
			}

			return ucs2encode(output);
		}

		/**
	  * Converts a string of Unicode symbols (e.g. a domain name label) to a
	  * Punycode string of ASCII-only symbols.
	  * @memberOf punycode
	  * @param {String} input The string of Unicode symbols.
	  * @returns {String} The resulting Punycode string of ASCII-only symbols.
	  */
		function encode(input) {
			var n,
			    delta,
			    handledCPCount,
			    basicLength,
			    bias,
			    j,
			    m,
			    q,
			    k,
			    t,
			    currentValue,
			    output = [],

			/** `inputLength` will hold the number of code points in `input`. */
			inputLength,

			/** Cached calculation results */
			handledCPCountPlusOne,
			    baseMinusT,
			    qMinusT;

			// Convert the input in UCS-2 to Unicode
			input = ucs2decode(input);

			// Cache the length
			inputLength = input.length;

			// Initialize the state
			n = initialN;
			delta = 0;
			bias = initialBias;

			// Handle the basic code points
			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue < 0x80) {
					output.push(stringFromCharCode(currentValue));
				}
			}

			handledCPCount = basicLength = output.length;

			// `handledCPCount` is the number of code points that have been handled;
			// `basicLength` is the number of basic code points.

			// Finish the basic string - if it is not empty - with a delimiter
			if (basicLength) {
				output.push(delimiter);
			}

			// Main encoding loop:
			while (handledCPCount < inputLength) {

				// All non-basic code points < n have been handled already. Find the next
				// larger one:
				for (m = maxInt, j = 0; j < inputLength; ++j) {
					currentValue = input[j];
					if (currentValue >= n && currentValue < m) {
						m = currentValue;
					}
				}

				// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
				// but guard against overflow
				handledCPCountPlusOne = handledCPCount + 1;
				if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
					error('overflow');
				}

				delta += (m - n) * handledCPCountPlusOne;
				n = m;

				for (j = 0; j < inputLength; ++j) {
					currentValue = input[j];

					if (currentValue < n && ++delta > maxInt) {
						error('overflow');
					}

					if (currentValue == n) {
						// Represent delta as a generalized variable-length integer
						for (q = delta, k = base;; /* no condition */k += base) {
							t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
							if (q < t) {
								break;
							}
							qMinusT = q - t;
							baseMinusT = base - t;
							output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
							q = floor(qMinusT / baseMinusT);
						}

						output.push(stringFromCharCode(digitToBasic(q, 0)));
						bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
						delta = 0;
						++handledCPCount;
					}
				}

				++delta;
				++n;
			}
			return output.join('');
		}

		/**
	  * Converts a Punycode string representing a domain name or an email address
	  * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	  * it doesn't matter if you call it on a string that has already been
	  * converted to Unicode.
	  * @memberOf punycode
	  * @param {String} input The Punycoded domain name or email address to
	  * convert to Unicode.
	  * @returns {String} The Unicode representation of the given Punycode
	  * string.
	  */
		function toUnicode(input) {
			return mapDomain(input, function (string) {
				return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
			});
		}

		/**
	  * Converts a Unicode string representing a domain name or an email address to
	  * Punycode. Only the non-ASCII parts of the domain name will be converted,
	  * i.e. it doesn't matter if you call it with a domain that's already in
	  * ASCII.
	  * @memberOf punycode
	  * @param {String} input The domain name or email address to convert, as a
	  * Unicode string.
	  * @returns {String} The Punycode representation of the given domain name or
	  * email address.
	  */
		function toASCII(input) {
			return mapDomain(input, function (string) {
				return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
			});
		}

		/*--------------------------------------------------------------------------*/

		/** Define the public API */
		punycode = {
			/**
	   * A string representing the current Punycode.js version number.
	   * @memberOf punycode
	   * @type String
	   */
			'version': '1.3.2',
			/**
	   * An object of methods to convert from JavaScript's internal character
	   * representation (UCS-2) to Unicode code points, and back.
	   * @see <https://mathiasbynens.be/notes/javascript-encoding>
	   * @memberOf punycode
	   * @type Object
	   */
			'ucs2': {
				'decode': ucs2decode,
				'encode': ucs2encode
			},
			'decode': decode,
			'encode': encode,
			'toASCII': toASCII,
			'toUnicode': toUnicode
		};

		/** Expose `punycode` */
		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if ("function" == 'function' && _typeof(__webpack_require__(81)) == 'object' && __webpack_require__(81)) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return punycode;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (freeExports && freeModule) {
			if (module.exports == freeExports) {
				// in Node.js or RingoJS v0.8.0+
				freeModule.exports = punycode;
			} else {
				// in Narwhal or RingoJS v0.7.0-
				for (key in punycode) {
					punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
				}
			}
		} else {
			// in Rhino or a web browser
			root.punycode = punycode;
		}
	})(undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(111)(module), (function() { return this; }())))

/***/ },
/* 1080 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var punycode = __webpack_require__(1079);

	exports.parse = urlParse;
	exports.resolve = urlResolve;
	exports.resolveObject = urlResolveObject;
	exports.format = urlFormat;

	exports.Url = Url;

	function Url() {
	  this.protocol = null;
	  this.slashes = null;
	  this.auth = null;
	  this.host = null;
	  this.port = null;
	  this.hostname = null;
	  this.hash = null;
	  this.search = null;
	  this.query = null;
	  this.pathname = null;
	  this.path = null;
	  this.href = null;
	}

	// Reference: RFC 3986, RFC 1808, RFC 2396

	// define these here so at least they only have to be
	// compiled once on the first module load.
	var protocolPattern = /^([a-z0-9.+-]+:)/i,
	    portPattern = /:[0-9]*$/,


	// RFC 2396: characters reserved for delimiting URLs.
	// We actually just auto-escape these.
	delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],


	// RFC 2396: characters not allowed for various reasons.
	unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),


	// Allowed by RFCs, but cause of XSS attacks.  Always escape these.
	autoEscape = ['\''].concat(unwise),

	// Characters that are never ever allowed in a hostname.
	// Note that any invalid chars are also handled, but these
	// are the ones that are *expected* to be seen, so we fast-path
	// them.
	nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
	    hostEndingChars = ['/', '?', '#'],
	    hostnameMaxLen = 255,
	    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,
	    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,

	// protocols that can allow "unsafe" and "unwise" chars.
	unsafeProtocol = {
	  'javascript': true,
	  'javascript:': true
	},

	// protocols that never have a hostname.
	hostlessProtocol = {
	  'javascript': true,
	  'javascript:': true
	},

	// protocols that always contain a // bit.
	slashedProtocol = {
	  'http': true,
	  'https': true,
	  'ftp': true,
	  'gopher': true,
	  'file': true,
	  'http:': true,
	  'https:': true,
	  'ftp:': true,
	  'gopher:': true,
	  'file:': true
	},
	    querystring = __webpack_require__(923);

	function urlParse(url, parseQueryString, slashesDenoteHost) {
	  if (url && isObject(url) && url instanceof Url) return url;

	  var u = new Url();
	  u.parse(url, parseQueryString, slashesDenoteHost);
	  return u;
	}

	Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
	  if (!isString(url)) {
	    throw new TypeError("Parameter 'url' must be a string, not " + (typeof url === 'undefined' ? 'undefined' : _typeof(url)));
	  }

	  var rest = url;

	  // trim before proceeding.
	  // This is to support parse stuff like "  http://foo.com  \n"
	  rest = rest.trim();

	  var proto = protocolPattern.exec(rest);
	  if (proto) {
	    proto = proto[0];
	    var lowerProto = proto.toLowerCase();
	    this.protocol = lowerProto;
	    rest = rest.substr(proto.length);
	  }

	  // figure out if it's got a host
	  // user@server is *always* interpreted as a hostname, and url
	  // resolution will treat //foo/bar as host=foo,path=bar because that's
	  // how the browser resolves relative URLs.
	  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
	    var slashes = rest.substr(0, 2) === '//';
	    if (slashes && !(proto && hostlessProtocol[proto])) {
	      rest = rest.substr(2);
	      this.slashes = true;
	    }
	  }

	  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {

	    // there's a hostname.
	    // the first instance of /, ?, ;, or # ends the host.
	    //
	    // If there is an @ in the hostname, then non-host chars *are* allowed
	    // to the left of the last @ sign, unless some host-ending character
	    // comes *before* the @-sign.
	    // URLs are obnoxious.
	    //
	    // ex:
	    // http://a@b@c/ => user:a@b host:c
	    // http://a@b?@c => user:a host:c path:/?@c

	    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
	    // Review our test case against browsers more comprehensively.

	    // find the first instance of any hostEndingChars
	    var hostEnd = -1;
	    for (var i = 0; i < hostEndingChars.length; i++) {
	      var hec = rest.indexOf(hostEndingChars[i]);
	      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
	    }

	    // at this point, either we have an explicit point where the
	    // auth portion cannot go past, or the last @ char is the decider.
	    var auth, atSign;
	    if (hostEnd === -1) {
	      // atSign can be anywhere.
	      atSign = rest.lastIndexOf('@');
	    } else {
	      // atSign must be in auth portion.
	      // http://a@b/c@d => host:b auth:a path:/c@d
	      atSign = rest.lastIndexOf('@', hostEnd);
	    }

	    // Now we have a portion which is definitely the auth.
	    // Pull that off.
	    if (atSign !== -1) {
	      auth = rest.slice(0, atSign);
	      rest = rest.slice(atSign + 1);
	      this.auth = decodeURIComponent(auth);
	    }

	    // the host is the remaining to the left of the first non-host char
	    hostEnd = -1;
	    for (var i = 0; i < nonHostChars.length; i++) {
	      var hec = rest.indexOf(nonHostChars[i]);
	      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
	    }
	    // if we still have not hit it, then the entire thing is a host.
	    if (hostEnd === -1) hostEnd = rest.length;

	    this.host = rest.slice(0, hostEnd);
	    rest = rest.slice(hostEnd);

	    // pull out port.
	    this.parseHost();

	    // we've indicated that there is a hostname,
	    // so even if it's empty, it has to be present.
	    this.hostname = this.hostname || '';

	    // if hostname begins with [ and ends with ]
	    // assume that it's an IPv6 address.
	    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';

	    // validate a little.
	    if (!ipv6Hostname) {
	      var hostparts = this.hostname.split(/\./);
	      for (var i = 0, l = hostparts.length; i < l; i++) {
	        var part = hostparts[i];
	        if (!part) continue;
	        if (!part.match(hostnamePartPattern)) {
	          var newpart = '';
	          for (var j = 0, k = part.length; j < k; j++) {
	            if (part.charCodeAt(j) > 127) {
	              // we replace non-ASCII char with a temporary placeholder
	              // we need this to make sure size of hostname is not
	              // broken by replacing non-ASCII by nothing
	              newpart += 'x';
	            } else {
	              newpart += part[j];
	            }
	          }
	          // we test again with ASCII char only
	          if (!newpart.match(hostnamePartPattern)) {
	            var validParts = hostparts.slice(0, i);
	            var notHost = hostparts.slice(i + 1);
	            var bit = part.match(hostnamePartStart);
	            if (bit) {
	              validParts.push(bit[1]);
	              notHost.unshift(bit[2]);
	            }
	            if (notHost.length) {
	              rest = '/' + notHost.join('.') + rest;
	            }
	            this.hostname = validParts.join('.');
	            break;
	          }
	        }
	      }
	    }

	    if (this.hostname.length > hostnameMaxLen) {
	      this.hostname = '';
	    } else {
	      // hostnames are always lower case.
	      this.hostname = this.hostname.toLowerCase();
	    }

	    if (!ipv6Hostname) {
	      // IDNA Support: Returns a puny coded representation of "domain".
	      // It only converts the part of the domain name that
	      // has non ASCII characters. I.e. it dosent matter if
	      // you call it with a domain that already is in ASCII.
	      var domainArray = this.hostname.split('.');
	      var newOut = [];
	      for (var i = 0; i < domainArray.length; ++i) {
	        var s = domainArray[i];
	        newOut.push(s.match(/[^A-Za-z0-9_-]/) ? 'xn--' + punycode.encode(s) : s);
	      }
	      this.hostname = newOut.join('.');
	    }

	    var p = this.port ? ':' + this.port : '';
	    var h = this.hostname || '';
	    this.host = h + p;
	    this.href += this.host;

	    // strip [ and ] from the hostname
	    // the host field still retains them, though
	    if (ipv6Hostname) {
	      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
	      if (rest[0] !== '/') {
	        rest = '/' + rest;
	      }
	    }
	  }

	  // now rest is set to the post-host stuff.
	  // chop off any delim chars.
	  if (!unsafeProtocol[lowerProto]) {

	    // First, make 100% sure that any "autoEscape" chars get
	    // escaped, even if encodeURIComponent doesn't think they
	    // need to be.
	    for (var i = 0, l = autoEscape.length; i < l; i++) {
	      var ae = autoEscape[i];
	      var esc = encodeURIComponent(ae);
	      if (esc === ae) {
	        esc = escape(ae);
	      }
	      rest = rest.split(ae).join(esc);
	    }
	  }

	  // chop off from the tail first.
	  var hash = rest.indexOf('#');
	  if (hash !== -1) {
	    // got a fragment string.
	    this.hash = rest.substr(hash);
	    rest = rest.slice(0, hash);
	  }
	  var qm = rest.indexOf('?');
	  if (qm !== -1) {
	    this.search = rest.substr(qm);
	    this.query = rest.substr(qm + 1);
	    if (parseQueryString) {
	      this.query = querystring.parse(this.query);
	    }
	    rest = rest.slice(0, qm);
	  } else if (parseQueryString) {
	    // no query string, but parseQueryString still requested
	    this.search = '';
	    this.query = {};
	  }
	  if (rest) this.pathname = rest;
	  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
	    this.pathname = '/';
	  }

	  //to support http.request
	  if (this.pathname || this.search) {
	    var p = this.pathname || '';
	    var s = this.search || '';
	    this.path = p + s;
	  }

	  // finally, reconstruct the href based on what has been validated.
	  this.href = this.format();
	  return this;
	};

	// format a parsed object into a url string
	function urlFormat(obj) {
	  // ensure it's an object, and not a string url.
	  // If it's an obj, this is a no-op.
	  // this way, you can call url_format() on strings
	  // to clean up potentially wonky urls.
	  if (isString(obj)) obj = urlParse(obj);
	  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
	  return obj.format();
	}

	Url.prototype.format = function () {
	  var auth = this.auth || '';
	  if (auth) {
	    auth = encodeURIComponent(auth);
	    auth = auth.replace(/%3A/i, ':');
	    auth += '@';
	  }

	  var protocol = this.protocol || '',
	      pathname = this.pathname || '',
	      hash = this.hash || '',
	      host = false,
	      query = '';

	  if (this.host) {
	    host = auth + this.host;
	  } else if (this.hostname) {
	    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');
	    if (this.port) {
	      host += ':' + this.port;
	    }
	  }

	  if (this.query && isObject(this.query) && Object.keys(this.query).length) {
	    query = querystring.stringify(this.query);
	  }

	  var search = this.search || query && '?' + query || '';

	  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

	  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
	  // unless they had them to begin with.
	  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
	    host = '//' + (host || '');
	    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
	  } else if (!host) {
	    host = '';
	  }

	  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
	  if (search && search.charAt(0) !== '?') search = '?' + search;

	  pathname = pathname.replace(/[?#]/g, function (match) {
	    return encodeURIComponent(match);
	  });
	  search = search.replace('#', '%23');

	  return protocol + host + pathname + search + hash;
	};

	function urlResolve(source, relative) {
	  return urlParse(source, false, true).resolve(relative);
	}

	Url.prototype.resolve = function (relative) {
	  return this.resolveObject(urlParse(relative, false, true)).format();
	};

	function urlResolveObject(source, relative) {
	  if (!source) return relative;
	  return urlParse(source, false, true).resolveObject(relative);
	}

	Url.prototype.resolveObject = function (relative) {
	  if (isString(relative)) {
	    var rel = new Url();
	    rel.parse(relative, false, true);
	    relative = rel;
	  }

	  var result = new Url();
	  Object.keys(this).forEach(function (k) {
	    result[k] = this[k];
	  }, this);

	  // hash is always overridden, no matter what.
	  // even href="" will remove it.
	  result.hash = relative.hash;

	  // if the relative url is empty, then there's nothing left to do here.
	  if (relative.href === '') {
	    result.href = result.format();
	    return result;
	  }

	  // hrefs like //foo/bar always cut to the protocol.
	  if (relative.slashes && !relative.protocol) {
	    // take everything except the protocol from relative
	    Object.keys(relative).forEach(function (k) {
	      if (k !== 'protocol') result[k] = relative[k];
	    });

	    //urlParse appends trailing / to urls like http://www.example.com
	    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
	      result.path = result.pathname = '/';
	    }

	    result.href = result.format();
	    return result;
	  }

	  if (relative.protocol && relative.protocol !== result.protocol) {
	    // if it's a known url protocol, then changing
	    // the protocol does weird things
	    // first, if it's not file:, then we MUST have a host,
	    // and if there was a path
	    // to begin with, then we MUST have a path.
	    // if it is file:, then the host is dropped,
	    // because that's known to be hostless.
	    // anything else is assumed to be absolute.
	    if (!slashedProtocol[relative.protocol]) {
	      Object.keys(relative).forEach(function (k) {
	        result[k] = relative[k];
	      });
	      result.href = result.format();
	      return result;
	    }

	    result.protocol = relative.protocol;
	    if (!relative.host && !hostlessProtocol[relative.protocol]) {
	      var relPath = (relative.pathname || '').split('/');
	      while (relPath.length && !(relative.host = relPath.shift())) {}
	      if (!relative.host) relative.host = '';
	      if (!relative.hostname) relative.hostname = '';
	      if (relPath[0] !== '') relPath.unshift('');
	      if (relPath.length < 2) relPath.unshift('');
	      result.pathname = relPath.join('/');
	    } else {
	      result.pathname = relative.pathname;
	    }
	    result.search = relative.search;
	    result.query = relative.query;
	    result.host = relative.host || '';
	    result.auth = relative.auth;
	    result.hostname = relative.hostname || relative.host;
	    result.port = relative.port;
	    // to support http.request
	    if (result.pathname || result.search) {
	      var p = result.pathname || '';
	      var s = result.search || '';
	      result.path = p + s;
	    }
	    result.slashes = result.slashes || relative.slashes;
	    result.href = result.format();
	    return result;
	  }

	  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',
	      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',
	      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,
	      removeAllDots = mustEndAbs,
	      srcPath = result.pathname && result.pathname.split('/') || [],
	      relPath = relative.pathname && relative.pathname.split('/') || [],
	      psychotic = result.protocol && !slashedProtocol[result.protocol];

	  // if the url is a non-slashed url, then relative
	  // links like ../.. should be able
	  // to crawl up to the hostname, as well.  This is strange.
	  // result.protocol has already been set by now.
	  // Later on, put the first path part into the host field.
	  if (psychotic) {
	    result.hostname = '';
	    result.port = null;
	    if (result.host) {
	      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);
	    }
	    result.host = '';
	    if (relative.protocol) {
	      relative.hostname = null;
	      relative.port = null;
	      if (relative.host) {
	        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);
	      }
	      relative.host = null;
	    }
	    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
	  }

	  if (isRelAbs) {
	    // it's absolute.
	    result.host = relative.host || relative.host === '' ? relative.host : result.host;
	    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;
	    result.search = relative.search;
	    result.query = relative.query;
	    srcPath = relPath;
	    // fall through to the dot-handling below.
	  } else if (relPath.length) {
	    // it's relative
	    // throw away the existing file, and take the new path instead.
	    if (!srcPath) srcPath = [];
	    srcPath.pop();
	    srcPath = srcPath.concat(relPath);
	    result.search = relative.search;
	    result.query = relative.query;
	  } else if (!isNullOrUndefined(relative.search)) {
	    // just pull out the search.
	    // like href='?foo'.
	    // Put this after the other two cases because it simplifies the booleans
	    if (psychotic) {
	      result.hostname = result.host = srcPath.shift();
	      //occationaly the auth can get stuck only in host
	      //this especialy happens in cases like
	      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
	      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;
	      if (authInHost) {
	        result.auth = authInHost.shift();
	        result.host = result.hostname = authInHost.shift();
	      }
	    }
	    result.search = relative.search;
	    result.query = relative.query;
	    //to support http.request
	    if (!isNull(result.pathname) || !isNull(result.search)) {
	      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
	    }
	    result.href = result.format();
	    return result;
	  }

	  if (!srcPath.length) {
	    // no path at all.  easy.
	    // we've already handled the other stuff above.
	    result.pathname = null;
	    //to support http.request
	    if (result.search) {
	      result.path = '/' + result.search;
	    } else {
	      result.path = null;
	    }
	    result.href = result.format();
	    return result;
	  }

	  // if a url ENDs in . or .., then it must get a trailing slash.
	  // however, if it ends in anything else non-slashy,
	  // then it must NOT get a trailing slash.
	  var last = srcPath.slice(-1)[0];
	  var hasTrailingSlash = (result.host || relative.host) && (last === '.' || last === '..') || last === '';

	  // strip single dots, resolve double dots to parent dir
	  // if the path tries to go above the root, `up` ends up > 0
	  var up = 0;
	  for (var i = srcPath.length; i >= 0; i--) {
	    last = srcPath[i];
	    if (last == '.') {
	      srcPath.splice(i, 1);
	    } else if (last === '..') {
	      srcPath.splice(i, 1);
	      up++;
	    } else if (up) {
	      srcPath.splice(i, 1);
	      up--;
	    }
	  }

	  // if the path is allowed to go above the root, restore leading ..s
	  if (!mustEndAbs && !removeAllDots) {
	    for (; up--; up) {
	      srcPath.unshift('..');
	    }
	  }

	  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
	    srcPath.unshift('');
	  }

	  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
	    srcPath.push('');
	  }

	  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/';

	  // put the host back
	  if (psychotic) {
	    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';
	    //occationaly the auth can get stuck only in host
	    //this especialy happens in cases like
	    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
	    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;
	    if (authInHost) {
	      result.auth = authInHost.shift();
	      result.host = result.hostname = authInHost.shift();
	    }
	  }

	  mustEndAbs = mustEndAbs || result.host && srcPath.length;

	  if (mustEndAbs && !isAbsolute) {
	    srcPath.unshift('');
	  }

	  if (!srcPath.length) {
	    result.pathname = null;
	    result.path = null;
	  } else {
	    result.pathname = srcPath.join('/');
	  }

	  //to support request.http
	  if (!isNull(result.pathname) || !isNull(result.search)) {
	    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
	  }
	  result.auth = relative.auth || result.auth;
	  result.slashes = result.slashes || relative.slashes;
	  result.href = result.format();
	  return result;
	};

	Url.prototype.parseHost = function () {
	  var host = this.host;
	  var port = portPattern.exec(host);
	  if (port) {
	    port = port[0];
	    if (port !== ':') {
	      this.port = port.substr(1);
	    }
	    host = host.substr(0, host.length - port.length);
	  }
	  if (host) this.hostname = host;
	};

	function isString(arg) {
	  return typeof arg === "string";
	}

	function isObject(arg) {
	  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;
	}

	function isNull(arg) {
	  return arg === null;
	}
	function isNullOrUndefined(arg) {
	  return arg == null;
	}

/***/ },
/* 1081 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/*! https://mths.be/utf8js v2.0.0 by @mathias */
	;(function (root) {

		// Detect free variables `exports`
		var freeExports = ( false ? 'undefined' : _typeof(exports)) == 'object' && exports;

		// Detect free variable `module`
		var freeModule = ( false ? 'undefined' : _typeof(module)) == 'object' && module && module.exports == freeExports && module;

		// Detect free variable `global`, from Node.js or Browserified code,
		// and use it as `root`
		var freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global;
		if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
			root = freeGlobal;
		}

		/*--------------------------------------------------------------------------*/

		var stringFromCharCode = String.fromCharCode;

		// Taken from https://mths.be/punycode
		function ucs2decode(string) {
			var output = [];
			var counter = 0;
			var length = string.length;
			var value;
			var extra;
			while (counter < length) {
				value = string.charCodeAt(counter++);
				if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
					// high surrogate, and there is a next character
					extra = string.charCodeAt(counter++);
					if ((extra & 0xFC00) == 0xDC00) {
						// low surrogate
						output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
					} else {
						// unmatched surrogate; only append this code unit, in case the next
						// code unit is the high surrogate of a surrogate pair
						output.push(value);
						counter--;
					}
				} else {
					output.push(value);
				}
			}
			return output;
		}

		// Taken from https://mths.be/punycode
		function ucs2encode(array) {
			var length = array.length;
			var index = -1;
			var value;
			var output = '';
			while (++index < length) {
				value = array[index];
				if (value > 0xFFFF) {
					value -= 0x10000;
					output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
					value = 0xDC00 | value & 0x3FF;
				}
				output += stringFromCharCode(value);
			}
			return output;
		}

		function checkScalarValue(codePoint) {
			if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
				throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');
			}
		}
		/*--------------------------------------------------------------------------*/

		function createByte(codePoint, shift) {
			return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);
		}

		function encodeCodePoint(codePoint) {
			if ((codePoint & 0xFFFFFF80) == 0) {
				// 1-byte sequence
				return stringFromCharCode(codePoint);
			}
			var symbol = '';
			if ((codePoint & 0xFFFFF800) == 0) {
				// 2-byte sequence
				symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);
			} else if ((codePoint & 0xFFFF0000) == 0) {
				// 3-byte sequence
				checkScalarValue(codePoint);
				symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);
				symbol += createByte(codePoint, 6);
			} else if ((codePoint & 0xFFE00000) == 0) {
				// 4-byte sequence
				symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);
				symbol += createByte(codePoint, 12);
				symbol += createByte(codePoint, 6);
			}
			symbol += stringFromCharCode(codePoint & 0x3F | 0x80);
			return symbol;
		}

		function utf8encode(string) {
			var codePoints = ucs2decode(string);
			var length = codePoints.length;
			var index = -1;
			var codePoint;
			var byteString = '';
			while (++index < length) {
				codePoint = codePoints[index];
				byteString += encodeCodePoint(codePoint);
			}
			return byteString;
		}

		/*--------------------------------------------------------------------------*/

		function readContinuationByte() {
			if (byteIndex >= byteCount) {
				throw Error('Invalid byte index');
			}

			var continuationByte = byteArray[byteIndex] & 0xFF;
			byteIndex++;

			if ((continuationByte & 0xC0) == 0x80) {
				return continuationByte & 0x3F;
			}

			// If we end up here, it’s not a continuation byte
			throw Error('Invalid continuation byte');
		}

		function decodeSymbol() {
			var byte1;
			var byte2;
			var byte3;
			var byte4;
			var codePoint;

			if (byteIndex > byteCount) {
				throw Error('Invalid byte index');
			}

			if (byteIndex == byteCount) {
				return false;
			}

			// Read first byte
			byte1 = byteArray[byteIndex] & 0xFF;
			byteIndex++;

			// 1-byte sequence (no continuation bytes)
			if ((byte1 & 0x80) == 0) {
				return byte1;
			}

			// 2-byte sequence
			if ((byte1 & 0xE0) == 0xC0) {
				var byte2 = readContinuationByte();
				codePoint = (byte1 & 0x1F) << 6 | byte2;
				if (codePoint >= 0x80) {
					return codePoint;
				} else {
					throw Error('Invalid continuation byte');
				}
			}

			// 3-byte sequence (may include unpaired surrogates)
			if ((byte1 & 0xF0) == 0xE0) {
				byte2 = readContinuationByte();
				byte3 = readContinuationByte();
				codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;
				if (codePoint >= 0x0800) {
					checkScalarValue(codePoint);
					return codePoint;
				} else {
					throw Error('Invalid continuation byte');
				}
			}

			// 4-byte sequence
			if ((byte1 & 0xF8) == 0xF0) {
				byte2 = readContinuationByte();
				byte3 = readContinuationByte();
				byte4 = readContinuationByte();
				codePoint = (byte1 & 0x0F) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;
				if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
					return codePoint;
				}
			}

			throw Error('Invalid UTF-8 detected');
		}

		var byteArray;
		var byteCount;
		var byteIndex;
		function utf8decode(byteString) {
			byteArray = ucs2decode(byteString);
			byteCount = byteArray.length;
			byteIndex = 0;
			var codePoints = [];
			var tmp;
			while ((tmp = decodeSymbol()) !== false) {
				codePoints.push(tmp);
			}
			return ucs2encode(codePoints);
		}

		/*--------------------------------------------------------------------------*/

		var utf8 = {
			'version': '2.0.0',
			'encode': utf8encode,
			'decode': utf8decode
		};

		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if ("function" == 'function' && _typeof(__webpack_require__(81)) == 'object' && __webpack_require__(81)) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return utf8;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (freeExports && !freeExports.nodeType) {
			if (freeModule) {
				// in Node.js or RingoJS v0.8.0+
				freeModule.exports = utf8;
			} else {
				// in Narwhal or RingoJS v0.7.0-
				var object = {};
				var hasOwnProperty = object.hasOwnProperty;
				for (var key in utf8) {
					hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);
				}
			}
		} else {
			// in Rhino or a web browser
			root.utf8 = utf8;
		}
	})(undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(111)(module), (function() { return this; }())))

/***/ },
/* 1082 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	module.exports = function isBuffer(arg) {
	  return arg && (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
	};

/***/ },
/* 1083 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var formatRegExp = /%[sdj%]/g;
	exports.format = function (f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function (x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s':
	        return String(args[i++]);
	      case '%d':
	        return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};

	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function (fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function () {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};

	var debugs = {};
	var debugEnviron;
	exports.debuglog = function (set) {
	  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function () {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function () {};
	    }
	  }
	  return debugs[set];
	};

	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;

	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold': [1, 22],
	  'italic': [3, 23],
	  'underline': [4, 24],
	  'inverse': [7, 27],
	  'white': [37, 39],
	  'grey': [90, 39],
	  'black': [30, 39],
	  'blue': [34, 39],
	  'cyan': [36, 39],
	  'green': [32, 39],
	  'magenta': [35, 39],
	  'red': [31, 39],
	  'yellow': [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};

	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}

	function stylizeNoColor(str, styleType) {
	  return str;
	}

	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function (val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}

	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect && value && isFunction(value.inspect) &&
	  // Filter out the util module, it's inspect function is special
	  value.inspect !== exports.inspect &&
	  // Also filter out any prototype objects using the circular check.
	  !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '',
	      array = false,
	      braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function (key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}

	function formatPrimitive(ctx, value) {
	  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value)) return ctx.stylize('' + value, 'number');
	  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value)) return ctx.stylize('null', 'null');
	}

	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}

	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function (key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
	    }
	  });
	  return output;
	}

	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function (line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function (line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}

	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function (prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}

	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol' || // ES6 symbol
	  typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(1082);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}

	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}

	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}

	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function () {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};

	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(903);

	exports._extend = function (origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(64)))

/***/ },
/* 1084 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	var rng;

	if (global.crypto && crypto.getRandomValues) {
	  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
	  // Moderately fast, high quality
	  var _rnds8 = new Uint8Array(16);
	  rng = function whatwgRNG() {
	    crypto.getRandomValues(_rnds8);
	    return _rnds8;
	  };
	}

	if (!rng) {
	  // Math.random()-based (RNG)
	  //
	  // If all else fails, use Math.random().  It's fast, but is of unspecified
	  // quality.
	  var _rnds = new Array(16);
	  rng = function rng() {
	    for (var i = 0, r; i < 16; i++) {
	      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
	      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
	    }

	    return _rnds;
	  };
	}

	module.exports = rng;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 1085 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Add vectors.
	 * @function add
	 * @param {...number[]} vector - Vectors to add.
	 * @throws Length mismatch error.
	 * @returns {number[]} - Added vector.
	 *
	 */

	'use strict';

	var _operate = __webpack_require__(219);

	function _addOperation(val1, val2) {
	  return val1 + val2;
	}
	/** @lends add */
	function add(vector1, vector2) {
	  var result = vector1;
	  var len = arguments.length;
	  for (var i = 1; i < len; i++) {
	    result = _operate(result, arguments[i], _addOperation);
	  }
	  return result;
	}

	module.exports = add;

/***/ },
/* 1086 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Basic vector calculation functions.
	 * @module veccal
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get add() {
	    return d(__webpack_require__(1085));
	  },
	  get multiply() {
	    return d(__webpack_require__(363));
	  },
	  get normalize() {
	    return d(__webpack_require__(1087));
	  },
	  get revert() {
	    return d(__webpack_require__(1088));
	  },
	  get scale() {
	    return d(__webpack_require__(220));
	  },
	  get size() {
	    return d(__webpack_require__(364));
	  },
	  get subtract() {
	    return d(__webpack_require__(1089));
	  }
	};

/***/ },
/* 1087 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Normalize vectors.
	 * @memberof module:veccal/lib
	 * @function normalize
	 * @param {number[]} vector - Vector to normalize.
	 * @param {number} [size=1] - Size to fit.
	 * @returns {number[]} - Normalized vector.
	 *
	 */

	'use strict';

	var scale = __webpack_require__(220);
	var size = __webpack_require__(364);

	/** @lends normalize */
	function normalize(vector, normalizeSize) {
	  var rate = (normalizeSize || 1) / size(vector);
	  return scale(vector, rate);
	}

	module.exports = normalize;

/***/ },
/* 1088 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Revert a vector.
	 * @memberof module:veccal/lib
	 * @function revert
	 * @param {number[]} - Vector to revert.
	 * @returns {number[]} - Reversed vector.
	 */

	'use strict';

	var scale = __webpack_require__(220);

	/** @lends revert */
	function revert(vector) {
	  return scale(vector, -1);
	}

	module.exports = revert;

/***/ },
/* 1089 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Subtract vectors.
	 * @memberof module:veccal/lib
	 * @function subtract
	 * @param {...number[]} vector - Vectors to subtract.
	 * @throws Length mismatch error.
	 * @returns {number[]} - Subtracted vector.
	 *
	 */

	'use strict';

	var _operate = __webpack_require__(219);

	function _subtractOperation(val1, val2) {
	  return val1 - val2;
	}
	/** @lends subtract */
	function subtract(vector1, vector2) {
	  var result = vector1;
	  var len = arguments.length;
	  for (var i = 1; i < len; i++) {
	    result = _operate(result, arguments[i], _subtractOperation);
	  }
	  return result;
	}

	module.exports = subtract;

/***/ },
/* 1090 */
/***/ function(module, exports) {

	/**
	 * Check if same length
	 * @function validateSameLength
	 */

	'use strict';

	/** @lends validateSameLength */

	function validateSameLength(vector1, vector2) {
	  var len1 = vector1.length,
	      len2 = vector2.length;

	  var ok = len1 === len2;
	  if (!ok) {
	    var msg = ["Length mismatch:", len1, 'and', len2].join(' ');
	    throw new Error(msg);
	  }
	}

	module.exports = validateSameLength;

/***/ },
/* 1091 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Get configurations
	 * @function configs
	 * @returns {Object}
	 */
	'use strict';

	var _require = __webpack_require__(634);

	var nameColorizer = _require.nameColorizer;


	module.exports = function configs() {
	  var color = nameColorizer('#3A8')('~~~~package_name~~~~');

	  return {
	    /** Dominant ui color */
	    color: color
	  };
	};

/***/ },
/* 1092 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _co = __webpack_require__(79);

	var _co2 = _interopRequireDefault(_co);

	var _deepEqual = __webpack_require__(129);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _agent = __webpack_require__(1069);

	var _agent2 = _interopRequireDefault(_agent);

	var _sugoCaller = __webpack_require__(1063);

	var _sugoCaller2 = _interopRequireDefault(_sugoCaller);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /**
	                                                                                                                                                                                                                   * Action of actors.
	                                                                                                                                                                                                                   */


	var debug = __webpack_require__(24)('sg:site:actions:actors');
	var host = window.location.host;
	var protocol = window.location.protocol;
	var CLOUD_URL = protocol + '//' + host;
	var CALLER_URL = CLOUD_URL + '/callers';

	var getActorsByAgent = function getActorsByAgent() {
	  return (0, _co2.default)(regeneratorRuntime.mark(function _callee() {
	    var actors;
	    return regeneratorRuntime.wrap(function _callee$(_context) {
	      while (1) {
	        switch (_context.prev = _context.next) {
	          case 0:
	            _context.next = 2;
	            return (0, _agent2.default)(CLOUD_URL).actors();

	          case 2:
	            actors = _context.sent;

	            debug('actors through cloudAgent');
	            debug(actors);
	            return _context.abrupt('return', actors);

	          case 6:
	          case 'end':
	            return _context.stop();
	        }
	      }
	    }, _callee, this);
	  })).catch(function (err) {
	    debug('cannot get actors through cloudAgent');
	    console.error(err);
	    return [];
	  });
	};

	var openCaller = function openCaller(key) {
	  return (0, _co2.default)(regeneratorRuntime.mark(function _callee2() {
	    var Caller, caller;
	    return regeneratorRuntime.wrap(function _callee2$(_context2) {
	      while (1) {
	        switch (_context2.prev = _context2.next) {
	          case 0:
	            Caller = (0, _sugoCaller2.default)(CALLER_URL, {});
	            _context2.next = 3;
	            return Caller.connect(key);

	          case 3:
	            caller = _context2.sent;
	            return _context2.abrupt('return', caller);

	          case 5:
	          case 'end':
	            return _context2.stop();
	        }
	      }
	    }, _callee2, this);
	  })).catch(function (err) {
	    return Promise.reject(err);
	  });
	};

	function getNewActorKeys(oldKeys, newKeys) {
	  var oldDict = dictByKey(oldKeys.map(function (key) {
	    return { key: key };
	  }));
	  var added = newKeys.filter(function (key) {
	    return !oldDict[key];
	  });
	  return added;
	}

	function dictByKey(array) {
	  return array.reduce(function (dict, obj) {
	    return Object.assign(dict, _defineProperty({}, obj.key, obj));
	  }, {});
	}

	// ---- export modules ----

	var connectActors = function connectActors() {
	  return function (dispatch, getState) {
	    return (0, _co2.default)(regeneratorRuntime.mark(function _callee4() {
	      var actorsInStore, actorsByAgent, keysInStore, keysByAgent, noChange, newKeys, newActors, concatActors, actors;
	      return regeneratorRuntime.wrap(function _callee4$(_context4) {
	        while (1) {
	          switch (_context4.prev = _context4.next) {
	            case 0:
	              debug('connectActors starts');
	              actorsInStore = getState().actors;
	              _context4.next = 4;
	              return getActorsByAgent();

	            case 4:
	              actorsByAgent = _context4.sent;
	              keysInStore = actorsInStore.map(function (actor) {
	                return actor.key;
	              });
	              keysByAgent = actorsByAgent.map(function (actor) {
	                return actor.key;
	              });
	              noChange = (0, _deepEqual2.default)(keysInStore, keysByAgent);

	              if (!noChange) {
	                _context4.next = 11;
	                break;
	              }

	              debug('Refreshed, but no change.');
	              return _context4.abrupt('return');

	            case 11:
	              newKeys = getNewActorKeys(keysInStore, keysByAgent);
	              _context4.next = 14;
	              return newKeys.map(function (key) {
	                return (0, _co2.default)(regeneratorRuntime.mark(function _callee3() {
	                  var caller;
	                  return regeneratorRuntime.wrap(function _callee3$(_context3) {
	                    while (1) {
	                      switch (_context3.prev = _context3.next) {
	                        case 0:
	                          _context3.next = 2;
	                          return openCaller(key);

	                        case 2:
	                          caller = _context3.sent;
	                          return _context3.abrupt('return', {
	                            key: key,
	                            caller: caller,
	                            requesting: false
	                          });

	                        case 4:
	                        case 'end':
	                          return _context3.stop();
	                      }
	                    }
	                  }, _callee3, this);
	                })).catch(function (err) {
	                  return Promise.reject(err);
	                });
	              });

	            case 14:
	              newActors = _context4.sent;
	              concatActors = Object.assign(dictByKey(actorsInStore), dictByKey(newActors));

	              // 接続されていないアクターはここで掃除される

	              actors = keysByAgent.map(function (key) {
	                return concatActors[key];
	              });

	              debug('dispatch CONNECT_ACTORS');
	              debug(actors);
	              dispatch({
	                type: 'CONNECT_ACTORS',
	                actors: actors
	              });

	            case 20:
	            case 'end':
	              return _context4.stop();
	          }
	        }
	      }, _callee4, this);
	    })).catch(function (err) {
	      console.error(err);
	      return Promise.reject(err);
	    });
	  };
	};

	var toggleRequesting = function toggleRequesting(actorKey) {
	  return {
	    type: 'TOGGLE_REQUESTING',
	    actorKey: actorKey
	  };
	};

	exports.default = {
	  connectActors: connectActors,
	  toggleRequesting: toggleRequesting
	};

/***/ },
/* 1093 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Action of dominant color state.
	 */
	var dominantColor = function dominantColor(_ref) {
	  var color = _ref.color;

	  return {
	    type: 'SET_COLOR',
	    color: color
	  };
	};

	exports.default = dominantColor;

/***/ },
/* 1094 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Action of modal window.
	 */
	var modalWindow = function modalWindow() {
	  return {
	    type: 'TOGGLE_MODAL_DISPLAY'
	  };
	};

	exports.default = modalWindow;

/***/ },
/* 1095 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _actor_list = __webpack_require__(1098);

	var _actor_list2 = _interopRequireDefault(_actor_list);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * The section of actor list.
	 */
	var ActorListSection = _react2.default.createClass({
	  displayName: 'ActorListSection',
	  render: function render() {
	    return _react2.default.createElement(
	      'div',
	      { className: 'actor-list-section' },
	      _react2.default.createElement(
	        'h2',
	        { className: 'app-theme-dark-color' },
	        'Connected Actors List'
	      ),
	      _react2.default.createElement(_actor_list2.default, null)
	    );
	  }
	});

	exports.default = ActorListSection;

/***/ },
/* 1096 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _app_style = __webpack_require__(1100);

	var _app_style2 = _interopRequireDefault(_app_style);

	var _refresh_connection_button = __webpack_require__(1102);

	var _refresh_connection_button2 = _interopRequireDefault(_refresh_connection_button);

	var _actor_list_section = __webpack_require__(1095);

	var _actor_list_section2 = _interopRequireDefault(_actor_list_section);

	var _header = __webpack_require__(1097);

	var _header2 = _interopRequireDefault(_header);

	var _pong_window = __webpack_require__(1101);

	var _pong_window2 = _interopRequireDefault(_pong_window);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Application component.
	 */
	var debug = __webpack_require__(24)('sg:site:app');

	var App = _react2.default.createClass({
	  displayName: 'App',
	  render: function render() {
	    return _react2.default.createElement(
	      'div',
	      { className: 'app' },
	      _react2.default.createElement(_app_style2.default, null),
	      _react2.default.createElement(_header2.default, null),
	      _react2.default.createElement(_refresh_connection_button2.default, null),
	      _react2.default.createElement(_actor_list_section2.default, null),
	      _react2.default.createElement(_pong_window2.default, null)
	    );
	  }
	});

	exports.default = App;

/***/ },
/* 1097 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Site Header
	 */
	var Header = _react2.default.createClass({
	  displayName: 'Header',
	  render: function render() {
	    return _react2.default.createElement(
	      'div',
	      { className: (0, _classnames2.default)('header', 'app-theme-background-color') },
	      _react2.default.createElement(
	        'h1',
	        null,
	        '~~~~package_name~~~~'
	      )
	    );
	  }
	});

	exports.default = Header;

/***/ },
/* 1098 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(93);

	var _actor_list_item = __webpack_require__(1099);

	var _actor_list_item2 = _interopRequireDefault(_actor_list_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = __webpack_require__(24)('sg:site:actor_list'); /**
	                                                     * The List of SUGO Actors.
	                                                     */


	var ActorList = _react2.default.createClass({
	  displayName: 'ActorList',

	  propTypes: {
	    actors: _react2.default.PropTypes.array
	  },
	  getDefaultProps: function getDefaultProps() {
	    return {
	      actors: []
	    };
	  },
	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var actors = props.actors;

	    debug(actors);
	    if (actors.length > 0) {
	      return _react2.default.createElement(
	        'div',
	        { className: 'actor-list' },
	        actors.map(function (actor) {
	          return _react2.default.createElement(_actor_list_item2.default, { key: actor.key, actor: actor });
	        })
	      );
	    } else {
	      return _react2.default.createElement(
	        'div',
	        { className: 'actor-list' },
	        _react2.default.createElement(
	          'div',
	          { className: 'actor-list-empty' },
	          'No actors connected.'
	        )
	      );
	    }
	  }
	});

	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    actors: state.actors
	  };
	};

	ActorList = (0, _reactRedux.connect)(mapStateToProps)(ActorList);

	exports.default = ActorList;

/***/ },
/* 1099 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(93);

	var _sgReactComponents = __webpack_require__(141);

	var _actions = __webpack_require__(143);

	var _co = __webpack_require__(79);

	var _co2 = _interopRequireDefault(_co);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * List Item Component of a actor.
	 */
	var debug = __webpack_require__(24)('sg:site:actor_list_item');

	var ActorListItem = _react2.default.createClass({
	  displayName: 'ActorListItem',

	  propTypes: {
	    actor: _react2.default.PropTypes.object
	  },

	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var actor = props.actor;
	    var requesting = actor.requesting;

	    return _react2.default.createElement(
	      'div',
	      { className: (0, _classnames2.default)('actor-list-item', requesting ? 'requesting' : '') },
	      _react2.default.createElement(
	        'div',
	        { className: 'actor-list-item-key' },
	        actor.key
	      ),
	      _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement('i', { className: (0, _classnames2.default)('actor-list-item-spinning', requesting ? 'visible' : 'hidden', 'fa', 'fa-spinner', 'fa-pulse', 'fa-1x', 'fa-fw') })
	      ),
	      _react2.default.createElement(
	        _sgReactComponents.SgButton,
	        { className: 'actor-list-item-button', onTap: s.onPing, disabled: requesting },
	        'Ping'
	      )
	    );
	  },
	  onPing: function onPing() {
	    var s = this;
	    var _s$props = s.props;
	    var actor = _s$props.actor;
	    var togglePingRequest = _s$props.togglePingRequest;
	    var openPongWindow = _s$props.openPongWindow;

	    (0, _co2.default)(regeneratorRuntime.mark(function _callee() {
	      var res;
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              debug('ping');
	              togglePingRequest();
	              _context.next = 4;
	              return actor.caller.get('noop').ping();

	            case 4:
	              res = _context.sent;

	              if (res === 'pong') {
	                debug(res);
	                openPongWindow();
	              } else {
	                debug('Ping response is not pong.');
	                debug(res);
	                togglePingRequest();
	              }

	            case 6:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    })).catch(function (err) {
	      console.error(err);
	    });
	  }
	});

	var mapDispatchToProps = function mapDispatchToProps(dispatch, props) {
	  return {
	    openPongWindow: function openPongWindow() {
	      dispatch((0, _actions.modalWindow)());
	      dispatch((0, _actions.toggleRequesting)(props.actor.key));
	    },
	    togglePingRequest: function togglePingRequest() {
	      dispatch((0, _actions.toggleRequesting)(props.actor.key));
	    }
	  };
	};

	ActorListItem = (0, _reactRedux.connect)(null, mapDispatchToProps)(ActorListItem);

	exports.default = ActorListItem;

/***/ },
/* 1100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(93);

	var _sgReactComponents = __webpack_require__(141);

	var _color = __webpack_require__(297);

	var _color2 = _interopRequireDefault(_color);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Style of the whole application.
	 */
	var debug = __webpack_require__(24)('sg:site:app_style');

	var AppStyle = _react2.default.createClass({
	  displayName: 'AppStyle',

	  propTypes: {
	    /** Theme color of the site */
	    color: _react2.default.PropTypes.string
	  },

	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var color = props.color;

	    var style = '\n    .app-theme-color {\n      color: ' + color + '\n    }\n    .app-theme-dark-color {\n      color: ' + (0, _color2.default)(color).darken(0.3).hslString() + '\n    }\n    .app-theme-background-color {\n      background-color: ' + color + '\n    }\n';
	    return _react2.default.createElement(
	      'div',
	      { className: 'app_style' },
	      _react2.default.createElement(
	        'style',
	        { type: 'text/css' },
	        style
	      ),
	      _react2.default.createElement(_sgReactComponents.SgThemeStyle, { dominant: color })
	    );
	  }
	});

	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    color: state.dominantColor
	  };
	};

	AppStyle = (0, _reactRedux.connect)(mapStateToProps)(AppStyle);

	exports.default = AppStyle;

/***/ },
/* 1101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(93);

	var _actions = __webpack_require__(143);

	var _classnames = __webpack_require__(2);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _sgReactComponents = __webpack_require__(141);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PongWindow = _react2.default.createClass({
	  displayName: 'PongWindow',

	  propTypes: {
	    display: _react2.default.PropTypes.bool,
	    close: _react2.default.PropTypes.func
	  },

	  render: function render() {
	    var s = this;
	    var props = s.props;
	    var display = props.display;
	    var close = props.close;

	    return _react2.default.createElement(
	      'div',
	      { className: (0, _classnames2.default)('pong-window-background', display ? '' : 'hidden') },
	      _react2.default.createElement(
	        'div',
	        { className: 'pong-window' },
	        _react2.default.createElement(
	          'p',
	          null,
	          'Pong !'
	        ),
	        _react2.default.createElement(
	          _sgReactComponents.SgButton,
	          { onTap: close },
	          'Close'
	        )
	      )
	    );
	  }
	}); /**
	     * Pong window respondging to the Ping.
	     */


	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    display: state.modalWindow
	  };
	};

	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    close: function close() {
	      dispatch((0, _actions.modalWindow)());
	    }
	  };
	};

	PongWindow = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PongWindow);

	exports.default = PongWindow;

/***/ },
/* 1102 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(93);

	var _actions = __webpack_require__(143);

	var _sgReactComponents = __webpack_require__(141);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 *  The button of refreshing connection of the actors.
	 */
	var RefreshConnectionButton = _react2.default.createClass({
	  displayName: 'RefreshConnectionButton',

	  propTypes: {
	    onClick: _react2.default.PropTypes.func
	  },

	  render: function render() {
	    var s = this;
	    var onClick = s.props.onClick;

	    return _react2.default.createElement(
	      'div',
	      { className: 'refresh-connection-button' },
	      _react2.default.createElement(
	        _sgReactComponents.SgButton,
	        { onTap: onClick },
	        'Refresh'
	      )
	    );
	  }
	});

	var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
	  return {
	    onClick: function onClick() {
	      dispatch((0, _actions.connectActors)());
	    }
	  };
	};

	RefreshConnectionButton = (0, _reactRedux.connect)(null, mapDispatchToProps)(RefreshConnectionButton);

	exports.default = RefreshConnectionButton;

/***/ },
/* 1103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(16);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _app = __webpack_require__(1096);

	var _app2 = _interopRequireDefault(_app);

	var _reactRedux = __webpack_require__(93);

	var _redux = __webpack_require__(214);

	var _reduxLogger = __webpack_require__(999);

	var _reduxLogger2 = _interopRequireDefault(_reduxLogger);

	var _reduxThunk = __webpack_require__(1000);

	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

	var _reducers = __webpack_require__(1106);

	var _reducers2 = _interopRequireDefault(_reducers);

	var _config = __webpack_require__(1091);

	var _config2 = _interopRequireDefault(_config);

	var _actions = __webpack_require__(143);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = __webpack_require__(24)('sg:site:index');
	debug('NODE_ENV = ' + ("production"));

	var rootEl = document.getElementById('site');
	var middlewares = [_reduxThunk2.default];

	if (false) {
	  var logger = (0, _reduxLogger2.default)();
	  middlewares.push(logger);
	}

	var store = (0, _redux.createStore)(_reducers2.default, _redux.applyMiddleware.apply(undefined, middlewares));

	var color = (0, _config2.default)().color;
	store.dispatch((0, _actions.dominantColor)({ color: color }));

	function render() {
	  _reactDom2.default.render(_react2.default.createElement(
	    _reactRedux.Provider,
	    { store: store },
	    _react2.default.createElement(_app2.default, { color: color })
	  ), rootEl);
	}

	document.addEventListener('DOMContentLoaded', render);

/***/ },
/* 1104 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/**
	 * Reducer of actors.
	 */

	var actors = function actors() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
	  var action = arguments[1];

	  switch (action.type) {
	    /*
	     * Agentで検出された actor にターミナルを割り当てる
	     */
	    case 'CONNECT_ACTORS':
	      return action.actors;
	    case 'TOGGLE_REQUESTING':
	      {
	        var _ret = function () {
	          var actorKey = action.actorKey;

	          console.log(actorKey);
	          var actorIndex = state.findIndex(function (actor) {
	            return actor.key === actorKey;
	          });
	          if (actorIndex === -1) {
	            return {
	              v: state
	            };
	          }
	          var actor = Object.assign({}, state[actorIndex]);
	          actor.requesting = !actor.requesting;
	          var actors = [].concat(state);
	          actors[actorIndex] = actor;
	          return {
	            v: actors
	          };
	        }();

	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	      }
	    default:
	      return state;
	  }
	};

	exports.default = actors;

/***/ },
/* 1105 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Reducer of dominant color string.
	 */
	var dominantColor = function dominantColor() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? '#ff5' : arguments[0];
	  var action = arguments[1];

	  switch (action.type) {
	    case 'SET_COLOR':
	      return action.color;
	    default:
	      return state;
	  }
	};

	exports.default = dominantColor;

/***/ },
/* 1106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _redux = __webpack_require__(214);

	var _actors = __webpack_require__(1104);

	var _actors2 = _interopRequireDefault(_actors);

	var _dominant_color = __webpack_require__(1105);

	var _dominant_color2 = _interopRequireDefault(_dominant_color);

	var _modal_window = __webpack_require__(1107);

	var _modal_window2 = _interopRequireDefault(_modal_window);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Top level reducer.
	 * The state shape is below.
	 * {
	 *   actors: [
	 *     {
	 *       key: 'actor-01',
	 *       caller: Caller
	 *     }
	 *   ],
	 *   dominantColor: '#5ff',
	 *   modal_window: false
	 * }
	 */

	var Reducer = (0, _redux.combineReducers)({
	  actors: _actors2.default,
	  dominantColor: _dominant_color2.default,
	  modalWindow: _modal_window2.default
	});

	exports.default = Reducer;

/***/ },
/* 1107 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Reducer of the state of display the Pong modal window.
	 */
	var modalWindow = function modalWindow() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
	  var action = arguments[1];

	  switch (action.type) {
	    case 'TOGGLE_MODAL_DISPLAY':
	      return !state;
	    default:
	      return state;
	  }
	};

	exports.default = modalWindow;

/***/ },
/* 1108 */
/***/ function(module, exports) {

	module.exports = {
		"id": "http://sugos.tech/schemas/module-spec",
		"$schema": "http://json-schema.org/draft-04/schema#",
		"title": "Spec of SUGOS-Actor module",
		"type": "object",
		"properties": {
			"name": {
				"$ref": "#/definitions/name",
				"minLength": 1,
				"description": "Name of module"
			},
			"version": {
				"$ref": "#/definitions/semver",
				"description": "Version number with semver format"
			},
			"desc": {
				"$ref": "#/definitions/text",
				"description": "Description text"
			},
			"methods": {
				"$ref": "#/definitions/functions",
				"description": "Method signature"
			},
			"events": {
				"$ref": "#/definitions/events",
				"description": "Events to emit"
			}
		},
		"additionalProperties": true,
		"required": [
			"name",
			"version"
		],
		"definitions": {
			"name": {
				"type": "string",
				"pattern": "^[A-Za-z](?:[_\\.-]?[A-Za-z0-9]+)*$"
			},
			"semver": {
				"type": "string",
				"pattern": "^\\d+\\.\\d+\\.\\d+(?:-[a-z]+(?:[_\\.-]*[a-z0-9]+)*)*$"
			},
			"text": {
				"type": "string",
				"maxLength": "1024"
			},
			"functions": {
				"type": "object",
				"patternProperties": {
					".*": {
						"$ref": "#/definitions/function"
					}
				}
			},
			"function": {
				"type": "object",
				"properties": {
					"name": {
						"$ref": "#/definitions/name",
						"description": "Name of the function"
					},
					"desc": {
						"$ref": "#/definitions/text",
						"description": "Description of the function"
					},
					"params": {
						"type": "array",
						"description": "Parameters of the function",
						"items": {
							"$ref": "#/definitions/functionParam"
						}
					},
					"return": {
						"$ref": "#/definitions/functionReturn",
						"description": "Value to return"
					}
				}
			},
			"functionParam": {
				"type": "object",
				"properties": {
					"name": {
						"$ref": "#/definitions/name",
						"description": "Name of the parameter"
					},
					"type": {
						"$ref": "#/definitions/type",
						"description": "Type of the parameter"
					},
					"desc": {
						"$ref": "#/definitions/text",
						"description": "Description of parameter"
					}
				}
			},
			"functionReturn": {
				"type": "object",
				"properties": {
					"type": {
						"$ref": "#/definitions/type",
						"description": "Type of the parameter"
					},
					"desc": {
						"$ref": "#/definitions/text",
						"description": "Description of parameter"
					}
				}
			},
			"events": {
				"type": "object",
				"patternProperties": {
					".*": {
						"$ref": "#/definitions/event"
					}
				}
			},
			"event": {
				"type": "object",
				"properties": {
					"name": {
						"$ref": "#/definitions/name",
						"description": "Name of the event"
					},
					"desc": {
						"$ref": "#/definitions/text",
						"description": "Description of the event"
					}
				}
			}
		}
	};

/***/ },
/* 1109 */
/***/ function(module, exports) {

	module.exports = {
		"id": "http://sugos.tech/schemas/perform-config",
		"$schema": "http://json-schema.org/draft-04/schema#",
		"title": "Configuration of SUGOS action performing",
		"type": "object",
		"properties": {
			"module": {
				"$ref": "#/definitions/name",
				"description": "Name of module to work with"
			},
			"method": {
				"$ref": "#/definitions/name",
				"description": "Name of method to perform"
			},
			"params": {
				"type": "array",
				"description": "Parameters of the function"
			},
			"key": {
				"type": "string",
				"description": "Key of actor"
			},
			"meta": {
				"type": "object",
				"description": "Meta data of this"
			}
		},
		"additionalProperties": true,
		"required": [
			"module",
			"method"
		],
		"definitions": {
			"name": {
				"type": "string",
				"pattern": "^[A-Za-z](?:[_\\.-]?[A-Za-z0-9]+)*$"
			}
		}
	};

/***/ },
/* 1110 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 1111 */
/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__) {

	/**
	 * colorizer functions
	 * @module colorizers
	 */

	'use strict';

	var d = function d(module) {
	  return module.default || module;
	};

	module.exports = {
	  get nameColorizer() {
	    return d(__webpack_require__(__webpack_module_template_argument_0__));
	  },
	  get rotateColorizer() {
	    return d(__webpack_require__(__webpack_module_template_argument_1__));
	  }
	};

/***/ },
/* 1112 */
/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {

	/**
	 * Define a colorizer to generate colors by name
	 * @function nameColorizer
	 * @param {string} base - Base color string
	 * @returns {function} - Generated function
	 */
	'use strict';

	var rotate = __webpack_require__(__webpack_module_template_argument_0__);

	/** @lends nameColorizer */
	function nameColorizer(base) {
	  var colors = {};

	  /**
	   * Colorizer function
	   * @param {string} name - Name for color
	   * @returns {string} color - Color for the id
	   */
	  function colorizer(name) {
	    var color = colors[name];
	    if (color) {
	      return color;
	    }
	    var value = String(name).split('').map(function (letter) {
	      return letter.charCodeAt(0);
	    }).reduce(function (result, value) {
	      return result + value;
	    }, 0);
	    color = rotate(base, parseInt(value % 360.0));
	    colors[name] = color;
	    return color;
	  }

	  Object.assign(colorizer, { base: base, colors: colors });
	  return colorizer;
	}

	module.exports = nameColorizer;

/***/ },
/* 1113 */
/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {

	/**
	 * Define a colorizer to generate unique colors
	 * @function rotateColorizer
	 * @param {string} base - Base color string
	 * @returns {function} - Generated function
	 */
	'use strict';

	var rotate = __webpack_require__(__webpack_module_template_argument_0__);

	/** @lends rotateColorizer */
	function rotateColorizer(base) {
	  var colors = {};

	  /**
	   * Colorizer function
	   * @param {string} id - Unique identifier
	   * @returns {string} color - Color for the id
	   */
	  function colorizer(id) {
	    var color = colors[id];
	    if (color) {
	      return color;
	    }
	    var knownColors = Object.keys(colors).map(function (id) {
	      return colors[id];
	    });
	    do {
	      color = rotate(base, parseInt(Math.random() * 360.0));
	      if (knownColors.length >= 360) {
	        break;
	      }
	    } while (~knownColors.indexOf(color));
	    colors[id] = color;
	    return color;
	  }

	  Object.assign(colorizer, { base: base, colors: colors });
	  return colorizer;
	}

	module.exports = rotateColorizer;

/***/ }
/******/ ])));