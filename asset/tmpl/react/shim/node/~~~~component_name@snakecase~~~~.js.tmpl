/**
 * ~~~~package_description~~~~
 * @class ~~~~component_name~~~~
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)('~~~~component_name@enumcase~~~~');

/** @lends ~~~~component_name~~~~ */
var ~~~~component_name~~~~ = _react2.default.createClass({
  displayName: '~~~~component_name~~~~',


  // --------------------
  // Specs
  // --------------------

  propTypes: {},

  mixins: [],

  statics: {},

  getInitialState: function getInitialState() {
    return {};
  },
  getDefaultProps: function getDefaultProps() {
    return {};
  },
  render: function render() {
    debug('render');

    var s = this;
    var state = s.state,
        props = s.props;


    return _react2.default.createElement(
      'div',
      { className: (0, _classnames2.default)('~~~~component_name@spinalcase~~~~', props.className),
        style: (0, _assign2.default)({}, props.style) },
      props.children
    );
  },


  // --------------------
  // Lifecycle
  // --------------------

  componentWillMount: function componentWillMount() {
    debug('willMount');
    var s = this;
  },
  componentDidMount: function componentDidMount() {
    debug('didMount');
    var s = this;
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var s = this;
  },
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var s = this;
    return true;
  },
  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
    var s = this;
  },
  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
    var s = this;
  },
  componentWillUnmount: function componentWillUnmount() {
    debug('willUnmount');
    var s = this;
  }

  // ------------------
  // Custom
  // ------------------

  // ------------------
  // Private
  // ------------------

});

exports.default = ~~~~component_name~~~~;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15X2NvbXBvbmVudC5qc3giXSwibmFtZXMiOlsiZGVidWciLCJNeUNvbXBvbmVudCIsImNyZWF0ZUNsYXNzIiwicHJvcFR5cGVzIiwibWl4aW5zIiwic3RhdGljcyIsImdldEluaXRpYWxTdGF0ZSIsImdldERlZmF1bHRQcm9wcyIsInJlbmRlciIsInMiLCJzdGF0ZSIsInByb3BzIiwiY2xhc3NOYW1lIiwic3R5bGUiLCJjaGlsZHJlbiIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIm5leHRQcm9wcyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIm5leHRTdGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJwcmV2UHJvcHMiLCJwcmV2U3RhdGUiLCJjb21wb25lbnRXaWxsVW5tb3VudCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFFBQVEscUJBQVksY0FBWixDQUFkOztBQUVBO0FBQ0EsSUFBTUMsY0FBYyxnQkFBTUMsV0FBTixDQUFrQjtBQUFBOzs7QUFFcEM7QUFDQTtBQUNBOztBQUVBQyxhQUFXLEVBTnlCOztBQVFwQ0MsVUFBUSxFQVI0Qjs7QUFVcENDLFdBQVMsRUFWMkI7O0FBWXBDQyxpQkFab0MsNkJBWWpCO0FBQ2pCLFdBQU8sRUFBUDtBQUNELEdBZG1DO0FBZ0JwQ0MsaUJBaEJvQyw2QkFnQmpCO0FBQ2pCLFdBQU8sRUFBUDtBQUNELEdBbEJtQztBQW9CcENDLFFBcEJvQyxvQkFvQjFCO0FBQ1JSLFVBQU0sUUFBTjs7QUFFQSxRQUFNUyxJQUFJLElBQVY7QUFIUSxRQUlGQyxLQUpFLEdBSWVELENBSmYsQ0FJRkMsS0FKRTtBQUFBLFFBSUtDLEtBSkwsR0FJZUYsQ0FKZixDQUlLRSxLQUpMOzs7QUFNUixXQUNFO0FBQUE7QUFBQSxRQUFLLFdBQVksMEJBQVcsY0FBWCxFQUEyQkEsTUFBTUMsU0FBakMsQ0FBakI7QUFDSyxlQUFRLHNCQUFjLEVBQWQsRUFBa0JELE1BQU1FLEtBQXhCLENBRGI7QUFFSUYsWUFBTUc7QUFGVixLQURGO0FBTUQsR0FoQ21DOzs7QUFrQ3BDO0FBQ0E7QUFDQTs7QUFFQUMsb0JBdENvQyxnQ0FzQ2Q7QUFDcEJmLFVBQU0sV0FBTjtBQUNBLFFBQU1TLElBQUksSUFBVjtBQUNELEdBekNtQztBQTJDcENPLG1CQTNDb0MsK0JBMkNmO0FBQ25CaEIsVUFBTSxVQUFOO0FBQ0EsUUFBTVMsSUFBSSxJQUFWO0FBQ0QsR0E5Q21DO0FBZ0RwQ1EsMkJBaERvQyxxQ0FnRFRDLFNBaERTLEVBZ0RFO0FBQ3BDLFFBQU1ULElBQUksSUFBVjtBQUNELEdBbERtQztBQW9EcENVLHVCQXBEb0MsaUNBb0RiRCxTQXBEYSxFQW9ERkUsU0FwREUsRUFvRFM7QUFDM0MsUUFBTVgsSUFBSSxJQUFWO0FBQ0EsV0FBTyxJQUFQO0FBQ0QsR0F2RG1DO0FBeURwQ1kscUJBekRvQywrQkF5RGZILFNBekRlLEVBeURKRSxTQXpESSxFQXlETztBQUN6QyxRQUFNWCxJQUFJLElBQVY7QUFDRCxHQTNEbUM7QUE2RHBDYSxvQkE3RG9DLDhCQTZEaEJDLFNBN0RnQixFQTZETEMsU0E3REssRUE2RE07QUFDeEMsUUFBTWYsSUFBSSxJQUFWO0FBQ0QsR0EvRG1DO0FBaUVwQ2dCLHNCQWpFb0Msa0NBaUVaO0FBQ3RCekIsVUFBTSxhQUFOO0FBQ0EsUUFBTVMsSUFBSSxJQUFWO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUE1RW9DLENBQWxCLENBQXBCOztrQkErRWVSLFciLCJmaWxlIjoibXlfY29tcG9uZW50LmpzeCIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlbW8gb2YgcmVhY3QgcHJvamVjdHNcbiAqIEBjbGFzcyBNeUNvbXBvbmVudFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCBkZWZpbmVEZWJ1ZyBmcm9tICdkZWJ1ZydcblxuY29uc3QgZGVidWcgPSBkZWZpbmVEZWJ1ZygnbXk6Y29tcG9uZW50JylcblxuLyoqIEBsZW5kcyBNeUNvbXBvbmVudCAqL1xuY29uc3QgTXlDb21wb25lbnQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3BlY3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBwcm9wVHlwZXM6IHt9LFxuXG4gIG1peGluczogW10sXG5cbiAgc3RhdGljczoge30sXG5cbiAgZ2V0SW5pdGlhbFN0YXRlICgpIHtcbiAgICByZXR1cm4ge31cbiAgfSxcblxuICBnZXREZWZhdWx0UHJvcHMgKCkge1xuICAgIHJldHVybiB7fVxuICB9LFxuXG4gIHJlbmRlciAoKSB7XG4gICAgZGVidWcoJ3JlbmRlcicpXG5cbiAgICBjb25zdCBzID0gdGhpc1xuICAgIGxldCB7IHN0YXRlLCBwcm9wcyB9ID0gc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsgY2xhc3NuYW1lcygnbXktY29tcG9uZW50JywgcHJvcHMuY2xhc3NOYW1lKSB9XG4gICAgICAgICAgIHN0eWxlPXsgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMuc3R5bGUpIH0+XG4gICAgICAgIHsgcHJvcHMuY2hpbGRyZW4gfVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9LFxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIExpZmVjeWNsZVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIGNvbXBvbmVudFdpbGxNb3VudCAoKSB7XG4gICAgZGVidWcoJ3dpbGxNb3VudCcpXG4gICAgY29uc3QgcyA9IHRoaXNcbiAgfSxcblxuICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgZGVidWcoJ2RpZE1vdW50JylcbiAgICBjb25zdCBzID0gdGhpc1xuICB9LFxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgKG5leHRQcm9wcykge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gIH0sXG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlIChuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgcmV0dXJuIHRydWVcbiAgfSxcblxuICBjb21wb25lbnRXaWxsVXBkYXRlIChuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gIH0sXG5cbiAgY29tcG9uZW50RGlkVXBkYXRlIChwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gIH0sXG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQgKCkge1xuICAgIGRlYnVnKCd3aWxsVW5tb3VudCcpXG4gICAgY29uc3QgcyA9IHRoaXNcbiAgfVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBDdXN0b21cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFByaXZhdGVcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG59KVxuXG5leHBvcnQgZGVmYXVsdCBNeUNvbXBvbmVudFxuIl19