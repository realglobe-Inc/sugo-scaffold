/**
 * ~~~~module_name~~~~ class
 * @class ~~~~module_name~~~~
 * @augments Module
 * @param {Object} config - Configuration
 */
'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require('sugo-module-base'),
    Module = _require.Module;

var co = require('co');

var _require2 = require('sg-check'),
    hasBin = _require2.hasBin;

var debug = require('debug')('sugo:module:demo-module');

/** @lends ~~~~module_name~~~~ */

var ~~~~module_name~~~~ = function (_Module) {
  (0, _inherits3.default)(~~~~module_name~~~~, _Module);

  function ~~~~module_name~~~~() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck3.default)(this, ~~~~module_name~~~~);

    debug('Config: ', config);
    return (0, _possibleConstructorReturn3.default)(this, (~~~~module_name~~~~.__proto__ || (0, _getPrototypeOf2.default)(~~~~module_name~~~~)).call(this, config));
  }

  /**
   * Ping a message.
   * @param {string} pong
   * @returns {Promise.<string>} - Pong message
   */


  (0, _createClass3.default)(~~~~module_name~~~~, [{
    key: 'ping',
    value: function ping() {
      var pong = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'pong';

      return co(_regenerator2.default.mark(function pingAck() {
        return _regenerator2.default.wrap(function pingAck$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', pong);

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, pingAck, this);
      }));
    }

    /**
     * Assert actor system requirements.
     * @throws {Error} - System requirements failed error
     * @returns {Promise.<boolean>} - Asserted state
     */

  }, {
    key: 'assert',
    value: function assert() {
      var bins = ['node']; // Required commands
      return co(_regenerator2.default.mark(function assertAck() {
        return _regenerator2.default.wrap(function assertAck$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return hasBin.assertAll(bins);

              case 2:
                return _context2.abrupt('return', true);

              case 3:
              case 'end':
                return _context2.stop();
            }
          }
        }, assertAck, this);
      }));
    }

    /**
     * Module specification
     * @see https://github.com/realglobe-Inc/sg-schemas/blob/master/lib/module_spec.json
     */

  }, {
    key: '$spec',
    get: function get() {
      return require('./meta/spec')();
    }
  }]);
  return ~~~~module_name~~~~;
}(Module);

module.exports = ~~~~module_name~~~~;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15X21vZHVsZS5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiTW9kdWxlIiwiY28iLCJoYXNCaW4iLCJkZWJ1ZyIsIk15TW9kdWxlIiwiY29uZmlnIiwicG9uZyIsInBpbmdBY2siLCJiaW5zIiwiYXNzZXJ0QWNrIiwiYXNzZXJ0QWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBRW1CQSxRQUFRLGtCQUFSLEM7SUFBWEMsTSxZQUFBQSxNOztBQUVSLElBQU1DLEtBQUtGLFFBQVEsSUFBUixDQUFYOztnQkFDbUJBLFFBQVEsVUFBUixDO0lBQVhHLE0sYUFBQUEsTTs7QUFDUixJQUFNQyxRQUFRSixRQUFRLE9BQVIsRUFBaUIseUJBQWpCLENBQWQ7O0FBRUE7O0lBQ01LLFE7OztBQUNKLHNCQUEwQjtBQUFBLFFBQWJDLE1BQWEsdUVBQUosRUFBSTtBQUFBOztBQUN4QkYsVUFBTSxVQUFOLEVBQWtCRSxNQUFsQjtBQUR3QixxSUFFbEJBLE1BRmtCO0FBR3pCOztBQUVEOzs7Ozs7Ozs7MkJBS3FCO0FBQUEsVUFBZkMsSUFBZSx1RUFBUixNQUFROztBQUNuQixhQUFPTCw4QkFBRyxTQUFXTSxPQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxpREFDREQsSUFEQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsV0FBV0MsT0FBWDtBQUFBLE9BQUgsRUFBUDtBQUdEOztBQUVEOzs7Ozs7Ozs2QkFLVTtBQUNSLFVBQU1DLE9BQU8sQ0FBRSxNQUFGLENBQWIsQ0FEUSxDQUNnQjtBQUN4QixhQUFPUCw4QkFBRyxTQUFXUSxTQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUNGUCxPQUFPUSxTQUFQLENBQWlCRixJQUFqQixDQURFOztBQUFBO0FBQUEsa0RBRUQsSUFGQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsV0FBV0MsU0FBWDtBQUFBLE9BQUgsRUFBUDtBQUlEOztBQUVEOzs7Ozs7O3dCQUlhO0FBQ1gsYUFBT1YsUUFBUSxhQUFSLEdBQVA7QUFDRDs7O0VBcENvQkMsTTs7QUF1Q3ZCVyxPQUFPQyxPQUFQLEdBQWlCUixRQUFqQiIsImZpbGUiOiJteV9tb2R1bGUuanMiLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNeU1vZHVsZSBjbGFzc1xuICogQGNsYXNzIE15TW9kdWxlXG4gKiBAYXVnbWVudHMgTW9kdWxlXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIC0gQ29uZmlndXJhdGlvblxuICovXG4ndXNlIHN0cmljdCdcblxuY29uc3QgeyBNb2R1bGUgfSA9IHJlcXVpcmUoJ3N1Z28tbW9kdWxlLWJhc2UnKVxuXG5jb25zdCBjbyA9IHJlcXVpcmUoJ2NvJylcbmNvbnN0IHsgaGFzQmluIH0gPSByZXF1aXJlKCdzZy1jaGVjaycpXG5jb25zdCBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3N1Z286bW9kdWxlOmRlbW8tbW9kdWxlJylcblxuLyoqIEBsZW5kcyBNeU1vZHVsZSAqL1xuY2xhc3MgTXlNb2R1bGUgZXh0ZW5kcyBNb2R1bGUge1xuICBjb25zdHJ1Y3RvciAoY29uZmlnID0ge30pIHtcbiAgICBkZWJ1ZygnQ29uZmlnOiAnLCBjb25maWcpXG4gICAgc3VwZXIoY29uZmlnKVxuICB9XG5cbiAgLyoqXG4gICAqIFBpbmcgYSBtZXNzYWdlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcG9uZ1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZS48c3RyaW5nPn0gLSBQb25nIG1lc3NhZ2VcbiAgICovXG4gIHBpbmcgKHBvbmcgPSAncG9uZycpIHtcbiAgICByZXR1cm4gY28oZnVuY3Rpb24gKiBwaW5nQWNrICgpIHtcbiAgICAgIHJldHVybiBwb25nIC8vIFJldHVybiByZXN1bHQgdG8gYSByZW1vdGUgY2FsbGVyLlxuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogQXNzZXJ0IGFjdG9yIHN5c3RlbSByZXF1aXJlbWVudHMuXG4gICAqIEB0aHJvd3Mge0Vycm9yfSAtIFN5c3RlbSByZXF1aXJlbWVudHMgZmFpbGVkIGVycm9yXG4gICAqIEByZXR1cm5zIHtQcm9taXNlLjxib29sZWFuPn0gLSBBc3NlcnRlZCBzdGF0ZVxuICAgKi9cbiAgYXNzZXJ0ICgpIHtcbiAgICBjb25zdCBiaW5zID0gWyAnbm9kZScgXSAvLyBSZXF1aXJlZCBjb21tYW5kc1xuICAgIHJldHVybiBjbyhmdW5jdGlvbiAqIGFzc2VydEFjayAoKSB7XG4gICAgICB5aWVsZCBoYXNCaW4uYXNzZXJ0QWxsKGJpbnMpXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogTW9kdWxlIHNwZWNpZmljYXRpb25cbiAgICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVhbGdsb2JlLUluYy9zZy1zY2hlbWFzL2Jsb2IvbWFzdGVyL2xpYi9tb2R1bGVfc3BlYy5qc29uXG4gICAqL1xuICBnZXQgJHNwZWMgKCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL21ldGEvc3BlYycpKClcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE15TW9kdWxlXG4iXX0=